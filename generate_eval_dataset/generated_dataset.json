[
  {
    "question": "What's Microsoft Corporation's revenue?",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'}) RETURN o.revenue AS company_revenue",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "company_revenue": 198270000000.0
      }
    ],
    "answer": "Microsoft Corporation's revenue is $198.27 billion."
  },
  {
    "question": "How many employees does SAP have?",
    "cypher": "MATCH (o:Organization {name: 'SAP'}) RETURN o.nbrEmployees AS employee_count",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "employee_count": 111961
      }
    ],
    "answer": "SAP has 111,961 employees."
  },
  {
    "question": "What's Mircosoft's motto?",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'}) RETURN o.motto AS company_motto",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "company_motto": "We\u2019re on a mission to empower every person and every organization on the planet to achieve more."
      }
    ],
    "answer": "Microsoft's motto is: \"We're on a mission to empower every person and every organization on the planet to achieve more.\""
  },
  {
    "question": "Is Cloud Sherpas still active?",
    "cypher": "MATCH (o:Organization {name: 'Cloud Sherpas'}) RETURN o.isDissolved AS is_dissolved",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "is_dissolved": true
      }
    ],
    "answer": "Based on the query result, Cloud Sherpas is no longer active, as the organization is marked as dissolved."
  },
  {
    "question": "Tell me IBM's summary",
    "cypher": "MATCH (o:Organization {name: 'IBM'}) RETURN o.summary AS company_summary",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "company_summary": "American multinational technology and consulting corporation"
      }
    ],
    "answer": "IBM is an American multinational technology and consulting corporation."
  },
  {
    "question": "What's the employee count for New Energy Group?",
    "cypher": "MATCH (o:Organization {name: 'New Energy Group'}) RETURN o.nbrEmployees AS employee_count",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "employee_count": 375
      }
    ],
    "answer": "New Energy Group has 375 employees."
  },
  {
    "question": "Is Microsoft Corporation a public company?",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'}) RETURN o.isPublic AS is_public",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "is_public": true
      }
    ],
    "answer": "Yes, Microsoft Corporation is a public company."
  },
  {
    "question": "What's Julie Spellman Sweet's role?",
    "cypher": "MATCH (p:Person {name: 'Julie Spellman Sweet'}) RETURN p.summary AS person_summary",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "person_summary": "CEO at Accenture"
      }
    ],
    "answer": "Julie Spellman Sweet's role is CEO at Accenture."
  },
  {
    "question": "What's the revenue of that firm SAP?",
    "cypher": "MATCH (o:Organization {name: 'SAP'}) RETURN o.revenue AS company_revenue",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "company_revenue": 30870000000.0
      }
    ],
    "answer": "SAP's revenue is $30.87 billion."
  },
  {
    "question": "How many folks work at Cloud Sherpas?",
    "cypher": "MATCH (o:Organization {name: 'Cloud Sherpas'}) RETURN o.nbrEmployees AS employee_count",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "employee_count": 120
      }
    ],
    "answer": "120 people work at Cloud Sherpas."
  },
  {
    "question": "What's Orcale's Diffbot ID?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'}) RETURN o.diffbotId AS diffbot_id",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "diffbot_id": "https://diffbot.com/entity/EfHwtIuViMbug8__vI3vlQQ"
      }
    ],
    "answer": "Oracle's Diffbot ID is https://diffbot.com/entity/EfHwtIuViMbug8__vI3vlQQ."
  },
  {
    "question": "Find New Energy Group's annual revenue",
    "cypher": "MATCH (o:Organization {name: 'New Energy Group'}) RETURN o.revenue AS annual_revenue",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "annual_revenue": 120000000.0
      }
    ],
    "answer": "New Energy Group's annual revenue is $120,000,000."
  },
  {
    "question": "What's the workforce size at Microsoft Corporation?",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'}) RETURN o.nbrEmployees AS workforce_size",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "workforce_size": 221000
      }
    ],
    "answer": "Microsoft Corporation has 221,000 employees."
  },
  {
    "question": "Show me Cloud Sherpa's motto",
    "cypher": "MATCH (o:Organization {name: 'Cloud Sherpas'}) RETURN o.motto AS company_motto",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "company_motto": ""
      }
    ],
    "answer": "The query result shows an empty motto for Cloud Sherpas, so the answer is UNKNOWN."
  },
  {
    "question": "What's IBM's Diffbot identifier?",
    "cypher": "MATCH (o:Organization {name: 'IBM'}) RETURN o.diffbotId AS diffbot_identifier",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "diffbot_identifier": "https://diffbot.com/entity/EPdsrDmLiMQCskvBLp_dloQ"
      }
    ],
    "answer": "IBM's Diffbot identifier is 'https://diffbot.com/entity/EPdsrDmLiMQCskvBLp_dloQ'."
  },
  {
    "question": "Is New Energy Group publicly traded?",
    "cypher": "MATCH (o:Organization {name: 'New Energy Group'}) RETURN o.isPublic AS is_public_company",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "is_public_company": false
      }
    ],
    "answer": "No, New Energy Group is not publicly traded."
  },
  {
    "question": "Tell me the summary for Accenture",
    "cypher": "MATCH (o:Organization {name: 'Accenture'}) RETURN o.summary AS company_summary",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "company_summary": "Organization based in Slovakia"
      },
      {
        "company_summary": "Organization based in Costa Rica"
      },
      {
        "company_summary": "Organization based in Colombia"
      },
      {
        "company_summary": "Organization based in Netherlands"
      },
      {
        "company_summary": "Organization based in Argentina"
      },
      {
        "company_summary": "Organization based in Finland"
      },
      {
        "company_summary": "Organization based in Spain"
      },
      {
        "company_summary": "Organization based in Norway"
      },
      {
        "company_summary": "Organization based in Belgium"
      },
      {
        "company_summary": "Organization based in Helsinki, Uusimaa Province, Finland"
      },
      {
        "company_summary": "Organization based in Lisboa, Lisbon District, Portugal"
      },
      {
        "company_summary": "Organization based in Switzerland"
      },
      {
        "company_summary": "Financial services company based in Copenhagen, Capital Region, Denmark"
      },
      {
        "company_summary": "Organization based in Austria"
      },
      {
        "company_summary": "Organization based in United States"
      },
      {
        "company_summary": "Financial services company based in Brussel, Flemish Brabant Province, Belgium"
      },
      {
        "company_summary": "Organization based in Singapore"
      },
      {
        "company_summary": "Organization based in Canada"
      },
      {
        "company_summary": "Financial services company based in New York City, New York, United States"
      },
      {
        "company_summary": "Organization based in Sweden"
      },
      {
        "company_summary": "Organization based in Gibraltar"
      },
      {
        "company_summary": "Software company based in Stockholm, Stockholm County, Sweden"
      },
      {
        "company_summary": "Financial services company based in Dublin, Ireland and owned by Cloud Sherpas"
      },
      {
        "company_summary": "Austrian branch of Accenture"
      }
    ]
  },
  {
    "question": "Who's the CEO of Accenture?",
    "cypher": "MATCH (o:Organization {name: 'Accenture'})-[:HAS_CEO]->(p:Person) RETURN p.name AS ceo_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ceo_name": "Julie Spellman Sweet"
      }
    ],
    "answer": "Julie Spellman Sweet is the CEO of Accenture."
  },
  {
    "question": "How many subsidiaries does SAP have?",
    "cypher": "MATCH (o:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(s:Organization) RETURN COUNT(s) AS subsidiary_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "subsidiary_count": 94
      }
    ],
    "answer": "Based on the query result, SAP has 94 subsidiaries."
  },
  {
    "question": "What city is New Relic located in?",
    "cypher": "MATCH (o:Organization {name: 'New Relic'})-[:IN_CITY]->(c:City) RETURN c.name AS city_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "city_name": "Seattle"
      },
      {
        "city_name": "New York City"
      },
      {
        "city_name": "Munich"
      },
      {
        "city_name": "Paris"
      },
      {
        "city_name": "London"
      },
      {
        "city_name": "San Francisco"
      },
      {
        "city_name": "Amsterdam"
      },
      {
        "city_name": "Portland"
      },
      {
        "city_name": "Z\u00fcrich"
      },
      {
        "city_name": "Tel Aviv"
      },
      {
        "city_name": "Menlo Park"
      },
      {
        "city_name": "California"
      }
    ]
  },
  {
    "question": "Count Microsoft's suppliers",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})-[:HAS_SUPPLIER]->(s:Organization) RETURN COUNT(s) AS supplier_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_count": 1328
      }
    ],
    "answer": "Microsoft has 1,328 suppliers according to the data."
  },
  {
    "question": "What industry category does Altium belong to?",
    "cypher": "MATCH (o:Organization {name: 'Altium'})-[:HAS_CATEGORY]->(ic:IndustryCategory) RETURN ic.name AS industry_category",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Software Companies"
      }
    ]
  },
  {
    "question": "How many investors does Infinite Analytics have?",
    "cypher": "MATCH (o:Organization {name: 'Infinite Analytics'})<-[:HAS_INVESTOR]-(i) RETURN COUNT(i) AS investor_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "investor_count": 6
      }
    ],
    "answer": "Infinite Analytics has 6 investors."
  },
  {
    "question": "What biz owns Cloud Sherpas?",
    "cypher": "MATCH (o:Organization {name: 'Cloud Sherpas'})<-[:HAS_SUBSIDIARY]-(parent:Organization) RETURN parent.name AS parent_company",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "parent_company": "Accenture"
      }
    ],
    "answer": "Accenture owns Cloud Sherpas."
  },
  {
    "question": "How many companies has IBM invested in?",
    "cypher": "MATCH (o:Organization {name: 'IBM'})-[:HAS_INVESTOR]->(i:Organization) RETURN COUNT(i) AS investment_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "investment_count": 3
      }
    ],
    "answer": "Based on the query result, IBM has invested in 3 companies."
  },
  {
    "question": "Find the total number of competitors for Microsft",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})-[:HAS_COMPETITOR]->(c:Organization) RETURN COUNT(c) AS competitor_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "competitor_count": 24
      }
    ],
    "answer": "Microsoft has 24 competitors according to the database."
  },
  {
    "question": "What's the city where Concur is based?",
    "cypher": "MATCH (o:Organization {name: 'Concur'})-[:IN_CITY]->(c:City) RETURN c.name AS city_location",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "city_location": "Paris"
      },
      {
        "city_location": "San Francisco"
      },
      {
        "city_location": "Singapore"
      },
      {
        "city_location": "Atlanta"
      },
      {
        "city_location": "Paradise Valley"
      },
      {
        "city_location": "Eden Prairie"
      },
      {
        "city_location": "Amsterdam"
      },
      {
        "city_location": "Levallois-Perret"
      },
      {
        "city_location": "Stockholm"
      },
      {
        "city_location": "Bellevue"
      },
      {
        "city_location": "Minneapolis"
      },
      {
        "city_location": "Frankfurt am Main"
      },
      {
        "city_location": "Prague"
      },
      {
        "city_location": "Redmond"
      },
      {
        "city_location": "Noisy-le-Grand"
      },
      {
        "city_location": "Vienna"
      },
      {
        "city_location": "Taipei"
      },
      {
        "city_location": "Allen"
      },
      {
        "city_location": "Rueil-Malmaison"
      },
      {
        "city_location": "Addison"
      },
      {
        "city_location": "Andover"
      },
      {
        "city_location": "Eschborn"
      },
      {
        "city_location": "Plainfield"
      },
      {
        "city_location": "Topsfield"
      },
      {
        "city_location": "Tracy"
      },
      {
        "city_location": "Massy"
      },
      {
        "city_location": "South San Francisco"
      },
      {
        "city_location": "Alexandria"
      },
      {
        "city_location": "North Andover"
      },
      {
        "city_location": "Clichy"
      },
      {
        "city_location": "Methuen"
      },
      {
        "city_location": "Coppell"
      },
      {
        "city_location": "Vimercate"
      },
      {
        "city_location": "St. Louis Park"
      },
      {
        "city_location": "Haddonfield"
      },
      {
        "city_location": "Muskegon"
      },
      {
        "city_location": "Lebanon"
      },
      {
        "city_location": "Mukwonago"
      }
    ]
  },
  {
    "question": "How many board members does Oracle have?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})-[:HAS_BOARD_MEMBER]->(p:Person) RETURN COUNT(p) AS board_member_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "board_member_count": 21
      }
    ],
    "answer": "Oracle has 21 board members."
  },
  {
    "question": "Who leads Acenture as CEO?",
    "cypher": "MATCH (o:Organization {name: 'Accenture'})-[:HAS_CEO]->(p:Person) RETURN p.name AS ceo_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ceo_name": "Julie Spellman Sweet"
      }
    ],
    "answer": "Julie Spellman Sweet leads Accenture as CEO."
  },
  {
    "question": "Count the firms that supply to IBM",
    "cypher": "MATCH (o:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(s:Organization) RETURN COUNT(s) AS supplier_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_count": 44
      }
    ],
    "answer": "44 firms supply to IBM."
  },
  {
    "question": "What's the parent corp of IBM Research?",
    "cypher": "MATCH (o:Organization {name: 'IBM Research'})<-[:HAS_SUBSIDIARY]-(parent:Organization) RETURN parent.name AS parent_corporation",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "parent_corporation": "IBM"
      }
    ],
    "answer": "IBM is the parent corporation of IBM Research."
  },
  {
    "question": "How many articles mention Microsoft Corporation?",
    "cypher": "MATCH (a:Article)-[:MENTIONS]->(o:Organization {name: 'Microsoft Corporation'}) RETURN COUNT(a) AS article_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "article_count": 1381
      }
    ],
    "answer": "1,381 articles mention Microsoft Corporation."
  },
  {
    "question": "Find Ducksboard's parent company",
    "cypher": "MATCH (o:Organization {name: 'Ducksboard'})<-[:HAS_SUBSIDIARY]-(parent:Organization) RETURN parent.name AS parent_company_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "parent_company_name": "New Relic"
      }
    ],
    "answer": "New Relic is Ducksboard's parent company."
  },
  {
    "question": "How many subsidiarys does Accenture have?",
    "cypher": "MATCH (o:Organization {name: 'Accenture'})-[:HAS_SUBSIDIARY]->(s:Organization) RETURN COUNT(s) AS subsidiary_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "subsidiary_count": 497
      }
    ],
    "answer": "According to the data, Accenture has 497 subsidiaries."
  },
  {
    "question": "What country is Topsfield located in?",
    "cypher": "MATCH (c:City {name: 'Topsfield'})-[:IN_COUNTRY]->(country:Country) RETURN country.name AS country_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "country_name": "United States of America"
      }
    ],
    "answer": "Topsfield is located in the United States of America."
  },
  {
    "question": "What country is Microsoft Corporation located in?",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})-[:IN_CITY]->(c:City)-[:IN_COUNTRY]->(country:Country) RETURN country.name AS country_location",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "United States of America"
      },
      {
        "country_location": "Italy"
      },
      {
        "country_location": "Italy"
      },
      {
        "country_location": "Australia"
      },
      {
        "country_location": "Australia"
      },
      {
        "country_location": "Australia"
      },
      {
        "country_location": "Australia"
      },
      {
        "country_location": "Australia"
      },
      {
        "country_location": "Australia"
      },
      {
        "country_location": "Netherlands"
      },
      {
        "country_location": "Argentina"
      },
      {
        "country_location": "New Zealand"
      },
      {
        "country_location": "France"
      },
      {
        "country_location": "Germany"
      },
      {
        "country_location": "Germany"
      },
      {
        "country_location": "Germany"
      },
      {
        "country_location": "Germany"
      },
      {
        "country_location": "Germany"
      },
      {
        "country_location": "Spain"
      },
      {
        "country_location": "Spain"
      },
      {
        "country_location": "Spain"
      },
      {
        "country_location": "People's Republic of China"
      },
      {
        "country_location": "People's Republic of China"
      },
      {
        "country_location": "India"
      },
      {
        "country_location": "India"
      },
      {
        "country_location": "India"
      },
      {
        "country_location": "India"
      },
      {
        "country_location": "Canada"
      },
      {
        "country_location": "Canada"
      },
      {
        "country_location": "Canada"
      },
      {
        "country_location": "Canada"
      },
      {
        "country_location": "Switzerland"
      },
      {
        "country_location": "Switzerland"
      },
      {
        "country_location": "Portugal"
      },
      {
        "country_location": "Portugal"
      },
      {
        "country_location": "Malaysia"
      },
      {
        "country_location": "Japan"
      },
      {
        "country_location": "Japan"
      },
      {
        "country_location": "Brazil"
      },
      {
        "country_location": "Brazil"
      },
      {
        "country_location": "Brazil"
      },
      {
        "country_location": "Brazil"
      },
      {
        "country_location": "Hong Kong"
      },
      {
        "country_location": "Ukraine"
      },
      {
        "country_location": "Philippines"
      },
      {
        "country_location": "Israel"
      },
      {
        "country_location": "Israel"
      },
      {
        "country_location": "Turkey"
      },
      {
        "country_location": "Chile"
      },
      {
        "country_location": "Belgium"
      },
      {
        "country_location": "Mexico"
      },
      {
        "country_location": "Mexico"
      },
      {
        "country_location": "Colombia"
      },
      {
        "country_location": "Pakistan"
      },
      {
        "country_location": "Egypt"
      },
      {
        "country_location": "Costa Rica"
      },
      {
        "country_location": "Sweden"
      },
      {
        "country_location": "Sweden"
      },
      {
        "country_location": "Sweden"
      },
      {
        "country_location": "Sweden"
      },
      {
        "country_location": "Finland"
      },
      {
        "country_location": "Finland"
      },
      {
        "country_location": "Finland"
      },
      {
        "country_location": "South Africa"
      },
      {
        "country_location": "South Africa"
      },
      {
        "country_location": "South Africa"
      },
      {
        "country_location": "Poland"
      },
      {
        "country_location": "Slovakia"
      },
      {
        "country_location": "Mauritius"
      },
      {
        "country_location": "United Arab Emirates"
      },
      {
        "country_location": "Saudi Arabia"
      },
      {
        "country_location": "Saudi Arabia"
      },
      {
        "country_location": "Nigeria"
      },
      {
        "country_location": "Sri Lanka"
      },
      {
        "country_location": "North Macedonia"
      },
      {
        "country_location": "Bahrain"
      },
      {
        "country_location": "Angola"
      }
    ]
  },
  {
    "question": "How many subsidiaries does Microsoft's supplier Accenture have?",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})-[:HAS_SUPPLIER]->(s:Organization {name: 'Accenture'})-[:HAS_SUBSIDIARY]->(sub:Organization) RETURN COUNT(sub) AS subsidiary_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "subsidiary_count": 497
      }
    ],
    "answer": "Based on the query result, Accenture has 497 subsidiaries."
  },
  {
    "question": "What city houses SAP's subsidiary Concur?",
    "cypher": "MATCH (o:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(s:Organization {name: 'Concur'})-[:IN_CITY]->(c:City) RETURN c.name AS city_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "city_name": "Paris"
      },
      {
        "city_name": "San Francisco"
      },
      {
        "city_name": "Singapore"
      },
      {
        "city_name": "Atlanta"
      },
      {
        "city_name": "Paradise Valley"
      },
      {
        "city_name": "Eden Prairie"
      },
      {
        "city_name": "Amsterdam"
      },
      {
        "city_name": "Levallois-Perret"
      },
      {
        "city_name": "Stockholm"
      },
      {
        "city_name": "Bellevue"
      },
      {
        "city_name": "Minneapolis"
      },
      {
        "city_name": "Frankfurt am Main"
      },
      {
        "city_name": "Prague"
      },
      {
        "city_name": "Redmond"
      },
      {
        "city_name": "Noisy-le-Grand"
      },
      {
        "city_name": "Vienna"
      },
      {
        "city_name": "Taipei"
      },
      {
        "city_name": "Allen"
      },
      {
        "city_name": "Rueil-Malmaison"
      },
      {
        "city_name": "Addison"
      },
      {
        "city_name": "Andover"
      },
      {
        "city_name": "Eschborn"
      },
      {
        "city_name": "Plainfield"
      },
      {
        "city_name": "Topsfield"
      },
      {
        "city_name": "Tracy"
      },
      {
        "city_name": "Massy"
      },
      {
        "city_name": "South San Francisco"
      },
      {
        "city_name": "Alexandria"
      },
      {
        "city_name": "North Andover"
      },
      {
        "city_name": "Clichy"
      },
      {
        "city_name": "Methuen"
      },
      {
        "city_name": "Coppell"
      },
      {
        "city_name": "Vimercate"
      },
      {
        "city_name": "St. Louis Park"
      },
      {
        "city_name": "Haddonfield"
      },
      {
        "city_name": "Muskegon"
      },
      {
        "city_name": "Lebanon"
      },
      {
        "city_name": "Mukwonago"
      }
    ]
  },
  {
    "question": "Who's the CEO of Microsoft's supplier?",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})-[:HAS_SUPPLIER]->(s:Organization)-[:HAS_CEO]->(p:Person) RETURN p.name AS ceo_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "ceo_name": "Nat Friedman"
      },
      {
        "ceo_name": "Lou Manousos"
      },
      {
        "ceo_name": "Brian Lesser"
      },
      {
        "ceo_name": "Josh Campo"
      },
      {
        "ceo_name": "Pamela Maynard"
      },
      {
        "ceo_name": "Oege de Moor"
      },
      {
        "ceo_name": "Simon Webster"
      },
      {
        "ceo_name": "Justyn Howard"
      },
      {
        "ceo_name": "Kornel Grygo"
      },
      {
        "ceo_name": "Mats B\u00e4cklund"
      },
      {
        "ceo_name": "Markus Klahn"
      },
      {
        "ceo_name": "Joseph Pregont"
      },
      {
        "ceo_name": "Octavius Black"
      },
      {
        "ceo_name": "Craig Beddis"
      },
      {
        "ceo_name": "Ken Brook"
      },
      {
        "ceo_name": "Jeff Kalter"
      },
      {
        "ceo_name": "Ralph C. Derrickson"
      },
      {
        "ceo_name": "SAMUEL A. LANDY"
      },
      {
        "ceo_name": "Debra Carter"
      },
      {
        "ceo_name": "Michael Kassan"
      },
      {
        "ceo_name": "Basel Fakhoury"
      },
      {
        "ceo_name": "Nina Alag Suri"
      },
      {
        "ceo_name": "Heather Brunner"
      },
      {
        "ceo_name": "Kristijan Peric"
      },
      {
        "ceo_name": "Ryo Koyama"
      },
      {
        "ceo_name": "Billy Conway"
      },
      {
        "ceo_name": "Andres D. Reiner"
      },
      {
        "ceo_name": "Supriya Thakur"
      },
      {
        "ceo_name": "John Wood"
      },
      {
        "ceo_name": "Steve Semelsberger"
      },
      {
        "ceo_name": "Jan Quant"
      },
      {
        "ceo_name": "Jason Weaver"
      },
      {
        "ceo_name": "Ping Cheng"
      },
      {
        "ceo_name": "Liang Rubo"
      },
      {
        "ceo_name": "Evan Bauer"
      },
      {
        "ceo_name": "Jan Wurzbacher"
      },
      {
        "ceo_name": "Lisa B Nelson"
      },
      {
        "ceo_name": "Nigel Toon"
      },
      {
        "ceo_name": "Allan Thygesen"
      },
      {
        "ceo_name": "Ian El-Mokadem"
      },
      {
        "ceo_name": "Aaron Levie"
      },
      {
        "ceo_name": "Len Finkle"
      },
      {
        "ceo_name": "Phong Le"
      },
      {
        "ceo_name": "Young-Way Liu"
      },
      {
        "ceo_name": "Martin Adams"
      },
      {
        "ceo_name": "Victor Zambon"
      },
      {
        "ceo_name": "Mr. Thomas Hutchinson"
      },
      {
        "ceo_name": "Alfie Atkinson"
      },
      {
        "ceo_name": "Miroslav Wicha"
      },
      {
        "ceo_name": "Wanja S\u00f6ren Oberhof"
      },
      {
        "ceo_name": "Adam Erlebacher"
      },
      {
        "ceo_name": "Jason Gorevic"
      },
      {
        "ceo_name": "Darrell Huntsman"
      },
      {
        "ceo_name": "Cheng-Fei Wong"
      },
      {
        "ceo_name": "Mel Edwards"
      },
      {
        "ceo_name": "John Chapman"
      },
      {
        "ceo_name": "Sairah Ashman"
      },
      {
        "ceo_name": "Steven Mar"
      },
      {
        "ceo_name": "Gregory Mark"
      },
      {
        "ceo_name": "Tomas Wanselius"
      },
      {
        "ceo_name": "Matt Furlong"
      },
      {
        "ceo_name": "Rob Helle"
      },
      {
        "ceo_name": "James Foster"
      },
      {
        "ceo_name": "Khein-Seng Pua"
      },
      {
        "ceo_name": "Tony Bates"
      },
      {
        "ceo_name": "Eric Johnson"
      },
      {
        "ceo_name": "Rajeev Goel"
      },
      {
        "ceo_name": "Julian Leitloff"
      },
      {
        "ceo_name": "Matthew Fields"
      },
      {
        "ceo_name": "Rasha Katabi"
      },
      {
        "ceo_name": "Ned Staebler"
      },
      {
        "ceo_name": "Christian Klein"
      },
      {
        "ceo_name": "Dominic Blakemore"
      },
      {
        "ceo_name": "Tomi Pienim\u00e4ki"
      },
      {
        "ceo_name": "Mason Pratt"
      },
      {
        "ceo_name": "Michael Reid"
      },
      {
        "ceo_name": "Daniel Julien"
      },
      {
        "ceo_name": "Andrejs Vasi\u013cjevs"
      },
      {
        "ceo_name": "Scott Irwin"
      },
      {
        "ceo_name": "Jahanzaib Ansari"
      },
      {
        "ceo_name": "Brian Shepherd"
      },
      {
        "ceo_name": "Jonathan Cherki"
      },
      {
        "ceo_name": "Steve Cahillane"
      },
      {
        "ceo_name": "Andrew Martin"
      },
      {
        "ceo_name": "Paul Bay"
      },
      {
        "ceo_name": "Corey Thomas"
      },
      {
        "ceo_name": "Sasan Goodarzi"
      },
      {
        "ceo_name": "Avanti Prahlad"
      },
      {
        "ceo_name": "Chris Shuning Chen"
      },
      {
        "ceo_name": "Jim Caruso"
      },
      {
        "ceo_name": "Ez Natarajan"
      },
      {
        "ceo_name": "Bojan Simic"
      },
      {
        "ceo_name": "Michelle Rouhof"
      },
      {
        "ceo_name": "Rajesh Gopinathan"
      },
      {
        "ceo_name": "Bertrand Bodson"
      },
      {
        "ceo_name": "Zach Nelson"
      },
      {
        "ceo_name": "Ged Parton"
      },
      {
        "ceo_name": "Nir Erez"
      },
      {
        "ceo_name": "Elgar Welch"
      },
      {
        "ceo_name": "John Vigeant"
      },
      {
        "ceo_name": "Jim Hagedorn"
      },
      {
        "ceo_name": "Teri Sgammato"
      },
      {
        "ceo_name": "George Huff"
      },
      {
        "ceo_name": "Rajkishore Una"
      },
      {
        "ceo_name": "Dan Adika"
      },
      {
        "ceo_name": "Yu Xu"
      },
      {
        "ceo_name": "Peter Bauer"
      },
      {
        "ceo_name": "Harold Goddijn"
      },
      {
        "ceo_name": "Yancey Spruill"
      },
      {
        "ceo_name": "Dan Herman"
      },
      {
        "ceo_name": "Fran\u00e7ois Locoh-Donou"
      },
      {
        "ceo_name": "Clive Marshall"
      },
      {
        "ceo_name": "Martin Alexander Schaletzky"
      },
      {
        "ceo_name": "Jane Geraghty"
      },
      {
        "ceo_name": "Magnus Ahlqvist"
      },
      {
        "ceo_name": "Thomas Berlemann"
      },
      {
        "ceo_name": "Joep van Beurden"
      },
      {
        "ceo_name": "Christian Sutherland-Wong"
      },
      {
        "ceo_name": "Ganesh Shankar"
      },
      {
        "ceo_name": "Rowan Trollope"
      },
      {
        "ceo_name": "Jensen Huang"
      },
      {
        "ceo_name": "Piotr Orzechowski"
      },
      {
        "ceo_name": "Bill Magnuson"
      },
      {
        "ceo_name": "Marc Holliday"
      },
      {
        "ceo_name": "Dr. Klemens Kundratitz"
      },
      {
        "ceo_name": "Amina Al Rustamani"
      },
      {
        "ceo_name": "Brian Weaver"
      },
      {
        "ceo_name": "Rohan Modi"
      },
      {
        "ceo_name": "Dominic O'Hanlon"
      },
      {
        "ceo_name": "Amit Yoran"
      },
      {
        "ceo_name": "Marius Mare"
      },
      {
        "ceo_name": "Frank Phuan"
      },
      {
        "ceo_name": "Jim Geiger"
      },
      {
        "ceo_name": "Manish Godha"
      },
      {
        "ceo_name": "Christian Buntrock"
      },
      {
        "ceo_name": "Brett Jackson"
      },
      {
        "ceo_name": "Guy Fardone"
      },
      {
        "ceo_name": "Jon Fowler"
      },
      {
        "ceo_name": "Dan Bodner"
      },
      {
        "ceo_name": "Rami Rahim"
      },
      {
        "ceo_name": "Jerry Shih"
      },
      {
        "ceo_name": "Joyce Mullen"
      },
      {
        "ceo_name": "Punit Renjen"
      },
      {
        "ceo_name": "Mario Vecchio"
      },
      {
        "ceo_name": "Jonathan Finkelstein"
      },
      {
        "ceo_name": "Amy Hanauer"
      },
      {
        "ceo_name": "Pierre-Loic Assayag"
      },
      {
        "ceo_name": "Gil Hupert-Graff"
      },
      {
        "ceo_name": "Richard Copeland"
      },
      {
        "ceo_name": "Geeman Yip"
      },
      {
        "ceo_name": "John Riccitiello"
      },
      {
        "ceo_name": "Jon Thomsen"
      },
      {
        "ceo_name": "Amien Krisna"
      },
      {
        "ceo_name": "David Chartier"
      },
      {
        "ceo_name": "Tianyi Jiang"
      },
      {
        "ceo_name": "Paul Walborsky"
      },
      {
        "ceo_name": "Nourdine Bihmane"
      },
      {
        "ceo_name": "Mohammad Bin Sulaiman"
      },
      {
        "ceo_name": "Shlomi Ben Haim"
      },
      {
        "ceo_name": "Paul Simpson"
      },
      {
        "ceo_name": "Drew Barton"
      },
      {
        "ceo_name": "Matt Colebourne"
      },
      {
        "ceo_name": "Thomas Siebel"
      },
      {
        "ceo_name": "Stephen Upstone"
      },
      {
        "ceo_name": "Lokdeep Singh"
      },
      {
        "ceo_name": "David Drai"
      },
      {
        "ceo_name": "sujeet jha"
      },
      {
        "ceo_name": "Ray Meiring"
      },
      {
        "ceo_name": "Jeff Lawson"
      },
      {
        "ceo_name": "Richard Marques"
      },
      {
        "ceo_name": "Deborah Kobewka"
      },
      {
        "ceo_name": "Shrinivasan Varadarajan"
      },
      {
        "ceo_name": "Jim Ryan"
      },
      {
        "ceo_name": "Amanda Greenberg"
      },
      {
        "ceo_name": "Pieter van der Does"
      },
      {
        "ceo_name": "Doug Werking"
      },
      {
        "ceo_name": "Oren Rubin"
      },
      {
        "ceo_name": "Zach Perret"
      },
      {
        "ceo_name": "Cher Wang"
      },
      {
        "ceo_name": "Andrew Sculley"
      },
      {
        "ceo_name": "Chris Short"
      },
      {
        "ceo_name": "Chris Byers"
      },
      {
        "ceo_name": "Lei Jun"
      },
      {
        "ceo_name": "Jennifer Rumsey"
      },
      {
        "ceo_name": "Gregor Hofer"
      },
      {
        "ceo_name": "M\u00e1rio Ribeiro Alves"
      },
      {
        "ceo_name": "Shauli Rozen"
      },
      {
        "ceo_name": "Mike Capone"
      },
      {
        "ceo_name": "Michel Susai"
      },
      {
        "ceo_name": "Maxim Shafirov"
      },
      {
        "ceo_name": "Jason Thane"
      },
      {
        "ceo_name": "Hubert Palan"
      },
      {
        "ceo_name": "Jiah Choi"
      },
      {
        "ceo_name": "Patrick Andersen"
      },
      {
        "ceo_name": "Patrick Kann"
      },
      {
        "ceo_name": "Dylan Field"
      },
      {
        "ceo_name": "Jeff Dance"
      },
      {
        "ceo_name": "Alexander Garcia-Tobar"
      },
      {
        "ceo_name": "Andy Bird"
      },
      {
        "ceo_name": "Sebasti\u00e1n Kanovich"
      },
      {
        "ceo_name": "Sobin Chang"
      },
      {
        "ceo_name": "Zack Urlocker"
      },
      {
        "ceo_name": "Wendy Gonzalez"
      },
      {
        "ceo_name": "Chris Wood"
      },
      {
        "ceo_name": "Pony Ma"
      },
      {
        "ceo_name": "Jeff Roe"
      },
      {
        "ceo_name": "Jamie Fleming"
      },
      {
        "ceo_name": "Jim Heppelmann"
      },
      {
        "ceo_name": "Deidre Paknad"
      },
      {
        "ceo_name": "Keith Hartley"
      },
      {
        "ceo_name": "Jonathan Goldberg"
      },
      {
        "ceo_name": "Revathi Advaithi"
      },
      {
        "ceo_name": "JAWOOK KOO"
      },
      {
        "ceo_name": "Taso Du Val"
      },
      {
        "ceo_name": "Eoghan McCabe"
      },
      {
        "ceo_name": "Mike Reinhart"
      },
      {
        "ceo_name": "Ted Hill"
      },
      {
        "ceo_name": "Kumar Sudarshan"
      },
      {
        "ceo_name": "Mark Scrivner"
      },
      {
        "ceo_name": "Sandy Yoder"
      },
      {
        "ceo_name": "Michael Dell"
      },
      {
        "ceo_name": "Joe Parry"
      },
      {
        "ceo_name": "Teo Blidarus"
      },
      {
        "ceo_name": "Einar Lindquist"
      },
      {
        "ceo_name": "Chuck McBride"
      },
      {
        "ceo_name": "Harry Keen"
      },
      {
        "ceo_name": "Kelcey Brown"
      },
      {
        "ceo_name": "Michael Priddis"
      },
      {
        "ceo_name": "Krishna Kumar"
      },
      {
        "ceo_name": "Joris Poort"
      },
      {
        "ceo_name": "Clive Selley"
      },
      {
        "ceo_name": "peretti"
      },
      {
        "ceo_name": "Sachin Gupta"
      },
      {
        "ceo_name": "Salil Parekh"
      },
      {
        "ceo_name": "David Pain"
      },
      {
        "ceo_name": "Amjad Hussain"
      },
      {
        "ceo_name": "Daniel Jablonsky"
      },
      {
        "ceo_name": "Simone Accornero"
      },
      {
        "ceo_name": "Aled Miles"
      },
      {
        "ceo_name": "Bob Picciano"
      },
      {
        "ceo_name": "Naveen Tewari"
      },
      {
        "ceo_name": "Charles Meyers"
      },
      {
        "ceo_name": "Jeff Sinclair"
      },
      {
        "ceo_name": "Sandipan Mitra"
      },
      {
        "ceo_name": "Kevin Gosschalk"
      },
      {
        "ceo_name": "Jason Wulfsohn"
      },
      {
        "ceo_name": "Greg Harris"
      },
      {
        "ceo_name": "Atul Sabharwal"
      },
      {
        "ceo_name": "Brandon Houston"
      },
      {
        "ceo_name": "Yaron Galai"
      },
      {
        "ceo_name": "Oli Green"
      },
      {
        "ceo_name": "Nigel Hunton"
      },
      {
        "ceo_name": "James Mackenzie"
      },
      {
        "ceo_name": "Sanjay Mehrotra"
      },
      {
        "ceo_name": "Tom Livne"
      },
      {
        "ceo_name": "Leonard Liu"
      },
      {
        "ceo_name": "Amit Walia"
      },
      {
        "ceo_name": "Icertis"
      },
      {
        "ceo_name": "Renee James"
      },
      {
        "ceo_name": "Joel Davis"
      },
      {
        "ceo_name": "Robert Petersson"
      },
      {
        "ceo_name": "Sasha Savic"
      },
      {
        "ceo_name": "Yannick Bollor\u00e9"
      },
      {
        "ceo_name": "Anand Shah"
      },
      {
        "ceo_name": "Christian Erfurt"
      },
      {
        "ceo_name": "Paul Stovell"
      },
      {
        "ceo_name": "Samir Dhir"
      },
      {
        "ceo_name": "Kelly Manthey"
      },
      {
        "ceo_name": "Robert E."
      },
      {
        "ceo_name": "Roseanne Luth"
      },
      {
        "ceo_name": "Michel de Rijk"
      },
      {
        "ceo_name": "Robert Bailkoski"
      },
      {
        "ceo_name": "Anand S"
      },
      {
        "ceo_name": "Lou Schwartz"
      },
      {
        "ceo_name": "Stan Smith"
      },
      {
        "ceo_name": "Zvi Guterman"
      },
      {
        "ceo_name": "Ross Adams"
      },
      {
        "ceo_name": "Sagi Eliyahu"
      },
      {
        "ceo_name": "Ramesh Srinivasan"
      },
      {
        "ceo_name": "George R. Oliver"
      },
      {
        "ceo_name": "Syed Ali"
      },
      {
        "ceo_name": "S. Brian Mukherjee"
      },
      {
        "ceo_name": "Andrea Pignataro"
      },
      {
        "ceo_name": "Louis Fournier"
      },
      {
        "ceo_name": "Kirk Perry"
      },
      {
        "ceo_name": "Art Gilliland"
      },
      {
        "ceo_name": "Greg Boorer"
      },
      {
        "ceo_name": "Aram Mirkazemi"
      },
      {
        "ceo_name": "Christian Berczely"
      },
      {
        "ceo_name": "Julie Spellman Sweet"
      },
      {
        "ceo_name": "Michael Veale"
      },
      {
        "ceo_name": "Tami Mazel Shachar"
      },
      {
        "ceo_name": "Zach Shelby"
      },
      {
        "ceo_name": "Chris Howard"
      },
      {
        "ceo_name": "Jaroslaw Krolewski"
      },
      {
        "ceo_name": "Timo Toikkanen"
      },
      {
        "ceo_name": "John-Daniel Trask"
      },
      {
        "ceo_name": "Mike De La Cruz"
      },
      {
        "ceo_name": "Shayne Elliott"
      },
      {
        "ceo_name": "Lior Koriat"
      },
      {
        "ceo_name": "Rishi Ghare"
      },
      {
        "ceo_name": "Mats Persson"
      },
      {
        "ceo_name": "Dhiraj Rajaram"
      },
      {
        "ceo_name": "Bob Johnson"
      },
      {
        "ceo_name": "Reynolds C. Bish"
      },
      {
        "ceo_name": "Edward Breen"
      },
      {
        "ceo_name": "Andrew Bradshaw"
      },
      {
        "ceo_name": "Peter Moll"
      },
      {
        "ceo_name": "Jesse Schell"
      },
      {
        "ceo_name": "Hani Goldstein"
      },
      {
        "ceo_name": "Saravana Kumar"
      },
      {
        "ceo_name": "Kuldeep Gupta"
      },
      {
        "ceo_name": "Jean Paoli"
      },
      {
        "ceo_name": "Tim Norton"
      },
      {
        "ceo_name": "Peter Caswell"
      },
      {
        "ceo_name": "Thomas Sonderman"
      },
      {
        "ceo_name": "Robin Vince"
      },
      {
        "ceo_name": "Spenser Skates"
      },
      {
        "ceo_name": "Kurt Mueffelmann"
      },
      {
        "ceo_name": "Sameer Sondhi"
      },
      {
        "ceo_name": "Eric Friedrichsen"
      },
      {
        "ceo_name": "Maksim Karamyshev"
      },
      {
        "ceo_name": "Dror Davidoff"
      },
      {
        "ceo_name": "Andres Ricardo Gluski Weilert"
      },
      {
        "ceo_name": "Fadi Daou"
      },
      {
        "ceo_name": "Paul Coggins"
      },
      {
        "ceo_name": "Paul Boylan"
      },
      {
        "ceo_name": "Jonathan Owen"
      },
      {
        "ceo_name": "Steve Bassi"
      },
      {
        "ceo_name": "Vincent Wenbin"
      },
      {
        "ceo_name": "Phil LaForge"
      },
      {
        "ceo_name": "Abhinav Asthana"
      },
      {
        "ceo_name": "Vincent Clerc"
      },
      {
        "ceo_name": "Stephen Balaban"
      },
      {
        "ceo_name": "Zlatko Vucetic"
      },
      {
        "ceo_name": "Roger Beadle"
      },
      {
        "ceo_name": "Paulo Martins"
      },
      {
        "ceo_name": "Ariel Camus"
      },
      {
        "ceo_name": "Kerry Bianchi"
      },
      {
        "ceo_name": "Amaan Kazi"
      },
      {
        "ceo_name": "Ajaz Ahmed"
      },
      {
        "ceo_name": "Ken Fine"
      },
      {
        "ceo_name": "Jim Kavanaugh"
      },
      {
        "ceo_name": "Deola Art Alade"
      },
      {
        "ceo_name": "Lance Uggla"
      },
      {
        "ceo_name": "Preety Kumar"
      },
      {
        "ceo_name": "Steve Tzikakis"
      },
      {
        "ceo_name": "Sander Werring"
      },
      {
        "ceo_name": "Firoz Lalji"
      },
      {
        "ceo_name": "Christian O."
      },
      {
        "ceo_name": "Steve Masters"
      },
      {
        "ceo_name": "David P. Anastasi"
      },
      {
        "ceo_name": "Richard J. Pollack"
      },
      {
        "ceo_name": "Thomas Celen"
      },
      {
        "ceo_name": "Konrad Feldman"
      },
      {
        "ceo_name": "Steve Lucas"
      },
      {
        "ceo_name": "Steve Heffron"
      },
      {
        "ceo_name": "Serkan Yasin"
      },
      {
        "ceo_name": "Bret Larsen"
      },
      {
        "ceo_name": "Bruce Freshwater"
      },
      {
        "ceo_name": "Jon Cleaver"
      },
      {
        "ceo_name": "Juan Conde"
      },
      {
        "ceo_name": "Galen Walters"
      },
      {
        "ceo_name": "Sri Manchala"
      },
      {
        "ceo_name": "Chris Boothe"
      },
      {
        "ceo_name": "Dan Foley"
      },
      {
        "ceo_name": "Albert Bourla"
      },
      {
        "ceo_name": "Shou Zi Chew"
      },
      {
        "ceo_name": "Junichi Goishi"
      },
      {
        "ceo_name": "Ciaran Cosgrave"
      },
      {
        "ceo_name": "Marco Delgado"
      },
      {
        "ceo_name": "Dave Copps"
      },
      {
        "ceo_name": "Philippe Krakowsky"
      },
      {
        "ceo_name": "Tillery JOnes"
      },
      {
        "ceo_name": "Emil Eifrem"
      },
      {
        "ceo_name": "Amar Maletira"
      },
      {
        "ceo_name": "Sudhakar Ramakrishna"
      },
      {
        "ceo_name": "Eliott Reilhac"
      },
      {
        "ceo_name": "Lance Ullom"
      },
      {
        "ceo_name": "Henk De Metsenaere"
      },
      {
        "ceo_name": "Steve Murphy"
      },
      {
        "ceo_name": "Inon Beracha"
      },
      {
        "ceo_name": "Krishnakumar Natarajan"
      },
      {
        "ceo_name": "Antoine Carre"
      },
      {
        "ceo_name": "Arthur Sadoun"
      },
      {
        "ceo_name": "Blair Crawford"
      },
      {
        "ceo_name": "Fabio Ronga"
      },
      {
        "ceo_name": "Zach Sims"
      },
      {
        "ceo_name": "Thierry Delaporte"
      },
      {
        "ceo_name": "Gil Elbaz"
      },
      {
        "ceo_name": "Mr. Matt Golulet"
      },
      {
        "ceo_name": "Joseph Lubin"
      },
      {
        "ceo_name": "Sparsh Gupta"
      },
      {
        "ceo_name": "Michael Polsky"
      },
      {
        "ceo_name": "Mark Brayan"
      },
      {
        "ceo_name": "GEN (Ret) Keith Alexander"
      },
      {
        "ceo_name": "Kevin Gao"
      },
      {
        "ceo_name": "Rami Sass"
      },
      {
        "ceo_name": "Jay Chaudhry"
      },
      {
        "ceo_name": "Gregory Hughes"
      },
      {
        "ceo_name": "S.y. Hsu"
      },
      {
        "ceo_name": "Steve Hengsperger"
      },
      {
        "ceo_name": "Jeremiah Lowin"
      },
      {
        "ceo_name": "Mark Anderson"
      },
      {
        "ceo_name": "Mike Welsh"
      },
      {
        "ceo_name": "Raj Mamodia"
      },
      {
        "ceo_name": "Jim Barnett"
      },
      {
        "ceo_name": "Mo Isap"
      },
      {
        "ceo_name": "Velly Bosega"
      },
      {
        "ceo_name": "Gene Yoo"
      },
      {
        "ceo_name": "Michael Farlekas"
      },
      {
        "ceo_name": "Jason Bird"
      },
      {
        "ceo_name": "Tommy Cook"
      },
      {
        "ceo_name": "Shaunak Amin"
      },
      {
        "ceo_name": "Vacant"
      },
      {
        "ceo_name": "Samu H\u00e4llfors"
      },
      {
        "ceo_name": "Aaron Edwards"
      },
      {
        "ceo_name": "Pieter De Villiers"
      },
      {
        "ceo_name": "Sean Kelly"
      },
      {
        "ceo_name": "Mike S"
      },
      {
        "ceo_name": "Philip Macnabb"
      },
      {
        "ceo_name": "Jim Yu"
      },
      {
        "ceo_name": "Zvika Netter"
      },
      {
        "ceo_name": "Jean-Bernard Levy"
      },
      {
        "ceo_name": "Scott Anderson"
      },
      {
        "ceo_name": "Gerben Bakker"
      },
      {
        "ceo_name": "David Atkinson"
      },
      {
        "ceo_name": "Kenny Hawk"
      },
      {
        "ceo_name": "Richard Silvester"
      },
      {
        "ceo_name": "Larry Cates"
      },
      {
        "ceo_name": "Didier B."
      },
      {
        "ceo_name": "Allen Auchenpaugh"
      },
      {
        "ceo_name": "Michael Brophy"
      },
      {
        "ceo_name": "John Fennelly"
      },
      {
        "ceo_name": "Lubo Smid"
      },
      {
        "ceo_name": "Alex Maniatopoulos"
      },
      {
        "ceo_name": "Edward Sharp"
      },
      {
        "ceo_name": "Makoto Kaneko"
      },
      {
        "ceo_name": "Ramin Sayar"
      },
      {
        "ceo_name": "Wade Rosen"
      },
      {
        "ceo_name": "Vaibhav Gupta"
      },
      {
        "ceo_name": "Ashish Kataria"
      },
      {
        "ceo_name": "Eric Soehngen"
      },
      {
        "ceo_name": "Randy Curran"
      },
      {
        "ceo_name": "Jacques Declas"
      },
      {
        "ceo_name": "Sanjay Poonen"
      },
      {
        "ceo_name": "Jake Dunlap"
      },
      {
        "ceo_name": "Karen Clark Cole"
      },
      {
        "ceo_name": "Jean-Pascal Tricoire"
      },
      {
        "ceo_name": "Michael Fordyce"
      },
      {
        "ceo_name": "Vlad Voskresensky"
      },
      {
        "ceo_name": "Eva Chen"
      },
      {
        "ceo_name": "Venky Vijay"
      },
      {
        "ceo_name": "\u8f89 \u845b"
      },
      {
        "ceo_name": "Rob Mee"
      },
      {
        "ceo_name": "Steve Bell"
      },
      {
        "ceo_name": "Jeremy Bucknell"
      },
      {
        "ceo_name": "Gary B. Moore"
      },
      {
        "ceo_name": "Deepinder Goyal"
      },
      {
        "ceo_name": "Michael Gross"
      },
      {
        "ceo_name": "Aman Khurana"
      },
      {
        "ceo_name": "William Lewis"
      },
      {
        "ceo_name": "Nenad Cetkovic"
      },
      {
        "ceo_name": "Mikkel Svane"
      },
      {
        "ceo_name": "Hiroshi Igarashi"
      },
      {
        "ceo_name": "Dominic Joseph"
      },
      {
        "ceo_name": "Brian Shafley"
      },
      {
        "ceo_name": "Malcolm Lotzof"
      },
      {
        "ceo_name": "Mihir Shukla"
      },
      {
        "ceo_name": "Frank Bisignano"
      },
      {
        "ceo_name": "Mike Perry"
      },
      {
        "ceo_name": "Matt Britton"
      },
      {
        "ceo_name": "Vijay Oddiraju"
      },
      {
        "ceo_name": "C Vijayakumar"
      },
      {
        "ceo_name": "Eugene Kaspersky"
      },
      {
        "ceo_name": "Jerry Ting"
      },
      {
        "ceo_name": "Ron Ryder"
      },
      {
        "ceo_name": "Rob Burgess"
      },
      {
        "ceo_name": "Ben Reuveni"
      },
      {
        "ceo_name": "Muhammad Nasrullah"
      },
      {
        "ceo_name": "Patrick Quinlan"
      },
      {
        "ceo_name": "Christel Heydemann"
      },
      {
        "ceo_name": "Kelly Watkins"
      },
      {
        "ceo_name": "Nick Grouf"
      },
      {
        "ceo_name": "Tim Cook"
      },
      {
        "ceo_name": "Kristian Barnes"
      },
      {
        "ceo_name": "Gayathri Vivekanandan"
      },
      {
        "ceo_name": "Diego Saez Gil"
      },
      {
        "ceo_name": "Bill Smith"
      },
      {
        "ceo_name": "Peter Anevski"
      },
      {
        "ceo_name": "John F Sloat, Jr"
      },
      {
        "ceo_name": "Anupam Sharma"
      },
      {
        "ceo_name": "Sharon Carmel"
      },
      {
        "ceo_name": "Yuval Baron"
      },
      {
        "ceo_name": "Gal Rimon"
      },
      {
        "ceo_name": "Tony Hunt"
      },
      {
        "ceo_name": "Cali Tran"
      },
      {
        "ceo_name": "Tyler Gaffney"
      },
      {
        "ceo_name": "Thomas Olemotz"
      },
      {
        "ceo_name": "Nishika de Rosairo"
      },
      {
        "ceo_name": "Victor Penev"
      },
      {
        "ceo_name": "Tao Kai-Shing"
      },
      {
        "ceo_name": "Jon Carpenter"
      },
      {
        "ceo_name": "Rex Dorricot"
      },
      {
        "ceo_name": "Kevin Morrison"
      },
      {
        "ceo_name": "Cameron Hawley"
      },
      {
        "ceo_name": "Adena Friedman"
      },
      {
        "ceo_name": "Himanshu Aggarwal"
      },
      {
        "ceo_name": "Stephen Schwarzman"
      },
      {
        "ceo_name": "Sumit Sharma"
      },
      {
        "ceo_name": "Thea C. Myhrvold"
      },
      {
        "ceo_name": "Kris Rudeegraap"
      },
      {
        "ceo_name": "Jerome Lecat"
      },
      {
        "ceo_name": "Samvit Raina"
      },
      {
        "ceo_name": "Aaron Bird"
      },
      {
        "ceo_name": "Jeffrey S Davis"
      },
      {
        "ceo_name": "Daisy Veerasingham"
      },
      {
        "ceo_name": "Tim Dyson"
      },
      {
        "ceo_name": "Ignacio Madridejos Fernandez"
      },
      {
        "ceo_name": "Ofer Israeli"
      },
      {
        "ceo_name": "Patrick Casey"
      },
      {
        "ceo_name": "Henry Schuck"
      },
      {
        "ceo_name": "Tim Ward"
      },
      {
        "ceo_name": "Erik Udstuen"
      },
      {
        "ceo_name": "Sam Altman"
      },
      {
        "ceo_name": "Carlos Creus Moreira"
      },
      {
        "ceo_name": "Ivan Teh"
      },
      {
        "ceo_name": "Kyle Vogt"
      },
      {
        "ceo_name": "Rene van der Laan"
      },
      {
        "ceo_name": "Subroto Mukerji"
      },
      {
        "ceo_name": "Juergen Hermann"
      },
      {
        "ceo_name": "Robert Reffkin"
      },
      {
        "ceo_name": "Mike Hughes"
      },
      {
        "ceo_name": "Andrew Smith"
      },
      {
        "ceo_name": "Matt Smith"
      },
      {
        "ceo_name": "Eric Ayzenberg"
      },
      {
        "ceo_name": "Remi Racine"
      },
      {
        "ceo_name": "Vasco Pedro"
      },
      {
        "ceo_name": "Paul Johnson"
      },
      {
        "ceo_name": "Frederic Chesnais"
      },
      {
        "ceo_name": "Sascha Eder"
      },
      {
        "ceo_name": "Jeffrey Shoreman"
      },
      {
        "ceo_name": "Sarah Thompson"
      },
      {
        "ceo_name": "Scott Wilson"
      },
      {
        "ceo_name": "Bernard Morrissey"
      },
      {
        "ceo_name": "Roland Krueger"
      },
      {
        "ceo_name": "Bob Liodice"
      },
      {
        "ceo_name": "Cl\u00e9ment de Qu\u00e9ral"
      },
      {
        "ceo_name": "Bharath Varma"
      },
      {
        "ceo_name": "Megan Clarken"
      },
      {
        "ceo_name": "Mark Platosh"
      },
      {
        "ceo_name": "Claus Thorsgaard"
      },
      {
        "ceo_name": "Sarat Pediredla"
      },
      {
        "ceo_name": "Brad Horowitz"
      },
      {
        "ceo_name": "Hayden Brown"
      },
      {
        "ceo_name": "Seth Besmertnik"
      },
      {
        "ceo_name": "Ran Mizrahi"
      },
      {
        "ceo_name": "Massimo J N Barone"
      },
      {
        "ceo_name": "Khaled Naim"
      },
      {
        "ceo_name": "Greg Mitchell"
      },
      {
        "ceo_name": "Olivier Gaudin"
      },
      {
        "ceo_name": "Rob Mullen"
      },
      {
        "ceo_name": "Amir Khan"
      },
      {
        "ceo_name": "Nancy Li"
      },
      {
        "ceo_name": "Bob Shea"
      },
      {
        "ceo_name": "Mark Dixon"
      },
      {
        "ceo_name": "Richard Handler"
      },
      {
        "ceo_name": "Tanmay Modi"
      },
      {
        "ceo_name": "Eric Thomas"
      },
      {
        "ceo_name": "jon shalowitz"
      },
      {
        "ceo_name": "Shrey Bhatia"
      },
      {
        "ceo_name": "Sun Pishu"
      },
      {
        "ceo_name": "Mladen Kresic"
      },
      {
        "ceo_name": "Espen Gylvik"
      },
      {
        "ceo_name": "Sumedh Thakar"
      },
      {
        "ceo_name": "Richard Barlow"
      },
      {
        "ceo_name": "Leila Thabet"
      },
      {
        "ceo_name": "Jim Barnes"
      },
      {
        "ceo_name": "Satish Gidugu"
      },
      {
        "ceo_name": "Matthieu Beucher"
      },
      {
        "ceo_name": "Anil Singhal"
      },
      {
        "ceo_name": "Ondrej Vlcek"
      },
      {
        "ceo_name": "Eugene A Hall"
      },
      {
        "ceo_name": "Scott Scully"
      },
      {
        "ceo_name": "Tom Krause"
      },
      {
        "ceo_name": "Todd McKinnon"
      },
      {
        "ceo_name": "C. P. Gurnani"
      },
      {
        "ceo_name": "Forest Key"
      },
      {
        "ceo_name": "David Coltman"
      },
      {
        "ceo_name": "Emily Leproust"
      },
      {
        "ceo_name": "Sujatha Kumaraswamy"
      },
      {
        "ceo_name": "Michael Murray"
      },
      {
        "ceo_name": "Shashank Samala"
      },
      {
        "ceo_name": "Hassane El-Khoury"
      },
      {
        "ceo_name": "Dave Gerry"
      },
      {
        "ceo_name": "Sharat Sharan"
      },
      {
        "ceo_name": "Thomas Biet, MBA, LL.M."
      },
      {
        "ceo_name": "Sandeep Johri"
      },
      {
        "ceo_name": "Frank Pennisi"
      },
      {
        "ceo_name": "Tim Hwang"
      },
      {
        "ceo_name": "Rick Mancinelli"
      },
      {
        "ceo_name": "Lidiane Jones"
      },
      {
        "ceo_name": "Akira Shimada"
      },
      {
        "ceo_name": "Erica Olsen"
      },
      {
        "ceo_name": "Mike Hodgens"
      },
      {
        "ceo_name": "William Zuo"
      },
      {
        "ceo_name": "Conrad Jason Kingdon"
      },
      {
        "ceo_name": "Hilary Laney"
      },
      {
        "ceo_name": "Albert Santalo"
      },
      {
        "ceo_name": "Valeria Ignatieva"
      },
      {
        "ceo_name": "Ofer Ben-Noon"
      },
      {
        "ceo_name": "Steve Bandrowczak"
      },
      {
        "ceo_name": "Camille G Haddad"
      },
      {
        "ceo_name": "Chris Harrington"
      },
      {
        "ceo_name": "Patrick O'Luanaigh"
      },
      {
        "ceo_name": "Garry Cooper"
      },
      {
        "ceo_name": "Frank Roe"
      },
      {
        "ceo_name": "Scott Redman"
      },
      {
        "ceo_name": "Aston Martin"
      },
      {
        "ceo_name": "Sander Schutte"
      },
      {
        "ceo_name": "Ben Lamm"
      },
      {
        "ceo_name": "Duncan Angove"
      },
      {
        "ceo_name": "Maxime Saada"
      },
      {
        "ceo_name": "Lokesh Dave"
      },
      {
        "ceo_name": "Tony Ayaz"
      },
      {
        "ceo_name": "Quique Mart\u00ednez"
      },
      {
        "ceo_name": "Dan Vos"
      },
      {
        "ceo_name": "Neil Dsouza"
      },
      {
        "ceo_name": "Richard Leggett"
      },
      {
        "ceo_name": "David Kidder"
      },
      {
        "ceo_name": "Bruno Bensasson"
      },
      {
        "ceo_name": "David Massey"
      },
      {
        "ceo_name": "Hannes Junginger"
      },
      {
        "ceo_name": "Manish Kedia"
      },
      {
        "ceo_name": "Peter Lilley"
      },
      {
        "ceo_name": "Jeff Weber"
      },
      {
        "ceo_name": "Andrea Giacomini"
      },
      {
        "ceo_name": "Chris Goward"
      },
      {
        "ceo_name": "Eric Vermillion"
      },
      {
        "ceo_name": "Edward Smith Yewell"
      },
      {
        "ceo_name": "Dimi Albers"
      },
      {
        "ceo_name": "Kirill Kravchenko"
      },
      {
        "ceo_name": "Nader El Ali"
      },
      {
        "ceo_name": "James G. Brooks Jr."
      },
      {
        "ceo_name": "Mirko Bibic"
      },
      {
        "ceo_name": "Michael Ludensky"
      },
      {
        "ceo_name": "Mark Faggiano"
      },
      {
        "ceo_name": "Patrick Dennis"
      },
      {
        "ceo_name": "Vered Levy-Ron"
      },
      {
        "ceo_name": "Trevor Rodrigues-Templar"
      },
      {
        "ceo_name": "Chris Tranquill"
      },
      {
        "ceo_name": "Suma E P"
      },
      {
        "ceo_name": "Vicki Brady"
      },
      {
        "ceo_name": "Antony L. Safin"
      },
      {
        "ceo_name": "Richard Edelman"
      },
      {
        "ceo_name": "Eynat Guez"
      },
      {
        "ceo_name": "Terence Pua"
      },
      {
        "ceo_name": "Dave Carruthers"
      },
      {
        "ceo_name": "Anne Lise Waal"
      },
      {
        "ceo_name": "David Blake"
      },
      {
        "ceo_name": "Mr. Bill Paulos"
      },
      {
        "ceo_name": "Dj Das"
      },
      {
        "ceo_name": "Ken Fitzpatrick"
      },
      {
        "ceo_name": "N S Narendra"
      },
      {
        "ceo_name": "Vic Pacor"
      },
      {
        "ceo_name": "David Wagner"
      },
      {
        "ceo_name": "Peter Faricy"
      },
      {
        "ceo_name": "Andrew Anagnost"
      },
      {
        "ceo_name": "Praveer Sinha"
      },
      {
        "ceo_name": "Mark Fowle"
      },
      {
        "ceo_name": "Matt Meyers"
      },
      {
        "ceo_name": "Max Zorian"
      },
      {
        "ceo_name": "Rob Sanchez"
      },
      {
        "ceo_name": "Eric Stang"
      },
      {
        "ceo_name": "Vincent Clerc"
      },
      {
        "ceo_name": "Dinesh Malkani"
      },
      {
        "ceo_name": "Catherine MacGregor"
      },
      {
        "ceo_name": "Henrikas Urbonas"
      },
      {
        "ceo_name": "Shilpi Nahata"
      },
      {
        "ceo_name": "Patrice Caine"
      },
      {
        "ceo_name": "Pramod Sharma"
      },
      {
        "ceo_name": "Matthew Scullion"
      },
      {
        "ceo_name": "Dennis Wright"
      },
      {
        "ceo_name": "Sudhakar Ramakrishna"
      },
      {
        "ceo_name": "Mallory McMaster"
      },
      {
        "ceo_name": "Zander Lurie"
      },
      {
        "ceo_name": "Linda Yaccarino"
      },
      {
        "ceo_name": "Rob Bearden"
      },
      {
        "ceo_name": "David Solsky"
      },
      {
        "ceo_name": "Jayshree Ullal"
      },
      {
        "ceo_name": "Jonathan Margolis"
      },
      {
        "ceo_name": "Marten Mickos"
      },
      {
        "ceo_name": "Leonhard Birnbaum"
      },
      {
        "ceo_name": "Brett Galloway"
      },
      {
        "ceo_name": "Jim Yu"
      },
      {
        "ceo_name": "Bob Priest-Heck"
      },
      {
        "ceo_name": "Zig Serafin"
      },
      {
        "ceo_name": "Andrzej Lipka"
      },
      {
        "ceo_name": "Kai Seefeldt"
      },
      {
        "ceo_name": "Goncalo Nuno Gomes De Andrade Moura Martins"
      },
      {
        "ceo_name": "Brian Provost"
      },
      {
        "ceo_name": "Jason VandeBoom"
      },
      {
        "ceo_name": "Con Raso"
      },
      {
        "ceo_name": "Jason Chang"
      },
      {
        "ceo_name": "David Dicker"
      },
      {
        "ceo_name": "Thomas Koll"
      },
      {
        "ceo_name": "Vaughan Lindsay"
      },
      {
        "ceo_name": "Chris Weiler"
      },
      {
        "ceo_name": "Josh James"
      },
      {
        "ceo_name": "Sunny Gupta"
      },
      {
        "ceo_name": "Juan Santamaria"
      },
      {
        "ceo_name": "Kelly Schmitt"
      },
      {
        "ceo_name": "Christian Feisst"
      },
      {
        "ceo_name": "Mohamad Abou-Zaki"
      },
      {
        "ceo_name": "Ritesh Arora"
      },
      {
        "ceo_name": "Daniil Fedorov"
      },
      {
        "ceo_name": "Joseph Neu"
      },
      {
        "ceo_name": "Paul Martin"
      },
      {
        "ceo_name": "Ricky Ray Butler"
      },
      {
        "ceo_name": "Johnny Saffar"
      },
      {
        "ceo_name": "Stephen Costello"
      },
      {
        "ceo_name": "Helmut Tschemernjak"
      },
      {
        "ceo_name": "Leyton Perris"
      },
      {
        "ceo_name": "Amiya Adwitiya"
      },
      {
        "ceo_name": "Christophe Beck"
      },
      {
        "ceo_name": "Prem Kumar"
      },
      {
        "ceo_name": "Ken Young"
      },
      {
        "ceo_name": "Margie Traylor"
      },
      {
        "ceo_name": "John Eckman"
      },
      {
        "ceo_name": "Shay Giuili"
      },
      {
        "ceo_name": "Ravi Mehrotra"
      },
      {
        "ceo_name": "Brad Williams"
      },
      {
        "ceo_name": "Jean-Michel Berard"
      },
      {
        "ceo_name": "Susan Taylor"
      },
      {
        "ceo_name": "Anbu Ganapathi Muppidathi"
      },
      {
        "ceo_name": "Owen D. Thomas"
      },
      {
        "ceo_name": "Patrick Peterson"
      },
      {
        "ceo_name": "Milin Desai"
      },
      {
        "ceo_name": "Stephen Feinberg"
      },
      {
        "ceo_name": "Long Jiang"
      },
      {
        "ceo_name": "Ragy Thomas"
      },
      {
        "ceo_name": "Sameer Nigam"
      },
      {
        "ceo_name": "Leendert De Voogd"
      },
      {
        "ceo_name": "Clifford Press"
      },
      {
        "ceo_name": "Tony Pepper"
      },
      {
        "ceo_name": "Sami AlSayyed"
      },
      {
        "ceo_name": "Michael Cannon"
      },
      {
        "ceo_name": "Himanshu Dwivedi"
      },
      {
        "ceo_name": "Sachin Kamdar"
      },
      {
        "ceo_name": "JF Cote"
      },
      {
        "ceo_name": "Tim Reed"
      },
      {
        "ceo_name": "Vitaly Shipitsin"
      },
      {
        "ceo_name": "Mike Shehan"
      },
      {
        "ceo_name": "Robert Nishihara"
      },
      {
        "ceo_name": "Mayank Bawa"
      },
      {
        "ceo_name": "Jonathan Kay"
      },
      {
        "ceo_name": "Carl Mergele"
      },
      {
        "ceo_name": "Augustin Prot"
      },
      {
        "ceo_name": "Paddy Srinivasan"
      },
      {
        "ceo_name": "Joshua Ridley"
      },
      {
        "ceo_name": "Thompson Lin"
      },
      {
        "ceo_name": "Justin Setzer"
      },
      {
        "ceo_name": "Wilma Rodrigues"
      },
      {
        "ceo_name": "Lachlan Murdoch"
      },
      {
        "ceo_name": "Simon Kearney"
      },
      {
        "ceo_name": "Jason Corso"
      },
      {
        "ceo_name": "Shintaro Kanaoya"
      },
      {
        "ceo_name": "Raghu Ravinutala"
      },
      {
        "ceo_name": "Koen Stevens"
      },
      {
        "ceo_name": "Paolo Guglielmini"
      },
      {
        "ceo_name": "Jeff Catlin"
      },
      {
        "ceo_name": "Jon Sobel"
      },
      {
        "ceo_name": "Florian Winterstein"
      },
      {
        "ceo_name": "Gui Sheng Yue"
      },
      {
        "ceo_name": "Simon Bolton"
      },
      {
        "ceo_name": "Guy Levy-Yurista"
      },
      {
        "ceo_name": "Lawrence Masle"
      },
      {
        "ceo_name": "Abe Ankumah"
      },
      {
        "ceo_name": "Akos Vecsei"
      },
      {
        "ceo_name": "Margherita Della Valle"
      },
      {
        "ceo_name": "Seth Ravin"
      },
      {
        "ceo_name": "Sam Gutmann"
      },
      {
        "ceo_name": "Takayuki Morita"
      },
      {
        "ceo_name": "Stephen Fitzpatrick"
      },
      {
        "ceo_name": "Julian Box"
      },
      {
        "ceo_name": "Liron Fine"
      },
      {
        "ceo_name": "Danny Maher"
      },
      {
        "ceo_name": "Christoph Kastenholz"
      },
      {
        "ceo_name": "Tulika Tripathi"
      },
      {
        "ceo_name": "Ashutosh Kulkarni"
      },
      {
        "ceo_name": "Murugesan \u201cRaj\u201d Shanmugaraj"
      },
      {
        "ceo_name": "Tim Richards"
      },
      {
        "ceo_name": "Scott Farquhar"
      },
      {
        "ceo_name": "Bob Lyons"
      },
      {
        "ceo_name": "Fernando Mendez"
      },
      {
        "ceo_name": "Ren\u00e9 Janssen"
      },
      {
        "ceo_name": "Barry Conlon"
      },
      {
        "ceo_name": "Milton Chen"
      },
      {
        "ceo_name": "Adrian Corless"
      },
      {
        "ceo_name": "Lisa Graham"
      },
      {
        "ceo_name": "Pekka Lundmark"
      },
      {
        "ceo_name": "Doug Goodyear"
      },
      {
        "ceo_name": "Lisa Su"
      },
      {
        "ceo_name": "Andy Krantz"
      },
      {
        "ceo_name": "Tom Leighton"
      },
      {
        "ceo_name": "Josh Baxter"
      },
      {
        "ceo_name": "Paul Swaddle"
      },
      {
        "ceo_name": "Dhrupad Trivedi"
      },
      {
        "ceo_name": "Giordano Albertazzi"
      },
      {
        "ceo_name": "Karen Buchanan"
      },
      {
        "ceo_name": "Archana Tripathi"
      },
      {
        "ceo_name": "Paul Larbey"
      },
      {
        "ceo_name": "Euan Blair"
      },
      {
        "ceo_name": "David Niu"
      },
      {
        "ceo_name": "Parsa Ghaffari"
      },
      {
        "ceo_name": "Mahe Bayireddi"
      },
      {
        "ceo_name": "Simon Grabowski"
      },
      {
        "ceo_name": "Prashanth Chandrasekar"
      },
      {
        "ceo_name": "Alison Gianotto"
      },
      {
        "ceo_name": "Mr. Matthew J. Murphy"
      },
      {
        "ceo_name": "Carl Cavers"
      },
      {
        "ceo_name": "Sunil Patel"
      },
      {
        "ceo_name": "Curt Doolittle"
      },
      {
        "ceo_name": "Graeme Watt"
      },
      {
        "ceo_name": "Lisa Cleary"
      },
      {
        "ceo_name": "Eric Schwartz"
      },
      {
        "ceo_name": "Lior Geft"
      },
      {
        "ceo_name": "Cathy Pittham"
      },
      {
        "ceo_name": "Jake Kouns"
      },
      {
        "ceo_name": "Tara May"
      },
      {
        "ceo_name": "Sanjay Mirchandani"
      },
      {
        "ceo_name": "Octavio Marquez"
      },
      {
        "ceo_name": "Roger Perowne"
      },
      {
        "ceo_name": "James Park"
      },
      {
        "ceo_name": "Yves B\u00e9har"
      },
      {
        "ceo_name": "Bipin Shah"
      },
      {
        "ceo_name": "Eric Starkloff"
      },
      {
        "ceo_name": "George Deglin"
      },
      {
        "ceo_name": "Neil Araujo"
      },
      {
        "ceo_name": "Kevin Mandia"
      },
      {
        "ceo_name": "Antonio Neri"
      },
      {
        "ceo_name": "Gautam Tambay"
      },
      {
        "ceo_name": "Jessamyn Davis"
      },
      {
        "ceo_name": "Melissa Waggener Zorkin"
      },
      {
        "ceo_name": "Raghu Raghuram"
      },
      {
        "ceo_name": "Omer Glass"
      },
      {
        "ceo_name": "Shane Paladin"
      },
      {
        "ceo_name": "Trevor Gnesin"
      },
      {
        "ceo_name": "Jay McBride"
      },
      {
        "ceo_name": "Anil Dash"
      },
      {
        "ceo_name": "Jason Andrew Xenopoulos"
      },
      {
        "ceo_name": "Ralph Schmitt"
      },
      {
        "ceo_name": "Gavin Michael"
      },
      {
        "ceo_name": "Michael Sharkey"
      },
      {
        "ceo_name": "Dylan Dias"
      },
      {
        "ceo_name": "Evgenia Shastina"
      },
      {
        "ceo_name": "Alexander Khuda"
      },
      {
        "ceo_name": "Michael R. Hsing"
      },
      {
        "ceo_name": "Aart de Geus"
      },
      {
        "ceo_name": "John Mitchell"
      },
      {
        "ceo_name": "Tom Mahoney"
      },
      {
        "ceo_name": "Alexander Rauser"
      }
    ]
  },
  {
    "question": "What industry do Altium's subsidiaries operate in?",
    "cypher": "MATCH (o:Organization {name: 'Altium'})-[:HAS_SUBSIDIARY]->(s:Organization)-[:HAS_CATEGORY]->(ic:IndustryCategory) RETURN ic.name AS industry_category",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Count organizations mentioned in articles about Infinite Analtics",
    "cypher": "MATCH (a:Article)-[:MENTIONS]->(o1:Organization {name: 'Infinite Analytics'}), (a)-[:MENTIONS]->(o2:Organization) WHERE o1 <> o2 RETURN COUNT(DISTINCT o2) AS mentioned_org_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "mentioned_org_count": 11
      }
    ],
    "answer": "11 organizations are mentioned in articles that also mention Infinite Analytics."
  },
  {
    "question": "What's the country where New Relic operates?",
    "cypher": "MATCH (o:Organization {name: 'New Relic'})-[:IN_CITY]->(c:City)-[:IN_COUNTRY]->(country:Country) RETURN country.name AS operating_country",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "operating_country": "United States of America"
      },
      {
        "operating_country": "United States of America"
      },
      {
        "operating_country": "United States of America"
      },
      {
        "operating_country": "United States of America"
      },
      {
        "operating_country": "United States of America"
      },
      {
        "operating_country": "United States of America"
      },
      {
        "operating_country": "Netherlands"
      },
      {
        "operating_country": "Germany"
      },
      {
        "operating_country": "Switzerland"
      },
      {
        "operating_country": "Israel"
      }
    ]
  },
  {
    "question": "How many firms are subsidiaries of subsidiaries of SAP?",
    "cypher": "MATCH (o:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(:Organization)-[:HAS_SUBSIDIARY]->(s:Organization) RETURN COUNT(s) AS subsidiary_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "subsidiary_count": 130
      }
    ],
    "answer": "Based on the query result, SAP has 130 firms that are subsidiaries of its direct subsidiaries."
  },
  {
    "question": "What's the location of IBM's suppliers?",
    "cypher": "MATCH (o:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(s:Organization)-[:IN_CITY]->(c:City) RETURN c.name AS supplier_city",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "supplier_city": "Marblehead"
      },
      {
        "supplier_city": "Lviv"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Brisbane"
      },
      {
        "supplier_city": "Mesa"
      },
      {
        "supplier_city": "Montbonnot-Saint-Martin"
      },
      {
        "supplier_city": "Enschede"
      },
      {
        "supplier_city": "Los Altos"
      },
      {
        "supplier_city": "Grenoble"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "Oulu"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "Lisle"
      },
      {
        "supplier_city": "Colorado Springs"
      },
      {
        "supplier_city": "Rungis"
      },
      {
        "supplier_city": "Budapest"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Biot"
      },
      {
        "supplier_city": "Leuven"
      },
      {
        "supplier_city": "Mathay"
      },
      {
        "supplier_city": "Kirkland"
      },
      {
        "supplier_city": "Arcueil"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Marlborough"
      },
      {
        "supplier_city": "Montpellier"
      },
      {
        "supplier_city": "Canton"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Pasadena"
      },
      {
        "supplier_city": "Issaquah"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Canby"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Calgary"
      },
      {
        "supplier_city": "El Segundo"
      },
      {
        "supplier_city": "Folsom"
      },
      {
        "supplier_city": "Hillsboro"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Gold River"
      },
      {
        "supplier_city": "Vichy"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "Broomfield"
      },
      {
        "supplier_city": "Wissous"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Orlando"
      },
      {
        "supplier_city": "Toulouse"
      },
      {
        "supplier_city": "Allentown"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Schaumburg"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Longmont"
      },
      {
        "supplier_city": "Constance"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Bloomington"
      },
      {
        "supplier_city": "Chandler"
      },
      {
        "supplier_city": "Compreignac"
      },
      {
        "supplier_city": "Nice"
      },
      {
        "supplier_city": "Mississauga"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Aix-en-Provence"
      },
      {
        "supplier_city": "Kharkiv"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Richmond"
      },
      {
        "supplier_city": "Andover"
      },
      {
        "supplier_city": "Lombard"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Olympia"
      },
      {
        "supplier_city": "Royalston"
      },
      {
        "supplier_city": "Cedar Park"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "Lahore"
      },
      {
        "supplier_city": "\u0136ekava"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Chandler"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Farmington Hills"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Neu-Isenburg"
      },
      {
        "supplier_city": "Brookfield"
      },
      {
        "supplier_city": "Mason"
      },
      {
        "supplier_city": "Baden, Pennsylvania"
      },
      {
        "supplier_city": "South Bend"
      },
      {
        "supplier_city": "Cincinnati"
      },
      {
        "supplier_city": "Torrance"
      },
      {
        "supplier_city": "Bloomfield Hills"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Westford"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Champaign"
      },
      {
        "supplier_city": "Lexington"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Westport"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Zevenaar"
      },
      {
        "supplier_city": "Fortaleza"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Akron"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Morristown"
      },
      {
        "supplier_city": "Earth"
      },
      {
        "supplier_city": "Ramat Gan"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Somerville"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Aix-en-Provence"
      },
      {
        "supplier_city": "Cherry Hill Mall"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "Parkville"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Hyderabad"
      },
      {
        "supplier_city": "Kampen"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "North Naples"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Chicopee"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "Minsk"
      },
      {
        "supplier_city": "Simpsonville"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Royse City"
      },
      {
        "supplier_city": "Santa Fe"
      },
      {
        "supplier_city": "Albuquerque"
      },
      {
        "supplier_city": "Emory"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Chandler"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Espoo"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "El Segundo"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Eau Claire"
      },
      {
        "supplier_city": "Cupertino"
      },
      {
        "supplier_city": "Katowice"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Saint Paul"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Round Rock"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Rio de Janeiro"
      },
      {
        "supplier_city": "Mulhouse"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Kitchener"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Thionville"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Delhi"
      },
      {
        "supplier_city": "Ho Chi Minh City"
      },
      {
        "supplier_city": "Taipei"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Minsk"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Sarasota"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Broomfield"
      },
      {
        "supplier_city": "Orange"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Naperville"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Frisco"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "Saint-Ouen-sur-Seine"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Montreuil"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Norwalk"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Dothan"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Medell\u00edn"
      },
      {
        "supplier_city": "Barranquilla"
      },
      {
        "supplier_city": "Bogot\u00e1"
      },
      {
        "supplier_city": "Sun Prairie"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "Heathrow"
      },
      {
        "supplier_city": "Overland Park"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Lake Mary"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Redmond"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Jackson"
      },
      {
        "supplier_city": "Pune"
      },
      {
        "supplier_city": "Machelen"
      },
      {
        "supplier_city": "Bentonville"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Roseville"
      },
      {
        "supplier_city": "Schiltigheim"
      },
      {
        "supplier_city": "Saran"
      },
      {
        "supplier_city": "Les Grandes-Ventes"
      },
      {
        "supplier_city": "Choisey"
      },
      {
        "supplier_city": "Longwy"
      },
      {
        "supplier_city": "Tigery"
      },
      {
        "supplier_city": "Vesoul"
      },
      {
        "supplier_city": "\u00c9vreux"
      },
      {
        "supplier_city": "Rennes"
      },
      {
        "supplier_city": "Saint-Quentin"
      },
      {
        "supplier_city": "\u00c9ragny"
      },
      {
        "supplier_city": "Livry-Gargan"
      },
      {
        "supplier_city": "Valence"
      },
      {
        "supplier_city": "Mon\u00e9teau"
      },
      {
        "supplier_city": "Saint-Maximin"
      },
      {
        "supplier_city": "Courri\u00e8res"
      },
      {
        "supplier_city": "Longueil-Sainte-Marie"
      },
      {
        "supplier_city": "Andelnans"
      },
      {
        "supplier_city": "Sainte-Marguerite"
      },
      {
        "supplier_city": "Houssen"
      },
      {
        "supplier_city": "Vichy"
      },
      {
        "supplier_city": "Ermont"
      },
      {
        "supplier_city": "Dorlisheim"
      },
      {
        "supplier_city": "Montb\u00e9liard"
      },
      {
        "supplier_city": "Secqueville-en-Bessin"
      },
      {
        "supplier_city": "Roye"
      },
      {
        "supplier_city": "Boussy-Saint-Antoine"
      },
      {
        "supplier_city": "Forbach"
      },
      {
        "supplier_city": "Sarrebourg"
      },
      {
        "supplier_city": "Woippy"
      },
      {
        "supplier_city": "Les Pavillons-sous-Bois"
      },
      {
        "supplier_city": "Remiremont"
      },
      {
        "supplier_city": "Villers-Semeuse"
      },
      {
        "supplier_city": "Sarreguemines"
      },
      {
        "supplier_city": "Vernouillet"
      },
      {
        "supplier_city": "Nancy"
      },
      {
        "supplier_city": "Verdun"
      },
      {
        "supplier_city": "Metz"
      },
      {
        "supplier_city": "Mondelange"
      },
      {
        "supplier_city": "Publier"
      },
      {
        "supplier_city": "Wittenheim"
      },
      {
        "supplier_city": "Bourgoin-Jallieu"
      },
      {
        "supplier_city": "M\u00e2con"
      },
      {
        "supplier_city": "Houdemont"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Croissy-Beaubourg"
      },
      {
        "supplier_city": "Soissons"
      },
      {
        "supplier_city": "Blois"
      },
      {
        "supplier_city": "Saint-Genis-Laval"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Reims"
      },
      {
        "supplier_city": "Massy"
      },
      {
        "supplier_city": "Mundolsheim"
      },
      {
        "supplier_city": "Caen"
      },
      {
        "supplier_city": "Saint-Avold"
      },
      {
        "supplier_city": "Strasbourg"
      },
      {
        "supplier_city": "Laxou"
      },
      {
        "supplier_city": "Villebarou"
      },
      {
        "supplier_city": "Vendin-le-Vieil"
      },
      {
        "supplier_city": "Haguenau"
      },
      {
        "supplier_city": "Ormes"
      },
      {
        "supplier_city": "Toul"
      },
      {
        "supplier_city": "Colmar"
      },
      {
        "supplier_city": "Limoges"
      },
      {
        "supplier_city": "Mulhouse"
      },
      {
        "supplier_city": "Dreux"
      },
      {
        "supplier_city": "Arcueil"
      },
      {
        "supplier_city": "Lempdes"
      },
      {
        "supplier_city": "Atton"
      },
      {
        "supplier_city": "Ludres"
      },
      {
        "supplier_city": "Cormontreuil"
      },
      {
        "supplier_city": "Al\u00e8s"
      },
      {
        "supplier_city": "Longvic"
      },
      {
        "supplier_city": "Ramat Gan"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "San Antonio"
      },
      {
        "supplier_city": "Givatayim"
      },
      {
        "supplier_city": "Woodbury"
      },
      {
        "supplier_city": "Bnei Brak"
      },
      {
        "supplier_city": "Lelystad"
      },
      {
        "supplier_city": "Woodbury"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Chatswood"
      },
      {
        "supplier_city": "San Rafael"
      },
      {
        "supplier_city": "Bia\u0142y B\u00f3r"
      },
      {
        "supplier_city": "Upper Saddle River"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Kirkland"
      },
      {
        "supplier_city": "Appen"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Bothell"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Morristown"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Greenville"
      },
      {
        "supplier_city": "San Pancrazio"
      },
      {
        "supplier_city": "Livingston"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Plovdiv"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Troy"
      },
      {
        "supplier_city": "Trenton"
      },
      {
        "supplier_city": "Norwalk"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Thousand Oaks"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Gaithersburg"
      },
      {
        "supplier_city": "Robbinsville"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Danbury"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "Westlake Village"
      },
      {
        "supplier_city": "West Hollywood"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Ercsi"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Westford"
      },
      {
        "supplier_city": "Vinnytsia"
      },
      {
        "supplier_city": "Aubais"
      },
      {
        "supplier_city": "Las Cruces"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Noisy-le-Grand"
      },
      {
        "supplier_city": "Z\u00fcrich"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Port Chester"
      },
      {
        "supplier_city": "Richmond"
      },
      {
        "supplier_city": "S\u00e3o Bernardo do Campo"
      },
      {
        "supplier_city": "Kennesaw"
      },
      {
        "supplier_city": "Damascus"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Emeryville"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "Southfield"
      },
      {
        "supplier_city": "Richmond"
      },
      {
        "supplier_city": "Arcueil"
      },
      {
        "supplier_city": "Oakbrook Terrace"
      },
      {
        "supplier_city": "Beverly Hills"
      },
      {
        "supplier_city": "Herzliya"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "Alameda"
      },
      {
        "supplier_city": "Pomeroy"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Wakefield"
      },
      {
        "supplier_city": "Centennial"
      },
      {
        "supplier_city": "Hopkins"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Arden Hills"
      },
      {
        "supplier_city": "Shoreline"
      },
      {
        "supplier_city": "Neu-Isenburg"
      },
      {
        "supplier_city": "Ashburn"
      },
      {
        "supplier_city": "Mill Valley"
      },
      {
        "supplier_city": "Cupertino"
      },
      {
        "supplier_city": "Mont-Saint-Aignan"
      },
      {
        "supplier_city": "Datong"
      },
      {
        "supplier_city": "Monterey"
      },
      {
        "supplier_city": "Charleston"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Hicksville"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "McLean"
      },
      {
        "supplier_city": "Orem"
      },
      {
        "supplier_city": "Fair Haven"
      },
      {
        "supplier_city": "West Lake Hills"
      },
      {
        "supplier_city": "Basel"
      },
      {
        "supplier_city": "Santa Monica"
      },
      {
        "supplier_city": "Newton"
      },
      {
        "supplier_city": "Fort Worth"
      },
      {
        "supplier_city": "Rosemont"
      },
      {
        "supplier_city": "Perris"
      },
      {
        "supplier_city": "Amherst"
      },
      {
        "supplier_city": "Piren\u00f3polis"
      },
      {
        "supplier_city": "Victor"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Mississauga"
      },
      {
        "supplier_city": "Annapolis"
      },
      {
        "supplier_city": "Reno"
      },
      {
        "supplier_city": "Issaquah"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Eski\u015fehir"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Huntington Beach"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Arlington"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Palmdale"
      },
      {
        "supplier_city": "Sandy"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "L\u00e9signy"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Quakertown"
      },
      {
        "supplier_city": "Arnold"
      },
      {
        "supplier_city": "Benicia"
      },
      {
        "supplier_city": "San Gabriel"
      },
      {
        "supplier_city": "College Park"
      },
      {
        "supplier_city": "Livermore"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Sammamish"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "Yokohama"
      },
      {
        "supplier_city": "Auburndale"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "Chi\u0219in\u0103u"
      },
      {
        "supplier_city": "Laredo"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "Tysons"
      },
      {
        "supplier_city": "Coral Gables"
      },
      {
        "supplier_city": "Shoreview"
      },
      {
        "supplier_city": "Helotes"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Lehi"
      },
      {
        "supplier_city": "Apatzing\u00e1n de la Constituci\u00f3n"
      },
      {
        "supplier_city": "Saint Paul"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Novato"
      },
      {
        "supplier_city": "Chatswood"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Cachan"
      },
      {
        "supplier_city": "Healdsburg"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Kazan"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "Hackensack"
      },
      {
        "supplier_city": "Bloomfield Hills"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Plovdiv"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Hillsboro"
      },
      {
        "supplier_city": "San Antonio"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Biot"
      },
      {
        "supplier_city": "Hackettstown"
      },
      {
        "supplier_city": "Colorado Springs"
      },
      {
        "supplier_city": "Lake Oswego"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Camarillo"
      },
      {
        "supplier_city": "Chelmsford"
      },
      {
        "supplier_city": "Simi Valley"
      },
      {
        "supplier_city": "Longmont"
      },
      {
        "supplier_city": "Westlake Village"
      },
      {
        "supplier_city": "Tualatin"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Batumi"
      },
      {
        "supplier_city": "Memphis"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Lake Havasu City"
      },
      {
        "supplier_city": "Reno"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Bogot\u00e1"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Maracay"
      },
      {
        "supplier_city": "Lennox Head"
      },
      {
        "supplier_city": "Danbury"
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Huntington"
      },
      {
        "supplier_city": "Peachtree Corners"
      },
      {
        "supplier_city": "Porterville"
      },
      {
        "supplier_city": "Marlton"
      },
      {
        "supplier_city": "Duluth"
      },
      {
        "supplier_city": "North Reading"
      },
      {
        "supplier_city": "Sugar Land"
      },
      {
        "supplier_city": "Grapevine"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Recife"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "M\u00e9rida"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Bloomington"
      },
      {
        "supplier_city": "Montevideo"
      },
      {
        "supplier_city": "Elk Grove Village"
      },
      {
        "supplier_city": "Delden"
      },
      {
        "supplier_city": "Solon"
      },
      {
        "supplier_city": "Woodland"
      },
      {
        "supplier_city": "Hugo"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Vestal"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Watertown"
      },
      {
        "supplier_city": "Lynchburg"
      },
      {
        "supplier_city": "Plymouth"
      },
      {
        "supplier_city": "Hoffman Estates"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Royal Oak"
      },
      {
        "supplier_city": "Naarden"
      },
      {
        "supplier_city": "Andover"
      },
      {
        "supplier_city": "Richardson"
      },
      {
        "supplier_city": "Doral"
      },
      {
        "supplier_city": "Sanford"
      },
      {
        "supplier_city": "Minnetonka"
      },
      {
        "supplier_city": "Quito"
      },
      {
        "supplier_city": "Westford"
      },
      {
        "supplier_city": "City of Brussels"
      },
      {
        "supplier_city": "Marietta"
      },
      {
        "supplier_city": "Lexington"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Parramatta"
      },
      {
        "supplier_city": "Salisbury"
      },
      {
        "supplier_city": "Winona"
      },
      {
        "supplier_city": "Charlottesville"
      },
      {
        "supplier_city": "Ueda"
      },
      {
        "supplier_city": "Centennial"
      },
      {
        "supplier_city": "Waukesha"
      },
      {
        "supplier_city": "West Union"
      },
      {
        "supplier_city": "Shenzhen"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Hauppauge"
      },
      {
        "supplier_city": "Breda"
      },
      {
        "supplier_city": "Langhorne"
      },
      {
        "supplier_city": "Coppell"
      },
      {
        "supplier_city": "Garland"
      },
      {
        "supplier_city": "Ringgold"
      },
      {
        "supplier_city": "Cedar Rapids"
      },
      {
        "supplier_city": "Morristown"
      },
      {
        "supplier_city": "Santa In\u00eas"
      },
      {
        "supplier_city": "Montgomery"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Redmond"
      },
      {
        "supplier_city": "Nashua"
      },
      {
        "supplier_city": "Culver City"
      },
      {
        "supplier_city": "Toledo"
      },
      {
        "supplier_city": "Burnaby"
      },
      {
        "supplier_city": "Schaumburg"
      },
      {
        "supplier_city": "Orlando"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Westlake Village"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "New Kensington"
      },
      {
        "supplier_city": "Anaheim"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Beaverton"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Calgary"
      },
      {
        "supplier_city": "Dnipro"
      },
      {
        "supplier_city": "Broomfield"
      },
      {
        "supplier_city": "Groveport"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "McAllen"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Cancun"
      },
      {
        "supplier_city": "Parsippany-Troy Hills"
      },
      {
        "supplier_city": "Chantilly"
      },
      {
        "supplier_city": "Clearwater"
      },
      {
        "supplier_city": "Lakewood"
      },
      {
        "supplier_city": "Englewood"
      },
      {
        "supplier_city": "Chandler"
      },
      {
        "supplier_city": "Jundia\u00ed"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Williamston"
      },
      {
        "supplier_city": "Matsumoto"
      },
      {
        "supplier_city": "Brooksville"
      },
      {
        "supplier_city": "Sioux Falls"
      },
      {
        "supplier_city": "Overland Park"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Eastlake"
      },
      {
        "supplier_city": "Corpus Christi"
      },
      {
        "supplier_city": "Syracuse"
      },
      {
        "supplier_city": "Tempe"
      },
      {
        "supplier_city": "Wayland"
      },
      {
        "supplier_city": "San Antonio"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Ocala"
      },
      {
        "supplier_city": "Chino Hills"
      },
      {
        "supplier_city": "Danville"
      },
      {
        "supplier_city": "Torrance"
      },
      {
        "supplier_city": "Huntsville"
      },
      {
        "supplier_city": "Westerville"
      },
      {
        "supplier_city": "Edinburg"
      },
      {
        "supplier_city": "Nogales"
      },
      {
        "supplier_city": "Endicott"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Flanders"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Albuquerque"
      },
      {
        "supplier_city": "Tucson"
      },
      {
        "supplier_city": "R\u00fcschlikon"
      },
      {
        "supplier_city": "Grand Rapids"
      },
      {
        "supplier_city": "Acton"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Ashland"
      },
      {
        "supplier_city": "Madison"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Smithfield"
      },
      {
        "supplier_city": "Byron Center"
      },
      {
        "supplier_city": "Everett"
      },
      {
        "supplier_city": "Nicosia"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Almere"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "San Carlos"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Bras\u00edlia"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Herzogenaurach"
      },
      {
        "supplier_city": "Saint-Jean-Cap-Ferrat"
      },
      {
        "supplier_city": "Verneuil-sur-Vienne"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Wintzenheim"
      },
      {
        "supplier_city": "Colmar"
      },
      {
        "supplier_city": "Grenoble"
      },
      {
        "supplier_city": "Treilli\u00e8res"
      },
      {
        "supplier_city": "Guadalajara"
      },
      {
        "supplier_city": "Neuilly"
      },
      {
        "supplier_city": "Clamart"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Westport"
      },
      {
        "supplier_city": "Sv\u00e4t\u00fd Peter"
      },
      {
        "supplier_city": "Hendrik-Ido-Ambacht"
      },
      {
        "supplier_city": "Castell'Umberto"
      },
      {
        "supplier_city": "Montpellier"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "Guatemala City"
      },
      {
        "supplier_city": "Nitra"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Saint-Herblain"
      },
      {
        "supplier_city": "Paterson"
      },
      {
        "supplier_city": "Avignon"
      },
      {
        "supplier_city": "Dorset"
      },
      {
        "supplier_city": "Sri Jayawardenepura Kotte"
      },
      {
        "supplier_city": "Fort-de-France"
      },
      {
        "supplier_city": "Willmar"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "Bury"
      },
      {
        "supplier_city": "Avesnes-le-Comte"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Knoxville"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Fort Lauderdale"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Z\u00fcrich"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "Arcueil"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Los Gatos"
      },
      {
        "supplier_city": "Fort Collins"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Nashua"
      },
      {
        "supplier_city": "Richmond Hill"
      },
      {
        "supplier_city": "Elk Grove Village"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Longmont"
      },
      {
        "supplier_city": "Hopkins"
      },
      {
        "supplier_city": "Bloomfield Hills"
      },
      {
        "supplier_city": "Markham"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "Lockhart"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Knightdale"
      },
      {
        "supplier_city": "Roseville"
      },
      {
        "supplier_city": "Aschheim"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Mount Prospect"
      },
      {
        "supplier_city": "Clearwater"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Southbury"
      },
      {
        "supplier_city": "Keansburg"
      },
      {
        "supplier_city": "Orlando"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Suwanee"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Malm\u00f6"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Lisbon"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Casper"
      },
      {
        "supplier_city": "Portsmouth"
      },
      {
        "supplier_city": "Perrysburg"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Chesterfield"
      },
      {
        "supplier_city": "Ilchester"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "San Bernardino"
      },
      {
        "supplier_city": "Sterling"
      },
      {
        "supplier_city": "Edina"
      },
      {
        "supplier_city": "Orange"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Ismaning"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Cary"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Roseville"
      },
      {
        "supplier_city": "Islandia"
      },
      {
        "supplier_city": "Trenton"
      },
      {
        "supplier_city": "Central Islip"
      },
      {
        "supplier_city": "Fair Lawn"
      },
      {
        "supplier_city": "Arlington"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Kirkland"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Sarasota"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Boise"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Noida"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Menlo Park"
      },
      {
        "supplier_city": "Longmont"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Waterford"
      },
      {
        "supplier_city": "Tramore"
      },
      {
        "supplier_city": "Eureka Springs"
      },
      {
        "supplier_city": "Lawrence"
      },
      {
        "supplier_city": "Elwood"
      },
      {
        "supplier_city": "Oakville"
      },
      {
        "supplier_city": "Noisy-le-Grand"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Rotterdam"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Petaluma"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Los Altos"
      },
      {
        "supplier_city": "Seoul"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Gurugram"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Bruno"
      },
      {
        "supplier_city": "Stoneham"
      },
      {
        "supplier_city": "Ahmedabad"
      },
      {
        "supplier_city": "Pune"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Torredembarra"
      },
      {
        "supplier_city": "Rome"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Belgrade"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Milan"
      },
      {
        "supplier_city": "Miami Beach"
      },
      {
        "supplier_city": "Palos Heights"
      },
      {
        "supplier_city": "Lisbon"
      },
      {
        "supplier_city": "Cairo"
      },
      {
        "supplier_city": "Greater Noida"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "East Hampton"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "Grayslake"
      },
      {
        "supplier_city": "Lake Villa"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Eden Prairie"
      },
      {
        "supplier_city": "Buda\u00f6rs"
      },
      {
        "supplier_city": "Delhi"
      },
      {
        "supplier_city": "P\u00e9cs"
      },
      {
        "supplier_city": "Bilbao"
      },
      {
        "supplier_city": "Jesen\u00edk"
      },
      {
        "supplier_city": "B\u00e9k\u00e9scsaba"
      },
      {
        "supplier_city": "Salg\u00f3tarj\u00e1n"
      },
      {
        "supplier_city": "P\u00edsek"
      },
      {
        "supplier_city": "Kolkata"
      },
      {
        "supplier_city": "Halls Head"
      },
      {
        "supplier_city": "Weiterstadt"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Bautzen"
      },
      {
        "supplier_city": "Sf\u00e2ntu Gheorghe"
      },
      {
        "supplier_city": "Payyanur"
      },
      {
        "supplier_city": "Viersen"
      },
      {
        "supplier_city": "Rumburk"
      },
      {
        "supplier_city": "Naples"
      },
      {
        "supplier_city": "San Giovanni in Persiceto"
      },
      {
        "supplier_city": "Ankara"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "\u00dast\u00ed nad Labem"
      },
      {
        "supplier_city": "\u0130zmir"
      },
      {
        "supplier_city": "Taup\u014d"
      },
      {
        "supplier_city": "D\u011b\u010d\u00edn"
      },
      {
        "supplier_city": "Nikopol"
      },
      {
        "supplier_city": "Havl\u00ed\u010dk\u016fv Brod"
      },
      {
        "supplier_city": "Naas"
      },
      {
        "supplier_city": "Ostrava"
      },
      {
        "supplier_city": "Karcag"
      },
      {
        "supplier_city": "Guarda"
      },
      {
        "supplier_city": "Figueira da Foz"
      },
      {
        "supplier_city": "Lutsk"
      },
      {
        "supplier_city": "Soure"
      },
      {
        "supplier_city": "Dundalk"
      },
      {
        "supplier_city": "Zamudio"
      },
      {
        "supplier_city": "Olomouc"
      },
      {
        "supplier_city": "X\u00e0tiva"
      },
      {
        "supplier_city": "Karlovy Vary"
      },
      {
        "supplier_city": "Doha"
      },
      {
        "supplier_city": "Galway"
      },
      {
        "supplier_city": "Santa Pola"
      },
      {
        "supplier_city": "'s-Hertogenbosch"
      },
      {
        "supplier_city": "Cesenatico"
      },
      {
        "supplier_city": "K\u0131r\u0131kkale"
      },
      {
        "supplier_city": "Pamplona"
      },
      {
        "supplier_city": "Lelystad"
      },
      {
        "supplier_city": "Gro\u00dfp\u00f6sna"
      },
      {
        "supplier_city": "Gaziantep"
      },
      {
        "supplier_city": "Teplice"
      },
      {
        "supplier_city": "Coimbra"
      },
      {
        "supplier_city": "Samsun"
      },
      {
        "supplier_city": "S\u00e1rv\u00e1r"
      },
      {
        "supplier_city": "Konya"
      },
      {
        "supplier_city": "Santa Cruz de Tenerife"
      },
      {
        "supplier_city": "Lviv"
      },
      {
        "supplier_city": "Pistoia"
      },
      {
        "supplier_city": "Balingen"
      },
      {
        "supplier_city": "Dunaharaszti"
      },
      {
        "supplier_city": "Balatonbogl\u00e1r"
      },
      {
        "supplier_city": "Livorno"
      },
      {
        "supplier_city": "Pineto"
      },
      {
        "supplier_city": "Litom\u011b\u0159ice"
      },
      {
        "supplier_city": "Portus Cale"
      },
      {
        "supplier_city": "N\u00e1chod"
      },
      {
        "supplier_city": "Jablonec nad Nisou"
      },
      {
        "supplier_city": "\u010cesk\u00e9 Bud\u011bjovice"
      },
      {
        "supplier_city": "Izmail"
      },
      {
        "supplier_city": "Baghdad"
      },
      {
        "supplier_city": "Rouen"
      },
      {
        "supplier_city": "Nagykanizsa"
      },
      {
        "supplier_city": "Adeje"
      },
      {
        "supplier_city": "K\u00fctahya"
      },
      {
        "supplier_city": "Br\u00fchl"
      },
      {
        "supplier_city": "Ballinasloe"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "Antibes"
      },
      {
        "supplier_city": "Kotara"
      },
      {
        "supplier_city": "Milan"
      },
      {
        "supplier_city": "Most"
      },
      {
        "supplier_city": "Podilsk"
      },
      {
        "supplier_city": "Wanneroo"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Alexandria"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Vigonza"
      },
      {
        "supplier_city": "Frosinone"
      },
      {
        "supplier_city": "K\u0131r\u015fehir"
      },
      {
        "supplier_city": "Aiud"
      },
      {
        "supplier_city": "Rockingham"
      },
      {
        "supplier_city": "Budapest"
      },
      {
        "supplier_city": "Guimar\u00e3es"
      },
      {
        "supplier_city": "\u00c1gueda"
      },
      {
        "supplier_city": "Zonguldak"
      },
      {
        "supplier_city": "Magnesia ad Sipylum"
      },
      {
        "supplier_city": "Ericeira"
      },
      {
        "supplier_city": "Langenhagen"
      },
      {
        "supplier_city": "Kharghar"
      },
      {
        "supplier_city": "Thane"
      },
      {
        "supplier_city": "Plze\u0148"
      },
      {
        "supplier_city": "Budakal\u00e1sz"
      },
      {
        "supplier_city": "Sunshine"
      },
      {
        "supplier_city": "Gafanha da Nazar\u00e9"
      },
      {
        "supplier_city": "Rivne"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Melitopol"
      },
      {
        "supplier_city": "Lisbon"
      },
      {
        "supplier_city": "L'Entregu"
      },
      {
        "supplier_city": "Palma"
      },
      {
        "supplier_city": "Dorog"
      },
      {
        "supplier_city": "Donostia / San Sebasti\u00e1n"
      },
      {
        "supplier_city": "Aubagne"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "Carlow"
      },
      {
        "supplier_city": "Dunedin"
      },
      {
        "supplier_city": "Nanterre"
      },
      {
        "supplier_city": "Rohtak"
      },
      {
        "supplier_city": "Getafe"
      },
      {
        "supplier_city": "Riccione"
      },
      {
        "supplier_city": "Grosseto"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Chernihiv"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "Seville"
      },
      {
        "supplier_city": "Puteaux"
      },
      {
        "supplier_city": "Padua"
      },
      {
        "supplier_city": "Mlad\u00e1 Boleslav"
      },
      {
        "supplier_city": "San Juan de Aznalfarache"
      },
      {
        "supplier_city": "Nicomedia"
      },
      {
        "supplier_city": "Chernivtsi"
      },
      {
        "supplier_city": "Hav\u00ed\u0159ov"
      },
      {
        "supplier_city": "Melilla"
      },
      {
        "supplier_city": "Mestre"
      },
      {
        "supplier_city": "Capelle aan den IJssel"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Leiria"
      },
      {
        "supplier_city": "Harlingen"
      },
      {
        "supplier_city": "U\u015fak"
      },
      {
        "supplier_city": "Bergamo"
      },
      {
        "supplier_city": "Dunakeszi"
      },
      {
        "supplier_city": "Tauranga South"
      },
      {
        "supplier_city": "Erzurum"
      },
      {
        "supplier_city": "Totana"
      },
      {
        "supplier_city": "Sanremo"
      },
      {
        "supplier_city": "Prachatice"
      },
      {
        "supplier_city": "Valencia"
      },
      {
        "supplier_city": "Krom\u011b\u0159\u00ed\u017e"
      },
      {
        "supplier_city": "Amasya"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Porto"
      },
      {
        "supplier_city": "Kherson"
      },
      {
        "supplier_city": "Kahramanmara\u015f"
      },
      {
        "supplier_city": "Metz"
      },
      {
        "supplier_city": "Melbourne Airport"
      },
      {
        "supplier_city": "Kiskunlach\u00e1za"
      },
      {
        "supplier_city": "Kirchheim unter Teck"
      },
      {
        "supplier_city": "Dos Hermanas"
      },
      {
        "supplier_city": "Mafra"
      },
      {
        "supplier_city": "Dresden"
      },
      {
        "supplier_city": "Ischia"
      },
      {
        "supplier_city": "Sneek"
      },
      {
        "supplier_city": "Deventer"
      },
      {
        "supplier_city": "Kharkiv"
      },
      {
        "supplier_city": "Chomutov"
      },
      {
        "supplier_city": "Kamp-Lintfort"
      },
      {
        "supplier_city": "Hallstadt"
      },
      {
        "supplier_city": "Kralupy nad Vltavou"
      },
      {
        "supplier_city": "Yuzhne"
      },
      {
        "supplier_city": "Campi Bisenzio"
      },
      {
        "supplier_city": "Blansko"
      },
      {
        "supplier_city": "Jind\u0159ich\u016fv Hradec"
      },
      {
        "supplier_city": "Orvault"
      },
      {
        "supplier_city": "Opava"
      },
      {
        "supplier_city": "Zaandam"
      },
      {
        "supplier_city": "Torrelavega"
      },
      {
        "supplier_city": "Burwood"
      },
      {
        "supplier_city": "Vicenza"
      },
      {
        "supplier_city": "Limbiate"
      },
      {
        "supplier_city": "Ni\u011fde"
      },
      {
        "supplier_city": "Bovenkarspel"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Los Corrales de Buelna"
      },
      {
        "supplier_city": "Algemes\u00ed"
      },
      {
        "supplier_city": "Bursa"
      },
      {
        "supplier_city": "Fr\u00fddek-M\u00edstek"
      },
      {
        "supplier_city": "Duna\u00fajv\u00e1ros"
      },
      {
        "supplier_city": "Alcoba\u00e7a"
      },
      {
        "supplier_city": "Jesolo"
      },
      {
        "supplier_city": "Baja"
      },
      {
        "supplier_city": "Suceava"
      },
      {
        "supplier_city": "Waterford"
      },
      {
        "supplier_city": "Liberec"
      },
      {
        "supplier_city": "Wexford"
      },
      {
        "supplier_city": "Szigetszentmikl\u00f3s"
      },
      {
        "supplier_city": "B\u00e2rlad"
      },
      {
        "supplier_city": "Toulouse"
      },
      {
        "supplier_city": "Tullamore"
      },
      {
        "supplier_city": "Rome"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "Paraparaumu"
      },
      {
        "supplier_city": "Hradec Kr\u00e1lov\u00e9"
      },
      {
        "supplier_city": "Gorey"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Hoogeveen"
      },
      {
        "supplier_city": "Gy\u00f6mr\u0151"
      },
      {
        "supplier_city": "Tirana"
      },
      {
        "supplier_city": "Vlaardingen"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Florence"
      },
      {
        "supplier_city": "Kramatorsk"
      },
      {
        "supplier_city": "L\u00fcneburg"
      },
      {
        "supplier_city": "Odesa"
      },
      {
        "supplier_city": "Fano"
      },
      {
        "supplier_city": "Jumilla"
      },
      {
        "supplier_city": "Palermo"
      },
      {
        "supplier_city": "Funchal"
      },
      {
        "supplier_city": "Prato"
      },
      {
        "supplier_city": "Uzhhorod"
      },
      {
        "supplier_city": "Set\u00fabal"
      },
      {
        "supplier_city": "Akureyri"
      },
      {
        "supplier_city": "Brindisi"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Malchow"
      },
      {
        "supplier_city": "Ennis"
      },
      {
        "supplier_city": "Mersin"
      },
      {
        "supplier_city": "Poltava"
      },
      {
        "supplier_city": "Walnut Creek"
      },
      {
        "supplier_city": "Debrecen"
      },
      {
        "supplier_city": "Utrera"
      },
      {
        "supplier_city": "Sz\u0151reg"
      },
      {
        "supplier_city": "Trieste"
      },
      {
        "supplier_city": "Orlov\u00e1"
      },
      {
        "supplier_city": "\u010cesk\u00e1 L\u00edpa"
      },
      {
        "supplier_city": "Kremenchuk"
      },
      {
        "supplier_city": "Brunt\u00e1l"
      },
      {
        "supplier_city": "Gy\u0151r"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "Veszpr\u00e9m"
      },
      {
        "supplier_city": "Caldas da Rainha"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Zwolle"
      },
      {
        "supplier_city": "Tekirda\u011f"
      },
      {
        "supplier_city": "Ny\u00edregyh\u00e1za"
      },
      {
        "supplier_city": "Hamburg"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Bad Windsheim"
      },
      {
        "supplier_city": "Kutn\u00e1 Hora"
      },
      {
        "supplier_city": "East Palo Alto"
      },
      {
        "supplier_city": "Edirne"
      },
      {
        "supplier_city": "Mosonmagyar\u00f3v\u00e1r"
      },
      {
        "supplier_city": "Brno"
      },
      {
        "supplier_city": "Ribeira Grande"
      },
      {
        "supplier_city": "Miskolc"
      },
      {
        "supplier_city": "Bologna"
      },
      {
        "supplier_city": "Dnipro"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Coria, C\u00e1ceres"
      },
      {
        "supplier_city": "\u00dast\u00ed nad Orlic\u00ed"
      },
      {
        "supplier_city": "Bonyh\u00e1d"
      },
      {
        "supplier_city": "Svitavy"
      },
      {
        "supplier_city": "Manama"
      },
      {
        "supplier_city": "Abu Dhabi"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Karachi"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Montpellier"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Nijmegen"
      },
      {
        "supplier_city": "Amstelveen"
      },
      {
        "supplier_city": "Rotsterhaule"
      },
      {
        "supplier_city": "Hilversum"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Nijkerk"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Alkmaar"
      },
      {
        "supplier_city": "Colijnsplaat"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Middelburg"
      },
      {
        "supplier_city": "Zeist"
      },
      {
        "supplier_city": "Heiloo"
      },
      {
        "supplier_city": "Los Altos"
      },
      {
        "supplier_city": "Newport"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Delhi"
      },
      {
        "supplier_city": "Middletown"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Menlo Park"
      },
      {
        "supplier_city": "Espoo"
      },
      {
        "supplier_city": "Helsinki"
      },
      {
        "supplier_city": "Palm Beach Gardens"
      },
      {
        "supplier_city": "West Palm Beach"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Huntsville"
      },
      {
        "supplier_city": "Spartanburg"
      },
      {
        "supplier_city": "Suzhou"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Saint Paul"
      },
      {
        "supplier_city": "Dunseith"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Redmond"
      },
      {
        "supplier_city": "Angleton"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Heroica Guaymas"
      },
      {
        "supplier_city": "Nashua"
      },
      {
        "supplier_city": "Winona"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Concord"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Beaverton"
      },
      {
        "supplier_city": "Tempe"
      },
      {
        "supplier_city": "Bayan Lepas"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Almelo"
      },
      {
        "supplier_city": "Le Plessis-Bouchard"
      },
      {
        "supplier_city": "Delray Beach"
      },
      {
        "supplier_city": "Belmont"
      },
      {
        "supplier_city": "Boca Raton"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Gothenburg"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "San Salvador"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Nashua"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Florence"
      },
      {
        "supplier_city": "Roncade"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Colombo"
      },
      {
        "supplier_city": "Monterrey"
      },
      {
        "supplier_city": "Lviv"
      },
      {
        "supplier_city": "Stamford"
      },
      {
        "supplier_city": "Skuodas"
      },
      {
        "supplier_city": "Nagpur"
      },
      {
        "supplier_city": "Casablanca"
      },
      {
        "supplier_city": "Indore"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Walnut Creek"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Karachi"
      },
      {
        "supplier_city": "Riyadh"
      },
      {
        "supplier_city": "Elgin"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "Naperville"
      },
      {
        "supplier_city": "Bergen op Zoom"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Hyderabad"
      },
      {
        "supplier_city": "Brea"
      },
      {
        "supplier_city": "McKinney"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Boonton Township"
      },
      {
        "supplier_city": "Lewes"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Egypt"
      },
      {
        "supplier_city": "Haarlem"
      },
      {
        "supplier_city": "Acy-Romance"
      },
      {
        "supplier_city": "Bayan Lepas"
      },
      {
        "supplier_city": "Castres"
      },
      {
        "supplier_city": "Klipphausen"
      },
      {
        "supplier_city": "Saku"
      },
      {
        "supplier_city": "Shimada"
      },
      {
        "supplier_city": "Meolo"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Minokamo"
      },
      {
        "supplier_city": "Anderson"
      },
      {
        "supplier_city": "Ch\u00e2telaillon-Plage"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Osaka"
      },
      {
        "supplier_city": "Bergenfield"
      },
      {
        "supplier_city": "Bangkok"
      },
      {
        "supplier_city": "Kawasaki"
      },
      {
        "supplier_city": "Rethel"
      },
      {
        "supplier_city": "Fukuoka"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Santa Ana"
      },
      {
        "supplier_city": "Hvar"
      },
      {
        "supplier_city": "Saint-\u00c9tienne"
      },
      {
        "supplier_city": "Colinas"
      },
      {
        "supplier_city": "Jo\u00e3o Pessoa"
      },
      {
        "supplier_city": "Rome"
      },
      {
        "supplier_city": "Oosterhout"
      },
      {
        "supplier_city": "Courbevoie"
      },
      {
        "supplier_city": "Lelystad"
      },
      {
        "supplier_city": "Le Thou"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "V\u00e9nissieux"
      },
      {
        "supplier_city": "Concepci\u00f3n"
      },
      {
        "supplier_city": "Arnhem"
      },
      {
        "supplier_city": "Huntsville"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Sofia"
      },
      {
        "supplier_city": "Nicosia"
      },
      {
        "supplier_city": "Riga"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "Kuwait City"
      },
      {
        "supplier_city": "Chula Vista"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Tirana"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Guatemala City"
      },
      {
        "supplier_city": "City of Brussels"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "Budapest"
      },
      {
        "supplier_city": "Rome"
      },
      {
        "supplier_city": "Z\u00fcrich"
      },
      {
        "supplier_city": "Maputo"
      },
      {
        "supplier_city": "Westmount"
      },
      {
        "supplier_city": "Tallinn"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Abu Dhabi"
      },
      {
        "supplier_city": "Belgrade"
      },
      {
        "supplier_city": "Culver City"
      },
      {
        "supplier_city": "Chuao"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Brno"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Caracas"
      },
      {
        "supplier_city": "Bend"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "Santa Monica"
      },
      {
        "supplier_city": "Jeddah"
      },
      {
        "supplier_city": "Karachi"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Rio de Janeiro"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Doha"
      },
      {
        "supplier_city": "Bogot\u00e1"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Milan"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Vilnius"
      },
      {
        "supplier_city": "Sacramento"
      },
      {
        "supplier_city": "Bangkok"
      },
      {
        "supplier_city": "Parsippany-Troy Hills"
      },
      {
        "supplier_city": "Riyadh"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Tegucigalpa"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Guayaquil"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Santiago"
      },
      {
        "supplier_city": "Stuttgart"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Varanasi"
      },
      {
        "supplier_city": "Newark"
      },
      {
        "supplier_city": "Kochi"
      },
      {
        "supplier_city": "Thrissur"
      },
      {
        "supplier_city": "Round Rock"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "The Hague"
      },
      {
        "supplier_city": "Wallingford"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Berkeley"
      },
      {
        "supplier_city": "Hinsdale"
      },
      {
        "supplier_city": "Henderson"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Corinth"
      },
      {
        "supplier_city": "Naperville"
      },
      {
        "supplier_city": "Parsippany-Troy Hills"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Independence"
      },
      {
        "supplier_city": "Dublin"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Burlingame"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "Clayton"
      },
      {
        "supplier_city": "Falmouth"
      },
      {
        "supplier_city": "Mammoth Lakes"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Smithtown"
      },
      {
        "supplier_city": "Missouri City"
      },
      {
        "supplier_city": "Vantaa"
      },
      {
        "supplier_city": "Stamford"
      },
      {
        "supplier_city": "Costa Mesa"
      },
      {
        "supplier_city": "Cointrin"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Warren Township"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "McLean"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Harvard"
      },
      {
        "supplier_city": "Riyadh"
      },
      {
        "supplier_city": "Round Rock"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "St. Louis Park"
      },
      {
        "supplier_city": "Parker"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Cypress"
      },
      {
        "supplier_city": "Great Neck"
      },
      {
        "supplier_city": "Scranton"
      },
      {
        "supplier_city": "Tysons"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Westmont"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Kirkland"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Hayward"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "Sugar Land"
      },
      {
        "supplier_city": "Brentwood"
      },
      {
        "supplier_city": "Chesapeake"
      },
      {
        "supplier_city": "Meyrin"
      },
      {
        "supplier_city": "Manhattan Beach"
      },
      {
        "supplier_city": "Lisle"
      },
      {
        "supplier_city": "Milan"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "New Rochelle"
      },
      {
        "supplier_city": "Akron"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Stone Mountain"
      },
      {
        "supplier_city": "King of Prussia"
      },
      {
        "supplier_city": "Winter Garden"
      },
      {
        "supplier_city": "Katy"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Waynesboro"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Ontario"
      },
      {
        "supplier_city": "Macquarie Park"
      },
      {
        "supplier_city": "Hanover"
      },
      {
        "supplier_city": "Cary"
      },
      {
        "supplier_city": "Fishersville"
      },
      {
        "supplier_city": "Castro Valley"
      },
      {
        "supplier_city": "Cranford"
      },
      {
        "supplier_city": "La doble p"
      },
      {
        "supplier_city": "Sandton"
      },
      {
        "supplier_city": "Sealy"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "South San Francisco"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Forest Hill"
      },
      {
        "supplier_city": "Farmington"
      },
      {
        "supplier_city": "Frederick"
      },
      {
        "supplier_city": "Downers Grove"
      },
      {
        "supplier_city": "Huntsville"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Clearwater"
      },
      {
        "supplier_city": "Pune"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Needham"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "Huntington Beach"
      },
      {
        "supplier_city": "New Delhi"
      },
      {
        "supplier_city": "Bronxville"
      },
      {
        "supplier_city": "Lisbon"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Oakbrook Terrace"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Menlo Park"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Z\u00fcrich"
      },
      {
        "supplier_city": "California"
      },
      {
        "supplier_city": "Docklands"
      },
      {
        "supplier_city": "Leesburg"
      },
      {
        "supplier_city": "Berkeley"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Kolkata"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Antwerp"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Rueil-Malmaison"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Kiryat Gat"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Agoura Hills"
      },
      {
        "supplier_city": "Kailua-Kona"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Mill Valley"
      },
      {
        "supplier_city": "Woodland"
      },
      {
        "supplier_city": "Sausalito"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Menlo Park"
      },
      {
        "supplier_city": "Belo Horizonte"
      },
      {
        "supplier_city": "Kuwait City"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Regina"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Tallahassee"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Shenzhen"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Neuilly"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Calgary"
      },
      {
        "supplier_city": "Johannesburg"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Costa Mesa"
      },
      {
        "supplier_city": "Quebec City"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Santa Monica"
      },
      {
        "supplier_city": "Lisbon"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Levallois-Perret"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Kampala"
      },
      {
        "supplier_city": "Santiago"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "Rio de Janeiro"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "The Hague"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Kigali"
      },
      {
        "supplier_city": "Edmonton"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Almaty"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Kolkata"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Dar es Salaam"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Guatemala City"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Guangzhou"
      },
      {
        "supplier_city": "Kuala Selangor"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Abu Dhabi"
      },
      {
        "supplier_city": "Lagos"
      },
      {
        "supplier_city": "Bogot\u00e1"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "Mississauga"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "Cary"
      },
      {
        "supplier_city": "West Columbia"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Mukilteo"
      },
      {
        "supplier_city": "Cestas"
      },
      {
        "supplier_city": "Longuenesse"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "Entzheim"
      },
      {
        "supplier_city": "Douarnenez"
      },
      {
        "supplier_city": "Hillsboro"
      },
      {
        "supplier_city": "Everett"
      },
      {
        "supplier_city": "Change"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Can\u00e9jan"
      },
      {
        "supplier_city": "San Ramon"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "Tempe"
      },
      {
        "supplier_city": "Endicott"
      },
      {
        "supplier_city": "Meylan"
      },
      {
        "supplier_city": "Ladera Ranch"
      },
      {
        "supplier_city": "Lake Katrine"
      },
      {
        "supplier_city": "Mount Royal"
      },
      {
        "supplier_city": "Berkeley"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Lexington"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Ridgeland"
      },
      {
        "supplier_city": "Goleta"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "Allentown"
      },
      {
        "supplier_city": "Glen Ellyn"
      },
      {
        "supplier_city": "Noida"
      },
      {
        "supplier_city": "Meudon"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "V\u00e9lizy-Villacoublay"
      },
      {
        "supplier_city": "North Brunswick"
      },
      {
        "supplier_city": "Villejust"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Bron"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Seal Beach"
      },
      {
        "supplier_city": "Rozzano"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Sandy"
      },
      {
        "supplier_city": "Orlando"
      },
      {
        "supplier_city": "Charleston"
      },
      {
        "supplier_city": "Banner Elk"
      },
      {
        "supplier_city": "Fort Worth"
      },
      {
        "supplier_city": "Bozeman"
      },
      {
        "supplier_city": "West Jefferson"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "New Providence"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "Montbonnot-Saint-Martin"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Richmond Hill"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Portsmouth"
      },
      {
        "supplier_city": "Okinawa"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Nice"
      },
      {
        "supplier_city": "Toulouse"
      },
      {
        "supplier_city": "Burleson"
      },
      {
        "supplier_city": "Spotsylvania Courthouse"
      },
      {
        "supplier_city": "Belleville"
      },
      {
        "supplier_city": "Winter Park"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Donz\u00e8re"
      },
      {
        "supplier_city": "Verona"
      },
      {
        "supplier_city": "Antwerp"
      },
      {
        "supplier_city": "Gennevilliers"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Fino Mornasco"
      },
      {
        "supplier_city": "Hultehouse"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Le Mans"
      },
      {
        "supplier_city": "Diamond Springs"
      },
      {
        "supplier_city": "Dronten"
      },
      {
        "supplier_city": "Vlaardingen"
      },
      {
        "supplier_city": "Corpus Christi"
      },
      {
        "supplier_city": "Biguglia"
      },
      {
        "supplier_city": "N\u00eemes"
      },
      {
        "supplier_city": "Argentine"
      },
      {
        "supplier_city": "Ramat Gan"
      },
      {
        "supplier_city": "Balagny-sur-Th\u00e9rain"
      },
      {
        "supplier_city": "Mansfield"
      },
      {
        "supplier_city": "Propriano"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Delft"
      },
      {
        "supplier_city": "Maastricht"
      },
      {
        "supplier_city": "West Perth"
      },
      {
        "supplier_city": "Neuhausen am Rheinfall"
      },
      {
        "supplier_city": "Lviv"
      },
      {
        "supplier_city": "Peoria"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Norcross"
      },
      {
        "supplier_city": "Valley Cottage"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Coppell"
      },
      {
        "supplier_city": "Westborough"
      },
      {
        "supplier_city": "Sunrise"
      },
      {
        "supplier_city": "Fort Collins"
      },
      {
        "supplier_city": "Jacksonville"
      },
      {
        "supplier_city": "Prosper"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Sandy"
      },
      {
        "supplier_city": "\u00c9mi\u00e9ville"
      },
      {
        "supplier_city": "Frisco"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "Angers"
      },
      {
        "supplier_city": "Arcadia"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "Osaka"
      },
      {
        "supplier_city": "Bloomington"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Great Neck"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Cupertino"
      },
      {
        "supplier_city": "Chesterbrook"
      },
      {
        "supplier_city": "Blue Ash"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "Valencia"
      },
      {
        "supplier_city": "Brockton"
      },
      {
        "supplier_city": "Nashville"
      },
      {
        "supplier_city": "Scotts Valley"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Independence"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Nancy"
      },
      {
        "supplier_city": "Belmont"
      },
      {
        "supplier_city": "Menlo Park"
      },
      {
        "supplier_city": "Kharkiv"
      },
      {
        "supplier_city": "S\u00e3o Caetano do Sul"
      },
      {
        "supplier_city": "Santiago"
      },
      {
        "supplier_city": "Sainte-Gemmes-sur-Loire"
      },
      {
        "supplier_city": "Los Alamos"
      },
      {
        "supplier_city": "Malvern"
      },
      {
        "supplier_city": "Port Townsend"
      },
      {
        "supplier_city": "Bras\u00edlia"
      },
      {
        "supplier_city": "Rosemont"
      },
      {
        "supplier_city": "Fox River Grove"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Orangeburg"
      },
      {
        "supplier_city": "Tucson"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Troy"
      },
      {
        "supplier_city": "Birmingham"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Belo Horizonte"
      },
      {
        "supplier_city": "Beavercreek"
      },
      {
        "supplier_city": "Sterling"
      },
      {
        "supplier_city": "Pointe-\u00e0-Pitre"
      },
      {
        "supplier_city": "Northville"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "San Carlos"
      },
      {
        "supplier_city": "Cincinnati"
      },
      {
        "supplier_city": "Shelby Township"
      },
      {
        "supplier_city": "Coraopolis"
      },
      {
        "supplier_city": "Poway"
      },
      {
        "supplier_city": "Harrisburg"
      },
      {
        "supplier_city": "Westchester"
      },
      {
        "supplier_city": "Arlington"
      },
      {
        "supplier_city": "Winston-Salem"
      },
      {
        "supplier_city": "City of Brussels"
      },
      {
        "supplier_city": "Kuwait City"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Bedford"
      },
      {
        "supplier_city": "Bozeman"
      },
      {
        "supplier_city": "Land O' Lakes"
      },
      {
        "supplier_city": "Culver City"
      },
      {
        "supplier_city": "Overland Park"
      },
      {
        "supplier_city": "Issy-les-Moulineaux"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Willoughby"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "Malden"
      },
      {
        "supplier_city": "Maitland"
      },
      {
        "supplier_city": "El Segundo"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Twin Peaks"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Gurugram"
      },
      {
        "supplier_city": "La doble p"
      },
      {
        "supplier_city": "Orinda"
      },
      {
        "supplier_city": "Greenville"
      },
      {
        "supplier_city": "Lewisville"
      },
      {
        "supplier_city": "Ridgecrest"
      },
      {
        "supplier_city": "Lake Mary"
      },
      {
        "supplier_city": "The Colony"
      },
      {
        "supplier_city": "Capitol Heights"
      },
      {
        "supplier_city": "Lubbock"
      },
      {
        "supplier_city": "West Linn"
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Newtown"
      },
      {
        "supplier_city": "Chandler"
      },
      {
        "supplier_city": "Middleton"
      },
      {
        "supplier_city": "Hy\u00e8res"
      },
      {
        "supplier_city": "Okemos"
      },
      {
        "supplier_city": "Conshohocken"
      },
      {
        "supplier_city": "Naperville"
      },
      {
        "supplier_city": "Casablanca"
      },
      {
        "supplier_city": "Shallotte"
      },
      {
        "supplier_city": "Evanston"
      },
      {
        "supplier_city": "Danville"
      },
      {
        "supplier_city": "Freehold Borough"
      },
      {
        "supplier_city": "Springfield"
      },
      {
        "supplier_city": "Stockton"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Vaslui"
      },
      {
        "supplier_city": "Millau"
      },
      {
        "supplier_city": "Loury"
      },
      {
        "supplier_city": "York"
      },
      {
        "supplier_city": "Colombo"
      },
      {
        "supplier_city": "Charlottesville"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Geneva"
      },
      {
        "supplier_city": "Maumee"
      },
      {
        "supplier_city": "Islamabad"
      },
      {
        "supplier_city": "Boyds"
      },
      {
        "supplier_city": "Penns Grove"
      },
      {
        "supplier_city": "Rio de Janeiro"
      },
      {
        "supplier_city": "Bangkok"
      },
      {
        "supplier_city": "Calgary"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Honolulu"
      },
      {
        "supplier_city": "La Crosse"
      },
      {
        "supplier_city": "Yulee"
      },
      {
        "supplier_city": "Auckland"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Orlando"
      },
      {
        "supplier_city": "Minsk"
      },
      {
        "supplier_city": "Hailey"
      },
      {
        "supplier_city": "Shawnee"
      },
      {
        "supplier_city": "Les Abymes"
      },
      {
        "supplier_city": "Seville"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "Nicosia"
      },
      {
        "supplier_city": "Mineola"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Downers Grove"
      },
      {
        "supplier_city": "Englewood"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Cergy"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Colorado Springs"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "Los Gatos"
      },
      {
        "supplier_city": "Groton"
      },
      {
        "supplier_city": "Holzkirchen"
      },
      {
        "supplier_city": "Nashua"
      },
      {
        "supplier_city": "Aubervilliers"
      },
      {
        "supplier_city": "Buffalo"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Pittsford"
      },
      {
        "supplier_city": "Louisville"
      },
      {
        "supplier_city": "Chesterfield"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Lowell"
      },
      {
        "supplier_city": "Union City"
      },
      {
        "supplier_city": "Boca Raton"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Tulsa"
      },
      {
        "supplier_city": "Alameda"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Mios"
      },
      {
        "supplier_city": "Sassafras"
      },
      {
        "supplier_city": "Montgomery"
      },
      {
        "supplier_city": "Westmont"
      },
      {
        "supplier_city": "Fort Lauderdale"
      },
      {
        "supplier_city": "Warwick"
      },
      {
        "supplier_city": "Riyadh"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "H\u00e9rouvillette"
      },
      {
        "supplier_city": "Katowice"
      },
      {
        "supplier_city": "Cleveland"
      },
      {
        "supplier_city": "Bridgewater Township"
      },
      {
        "supplier_city": "Annapolis Junction"
      },
      {
        "supplier_city": "Dayton"
      },
      {
        "supplier_city": "Manama"
      },
      {
        "supplier_city": "King of Prussia"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Le Barp"
      },
      {
        "supplier_city": "Wilkes-Barre"
      },
      {
        "supplier_city": "Delmar"
      },
      {
        "supplier_city": "Suwanee"
      },
      {
        "supplier_city": "Maple Grove"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "Le Haillan"
      },
      {
        "supplier_city": "Cookeville"
      },
      {
        "supplier_city": "Middletown"
      },
      {
        "supplier_city": "Golden"
      },
      {
        "supplier_city": "Arvada"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Tacoma"
      },
      {
        "supplier_city": "Amityville"
      },
      {
        "supplier_city": "Marysville"
      },
      {
        "supplier_city": "Hillsboro"
      },
      {
        "supplier_city": "Cancale"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Brookfield"
      },
      {
        "supplier_city": "Kennesaw"
      },
      {
        "supplier_city": "Albany"
      },
      {
        "supplier_city": "Albuquerque"
      },
      {
        "supplier_city": "Saginaw"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "Dublin"
      },
      {
        "supplier_city": "Gelos"
      },
      {
        "supplier_city": "Fort Worth"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Charleston"
      },
      {
        "supplier_city": "Lone Tree"
      },
      {
        "supplier_city": "Allentown"
      },
      {
        "supplier_city": "Jessup"
      },
      {
        "supplier_city": "Helsinki"
      },
      {
        "supplier_city": "Vero Beach"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Lima"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "Concord"
      },
      {
        "supplier_city": "Guatemala City"
      },
      {
        "supplier_city": "Porto"
      },
      {
        "supplier_city": "East Rutherford"
      },
      {
        "supplier_city": "Auburndale"
      },
      {
        "supplier_city": "Tarrytown"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Budapest"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Herzliya"
      },
      {
        "supplier_city": "Turku"
      },
      {
        "supplier_city": "Nantes"
      },
      {
        "supplier_city": "San Pedro Garza Garc\u00eda"
      },
      {
        "supplier_city": "Broomfield"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Truxton"
      },
      {
        "supplier_city": "Kissimmee"
      },
      {
        "supplier_city": "Unieux"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "Matoury"
      },
      {
        "supplier_city": "Tallahassee"
      },
      {
        "supplier_city": "Downey"
      },
      {
        "supplier_city": "Ch\u00e2teaubriant"
      },
      {
        "supplier_city": "Lisle"
      },
      {
        "supplier_city": "Topeka"
      },
      {
        "supplier_city": "Bentonville"
      },
      {
        "supplier_city": "Knoxville"
      },
      {
        "supplier_city": "Villa Park"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Thousand Oaks"
      },
      {
        "supplier_city": "Lowell"
      },
      {
        "supplier_city": "Treilli\u00e8res"
      },
      {
        "supplier_city": "East Rochester"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "Highland"
      },
      {
        "supplier_city": "Hanoi"
      },
      {
        "supplier_city": "Westford"
      },
      {
        "supplier_city": "Walnut Creek"
      },
      {
        "supplier_city": "Konya"
      },
      {
        "supplier_city": "Calera"
      },
      {
        "supplier_city": "Darien"
      },
      {
        "supplier_city": "San Antonio"
      },
      {
        "supplier_city": "Potsdam"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "San Rafael"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Mount Pleasant"
      },
      {
        "supplier_city": "Mississauga"
      },
      {
        "supplier_city": "Ballerup"
      },
      {
        "supplier_city": "Amman"
      },
      {
        "supplier_city": "Curtice"
      },
      {
        "supplier_city": "Park Ridge"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Al Khobar"
      },
      {
        "supplier_city": "Northwest Harwich"
      },
      {
        "supplier_city": "Destin"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Rocklin"
      },
      {
        "supplier_city": "Ern\u00e9e"
      },
      {
        "supplier_city": "Gouda"
      },
      {
        "supplier_city": "Ashburn"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Ponte Vedra Beach"
      },
      {
        "supplier_city": "Olathe"
      },
      {
        "supplier_city": "Bettendorf"
      },
      {
        "supplier_city": "Solon"
      },
      {
        "supplier_city": "Reno"
      },
      {
        "supplier_city": "Pau"
      },
      {
        "supplier_city": "Onalaska"
      },
      {
        "supplier_city": "Allen Park"
      },
      {
        "supplier_city": "Cave Creek"
      },
      {
        "supplier_city": "Westphalia"
      },
      {
        "supplier_city": "Karachi"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Lehighton"
      },
      {
        "supplier_city": "Lehi"
      },
      {
        "supplier_city": "Heillecourt"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Lake Orion"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Lincolnshire"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Winter Springs"
      },
      {
        "supplier_city": "Vista"
      },
      {
        "supplier_city": "Itasca"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Kansas City"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Omaha"
      },
      {
        "supplier_city": "Wakefield"
      },
      {
        "supplier_city": "Corvallis"
      },
      {
        "supplier_city": "Kuala Lumpur"
      },
      {
        "supplier_city": "Porto Salvo"
      },
      {
        "supplier_city": "Grand Rapids"
      },
      {
        "supplier_city": "Front Royal"
      },
      {
        "supplier_city": "Kittrell"
      },
      {
        "supplier_city": "Espoo"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "Eden Prairie"
      },
      {
        "supplier_city": "Matthews"
      },
      {
        "supplier_city": "Abu Dhabi"
      },
      {
        "supplier_city": "Marlborough"
      },
      {
        "supplier_city": "Rimini"
      },
      {
        "supplier_city": "Bogot\u00e1"
      },
      {
        "supplier_city": "Manteca"
      },
      {
        "supplier_city": "Carol Stream"
      },
      {
        "supplier_city": "Camp Hill"
      },
      {
        "supplier_city": "Salviac"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Dublin"
      },
      {
        "supplier_city": "Longmont"
      },
      {
        "supplier_city": "West Lake Hills"
      },
      {
        "supplier_city": "Dhaka"
      },
      {
        "supplier_city": "Ann Arbor"
      },
      {
        "supplier_city": "\u00c9vreux"
      },
      {
        "supplier_city": "Jeddah"
      },
      {
        "supplier_city": "Cairo"
      },
      {
        "supplier_city": "Santa Monica"
      },
      {
        "supplier_city": "Deerfield"
      },
      {
        "supplier_city": "Newport Beach"
      },
      {
        "supplier_city": "Stamford"
      },
      {
        "supplier_city": "Boise"
      },
      {
        "supplier_city": "Glen Allen"
      },
      {
        "supplier_city": "San Bruno"
      },
      {
        "supplier_city": "Dreieich"
      },
      {
        "supplier_city": "Kochi"
      },
      {
        "supplier_city": "Berwyn"
      },
      {
        "supplier_city": "Ho Chi Minh City"
      },
      {
        "supplier_city": "Calais"
      },
      {
        "supplier_city": "Medell\u00edn"
      },
      {
        "supplier_city": "Provo"
      },
      {
        "supplier_city": "Richardson"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "San Marcos"
      },
      {
        "supplier_city": "Saint-\u00c9tienne"
      },
      {
        "supplier_city": "Chesapeake"
      },
      {
        "supplier_city": "Edgewater"
      },
      {
        "supplier_city": "Johannesburg"
      },
      {
        "supplier_city": "Utrecht"
      },
      {
        "supplier_city": "Glendale"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Latham"
      },
      {
        "supplier_city": "Lebanon"
      },
      {
        "supplier_city": "Anniston"
      },
      {
        "supplier_city": "Gothenburg"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Novato"
      },
      {
        "supplier_city": "San Rafael"
      },
      {
        "supplier_city": "Reynoldsburg"
      },
      {
        "supplier_city": "Krum"
      },
      {
        "supplier_city": "Sofia"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Delhi"
      },
      {
        "supplier_city": "Sunrise"
      },
      {
        "supplier_city": "Middlebury"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "St. Louis"
      },
      {
        "supplier_city": "Pforzheim"
      },
      {
        "supplier_city": "Bentonville"
      },
      {
        "supplier_city": "Little Rock"
      },
      {
        "supplier_city": "Niagara Falls"
      },
      {
        "supplier_city": "North Little Rock"
      },
      {
        "supplier_city": "Bentelo"
      },
      {
        "supplier_city": "Brentford"
      },
      {
        "supplier_city": "Mount Airy"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Palm Harbor"
      },
      {
        "supplier_city": "Darmstadt"
      },
      {
        "supplier_city": "Tres Cantos"
      },
      {
        "supplier_city": "Teaneck"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Wayne"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Nashua"
      },
      {
        "supplier_city": "Seoul"
      },
      {
        "supplier_city": "L\u00e9dignan"
      },
      {
        "supplier_city": "Saint-Alban"
      },
      {
        "supplier_city": "Mont-de-Marsan"
      },
      {
        "supplier_city": "Oberhausbergen"
      },
      {
        "supplier_city": "Saulon-la-Chapelle"
      },
      {
        "supplier_city": "Montpellier"
      },
      {
        "supplier_city": "G\u00e9mozac"
      },
      {
        "supplier_city": "Grenoble"
      },
      {
        "supplier_city": "Lav\u00e9rune"
      },
      {
        "supplier_city": "Saint-\u00c9tienne"
      },
      {
        "supplier_city": "Juiz de Fora"
      },
      {
        "supplier_city": "Valognes"
      },
      {
        "supplier_city": "Rio das Ostras"
      },
      {
        "supplier_city": "Charqueadas"
      },
      {
        "supplier_city": "Saran"
      },
      {
        "supplier_city": "Erstein"
      },
      {
        "supplier_city": "Annemasse"
      },
      {
        "supplier_city": "Bondy"
      },
      {
        "supplier_city": "Saint-Maurice-l'Exil"
      },
      {
        "supplier_city": "Meyrargues"
      },
      {
        "supplier_city": "Igny"
      },
      {
        "supplier_city": "Cugnaux"
      },
      {
        "supplier_city": "Darlinghurst"
      },
      {
        "supplier_city": "Barberey-Saint-Sulpice"
      },
      {
        "supplier_city": "Champlay"
      },
      {
        "supplier_city": "Bresles"
      },
      {
        "supplier_city": "Puteaux"
      },
      {
        "supplier_city": "Aubagne"
      },
      {
        "supplier_city": "Noordwijk"
      },
      {
        "supplier_city": "Dammarie-les-Lys"
      },
      {
        "supplier_city": "B\u00e9ziers"
      },
      {
        "supplier_city": "Luxembourg"
      },
      {
        "supplier_city": "Crosne"
      },
      {
        "supplier_city": "Drulingen"
      },
      {
        "supplier_city": "Pontoise"
      },
      {
        "supplier_city": "Dijon"
      },
      {
        "supplier_city": "Jullouville"
      },
      {
        "supplier_city": "Kembs"
      },
      {
        "supplier_city": "Le Tampon"
      },
      {
        "supplier_city": "Saint-Germain-en-Laye"
      },
      {
        "supplier_city": "Bordeaux"
      },
      {
        "supplier_city": "Saint-Hippolyte"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Driebergen-Rijsenburg"
      },
      {
        "supplier_city": "Chabrillan"
      },
      {
        "supplier_city": "Malz\u00e9ville"
      },
      {
        "supplier_city": "Juvisy-sur-Orge"
      },
      {
        "supplier_city": "Vauhallan"
      },
      {
        "supplier_city": "Les Rousses"
      },
      {
        "supplier_city": "S\u00e8te"
      },
      {
        "supplier_city": "Toulouse"
      },
      {
        "supplier_city": "Le Bouscat"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Caen"
      },
      {
        "supplier_city": "Nogent-le-Rotrou"
      },
      {
        "supplier_city": "Thiers"
      },
      {
        "supplier_city": "Boulogne-sur-Mer"
      },
      {
        "supplier_city": "Couthenans"
      },
      {
        "supplier_city": "\u00c9cully"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Bois-d'Arcy"
      },
      {
        "supplier_city": "Eaubonne"
      },
      {
        "supplier_city": "Barjac"
      },
      {
        "supplier_city": "Amiens"
      },
      {
        "supplier_city": "N\u00eemes"
      },
      {
        "supplier_city": "La Tronche"
      },
      {
        "supplier_city": "Camon"
      },
      {
        "supplier_city": "Clermont-Ferrand"
      },
      {
        "supplier_city": "Tours"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Le Pecq"
      },
      {
        "supplier_city": "Nantes"
      },
      {
        "supplier_city": "Pau"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Pringy"
      },
      {
        "supplier_city": "Saint-Denis"
      },
      {
        "supplier_city": "Le Coudray-Montceaux"
      },
      {
        "supplier_city": "Courbevoie"
      },
      {
        "supplier_city": "Teresina"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Bangkok"
      },
      {
        "supplier_city": "Auvernaux"
      },
      {
        "supplier_city": "Marseille"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Mennecy"
      },
      {
        "supplier_city": "Oude Meer"
      },
      {
        "supplier_city": "Los Altos"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Livermore"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Tualatin"
      },
      {
        "supplier_city": "San Bruno"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Tacna"
      },
      {
        "supplier_city": "Hobro"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "San Antonio"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Ra'anana"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Auckland"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "South Yarra"
      },
      {
        "supplier_city": "Darlinghurst"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Bratislava"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Izhevsk"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Levallois-Perret"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Dresden"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Les Lilas"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "City of Brussels"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Redmond"
      },
      {
        "supplier_city": "Flower Mound"
      },
      {
        "supplier_city": "Ashburn"
      },
      {
        "supplier_city": "Richmond"
      },
      {
        "supplier_city": "Virginia Beach"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Valencia"
      },
      {
        "supplier_city": "Guatemala City"
      },
      {
        "supplier_city": "Saint Petersburg"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Orleans"
      },
      {
        "supplier_city": "Arlington"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Lausanne"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Reykjav\u00edk"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Rio de Janeiro"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Sanger"
      },
      {
        "supplier_city": "Kazincbarcika"
      },
      {
        "supplier_city": "Tuxtla Guti\u00e9rrez"
      },
      {
        "supplier_city": "Guntersville"
      },
      {
        "supplier_city": "McKinney"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Haltom City"
      },
      {
        "supplier_city": "Bangkok"
      },
      {
        "supplier_city": "Lusigny"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Centreville"
      },
      {
        "supplier_city": "Pune"
      },
      {
        "supplier_city": "Arlington"
      },
      {
        "supplier_city": "La doble p"
      },
      {
        "supplier_city": "Spring"
      },
      {
        "supplier_city": "Lampang"
      },
      {
        "supplier_city": "La Motte-Servolex"
      },
      {
        "supplier_city": "Kolkata"
      },
      {
        "supplier_city": "El Monte"
      },
      {
        "supplier_city": "Guthrie"
      },
      {
        "supplier_city": "Nashville"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Montebello"
      },
      {
        "supplier_city": "Antofagasta"
      },
      {
        "supplier_city": "Delhi"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "North Miami Beach"
      },
      {
        "supplier_city": "Marshall"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Farmington"
      },
      {
        "supplier_city": "Ho Chi Minh City"
      },
      {
        "supplier_city": "Birmingham"
      },
      {
        "supplier_city": "Paso Robles"
      },
      {
        "supplier_city": "Marseille"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Santiago"
      },
      {
        "supplier_city": "Ponca City"
      },
      {
        "supplier_city": "El Segundo"
      },
      {
        "supplier_city": "Pocatello"
      },
      {
        "supplier_city": "Fullerton"
      },
      {
        "supplier_city": "Oklahoma City"
      },
      {
        "supplier_city": "Anaheim"
      },
      {
        "supplier_city": "Milford"
      },
      {
        "supplier_city": "Desloge"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Nashua"
      },
      {
        "supplier_city": "Hanoi"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Haparanda"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "Gothenburg"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Dhaka"
      },
      {
        "supplier_city": "Helsinki"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Malm\u00f6"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Fortaleza"
      },
      {
        "supplier_city": "The Hague"
      },
      {
        "supplier_city": "Saint-Soupplets"
      },
      {
        "supplier_city": "M\u00e9rida"
      },
      {
        "supplier_city": "Marcoussis"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "Rio Branco"
      },
      {
        "supplier_city": "Sirmione"
      },
      {
        "supplier_city": "Natick"
      },
      {
        "supplier_city": "Exton"
      },
      {
        "supplier_city": "Cheval-Blanc"
      },
      {
        "supplier_city": "Valle de Bravo"
      },
      {
        "supplier_city": "Passo Fundo"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Gaziantep"
      },
      {
        "supplier_city": "Natal"
      },
      {
        "supplier_city": "Torregrotta"
      },
      {
        "supplier_city": "Reykjav\u00edk"
      },
      {
        "supplier_city": "Bel\u00e9m"
      },
      {
        "supplier_city": "Goi\u00e2nia"
      },
      {
        "supplier_city": "Itarana"
      },
      {
        "supplier_city": "Tangier"
      },
      {
        "supplier_city": "Santa Maria"
      },
      {
        "supplier_city": "Divin\u00f3polis"
      },
      {
        "supplier_city": "La Valette-du-Var"
      },
      {
        "supplier_city": "Proviseux-et-Plesnoy"
      },
      {
        "supplier_city": "Zamboanga City"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Stuttgart"
      },
      {
        "supplier_city": "Mar\u00edlia"
      },
      {
        "supplier_city": "Puebla City"
      },
      {
        "supplier_city": "Neustift im Stubaital"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Imperatriz"
      },
      {
        "supplier_city": "Panama City"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Porto"
      },
      {
        "supplier_city": "Louviers"
      },
      {
        "supplier_city": "Svendborg"
      },
      {
        "supplier_city": "Palma Campania"
      },
      {
        "supplier_city": "Aix-en-Provence"
      },
      {
        "supplier_city": "Mireval"
      },
      {
        "supplier_city": "Porto Velho"
      },
      {
        "supplier_city": "Bussum"
      },
      {
        "supplier_city": "Cape Town"
      },
      {
        "supplier_city": "Jundia\u00ed"
      },
      {
        "supplier_city": "Mogi das Cruzes"
      },
      {
        "supplier_city": "Huixquilucan"
      },
      {
        "supplier_city": "Londrina"
      },
      {
        "supplier_city": "Maputo"
      },
      {
        "supplier_city": "Narbonne"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Novo Hamburgo"
      },
      {
        "supplier_city": "Dol-de-Bretagne"
      },
      {
        "supplier_city": "Cannes"
      },
      {
        "supplier_city": "Saint-\u00c9tienne"
      },
      {
        "supplier_city": "Calabasas"
      },
      {
        "supplier_city": "Arica"
      },
      {
        "supplier_city": "Limoges"
      },
      {
        "supplier_city": "Johannesburg"
      },
      {
        "supplier_city": "Belo Horizonte"
      },
      {
        "supplier_city": "Montargis"
      },
      {
        "supplier_city": "Romainville"
      },
      {
        "supplier_city": "Bento Gon\u00e7alves"
      },
      {
        "supplier_city": "Valencia"
      },
      {
        "supplier_city": "Saumur"
      },
      {
        "supplier_city": "Amadora"
      },
      {
        "supplier_city": "Mukachevo"
      },
      {
        "supplier_city": "Roermond"
      },
      {
        "supplier_city": "Deva"
      },
      {
        "supplier_city": "Suceava"
      },
      {
        "supplier_city": "Saint-Leu-d'Esserent"
      },
      {
        "supplier_city": "Cuiab\u00e1"
      },
      {
        "supplier_city": "Vitrolles"
      },
      {
        "supplier_city": "Manhattan Beach"
      },
      {
        "supplier_city": "Resistencia"
      },
      {
        "supplier_city": "Cercedilla"
      },
      {
        "supplier_city": "Malvern"
      },
      {
        "supplier_city": "Manaus"
      },
      {
        "supplier_city": "Punta del Este"
      },
      {
        "supplier_city": "Rottenmann"
      },
      {
        "supplier_city": "One\u0219ti"
      },
      {
        "supplier_city": "Karlovac"
      },
      {
        "supplier_city": "Coimbra"
      },
      {
        "supplier_city": "Aracaju"
      },
      {
        "supplier_city": "Bad Salzuflen"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Cascais"
      },
      {
        "supplier_city": "Norco"
      },
      {
        "supplier_city": "Landivisiau"
      },
      {
        "supplier_city": "Marseille"
      },
      {
        "supplier_city": "Hy\u00e8res"
      },
      {
        "supplier_city": "Zaporizhzhia"
      },
      {
        "supplier_city": "Bremerhaven"
      },
      {
        "supplier_city": "Marab\u00e1"
      },
      {
        "supplier_city": "Split"
      },
      {
        "supplier_city": "Antalya"
      },
      {
        "supplier_city": "Saulx-les-Chartreux"
      },
      {
        "supplier_city": "Pozna\u0144"
      },
      {
        "supplier_city": "Cagnes-sur-Mer"
      },
      {
        "supplier_city": "Bogot\u00e1"
      },
      {
        "supplier_city": "Aarschot"
      },
      {
        "supplier_city": "Roquevaire"
      },
      {
        "supplier_city": "Ponte Serrada"
      },
      {
        "supplier_city": "Rio de Janeiro"
      },
      {
        "supplier_city": "Aubigny-les-Poth\u00e9es"
      },
      {
        "supplier_city": "Replonges"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "Belgrade"
      },
      {
        "supplier_city": "Porto Alegre"
      },
      {
        "supplier_city": "Port-la-Nouvelle"
      },
      {
        "supplier_city": "Cassis"
      },
      {
        "supplier_city": "Albi"
      },
      {
        "supplier_city": "Caen"
      },
      {
        "supplier_city": "La Roche-sur-Yon"
      },
      {
        "supplier_city": "Hamelin"
      },
      {
        "supplier_city": "Lausanne"
      },
      {
        "supplier_city": "Campinas"
      },
      {
        "supplier_city": "Cotia"
      },
      {
        "supplier_city": "Seville"
      },
      {
        "supplier_city": "Alexandria"
      },
      {
        "supplier_city": "Herent"
      },
      {
        "supplier_city": "San Mart\u00edn Texmelucan Municipality"
      },
      {
        "supplier_city": "Salvador"
      },
      {
        "supplier_city": "Plouvien"
      },
      {
        "supplier_city": "Teresina"
      },
      {
        "supplier_city": "Woodland"
      },
      {
        "supplier_city": "Antwerp"
      },
      {
        "supplier_city": "Toritama"
      },
      {
        "supplier_city": "La Chaux-de-Fonds"
      },
      {
        "supplier_city": "Slagharen"
      },
      {
        "supplier_city": "Curitiba"
      },
      {
        "supplier_city": "\u00c9pinal"
      },
      {
        "supplier_city": "Scala, Campania"
      },
      {
        "supplier_city": "Portopalo di Capo Passero"
      },
      {
        "supplier_city": "Nykarleby"
      },
      {
        "supplier_city": "Les Herbiers"
      },
      {
        "supplier_city": "Recife"
      },
      {
        "supplier_city": "Leipzig"
      },
      {
        "supplier_city": "Le Grand-Quevilly"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Wattwil"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "'s-Heerenberg"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Atibaia"
      },
      {
        "supplier_city": "Rouen"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Pozzuoli"
      },
      {
        "supplier_city": "Taubat\u00e9"
      },
      {
        "supplier_city": "S\u00e3o Jos\u00e9 dos Campos"
      },
      {
        "supplier_city": "Perpignan"
      },
      {
        "supplier_city": "Dillingen an der Donau"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Santo Andr\u00e9"
      },
      {
        "supplier_city": "Wetzikon"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Almere"
      },
      {
        "supplier_city": "Caxias do Sul"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Cl\u00e9ron"
      },
      {
        "supplier_city": "B\u00e9ziers"
      },
      {
        "supplier_city": "Nice"
      },
      {
        "supplier_city": "Bras\u00edlia"
      },
      {
        "supplier_city": "Pamiers"
      },
      {
        "supplier_city": "S\u00e3o Caetano do Sul"
      },
      {
        "supplier_city": "Driebergen-Rijsenburg"
      },
      {
        "supplier_city": "Juiz de Fora"
      },
      {
        "supplier_city": "Levallois-Perret"
      },
      {
        "supplier_city": "Brno"
      },
      {
        "supplier_city": "Zonguldak"
      },
      {
        "supplier_city": "Tegucigalpa"
      },
      {
        "supplier_city": "S\u00e3o Jos\u00e9 dos Pinhais"
      },
      {
        "supplier_city": "Jersey City"
      },
      {
        "supplier_city": "Cleveland"
      },
      {
        "supplier_city": "West Palm Beach"
      },
      {
        "supplier_city": "Princeton"
      },
      {
        "supplier_city": "Princeton"
      },
      {
        "supplier_city": "Princeton Junction"
      },
      {
        "supplier_city": "Scarsdale"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Long Beach"
      },
      {
        "supplier_city": "El Segundo"
      },
      {
        "supplier_city": "Scotts Valley"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Cenon"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Newton"
      },
      {
        "supplier_city": "Bellingham"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Campbell"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Alkmaar"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "Fairfield"
      },
      {
        "supplier_city": "Kingsville"
      },
      {
        "supplier_city": "Coconut Creek"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Maussane-les-Alpilles"
      },
      {
        "supplier_city": "Yonkers"
      },
      {
        "supplier_city": "Liberec"
      },
      {
        "supplier_city": "East Rutherford"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Tulancingo de Bravo"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Petah Tikva"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Noida"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "St. Thomas"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Roselle"
      },
      {
        "supplier_city": "Minnetonka"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "South San Francisco"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Garching bei M\u00fcnchen"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Hopkins"
      },
      {
        "supplier_city": "Jersey City"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "San Ramon"
      },
      {
        "supplier_city": "Palm Bay"
      },
      {
        "supplier_city": "Richardson"
      },
      {
        "supplier_city": "Elgin"
      },
      {
        "supplier_city": "Ismaning"
      },
      {
        "supplier_city": "Hauppauge"
      },
      {
        "supplier_city": "Woburn"
      },
      {
        "supplier_city": "Saint-Aubin"
      },
      {
        "supplier_city": "Westborough"
      },
      {
        "supplier_city": "Le Havre"
      },
      {
        "supplier_city": "Branchburg"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Chelmsford"
      },
      {
        "supplier_city": "Coraopolis"
      },
      {
        "supplier_city": "Tumwater"
      },
      {
        "supplier_city": "Bridgewater Township"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Danvers"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "City of Brussels"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "Balashikha"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Teaneck"
      },
      {
        "supplier_city": "Green Bay"
      },
      {
        "supplier_city": "Orange"
      },
      {
        "supplier_city": "Kalamazoo"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Rockville"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Neptune Beach"
      },
      {
        "supplier_city": "St. Louis"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Hudsonville"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "Parsippany-Troy Hills"
      },
      {
        "supplier_city": "Eden Prairie"
      },
      {
        "supplier_city": "Mason"
      },
      {
        "supplier_city": "LaBelle"
      },
      {
        "supplier_city": "Gardena"
      },
      {
        "supplier_city": "Lyndhurst"
      },
      {
        "supplier_city": "Moore Haven"
      },
      {
        "supplier_city": "Melville"
      },
      {
        "supplier_city": "Groton"
      },
      {
        "supplier_city": "Madison"
      },
      {
        "supplier_city": "Holiday"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Derwood"
      },
      {
        "supplier_city": "Hopkins"
      },
      {
        "supplier_city": "Shelton"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Westerly"
      },
      {
        "supplier_city": "High Bridge"
      },
      {
        "supplier_city": "Syosset"
      },
      {
        "supplier_city": "Grand Haven"
      },
      {
        "supplier_city": "White Plains"
      },
      {
        "supplier_city": "Pennsauken Township"
      },
      {
        "supplier_city": "Troy"
      },
      {
        "supplier_city": "Oegstgeest"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Lake Katrine"
      },
      {
        "supplier_city": "Elm Grove"
      },
      {
        "supplier_city": "Grand Rapids"
      },
      {
        "supplier_city": "Woodbury"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "St. Charles"
      },
      {
        "supplier_city": "Acton"
      },
      {
        "supplier_city": "Caesarea"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Calgary"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Noyon"
      },
      {
        "supplier_city": "N\u00eemes"
      },
      {
        "supplier_city": "Kuld\u012bga"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Guayaquil"
      },
      {
        "supplier_city": "Lindon"
      },
      {
        "supplier_city": "Vieille-Toulouse"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Brumath"
      },
      {
        "supplier_city": "Carbonne"
      },
      {
        "supplier_city": "Ivry-sur-Seine"
      },
      {
        "supplier_city": "Benidorm"
      },
      {
        "supplier_city": "S\u00e3o Jo\u00e3o del Rei"
      },
      {
        "supplier_city": "\u00c9pernay"
      },
      {
        "supplier_city": "Wangenbourg-Engenthal"
      },
      {
        "supplier_city": "Reims"
      },
      {
        "supplier_city": "Saint-Avold"
      },
      {
        "supplier_city": "Bloomington"
      },
      {
        "supplier_city": "Saint-Gilles"
      },
      {
        "supplier_city": "Calgary"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Sindelfingen"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Gimpo"
      },
      {
        "supplier_city": "Henrichemont"
      },
      {
        "supplier_city": "Ennetbaden"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "T\u00e2rgu Secuiesc"
      },
      {
        "supplier_city": "Angers"
      },
      {
        "supplier_city": "Les Abymes"
      },
      {
        "supplier_city": "Inowroc\u0142aw"
      },
      {
        "supplier_city": "Villejuif"
      },
      {
        "supplier_city": "Deva"
      },
      {
        "supplier_city": "Highland"
      },
      {
        "supplier_city": "Saint-Herblain"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Herzliya"
      },
      {
        "supplier_city": "Nice"
      },
      {
        "supplier_city": "Augusta"
      },
      {
        "supplier_city": "Florian\u00f3polis"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Kandava"
      },
      {
        "supplier_city": "Arpajon"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Colima"
      },
      {
        "supplier_city": "Helsinki"
      },
      {
        "supplier_city": "Montpellier"
      },
      {
        "supplier_city": "Mommenheim"
      },
      {
        "supplier_city": "St. Albert"
      },
      {
        "supplier_city": "Kronberg im Taunus"
      },
      {
        "supplier_city": "Breda"
      },
      {
        "supplier_city": "Lexington"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Kazan"
      },
      {
        "supplier_city": "Arras"
      },
      {
        "supplier_city": "Fontanella"
      },
      {
        "supplier_city": "Winnipeg"
      },
      {
        "supplier_city": "Rome"
      },
      {
        "supplier_city": "Brive-la-Gaillarde"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Saint-Cyr-sur-Mer"
      },
      {
        "supplier_city": "Rennes"
      },
      {
        "supplier_city": "American Fork"
      },
      {
        "supplier_city": "Bellegarde"
      },
      {
        "supplier_city": "Luxembourg"
      },
      {
        "supplier_city": "Khimki"
      },
      {
        "supplier_city": "Provo"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Hermosillo"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Bangkok"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Sumter"
      },
      {
        "supplier_city": "Eden Prairie"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Bi\u0142goraj"
      },
      {
        "supplier_city": "Cupertino"
      },
      {
        "supplier_city": "Bad Homburg vor der H\u00f6he"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Kuala Lumpur"
      },
      {
        "supplier_city": "Straubing"
      },
      {
        "supplier_city": "Leiden"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Oberursel (Taunus)"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Prosser"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Kirkland"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Cannes"
      },
      {
        "supplier_city": "Aachen"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "Auckland"
      },
      {
        "supplier_city": "Fort Worth"
      },
      {
        "supplier_city": "Challans"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Gothenburg"
      },
      {
        "supplier_city": "Walnut Creek"
      },
      {
        "supplier_city": "Walnut Creek"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Nambour"
      },
      {
        "supplier_city": "Brisbane"
      },
      {
        "supplier_city": "Oakbrook Terrace"
      },
      {
        "supplier_city": "Secaucus"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Costa Mesa"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "Calgary"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "Frisco"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Auckland"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "McLean"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Delafield"
      },
      {
        "supplier_city": "Beaverton"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Bekasi"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Berwyn"
      },
      {
        "supplier_city": "East Palo Alto"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Hazlet"
      },
      {
        "supplier_city": "Matawan"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Jersey City"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Holmdel Township"
      },
      {
        "supplier_city": "Binghamton"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "City of Brussels"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Amherst"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Anchorage"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Corning"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Poughkeepsie"
      },
      {
        "supplier_city": "Bentonville"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Buffalo"
      },
      {
        "supplier_city": "Santa Cruz"
      },
      {
        "supplier_city": "Villenave"
      },
      {
        "supplier_city": "Quincy"
      },
      {
        "supplier_city": "Udon Thani"
      },
      {
        "supplier_city": "Lima"
      },
      {
        "supplier_city": "Santa Cruz de la Sierra"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Hiroshima"
      },
      {
        "supplier_city": "Quincy-sous-S\u00e9nart"
      },
      {
        "supplier_city": "S\u00e3o Pedro do Iva\u00ed"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Netanya"
      },
      {
        "supplier_city": "Wheaton"
      },
      {
        "supplier_city": "Provo"
      },
      {
        "supplier_city": "West Jakarta"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Harvey"
      },
      {
        "supplier_city": "La Rochelle"
      },
      {
        "supplier_city": "Franklin"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Novovolynsk"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "St. Johnsbury"
      },
      {
        "supplier_city": "Petaling Jaya"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Cuyahoga Falls"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "Hazelwood"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Goussainville"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Huntington Beach"
      },
      {
        "supplier_city": "Santiago"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Spanish Fork"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Brisbane"
      },
      {
        "supplier_city": "Gilroy"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Rahway"
      },
      {
        "supplier_city": "King of Prussia"
      },
      {
        "supplier_city": "Greenwood Village"
      },
      {
        "supplier_city": "Paramus"
      },
      {
        "supplier_city": "Budapest"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Wellington"
      },
      {
        "supplier_city": "Cary"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Norristown"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Kansas City"
      },
      {
        "supplier_city": "Pocatello"
      },
      {
        "supplier_city": "Memphis"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Missouri City"
      },
      {
        "supplier_city": "Gatineau"
      },
      {
        "supplier_city": "Farmington"
      },
      {
        "supplier_city": "Hackettstown"
      },
      {
        "supplier_city": "Schaumburg"
      },
      {
        "supplier_city": "Hopkinton"
      },
      {
        "supplier_city": "Hopkinton"
      },
      {
        "supplier_city": "Corona"
      },
      {
        "supplier_city": "Grenada"
      },
      {
        "supplier_city": "Millau"
      },
      {
        "supplier_city": "Rock Hill"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "Billerica"
      },
      {
        "supplier_city": "Fair Oaks"
      },
      {
        "supplier_city": "Rodez"
      },
      {
        "supplier_city": "Gmina Stasz\u00f3w"
      },
      {
        "supplier_city": "Fort Worth"
      },
      {
        "supplier_city": "Short Hills"
      },
      {
        "supplier_city": "Tewksbury"
      },
      {
        "supplier_city": "Oklahoma City"
      },
      {
        "supplier_city": "Carrollton"
      },
      {
        "supplier_city": "Kaohsiung"
      },
      {
        "supplier_city": "Louisville"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Takapuna"
      },
      {
        "supplier_city": "Tecumseh"
      },
      {
        "supplier_city": "Addison"
      },
      {
        "supplier_city": "Spring"
      },
      {
        "supplier_city": "Ko\u0161ice"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Southlake"
      },
      {
        "supplier_city": "Saint Petersburg"
      },
      {
        "supplier_city": "Saint-Cannat"
      },
      {
        "supplier_city": "Tallinn"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Arlington"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Aix-en-Provence"
      },
      {
        "supplier_city": "Petaling Jaya"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Cincinnati"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Belmont"
      },
      {
        "supplier_city": "Gainesville"
      },
      {
        "supplier_city": "Troy"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Marietta"
      },
      {
        "supplier_city": "Schertz"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Sacramento"
      },
      {
        "supplier_city": "Combs-la-Ville"
      },
      {
        "supplier_city": "Kansas City"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Edmonton"
      },
      {
        "supplier_city": "San Antonio"
      },
      {
        "supplier_city": "Sainte-Radegonde"
      },
      {
        "supplier_city": "Annapolis"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Citrus Heights"
      },
      {
        "supplier_city": "Allouagne"
      },
      {
        "supplier_city": "Aiken"
      },
      {
        "supplier_city": "Rantoul"
      },
      {
        "supplier_city": "Kolkata"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "Dijon"
      },
      {
        "supplier_city": "Braselton"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "Vitrolles"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Fontana"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Lozinghem"
      },
      {
        "supplier_city": "Saint-Jorioz"
      },
      {
        "supplier_city": "Abha"
      },
      {
        "supplier_city": "Lafayette"
      },
      {
        "supplier_city": "Urk"
      },
      {
        "supplier_city": "Ridgeland"
      },
      {
        "supplier_city": "Cullman"
      },
      {
        "supplier_city": "Lubbock"
      },
      {
        "supplier_city": "Pringy"
      },
      {
        "supplier_city": "Veyrier-du-Lac"
      },
      {
        "supplier_city": "Tuxtla Guti\u00e9rrez"
      },
      {
        "supplier_city": "Tira"
      },
      {
        "supplier_city": "Saint-Eustache"
      },
      {
        "supplier_city": "Gatineau"
      },
      {
        "supplier_city": "Castelnaudary"
      },
      {
        "supplier_city": "Huntsville"
      },
      {
        "supplier_city": "Tlalnepantla"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "St. Petersburg"
      },
      {
        "supplier_city": "Mahwah"
      },
      {
        "supplier_city": "Dublin"
      },
      {
        "supplier_city": "Redwood"
      },
      {
        "supplier_city": "Hillsborough"
      },
      {
        "supplier_city": "Edgewood"
      },
      {
        "supplier_city": "Baltimore"
      },
      {
        "supplier_city": "Memphis"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Southfield"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Barrie"
      },
      {
        "supplier_city": "Duluth"
      },
      {
        "supplier_city": "Fort Lauderdale"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Holbrook"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Walnut"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Potomac"
      },
      {
        "supplier_city": "Mercer Island"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Des Plaines"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Naperville"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Kuala Lumpur"
      },
      {
        "supplier_city": "Noida"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Prinsenbeek"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Helmond"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "The Hague"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Clinge"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Boa Vista"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "Caxias do Sul"
      },
      {
        "supplier_city": "Glendale"
      },
      {
        "supplier_city": "Atlantic City"
      },
      {
        "supplier_city": "Tangerang"
      },
      {
        "supplier_city": "Sioux City"
      },
      {
        "supplier_city": "S\u00e3o Lu\u00eds"
      },
      {
        "supplier_city": "West Long Branch"
      },
      {
        "supplier_city": "Hamburg"
      },
      {
        "supplier_city": "East Jakarta"
      },
      {
        "supplier_city": "Miramar Beach"
      },
      {
        "supplier_city": "Myrtle Beach"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Pematangsiantar"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Duluth"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Caic\u00f3"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "Petaling Jaya"
      },
      {
        "supplier_city": "Bangkok"
      },
      {
        "supplier_city": "Tabriz"
      },
      {
        "supplier_city": "Bakersfield"
      },
      {
        "supplier_city": "Uniontown"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Recife"
      },
      {
        "supplier_city": "Cincinnati"
      },
      {
        "supplier_city": "San Carlos"
      },
      {
        "supplier_city": "Londrina"
      },
      {
        "supplier_city": "Tallahassee"
      },
      {
        "supplier_city": "Freeport"
      },
      {
        "supplier_city": "Roosendaal"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Sivas"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Chantilly"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Norman"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Jerusalem"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Concord"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Glendale"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "Culver City"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Woburn"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Sagaponack"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Chelmsford"
      },
      {
        "supplier_city": "Haifa"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Monterey Park"
      },
      {
        "supplier_city": "Redmond"
      },
      {
        "supplier_city": "Southborough"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Shakopee"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Yokneam Illit"
      },
      {
        "supplier_city": "Patna"
      },
      {
        "supplier_city": "Fort Worth"
      },
      {
        "supplier_city": "Indore"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Malappuram"
      },
      {
        "supplier_city": "Le Lamentin"
      },
      {
        "supplier_city": "Kolkata"
      },
      {
        "supplier_city": "Lucknow"
      },
      {
        "supplier_city": "Kozhikode"
      },
      {
        "supplier_city": "Delhi"
      },
      {
        "supplier_city": "Ahmedabad"
      },
      {
        "supplier_city": "New Delhi"
      },
      {
        "supplier_city": "Alwar"
      },
      {
        "supplier_city": "Hyderabad"
      },
      {
        "supplier_city": "Guwahati"
      },
      {
        "supplier_city": "Euclid"
      },
      {
        "supplier_city": "Mayfield"
      },
      {
        "supplier_city": "Cleveland"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Lagos"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Riyadh"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Cape Town"
      },
      {
        "supplier_city": "Abbeville"
      },
      {
        "supplier_city": "Dinan"
      },
      {
        "supplier_city": "Nantes"
      },
      {
        "supplier_city": "Le Grand-Quevilly"
      },
      {
        "supplier_city": "Saint-Alban"
      },
      {
        "supplier_city": "Arles"
      },
      {
        "supplier_city": "Vannes"
      },
      {
        "supplier_city": "Bois-Colombes"
      },
      {
        "supplier_city": "Cagnes-sur-Mer"
      },
      {
        "supplier_city": "Seyssinet-Pariset"
      },
      {
        "supplier_city": "Montbonnot-Saint-Martin"
      },
      {
        "supplier_city": "F\u00e9camp"
      },
      {
        "supplier_city": "Brie-Comte-Robert"
      },
      {
        "supplier_city": "Tournes"
      },
      {
        "supplier_city": "Ajaccio"
      },
      {
        "supplier_city": "Saint-Denis"
      },
      {
        "supplier_city": "Pouxeux"
      },
      {
        "supplier_city": "Meudon"
      },
      {
        "supplier_city": "Montigny-le-Bretonneux"
      },
      {
        "supplier_city": "Bar-le-Duc"
      },
      {
        "supplier_city": "Saint-Avit"
      },
      {
        "supplier_city": "Bresse-sur-Grosne"
      },
      {
        "supplier_city": "Blagnac"
      },
      {
        "supplier_city": "Pantin"
      },
      {
        "supplier_city": "Villeneuve-l\u00e8s-B\u00e9ziers"
      },
      {
        "supplier_city": "Gonfreville"
      },
      {
        "supplier_city": "Nemours"
      },
      {
        "supplier_city": "Nevers"
      },
      {
        "supplier_city": "Argentan"
      },
      {
        "supplier_city": "Thouars"
      },
      {
        "supplier_city": "Dole"
      },
      {
        "supplier_city": "Quincieux"
      },
      {
        "supplier_city": "Sca\u00ebr"
      },
      {
        "supplier_city": "Draguignan"
      },
      {
        "supplier_city": "Berck"
      },
      {
        "supplier_city": "Alfortville"
      },
      {
        "supplier_city": "Heillecourt"
      },
      {
        "supplier_city": "Avallon"
      },
      {
        "supplier_city": "Pringy"
      },
      {
        "supplier_city": "Pau"
      },
      {
        "supplier_city": "Sall\u00e8les-d'Aude"
      },
      {
        "supplier_city": "Avignon"
      },
      {
        "supplier_city": "Vichy"
      },
      {
        "supplier_city": "Rambervillers"
      },
      {
        "supplier_city": "Marans"
      },
      {
        "supplier_city": "N\u00eemes"
      },
      {
        "supplier_city": "Brest"
      },
      {
        "supplier_city": "Chevreuse"
      },
      {
        "supplier_city": "Vernouillet"
      },
      {
        "supplier_city": "Saint-Contest"
      },
      {
        "supplier_city": "Corbeil-Essonnes"
      },
      {
        "supplier_city": "S\u00e9m\u00e9ac"
      },
      {
        "supplier_city": "Brunoy"
      },
      {
        "supplier_city": "Lestrem"
      },
      {
        "supplier_city": "Amb\u00e9rieux-en-Dombes"
      },
      {
        "supplier_city": "Cergy"
      },
      {
        "supplier_city": "Clichy"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "L'Ha\u00ff-les-Roses"
      },
      {
        "supplier_city": "Bayonne"
      },
      {
        "supplier_city": "Clermont-Ferrand"
      },
      {
        "supplier_city": "Bagneux"
      },
      {
        "supplier_city": "Saint-\u00c9tienne"
      },
      {
        "supplier_city": "Saint-Vallier"
      },
      {
        "supplier_city": "Gournay-sur-Aronde"
      },
      {
        "supplier_city": "Agneaux"
      },
      {
        "supplier_city": "Derval"
      },
      {
        "supplier_city": "Valence"
      },
      {
        "supplier_city": "Paray-le-Monial"
      },
      {
        "supplier_city": "Dainville"
      },
      {
        "supplier_city": "Saint-Nabord"
      },
      {
        "supplier_city": "Tlaquepaque"
      },
      {
        "supplier_city": "Annonay"
      },
      {
        "supplier_city": "Montauroux"
      },
      {
        "supplier_city": "La Valette-du-Var"
      },
      {
        "supplier_city": "Ludres"
      },
      {
        "supplier_city": "Les Abymes"
      },
      {
        "supplier_city": "Mont-de-Marsan"
      },
      {
        "supplier_city": "Rotterdam"
      },
      {
        "supplier_city": "Saint-Affrique"
      },
      {
        "supplier_city": "Le Cr\u00e8s"
      },
      {
        "supplier_city": "Soings-en-Sologne"
      },
      {
        "supplier_city": "Toulouse"
      },
      {
        "supplier_city": "S\u00e9lestat"
      },
      {
        "supplier_city": "Haguenau"
      },
      {
        "supplier_city": "Chandon"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "La Chapelle-Saint-Luc"
      },
      {
        "supplier_city": "Naucalpan de Ju\u00e1rez Municipality"
      },
      {
        "supplier_city": "Le Creusot"
      },
      {
        "supplier_city": "Perpignan"
      },
      {
        "supplier_city": "Vinon-sur-Verdon"
      },
      {
        "supplier_city": "Roanne"
      },
      {
        "supplier_city": "Levallois-Perret"
      },
      {
        "supplier_city": "Pontoise"
      },
      {
        "supplier_city": "Annemasse"
      },
      {
        "supplier_city": "Chartres-de-Bretagne"
      },
      {
        "supplier_city": "Belfort"
      },
      {
        "supplier_city": "Mont\u00e9l\u00e9ger"
      },
      {
        "supplier_city": "Compi\u00e8gne"
      },
      {
        "supplier_city": "\u00c9lancourt"
      },
      {
        "supplier_city": "\u00c9pinal"
      },
      {
        "supplier_city": "Gennevilliers"
      },
      {
        "supplier_city": "Chamb\u00e9ry"
      },
      {
        "supplier_city": "Aurillac"
      },
      {
        "supplier_city": "Tlalnepantla"
      },
      {
        "supplier_city": "Dinard"
      },
      {
        "supplier_city": "Saint-Ouen-sur-Seine"
      },
      {
        "supplier_city": "\u00c9tampes"
      },
      {
        "supplier_city": "Turckheim"
      },
      {
        "supplier_city": "Yerres"
      },
      {
        "supplier_city": "Libourne"
      },
      {
        "supplier_city": "L'Isle-d'Abeau"
      },
      {
        "supplier_city": "Haisnes"
      },
      {
        "supplier_city": "Brignais"
      },
      {
        "supplier_city": "Al\u00e8s"
      },
      {
        "supplier_city": "Riom"
      },
      {
        "supplier_city": "Nozay"
      },
      {
        "supplier_city": "Saint-Clair-sur-Epte"
      },
      {
        "supplier_city": "Stains"
      },
      {
        "supplier_city": "Beuvry"
      },
      {
        "supplier_city": "Troyes"
      },
      {
        "supplier_city": "Vesoul"
      },
      {
        "supplier_city": "Amb\u00e9rieu-en-Bugey"
      },
      {
        "supplier_city": "Longwy"
      },
      {
        "supplier_city": "Gap"
      },
      {
        "supplier_city": "La Mulati\u00e8re"
      },
      {
        "supplier_city": "Saint-Herblain"
      },
      {
        "supplier_city": "Arras"
      },
      {
        "supplier_city": "\u00c9vreux"
      },
      {
        "supplier_city": "Vertou"
      },
      {
        "supplier_city": "Soissons"
      },
      {
        "supplier_city": "Volx"
      },
      {
        "supplier_city": "Bennwihr"
      },
      {
        "supplier_city": "Argenton-sur-Creuse"
      },
      {
        "supplier_city": "Bergerac"
      },
      {
        "supplier_city": "Arcachon"
      },
      {
        "supplier_city": "Longuenesse"
      },
      {
        "supplier_city": "Martignat"
      },
      {
        "supplier_city": "B\u00e9ziers"
      },
      {
        "supplier_city": "Puyloubier"
      },
      {
        "supplier_city": "Fos-sur-Mer"
      },
      {
        "supplier_city": "Massy"
      },
      {
        "supplier_city": "Issy-les-Moulineaux"
      },
      {
        "supplier_city": "Champ-le-Duc"
      },
      {
        "supplier_city": "Chazelles"
      },
      {
        "supplier_city": "Schiltigheim"
      },
      {
        "supplier_city": "Cerville"
      },
      {
        "supplier_city": "Montech"
      },
      {
        "supplier_city": "Locmin\u00e9"
      },
      {
        "supplier_city": "Saint-Priest"
      },
      {
        "supplier_city": "Villeneuve-la-Garenne"
      },
      {
        "supplier_city": "Thorigny-sur-Marne"
      },
      {
        "supplier_city": "Savigny-le-Temple"
      },
      {
        "supplier_city": "Montigny-l\u00e8s-Cormeilles"
      },
      {
        "supplier_city": "Morlaix"
      },
      {
        "supplier_city": "Saint-Amand-Montrond"
      },
      {
        "supplier_city": "Fresnes"
      },
      {
        "supplier_city": "Illzach"
      },
      {
        "supplier_city": "\u00c9pinay-sur-Seine"
      },
      {
        "supplier_city": "Romilly-sur-Seine"
      },
      {
        "supplier_city": "Avion"
      },
      {
        "supplier_city": "Gaillon-sur-Montcient"
      },
      {
        "supplier_city": "Saint-Michel-sur-Orge"
      },
      {
        "supplier_city": "Montceau-les-Mines"
      },
      {
        "supplier_city": "Bonn"
      },
      {
        "supplier_city": "Ploeren"
      },
      {
        "supplier_city": "Malissard"
      },
      {
        "supplier_city": "Angers"
      },
      {
        "supplier_city": "Migennes"
      },
      {
        "supplier_city": "Avranches"
      },
      {
        "supplier_city": "B\u00e8gles"
      },
      {
        "supplier_city": "Nangis"
      },
      {
        "supplier_city": "La Fresnais"
      },
      {
        "supplier_city": "Cosnes-et-Romain"
      },
      {
        "supplier_city": "Niort"
      },
      {
        "supplier_city": "Laneuveville-devant-Nancy"
      },
      {
        "supplier_city": "L'Arbresle"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Neufch\u00e2teau"
      },
      {
        "supplier_city": "Marmande"
      },
      {
        "supplier_city": "Vierzon"
      },
      {
        "supplier_city": "Lambesc"
      },
      {
        "supplier_city": "Domont"
      },
      {
        "supplier_city": "Velles"
      },
      {
        "supplier_city": "Aubagne"
      },
      {
        "supplier_city": "Annezin"
      },
      {
        "supplier_city": "Grasse"
      },
      {
        "supplier_city": "Bagnolet"
      },
      {
        "supplier_city": "Beauvais"
      },
      {
        "supplier_city": "Foix"
      },
      {
        "supplier_city": "Colombes"
      },
      {
        "supplier_city": "Cormontreuil"
      },
      {
        "supplier_city": "Calais"
      },
      {
        "supplier_city": "B\u00e9thune"
      },
      {
        "supplier_city": "Rousset"
      },
      {
        "supplier_city": "Daix"
      },
      {
        "supplier_city": "Orvault"
      },
      {
        "supplier_city": "Vindecy"
      },
      {
        "supplier_city": "Saint-Gaudens"
      },
      {
        "supplier_city": "Manosque"
      },
      {
        "supplier_city": "Pusignan"
      },
      {
        "supplier_city": "Gauchy"
      },
      {
        "supplier_city": "East Jakarta"
      },
      {
        "supplier_city": "Grand-Champ"
      },
      {
        "supplier_city": "Pontault-Combault"
      },
      {
        "supplier_city": "Chasseneuil-du-Poitou"
      },
      {
        "supplier_city": "Reims"
      },
      {
        "supplier_city": "Romenay"
      },
      {
        "supplier_city": "Isneauville"
      },
      {
        "supplier_city": "Sainte-Adresse"
      },
      {
        "supplier_city": "Agde"
      },
      {
        "supplier_city": "Chocques"
      },
      {
        "supplier_city": "Aydoilles"
      },
      {
        "supplier_city": "Bessi\u00e8res"
      },
      {
        "supplier_city": "La Baule-Escoublac"
      },
      {
        "supplier_city": "Aix-en-Provence"
      },
      {
        "supplier_city": "Charleville-M\u00e9zi\u00e8res"
      },
      {
        "supplier_city": "Bourg-en-Bresse"
      },
      {
        "supplier_city": "Tersanne"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Saint-Andr\u00e9-de-Seignanx"
      },
      {
        "supplier_city": "Saint-Illiers-la-Ville"
      },
      {
        "supplier_city": "Trouville-sur-Mer"
      },
      {
        "supplier_city": "Florange"
      },
      {
        "supplier_city": "Toulon"
      },
      {
        "supplier_city": "Lagorce"
      },
      {
        "supplier_city": "Saint-Omer"
      },
      {
        "supplier_city": "Carvin"
      },
      {
        "supplier_city": "Chartres"
      },
      {
        "supplier_city": "Tours"
      },
      {
        "supplier_city": "Nancy"
      },
      {
        "supplier_city": "Montereau-Fault-Yonne"
      },
      {
        "supplier_city": "Yzeure"
      },
      {
        "supplier_city": "Aubusson"
      },
      {
        "supplier_city": "Vallauris"
      },
      {
        "supplier_city": "Chailly-en-Brie"
      },
      {
        "supplier_city": "Hingham"
      },
      {
        "supplier_city": "Coulommiers"
      },
      {
        "supplier_city": "Taverny"
      },
      {
        "supplier_city": "Montargis"
      },
      {
        "supplier_city": "Villeneuve-le-Roi"
      },
      {
        "supplier_city": "Douvrin"
      },
      {
        "supplier_city": "Champigny-sur-Marne"
      },
      {
        "supplier_city": "Chantilly"
      },
      {
        "supplier_city": "Caudan"
      },
      {
        "supplier_city": "Ch\u00e2tellerault"
      },
      {
        "supplier_city": "Villemomble"
      },
      {
        "supplier_city": "M\u00e2con"
      },
      {
        "supplier_city": "Ivry-sur-Seine"
      },
      {
        "supplier_city": "Rives"
      },
      {
        "supplier_city": "Mulhouse"
      },
      {
        "supplier_city": "Bell\u00eame"
      },
      {
        "supplier_city": "Le Castellet"
      },
      {
        "supplier_city": "Rognac"
      },
      {
        "supplier_city": "La Tour-du-Pin"
      },
      {
        "supplier_city": "Eyragues"
      },
      {
        "supplier_city": "Chamali\u00e8res"
      },
      {
        "supplier_city": "Friville-Escarbotin"
      },
      {
        "supplier_city": "Lure"
      },
      {
        "supplier_city": "Montmorillon"
      },
      {
        "supplier_city": "Fr\u00e9pillon"
      },
      {
        "supplier_city": "Jouy-en-Josas"
      },
      {
        "supplier_city": "Alen\u00e7on"
      },
      {
        "supplier_city": "La Tour-d'Aigues"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Cahors"
      },
      {
        "supplier_city": "Castres"
      },
      {
        "supplier_city": "Auxerre"
      },
      {
        "supplier_city": "Villeurbanne"
      },
      {
        "supplier_city": "Montoir-de-Bretagne"
      },
      {
        "supplier_city": "Saint-Junien"
      },
      {
        "supplier_city": "Granville"
      },
      {
        "supplier_city": "Brignoles"
      },
      {
        "supplier_city": "Nice"
      },
      {
        "supplier_city": "Saint-Quentin"
      },
      {
        "supplier_city": "Paron"
      },
      {
        "supplier_city": "Roye"
      },
      {
        "supplier_city": "Saint-Martin-de-Crau"
      },
      {
        "supplier_city": "Bill\u00e8re"
      },
      {
        "supplier_city": "Bolbec"
      },
      {
        "supplier_city": "Roussines"
      },
      {
        "supplier_city": "Le Cannet"
      },
      {
        "supplier_city": "Kingersheim"
      },
      {
        "supplier_city": "Tournefeuille"
      },
      {
        "supplier_city": "Holtzheim"
      },
      {
        "supplier_city": "Chaufour-l\u00e8s-Bonni\u00e8res"
      },
      {
        "supplier_city": "Antibes"
      },
      {
        "supplier_city": "Tarbes"
      },
      {
        "supplier_city": "Saintes"
      },
      {
        "supplier_city": "Moulins"
      },
      {
        "supplier_city": "Ahuy"
      },
      {
        "supplier_city": "L'Isle-d'Espagnac"
      },
      {
        "supplier_city": "Auros"
      },
      {
        "supplier_city": "Persan"
      },
      {
        "supplier_city": "La M\u00e9zi\u00e8re"
      },
      {
        "supplier_city": "Renage"
      },
      {
        "supplier_city": "Cavaillon"
      },
      {
        "supplier_city": "Limonest"
      },
      {
        "supplier_city": "Montpellier"
      },
      {
        "supplier_city": "Vienne"
      },
      {
        "supplier_city": "Avon"
      },
      {
        "supplier_city": "Issoudun"
      },
      {
        "supplier_city": "Arques"
      },
      {
        "supplier_city": "Saint-Jacques-de-la-Lande"
      },
      {
        "supplier_city": "Mont-Saint-Aignan"
      },
      {
        "supplier_city": "Saint-Malo"
      },
      {
        "supplier_city": "Carpentras"
      },
      {
        "supplier_city": "Trappes"
      },
      {
        "supplier_city": "Le Havre"
      },
      {
        "supplier_city": "Laon"
      },
      {
        "supplier_city": "\u00c9pernay"
      },
      {
        "supplier_city": "Chassieu"
      },
      {
        "supplier_city": "Mont\u00e9lier"
      },
      {
        "supplier_city": "Longjumeau"
      },
      {
        "supplier_city": "Ploufragan"
      },
      {
        "supplier_city": "Cesson-S\u00e9vign\u00e9"
      },
      {
        "supplier_city": "La Roche-Blanche"
      },
      {
        "supplier_city": "Guyancourt"
      },
      {
        "supplier_city": "Villeneuve-la-Comptal"
      },
      {
        "supplier_city": "Le Puy-en-Velay"
      },
      {
        "supplier_city": "Saint-Cyr-sur-Mer"
      },
      {
        "supplier_city": "Campbon"
      },
      {
        "supplier_city": "Rouen"
      },
      {
        "supplier_city": "Pont-\u00e0-Mousson"
      },
      {
        "supplier_city": "Aubi\u00e8re"
      },
      {
        "supplier_city": "Dijon"
      },
      {
        "supplier_city": "Venthon"
      },
      {
        "supplier_city": "Boulogne-sur-Mer"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Charleval"
      },
      {
        "supplier_city": "Gatti\u00e8res"
      },
      {
        "supplier_city": "V\u00e9nissieux"
      },
      {
        "supplier_city": "Lapugnoy"
      },
      {
        "supplier_city": "Saint-Cyr-l'\u00c9cole"
      },
      {
        "supplier_city": "Arcueil"
      },
      {
        "supplier_city": "Versailles"
      },
      {
        "supplier_city": "Dol-de-Bretagne"
      },
      {
        "supplier_city": "Lens"
      },
      {
        "supplier_city": "Metz"
      },
      {
        "supplier_city": "Saint-Brieuc"
      },
      {
        "supplier_city": "Lannion"
      },
      {
        "supplier_city": "Donges"
      },
      {
        "supplier_city": "Montb\u00e9liard"
      },
      {
        "supplier_city": "La Rochelle"
      },
      {
        "supplier_city": "Carcassonne"
      },
      {
        "supplier_city": "Autun"
      },
      {
        "supplier_city": "Castelnau-le-Lez"
      },
      {
        "supplier_city": "Aubenas"
      },
      {
        "supplier_city": "Saint-Jean-de-Braye"
      },
      {
        "supplier_city": "Montlu\u00e7on"
      },
      {
        "supplier_city": "Champforgeuil"
      },
      {
        "supplier_city": "Chaumont"
      },
      {
        "supplier_city": "Agen"
      },
      {
        "supplier_city": "Frontignan"
      },
      {
        "supplier_city": "Quimperl\u00e9"
      },
      {
        "supplier_city": "Estrablin"
      },
      {
        "supplier_city": "Cernay"
      },
      {
        "supplier_city": "Meaux"
      },
      {
        "supplier_city": "Lons-le-Saunier"
      },
      {
        "supplier_city": "Les Loges-en-Josas"
      },
      {
        "supplier_city": "Fayence"
      },
      {
        "supplier_city": "Rebreuve-sur-Canche"
      },
      {
        "supplier_city": "Sarreguemines"
      },
      {
        "supplier_city": "Anglet"
      },
      {
        "supplier_city": "Verdun"
      },
      {
        "supplier_city": "Melun"
      },
      {
        "supplier_city": "Champs-sur-Marne"
      },
      {
        "supplier_city": "Saint-Georges-de-Reneins"
      },
      {
        "supplier_city": "Saint-Dizier"
      },
      {
        "supplier_city": "Cenon"
      },
      {
        "supplier_city": "Sainte-Foy-de-Longas"
      },
      {
        "supplier_city": "Millau"
      },
      {
        "supplier_city": "Apt"
      },
      {
        "supplier_city": "Langon"
      },
      {
        "supplier_city": "Mantes-la-Ville"
      },
      {
        "supplier_city": "Amiens"
      },
      {
        "supplier_city": "Caen"
      },
      {
        "supplier_city": "Albi"
      },
      {
        "supplier_city": "Le Teil"
      },
      {
        "supplier_city": "Sainte-Menehould"
      },
      {
        "supplier_city": "Bois-Guillaume"
      },
      {
        "supplier_city": "Cannes"
      },
      {
        "supplier_city": "Besan\u00e7on"
      },
      {
        "supplier_city": "Puteaux"
      },
      {
        "supplier_city": "Rochecorbon"
      },
      {
        "supplier_city": "Mundolsheim"
      },
      {
        "supplier_city": "Rodez"
      },
      {
        "supplier_city": "Firminy"
      },
      {
        "supplier_city": "Meylan"
      },
      {
        "supplier_city": "P\u00e9rigueux"
      },
      {
        "supplier_city": "Quimper"
      },
      {
        "supplier_city": "Capbreton"
      },
      {
        "supplier_city": "Decazeville"
      },
      {
        "supplier_city": "Saint-L\u00f4-d'Ourville"
      },
      {
        "supplier_city": "Yvetot"
      },
      {
        "supplier_city": "Blois"
      },
      {
        "supplier_city": "Br\u00e9tigny-sur-Orge"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "Sailly-sur-la-Lys"
      },
      {
        "supplier_city": "Tulle"
      },
      {
        "supplier_city": "Crissey"
      },
      {
        "supplier_city": "Avrill\u00e9"
      },
      {
        "supplier_city": "Saint-Maur"
      },
      {
        "supplier_city": "Rennes"
      },
      {
        "supplier_city": "Laval"
      },
      {
        "supplier_city": "Thionville"
      },
      {
        "supplier_city": "L'Isle-sur-la-Sorgue"
      },
      {
        "supplier_city": "Germigny-sous-Coulombs"
      },
      {
        "supplier_city": "Canteleu"
      },
      {
        "supplier_city": "Lamorlaye"
      },
      {
        "supplier_city": "Chicopee"
      },
      {
        "supplier_city": "Glisy"
      },
      {
        "supplier_city": "Bormes-les-Mimosas"
      },
      {
        "supplier_city": "Gu\u00e9ret"
      },
      {
        "supplier_city": "La Ravoire"
      },
      {
        "supplier_city": "Joigny"
      },
      {
        "supplier_city": "Fontainebleau"
      },
      {
        "supplier_city": "Saint-Martin-Boulogne"
      },
      {
        "supplier_city": "Limoges"
      },
      {
        "supplier_city": "Ugine"
      },
      {
        "supplier_city": "Dax"
      },
      {
        "supplier_city": "Croissy-Beaubourg"
      },
      {
        "supplier_city": "Embrun"
      },
      {
        "supplier_city": "Saint-\u00c9tienne-de-Montluc"
      },
      {
        "supplier_city": "Genay, Rh\u00f4ne"
      },
      {
        "supplier_city": "Magnanville"
      },
      {
        "supplier_city": "Fauville"
      },
      {
        "supplier_city": "Boussy-Saint-Antoine"
      },
      {
        "supplier_city": "Montfort-sur-Meu"
      },
      {
        "supplier_city": "La Roche-sur-Yon"
      },
      {
        "supplier_city": "Montivilliers"
      },
      {
        "supplier_city": "Tergnier"
      },
      {
        "supplier_city": "Narbonne"
      },
      {
        "supplier_city": "Chabeuil"
      },
      {
        "supplier_city": "Grenoble"
      },
      {
        "supplier_city": "Boulogne-Billancourt"
      },
      {
        "supplier_city": "Digne-les-Bains"
      },
      {
        "supplier_city": "Montreuil"
      },
      {
        "supplier_city": "Montauban"
      },
      {
        "supplier_city": "Barentin"
      },
      {
        "supplier_city": "Brive-la-Gaillarde"
      },
      {
        "supplier_city": "Courbevoie"
      },
      {
        "supplier_city": "Palaiseau"
      },
      {
        "supplier_city": "Everett"
      },
      {
        "supplier_city": "Saint-Jeannet"
      },
      {
        "supplier_city": "Nanterre"
      },
      {
        "supplier_city": "Miserey"
      },
      {
        "supplier_city": "Juvisy-sur-Orge"
      },
      {
        "supplier_city": "Auch"
      },
      {
        "supplier_city": "Orange"
      },
      {
        "supplier_city": "Le Faou\u00ebt"
      },
      {
        "supplier_city": "Clisson"
      },
      {
        "supplier_city": "Le Muy"
      },
      {
        "supplier_city": "Peyrolles-en-Provence"
      },
      {
        "supplier_city": "Strasbourg"
      },
      {
        "supplier_city": "Billy-Berclau"
      },
      {
        "supplier_city": "Mon\u00e9teau"
      },
      {
        "supplier_city": "Palleau"
      },
      {
        "supplier_city": "Marseille"
      },
      {
        "supplier_city": "Saint-Cyr-sur-Loire"
      },
      {
        "supplier_city": "Creil"
      },
      {
        "supplier_city": "Saint-Leu-d'Esserent"
      },
      {
        "supplier_city": "Villejuif"
      },
      {
        "supplier_city": "Trois-Fontaines-l'Abbaye"
      },
      {
        "supplier_city": "Choisy-le-Roi"
      },
      {
        "supplier_city": "Le Bouscat"
      },
      {
        "supplier_city": "Poitiers"
      },
      {
        "supplier_city": "Obergailbach"
      },
      {
        "supplier_city": "La Francheville"
      },
      {
        "supplier_city": "Lieusaint"
      },
      {
        "supplier_city": "Sanary-sur-Mer"
      },
      {
        "supplier_city": "Surg\u00e8res"
      },
      {
        "supplier_city": "Villiers-le-Bel"
      },
      {
        "supplier_city": "Le V\u00e9sinet"
      },
      {
        "supplier_city": "La Chapelle-Saint-Mesmin"
      },
      {
        "supplier_city": "Pontarlier"
      },
      {
        "supplier_city": "S\u00e8vres"
      },
      {
        "supplier_city": "Sevran"
      },
      {
        "supplier_city": "Aimargues"
      },
      {
        "supplier_city": "Le Mans"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Recife"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Lincoln"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Milan"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Carpinteria"
      },
      {
        "supplier_city": "Vitoria"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Orlando"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Graz"
      },
      {
        "supplier_city": "Vaals"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Omaha"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Chiasso"
      },
      {
        "supplier_city": "Longmont"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Bloomington"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Kirkland"
      },
      {
        "supplier_city": "Manassas"
      },
      {
        "supplier_city": "Shenzhen"
      },
      {
        "supplier_city": "Meridian"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "Allen"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Muar"
      },
      {
        "supplier_city": "Boise"
      },
      {
        "supplier_city": "Xi'an"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "Lehi"
      },
      {
        "supplier_city": "Folsom"
      },
      {
        "supplier_city": "Hyderabad"
      },
      {
        "supplier_city": "Gainesville"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Taichung"
      },
      {
        "supplier_city": "Nampa"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Taipei"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Beaverton"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Fort Collins"
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Round Rock"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Grand Forks"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Colombo"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Kuala Lumpur"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Rye"
      },
      {
        "supplier_city": "Rye Brook"
      },
      {
        "supplier_city": "Bogot\u00e1"
      },
      {
        "supplier_city": "Montevideo"
      },
      {
        "supplier_city": "Centurion"
      },
      {
        "supplier_city": "Muscat"
      },
      {
        "supplier_city": "Beaumont-l\u00e8s-Valence"
      },
      {
        "supplier_city": "Lima"
      },
      {
        "supplier_city": "Las Condes"
      },
      {
        "supplier_city": "Tegucigalpa"
      },
      {
        "supplier_city": "Milan"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Bilbao"
      },
      {
        "supplier_city": "San Salvador"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Oviedo"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Petah Tikva"
      },
      {
        "supplier_city": "Palma"
      },
      {
        "supplier_city": "Dar es Salaam"
      },
      {
        "supplier_city": "C\u00f3rdoba"
      },
      {
        "supplier_city": "Santo Domingo"
      },
      {
        "supplier_city": "Belo Horizonte"
      },
      {
        "supplier_city": "Santander"
      },
      {
        "supplier_city": "Ribeir\u00e3o Preto"
      },
      {
        "supplier_city": "Seville"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "Cape Town"
      },
      {
        "supplier_city": "Valencia"
      },
      {
        "supplier_city": "Quito"
      },
      {
        "supplier_city": "Guatemala City"
      },
      {
        "supplier_city": "Taichung"
      },
      {
        "supplier_city": "Panama City"
      },
      {
        "supplier_city": "Lusaka"
      },
      {
        "supplier_city": "Donostia / San Sebasti\u00e1n"
      },
      {
        "supplier_city": "San Borja"
      },
      {
        "supplier_city": "Nairobi"
      },
      {
        "supplier_city": "Cairo"
      },
      {
        "supplier_city": "Rio de Janeiro"
      },
      {
        "supplier_city": "Asunci\u00f3n"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Barcelona"
      },
      {
        "supplier_city": "Santiago"
      },
      {
        "supplier_city": "Fanwood"
      },
      {
        "supplier_city": "Johannesburg"
      },
      {
        "supplier_city": "Beirut"
      },
      {
        "supplier_city": "Jersey City"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Lisbon"
      },
      {
        "supplier_city": "Guadalajara"
      },
      {
        "supplier_city": "Casablanca"
      },
      {
        "supplier_city": "Santa Cruz de la Sierra"
      },
      {
        "supplier_city": "Rosario"
      },
      {
        "supplier_city": "Murcia"
      },
      {
        "supplier_city": "La doble p"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Port Louis"
      },
      {
        "supplier_city": "Kuwait City"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Elkridge"
      },
      {
        "supplier_city": "Le Lamentin"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Harvard"
      },
      {
        "supplier_city": "Bogot\u00e1"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "McLean"
      },
      {
        "supplier_city": "Campbell"
      },
      {
        "supplier_city": "Montevideo"
      },
      {
        "supplier_city": "Jaipur"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "North Bay Village"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Milwaukee"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Kolkata"
      },
      {
        "supplier_city": "Long Beach"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Forio"
      },
      {
        "supplier_city": "Frauenfeld"
      },
      {
        "supplier_city": "Lausanne"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Zug"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Riga"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Rome"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Herzliya"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Skellefte\u00e5"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Whitewater"
      },
      {
        "supplier_city": "Rockville"
      },
      {
        "supplier_city": "Bowie"
      },
      {
        "supplier_city": "Terrell"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Paulista"
      },
      {
        "supplier_city": "Gadsden"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Medford"
      },
      {
        "supplier_city": "Ankara"
      },
      {
        "supplier_city": "Pathum Thani"
      },
      {
        "supplier_city": "Tecumseh"
      },
      {
        "supplier_city": "Chesapeake"
      },
      {
        "supplier_city": "Tulsa"
      },
      {
        "supplier_city": "Grand Rapids"
      },
      {
        "supplier_city": "Horsham"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Kennebunk"
      },
      {
        "supplier_city": "Duluth"
      },
      {
        "supplier_city": "New Kensington"
      },
      {
        "supplier_city": "Alexandria"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Leland"
      },
      {
        "supplier_city": "El Segundo"
      },
      {
        "supplier_city": "Marysville"
      },
      {
        "supplier_city": "Hillsdale"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Leeuwarden"
      },
      {
        "supplier_city": "Noblesville"
      },
      {
        "supplier_city": "Rio Grande"
      },
      {
        "supplier_city": "Oak Park"
      },
      {
        "supplier_city": "Duque de Caxias"
      },
      {
        "supplier_city": "Canton"
      },
      {
        "supplier_city": "Blumenau"
      },
      {
        "supplier_city": "Burbank"
      },
      {
        "supplier_city": "Stansbury Park"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Point Pleasant"
      },
      {
        "supplier_city": "Clearwater"
      },
      {
        "supplier_city": "Manaus"
      },
      {
        "supplier_city": "Jacksonville"
      },
      {
        "supplier_city": "Chandler"
      },
      {
        "supplier_city": "Tempe"
      },
      {
        "supplier_city": "Hendersonville"
      },
      {
        "supplier_city": "Quincy"
      },
      {
        "supplier_city": "Big Lake"
      },
      {
        "supplier_city": "Calgary"
      },
      {
        "supplier_city": "Ni\u011fde"
      },
      {
        "supplier_city": "Burnsville"
      },
      {
        "supplier_city": "Goldach"
      },
      {
        "supplier_city": "Antalya"
      },
      {
        "supplier_city": "Dublin"
      },
      {
        "supplier_city": "Broken Arrow"
      },
      {
        "supplier_city": "Winter Springs"
      },
      {
        "supplier_city": "Horn Lake"
      },
      {
        "supplier_city": "West Valley City"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Tonawanda"
      },
      {
        "supplier_city": "Castro Valley"
      },
      {
        "supplier_city": "Downers Grove"
      },
      {
        "supplier_city": "Jordan"
      },
      {
        "supplier_city": "Honolulu"
      },
      {
        "supplier_city": "Shreveport"
      },
      {
        "supplier_city": "Curitiba"
      },
      {
        "supplier_city": "Basse-Goulaine"
      },
      {
        "supplier_city": "Flint"
      },
      {
        "supplier_city": "Teresina"
      },
      {
        "supplier_city": "Bartlett"
      },
      {
        "supplier_city": "Flower Mound"
      },
      {
        "supplier_city": "Eugene"
      },
      {
        "supplier_city": "College Park"
      },
      {
        "supplier_city": "Athens"
      },
      {
        "supplier_city": "Davenport"
      },
      {
        "supplier_city": "Macap\u00e1"
      },
      {
        "supplier_city": "Janesville"
      },
      {
        "supplier_city": "Richmond"
      },
      {
        "supplier_city": "Marietta"
      },
      {
        "supplier_city": "West Richland"
      },
      {
        "supplier_city": "Normal"
      },
      {
        "supplier_city": "Raytown"
      },
      {
        "supplier_city": "Rancho Santa Margarita"
      },
      {
        "supplier_city": "Evanston"
      },
      {
        "supplier_city": "Ipoh"
      },
      {
        "supplier_city": "Beverly"
      },
      {
        "supplier_city": "Lincoln Park"
      },
      {
        "supplier_city": "Minturn"
      },
      {
        "supplier_city": "Elwood"
      },
      {
        "supplier_city": "Castle Rock"
      },
      {
        "supplier_city": "Alexandria"
      },
      {
        "supplier_city": "Trenton"
      },
      {
        "supplier_city": "Saint Paul"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Chanhassen"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Oxford"
      },
      {
        "supplier_city": "Summit"
      },
      {
        "supplier_city": "Vernon Hills"
      },
      {
        "supplier_city": "Blackville"
      },
      {
        "supplier_city": "Fayetteville"
      },
      {
        "supplier_city": "Roosendaal"
      },
      {
        "supplier_city": "Pleasant Hill"
      },
      {
        "supplier_city": "Farragut"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Campinas"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Tuckerton"
      },
      {
        "supplier_city": "Belton"
      },
      {
        "supplier_city": "Lockport"
      },
      {
        "supplier_city": "Loganville, Pennsylvania"
      },
      {
        "supplier_city": "Cranston"
      },
      {
        "supplier_city": "S\u00e3o Leopoldo"
      },
      {
        "supplier_city": "Guarulhos"
      },
      {
        "supplier_city": "Lahr/Schwarzwald"
      },
      {
        "supplier_city": "Norfolk"
      },
      {
        "supplier_city": "New Braunfels"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Elizabethtown"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Alvorada"
      },
      {
        "supplier_city": "Lombard"
      },
      {
        "supplier_city": "Bellflower"
      },
      {
        "supplier_city": "Milwaukee"
      },
      {
        "supplier_city": "Boone"
      },
      {
        "supplier_city": "Spanish Fork"
      },
      {
        "supplier_city": "Sobral"
      },
      {
        "supplier_city": "Nova Igua\u00e7u"
      },
      {
        "supplier_city": "Pearland"
      },
      {
        "supplier_city": "Huntington Station"
      },
      {
        "supplier_city": "Ribeir\u00e3o da Ilha"
      },
      {
        "supplier_city": "Killeen"
      },
      {
        "supplier_city": "Garner"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Vineland"
      },
      {
        "supplier_city": "Macei\u00f3"
      },
      {
        "supplier_city": "Gardena"
      },
      {
        "supplier_city": "Adapazar\u0131"
      },
      {
        "supplier_city": "Woodstock"
      },
      {
        "supplier_city": "Helsinki"
      },
      {
        "supplier_city": "Veghel"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Ho Chi Minh City"
      },
      {
        "supplier_city": "Stamford"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Lindenhurst"
      },
      {
        "supplier_city": "Wood-Ridge"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Grayson"
      },
      {
        "supplier_city": "Tangerang"
      },
      {
        "supplier_city": "Recife"
      },
      {
        "supplier_city": "Frisco"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "The Hague"
      },
      {
        "supplier_city": "Albuquerque"
      },
      {
        "supplier_city": "Veenendaal"
      },
      {
        "supplier_city": "San Antonio"
      },
      {
        "supplier_city": "Georgetown"
      },
      {
        "supplier_city": "Foz do Igua\u00e7u"
      },
      {
        "supplier_city": "Xenia"
      },
      {
        "supplier_city": "Livermore"
      },
      {
        "supplier_city": "Orlando"
      },
      {
        "supplier_city": "North Caldwell"
      },
      {
        "supplier_city": "Ann Arbor"
      },
      {
        "supplier_city": "Modesto"
      },
      {
        "supplier_city": "East Haven"
      },
      {
        "supplier_city": "Monterrey"
      },
      {
        "supplier_city": "Brandon"
      },
      {
        "supplier_city": "Dry Ridge"
      },
      {
        "supplier_city": "Sorocaba"
      },
      {
        "supplier_city": "Pinole"
      },
      {
        "supplier_city": "Brno"
      },
      {
        "supplier_city": "Queen Creek"
      },
      {
        "supplier_city": "Clovis"
      },
      {
        "supplier_city": "Hampton"
      },
      {
        "supplier_city": "Z\u00fcrich"
      },
      {
        "supplier_city": "Erzurum"
      },
      {
        "supplier_city": "Milwaukie"
      },
      {
        "supplier_city": "West Dundee"
      },
      {
        "supplier_city": "Hilterfingen"
      },
      {
        "supplier_city": "Santos"
      },
      {
        "supplier_city": "Easley"
      },
      {
        "supplier_city": "Mount Ephraim"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Freeport"
      },
      {
        "supplier_city": "Kennesaw"
      },
      {
        "supplier_city": "Spencerville"
      },
      {
        "supplier_city": "St. Charles"
      },
      {
        "supplier_city": "Clifton"
      },
      {
        "supplier_city": "Moline"
      },
      {
        "supplier_city": "Athens"
      },
      {
        "supplier_city": "Greensboro"
      },
      {
        "supplier_city": "Fenton"
      },
      {
        "supplier_city": "Libertyville"
      },
      {
        "supplier_city": "Zeist"
      },
      {
        "supplier_city": "Limeira"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Roselle"
      },
      {
        "supplier_city": "Gurupi"
      },
      {
        "supplier_city": "Geneva"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Menomonee Falls"
      },
      {
        "supplier_city": "Endwell"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "Schertz"
      },
      {
        "supplier_city": "Crowley"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Nashville"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Southern Pines"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Huntington"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Kirkel"
      },
      {
        "supplier_city": "Kernersville"
      },
      {
        "supplier_city": "Konstancin-Jeziorna"
      },
      {
        "supplier_city": "Santiago"
      },
      {
        "supplier_city": "Erp"
      },
      {
        "supplier_city": "Arnhem"
      },
      {
        "supplier_city": "Gibbsboro"
      },
      {
        "supplier_city": "Vail"
      },
      {
        "supplier_city": "Rio Rancho"
      },
      {
        "supplier_city": "West Bend"
      },
      {
        "supplier_city": "Bastrop"
      },
      {
        "supplier_city": "Goes"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Schenectady"
      },
      {
        "supplier_city": "Glendale Heights"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Niter\u00f3i"
      },
      {
        "supplier_city": "St. Peters"
      },
      {
        "supplier_city": "Hamelin"
      },
      {
        "supplier_city": "Bras\u00edlia"
      },
      {
        "supplier_city": "North Las Vegas"
      },
      {
        "supplier_city": "Monroeville"
      },
      {
        "supplier_city": "Lakeland"
      },
      {
        "supplier_city": "S\u00e3o Caetano do Sul"
      },
      {
        "supplier_city": "Scranton"
      },
      {
        "supplier_city": "New Berlin"
      },
      {
        "supplier_city": "Covington"
      },
      {
        "supplier_city": "Arlington"
      },
      {
        "supplier_city": "Eden Prairie"
      },
      {
        "supplier_city": "St. Gallen"
      },
      {
        "supplier_city": "Tallahassee"
      },
      {
        "supplier_city": "Overland Park"
      },
      {
        "supplier_city": "Casablanca"
      },
      {
        "supplier_city": "Bangkok"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Baton Rouge"
      },
      {
        "supplier_city": "Duiven"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Somerdale"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Bezons"
      },
      {
        "supplier_city": "Santo Andr\u00e9"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Goi\u00e2nia"
      },
      {
        "supplier_city": "Heerhugowaard"
      },
      {
        "supplier_city": "East Jakarta"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "East Stroudsburg"
      },
      {
        "supplier_city": "Ribeir\u00e3o Preto"
      },
      {
        "supplier_city": "Pessac"
      },
      {
        "supplier_city": "Media"
      },
      {
        "supplier_city": "Helotes"
      },
      {
        "supplier_city": "Sachse"
      },
      {
        "supplier_city": "Waconia"
      },
      {
        "supplier_city": "Lindsborg"
      },
      {
        "supplier_city": "Skokie"
      },
      {
        "supplier_city": "Tinley Park"
      },
      {
        "supplier_city": "Parma"
      },
      {
        "supplier_city": "Richfield"
      },
      {
        "supplier_city": "Springfield"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "Zug"
      },
      {
        "supplier_city": "Royal Oak"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Sparta"
      },
      {
        "supplier_city": "Gro\u00df Vollstedt"
      },
      {
        "supplier_city": "Hurst"
      },
      {
        "supplier_city": "Alafaya"
      },
      {
        "supplier_city": "Elgin"
      },
      {
        "supplier_city": "Goshen"
      },
      {
        "supplier_city": "Antwerp"
      },
      {
        "supplier_city": "Hamburg"
      },
      {
        "supplier_city": "Sacramento"
      },
      {
        "supplier_city": "Fayetteville"
      },
      {
        "supplier_city": "Helmond"
      },
      {
        "supplier_city": "Arnold"
      },
      {
        "supplier_city": "Osasco"
      },
      {
        "supplier_city": "Aurora"
      },
      {
        "supplier_city": "Mountain House"
      },
      {
        "supplier_city": "Southaven"
      },
      {
        "supplier_city": "Centennial"
      },
      {
        "supplier_city": "Rijswijk"
      },
      {
        "supplier_city": "Braselton"
      },
      {
        "supplier_city": "North Port"
      },
      {
        "supplier_city": "Corona"
      },
      {
        "supplier_city": "Lexington"
      },
      {
        "supplier_city": "Avon"
      },
      {
        "supplier_city": "S\u00e3o Lu\u00eds"
      },
      {
        "supplier_city": "Pasadena"
      },
      {
        "supplier_city": "Taylors"
      },
      {
        "supplier_city": "Brentwood"
      },
      {
        "supplier_city": "Mauldin"
      },
      {
        "supplier_city": "Sirnach"
      },
      {
        "supplier_city": "North Richland Hills"
      },
      {
        "supplier_city": "Wharton"
      },
      {
        "supplier_city": "Kastamonu"
      },
      {
        "supplier_city": "Crandall"
      },
      {
        "supplier_city": "Sivas"
      },
      {
        "supplier_city": "Leominster"
      },
      {
        "supplier_city": "Soquel"
      },
      {
        "supplier_city": "Douglasville"
      },
      {
        "supplier_city": "Windsor"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Virginia Beach"
      },
      {
        "supplier_city": "Beaver Falls"
      },
      {
        "supplier_city": "Goodyear"
      },
      {
        "supplier_city": "Sofia"
      },
      {
        "supplier_city": "Milford"
      },
      {
        "supplier_city": "Karawang"
      },
      {
        "supplier_city": "Jo\u00e3o Pessoa"
      },
      {
        "supplier_city": "West Hartford"
      },
      {
        "supplier_city": "Betton"
      },
      {
        "supplier_city": "Riverview"
      },
      {
        "supplier_city": "Ankeny"
      },
      {
        "supplier_city": "Fredericton"
      },
      {
        "supplier_city": "Pacifica"
      },
      {
        "supplier_city": "Green Bay"
      },
      {
        "supplier_city": "Joinville"
      },
      {
        "supplier_city": "Ubon Ratchathani"
      },
      {
        "supplier_city": "Chesterfield"
      },
      {
        "supplier_city": "Louisville"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Indaiatuba"
      },
      {
        "supplier_city": "West Des Moines"
      },
      {
        "supplier_city": "Spring"
      },
      {
        "supplier_city": "Rio de Janeiro"
      },
      {
        "supplier_city": "Pawtucket"
      },
      {
        "supplier_city": "Chardon"
      },
      {
        "supplier_city": "Joliet"
      },
      {
        "supplier_city": "Morris Plains"
      },
      {
        "supplier_city": "West St. Paul"
      },
      {
        "supplier_city": "Youngstown"
      },
      {
        "supplier_city": "Canonsburg"
      },
      {
        "supplier_city": "Hoogeveen"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Gaziantep"
      },
      {
        "supplier_city": "Sumner"
      },
      {
        "supplier_city": "Tucson"
      },
      {
        "supplier_city": "Allen"
      },
      {
        "supplier_city": "Costa Mesa"
      },
      {
        "supplier_city": "Round Rock"
      },
      {
        "supplier_city": "Vlissingen"
      },
      {
        "supplier_city": "Lyman"
      },
      {
        "supplier_city": "Brookhaven"
      },
      {
        "supplier_city": "Strasbourg"
      },
      {
        "supplier_city": "Hernando"
      },
      {
        "supplier_city": "Puchong"
      },
      {
        "supplier_city": "Vallejo"
      },
      {
        "supplier_city": "Gua\u00edba"
      },
      {
        "supplier_city": "Aurora"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Elspeet"
      },
      {
        "supplier_city": "High Ridge"
      },
      {
        "supplier_city": "Groningen"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Bloomfield Hills"
      },
      {
        "supplier_city": "Mission"
      },
      {
        "supplier_city": "Lykens"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "La doble p"
      },
      {
        "supplier_city": "Lowell"
      },
      {
        "supplier_city": "Brampton"
      },
      {
        "supplier_city": "Stow"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "Renton"
      },
      {
        "supplier_city": "Goshen"
      },
      {
        "supplier_city": "Levittown"
      },
      {
        "supplier_city": "Danville"
      },
      {
        "supplier_city": "Belo Horizonte"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Amstelveen"
      },
      {
        "supplier_city": "Simpsonville"
      },
      {
        "supplier_city": "Lubbock"
      },
      {
        "supplier_city": "Signal Hill"
      },
      {
        "supplier_city": "Balne\u00e1rio Cambori\u00fa"
      },
      {
        "supplier_city": "Henderson"
      },
      {
        "supplier_city": "Corumb\u00e1"
      },
      {
        "supplier_city": "Saint Petersburg"
      },
      {
        "supplier_city": "North Tonawanda"
      },
      {
        "supplier_city": "Madison"
      },
      {
        "supplier_city": "Mont-Saint-Aignan"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Callery"
      },
      {
        "supplier_city": "Grandville"
      },
      {
        "supplier_city": "Cohoes"
      },
      {
        "supplier_city": "Deltona"
      },
      {
        "supplier_city": "Moreno Valley"
      },
      {
        "supplier_city": "Jundia\u00ed"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "Suffern"
      },
      {
        "supplier_city": "Miami Lakes"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Frederick"
      },
      {
        "supplier_city": "Andover"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Concord"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Talcahuano"
      },
      {
        "supplier_city": "Wichita Falls"
      },
      {
        "supplier_city": "Loppi"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Mundolsheim"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "Frederick"
      },
      {
        "supplier_city": "Warner Robins"
      },
      {
        "supplier_city": "Fort Bliss"
      },
      {
        "supplier_city": "Chesapeake"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "Lanham"
      },
      {
        "supplier_city": "Montgomery"
      },
      {
        "supplier_city": "Davao City"
      },
      {
        "supplier_city": "Montgomery Village"
      },
      {
        "supplier_city": "North Charleston"
      },
      {
        "supplier_city": "Norfolk"
      },
      {
        "supplier_city": "Lake Forest"
      },
      {
        "supplier_city": "New Orleans"
      },
      {
        "supplier_city": "Langhorne"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Arlington"
      },
      {
        "supplier_city": "Baltimore"
      },
      {
        "supplier_city": "Omaha"
      },
      {
        "supplier_city": "Oklahoma City"
      },
      {
        "supplier_city": "Dahlgren"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Brighton"
      },
      {
        "supplier_city": "Salem"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Sacramento"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Brunswick"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Milan"
      },
      {
        "supplier_city": "Bavel"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Elbridge"
      },
      {
        "supplier_city": "Weedsport"
      },
      {
        "supplier_city": "Bordeaux"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Paoli"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Malvern"
      },
      {
        "supplier_city": "V\u00e1c"
      },
      {
        "supplier_city": "Mooresville"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "Huntsville"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Le Pecq"
      },
      {
        "supplier_city": "Kuala Lumpur"
      },
      {
        "supplier_city": "East Jakarta"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Longton"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Krak\u00f3w"
      },
      {
        "supplier_city": "Chinchilla"
      },
      {
        "supplier_city": "The Hague"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Veszpr\u00e9m"
      },
      {
        "supplier_city": "Herzliya"
      },
      {
        "supplier_city": "Rancho Santa Margarita"
      },
      {
        "supplier_city": "Santa Margarita"
      },
      {
        "supplier_city": "Mathonville"
      },
      {
        "supplier_city": "South Plainfield"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Chapin"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Rancho Cucamonga"
      },
      {
        "supplier_city": "Lemoore"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Long Beach"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Missoula"
      },
      {
        "supplier_city": "Katowice"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Naperville"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Hove"
      },
      {
        "supplier_city": "Tulsa"
      },
      {
        "supplier_city": "Marietta"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Sahuarita"
      },
      {
        "supplier_city": "Riverside"
      },
      {
        "supplier_city": "Jurupa Valley"
      },
      {
        "supplier_city": "Nashville"
      },
      {
        "supplier_city": "Tallinn"
      },
      {
        "supplier_city": "Hod HaSharon"
      },
      {
        "supplier_city": "Jerusalem"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Menlo Park"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Albany"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Dagmersellen"
      },
      {
        "supplier_city": "Ebes"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Barnaul"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Randers"
      },
      {
        "supplier_city": "\u0130zmir"
      },
      {
        "supplier_city": "Edmonton"
      },
      {
        "supplier_city": "Krak\u00f3w"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Westlake"
      },
      {
        "supplier_city": "El Segundo"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Z\u00fcrich"
      },
      {
        "supplier_city": "Panningen"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Campinas"
      },
      {
        "supplier_city": "Calgary"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Zaporizhzhia"
      },
      {
        "supplier_city": "Enniskerry"
      },
      {
        "supplier_city": "Sandy Springs"
      },
      {
        "supplier_city": "Eufaula"
      },
      {
        "supplier_city": "Deerfield Beach"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Nagoya"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Vernier"
      },
      {
        "supplier_city": "Thiene"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Seyssinet-Pariset"
      },
      {
        "supplier_city": "Leesburg"
      },
      {
        "supplier_city": "Urayasu"
      },
      {
        "supplier_city": "Moergestel"
      },
      {
        "supplier_city": "Hyderabad"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "Jena"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Elk Grove Village"
      },
      {
        "supplier_city": "Espoo"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Dacula"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Hillsboro"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Hamburg"
      },
      {
        "supplier_city": "Torrance"
      },
      {
        "supplier_city": "Franklin"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "La Vergne"
      },
      {
        "supplier_city": "San Carlos"
      },
      {
        "supplier_city": "Auburn Hills"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Bal\u0131kesir"
      },
      {
        "supplier_city": "Antakya"
      },
      {
        "supplier_city": "Kyrenia"
      },
      {
        "supplier_city": "Antalya"
      },
      {
        "supplier_city": "Nicosia"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Kahramanmara\u015f"
      },
      {
        "supplier_city": "Rize"
      },
      {
        "supplier_city": "Mardin"
      },
      {
        "supplier_city": "Mersin"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "Isparta"
      },
      {
        "supplier_city": "Diyarbak\u0131r"
      },
      {
        "supplier_city": "Mu\u011fla"
      },
      {
        "supplier_city": "Yalova"
      },
      {
        "supplier_city": "Adapazar\u0131"
      },
      {
        "supplier_city": "Adana"
      },
      {
        "supplier_city": "Eski\u015fehir"
      },
      {
        "supplier_city": "Ankara"
      },
      {
        "supplier_city": "\u0130zmir"
      },
      {
        "supplier_city": "Giresun"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Helsinki"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Seoul"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Hamburg"
      },
      {
        "supplier_city": "Rockville"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Eindhoven"
      },
      {
        "supplier_city": "Cape Town"
      },
      {
        "supplier_city": "Roswell"
      },
      {
        "supplier_city": "Taipei"
      },
      {
        "supplier_city": "Richmond Hill"
      },
      {
        "supplier_city": "Hyderabad"
      },
      {
        "supplier_city": "Rogers"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Waukesha"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Ann Arbor"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Coppell"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "Vimercate"
      },
      {
        "supplier_city": "Karlsruhe"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Santiago"
      },
      {
        "supplier_city": "Southfield"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Jacksonville"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Herzliya"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Chantilly"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "Rogersville"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "Stamford"
      },
      {
        "supplier_city": "Ashburn"
      },
      {
        "supplier_city": "Richardson"
      },
      {
        "supplier_city": "Cibolo"
      },
      {
        "supplier_city": "Wakefield"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Lewisville"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Denton"
      },
      {
        "supplier_city": "Fern Park"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Chandler"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "St. Louis"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Wall Township"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "El Segundo"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Carrollton"
      },
      {
        "supplier_city": "Lutherville-Timonium"
      },
      {
        "supplier_city": "Menlo Park"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Needham"
      },
      {
        "supplier_city": "Corte Madera"
      },
      {
        "supplier_city": "Riverside"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Waban"
      },
      {
        "supplier_city": "Newton"
      },
      {
        "supplier_city": "Surry Hills"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Madison"
      },
      {
        "supplier_city": "Santa Cruz"
      },
      {
        "supplier_city": "Jouy-en-Josas"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Massy"
      },
      {
        "supplier_city": "Brecksville"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "district of Malaysia"
      },
      {
        "supplier_city": "Addison"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Longmont"
      },
      {
        "supplier_city": "Eybens"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Agoura Hills"
      },
      {
        "supplier_city": "Bothell"
      },
      {
        "supplier_city": "Englewood"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "Hazlet"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Issy-les-Moulineaux"
      },
      {
        "supplier_city": "Albuquerque"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Rungis"
      },
      {
        "supplier_city": "Voisins-le-Bretonneux"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Marriottsville"
      },
      {
        "supplier_city": "Boulogne-Billancourt"
      },
      {
        "supplier_city": "Ledgewood"
      },
      {
        "supplier_city": "Oviedo"
      },
      {
        "supplier_city": "Paray-Vieille-Poste"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Athens"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Guyancourt"
      },
      {
        "supplier_city": "Newark"
      },
      {
        "supplier_city": "Mesa"
      },
      {
        "supplier_city": "St. Louis"
      },
      {
        "supplier_city": "Jacksonville"
      },
      {
        "supplier_city": "Louisville"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Red Bank"
      },
      {
        "supplier_city": "Westwood"
      },
      {
        "supplier_city": "The Hague"
      },
      {
        "supplier_city": "Schaumburg"
      },
      {
        "supplier_city": "Nashua"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Chandler"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Gurugram"
      },
      {
        "supplier_city": "Z\u00fcrich"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Berkeley"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Nairobi"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "The Hague"
      },
      {
        "supplier_city": "Yoshkar-Ola"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Lausanne"
      },
      {
        "supplier_city": "Glendale"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "Hartford"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Rueil-Malmaison"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Z\u00fcrich"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Berkeley"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "San Antonio"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Hoboken"
      },
      {
        "supplier_city": "Beverly Hills"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Culver City"
      },
      {
        "supplier_city": "Bonaire"
      },
      {
        "supplier_city": "Golden"
      },
      {
        "supplier_city": "Genesee"
      },
      {
        "supplier_city": "Evergreen"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Lakewood"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Ashburn"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Richardson"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Baltimore"
      },
      {
        "supplier_city": "Perry Hall"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "Stuttgart"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Somerville"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Coral Gables"
      },
      {
        "supplier_city": "Barranquilla"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Dharwad"
      },
      {
        "supplier_city": "Chandigarh"
      },
      {
        "supplier_city": "Hubli"
      },
      {
        "supplier_city": "Surat"
      },
      {
        "supplier_city": "Tonk"
      },
      {
        "supplier_city": "Cesano Maderno"
      },
      {
        "supplier_city": "Nagpur"
      },
      {
        "supplier_city": "Lucknow"
      },
      {
        "supplier_city": "Pondicherry"
      },
      {
        "supplier_city": "Bhavnagar"
      },
      {
        "supplier_city": "Thane"
      },
      {
        "supplier_city": "Karnal"
      },
      {
        "supplier_city": "Kolhapur"
      },
      {
        "supplier_city": "Raipur"
      },
      {
        "supplier_city": "Delhi"
      },
      {
        "supplier_city": "Vijayawada"
      },
      {
        "supplier_city": "Nellore"
      },
      {
        "supplier_city": "Sriperumbudur"
      },
      {
        "supplier_city": "Jalandhar"
      },
      {
        "supplier_city": "Kandivali"
      },
      {
        "supplier_city": "Hyderabad"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Guntur"
      },
      {
        "supplier_city": "Nagar"
      },
      {
        "supplier_city": "Madurai"
      },
      {
        "supplier_city": "Coimbatore"
      },
      {
        "supplier_city": "Kakinada"
      },
      {
        "supplier_city": "Puri"
      },
      {
        "supplier_city": "Tirunelveli"
      },
      {
        "supplier_city": "Kolkata"
      },
      {
        "supplier_city": "Palwal"
      },
      {
        "supplier_city": "Palma"
      },
      {
        "supplier_city": "Jamshedpur"
      },
      {
        "supplier_city": "Jeddah"
      },
      {
        "supplier_city": "Patna"
      },
      {
        "supplier_city": "Kapurthala"
      },
      {
        "supplier_city": "Ernakulam"
      },
      {
        "supplier_city": "Bokakhat"
      },
      {
        "supplier_city": "Jodhpur"
      },
      {
        "supplier_city": "Panchkula"
      },
      {
        "supplier_city": "Pune"
      },
      {
        "supplier_city": "Jamnagar"
      },
      {
        "supplier_city": "Kochi"
      },
      {
        "supplier_city": "Navsari"
      },
      {
        "supplier_city": "Aurangabad"
      },
      {
        "supplier_city": "Kurnool"
      },
      {
        "supplier_city": "Kurukshetra"
      },
      {
        "supplier_city": "New Delhi"
      },
      {
        "supplier_city": "Kozhikode"
      },
      {
        "supplier_city": "Vadodara"
      },
      {
        "supplier_city": "Agra"
      },
      {
        "supplier_city": "Salem"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Albany"
      },
      {
        "supplier_city": "Hudson"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Burbank"
      },
      {
        "supplier_city": "Jouy-en-Josas"
      },
      {
        "supplier_city": "Courbevoie"
      },
      {
        "supplier_city": "Bowie"
      },
      {
        "supplier_city": "Montrouge"
      },
      {
        "supplier_city": "Bothell"
      },
      {
        "supplier_city": "Stockton"
      },
      {
        "supplier_city": "Newton Upper Falls"
      },
      {
        "supplier_city": "Costa Mesa"
      },
      {
        "supplier_city": "Littleton"
      },
      {
        "supplier_city": "Longmont"
      },
      {
        "supplier_city": "Roseville"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Lehi"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Stargard"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Puteaux"
      },
      {
        "supplier_city": "Saclay"
      },
      {
        "supplier_city": "Bolton"
      },
      {
        "supplier_city": "Sugar Land"
      },
      {
        "supplier_city": "Beaverton"
      },
      {
        "supplier_city": "Omaha"
      },
      {
        "supplier_city": "Birmingham"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Peoria"
      },
      {
        "supplier_city": "Alexandria"
      },
      {
        "supplier_city": "Pawtucket"
      },
      {
        "supplier_city": "Overland Park"
      },
      {
        "supplier_city": "Roxana"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "Umhlanga"
      },
      {
        "supplier_city": "Des Moines"
      },
      {
        "supplier_city": "Rock Island"
      },
      {
        "supplier_city": "Panama City"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Crystal River"
      },
      {
        "supplier_city": "Gaithersburg"
      },
      {
        "supplier_city": "Wauchula"
      },
      {
        "supplier_city": "Hollywood"
      },
      {
        "supplier_city": "Noida"
      },
      {
        "supplier_city": "Palatka"
      },
      {
        "supplier_city": "Stuart"
      },
      {
        "supplier_city": "East Rutherford"
      },
      {
        "supplier_city": "Tucson"
      },
      {
        "supplier_city": "Lakewood"
      },
      {
        "supplier_city": "Pretoria"
      },
      {
        "supplier_city": "Odon"
      },
      {
        "supplier_city": "Milton"
      },
      {
        "supplier_city": "Danville"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Boylston"
      },
      {
        "supplier_city": "Worcester"
      },
      {
        "supplier_city": "Haslet"
      },
      {
        "supplier_city": "Hialeah"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Solana Beach"
      },
      {
        "supplier_city": "Erie"
      },
      {
        "supplier_city": "Oak Ridge"
      },
      {
        "supplier_city": "Lisle"
      },
      {
        "supplier_city": "Edwards"
      },
      {
        "supplier_city": "Bakersfield"
      },
      {
        "supplier_city": "Warner Robins"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Tallahassee"
      },
      {
        "supplier_city": "Ithaca"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Conyers"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Baltimore"
      },
      {
        "supplier_city": "Gardner"
      },
      {
        "supplier_city": "Wakefield"
      },
      {
        "supplier_city": "Aiken"
      },
      {
        "supplier_city": "Blue Ash"
      },
      {
        "supplier_city": "Albuquerque"
      },
      {
        "supplier_city": "Haymarket"
      },
      {
        "supplier_city": "Centennial"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Tuscaloosa"
      },
      {
        "supplier_city": "New London"
      },
      {
        "supplier_city": "Rio de Janeiro"
      },
      {
        "supplier_city": "Tulsa"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Chambersburg"
      },
      {
        "supplier_city": "Long Beach"
      },
      {
        "supplier_city": "Sarasota"
      },
      {
        "supplier_city": "Springfield"
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Fort Collins"
      },
      {
        "supplier_city": "Trumann"
      },
      {
        "supplier_city": "Rockford"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Rockwood"
      },
      {
        "supplier_city": "Paw Paw"
      },
      {
        "supplier_city": "St. Louis"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Bismarck"
      },
      {
        "supplier_city": "El Monte"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Southfield"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Daleville"
      },
      {
        "supplier_city": "Kitchener"
      },
      {
        "supplier_city": "Charlottesville"
      },
      {
        "supplier_city": "Santa Maria"
      },
      {
        "supplier_city": "Lansing"
      },
      {
        "supplier_city": "Port St. Lucie"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Fort St. John"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Springfield"
      },
      {
        "supplier_city": "Kansas City"
      },
      {
        "supplier_city": "Cape Town"
      },
      {
        "supplier_city": "Laurel"
      },
      {
        "supplier_city": "Orinda"
      },
      {
        "supplier_city": "Iselin"
      },
      {
        "supplier_city": "Santa Ana"
      },
      {
        "supplier_city": "Destin"
      },
      {
        "supplier_city": "Zierikzee"
      },
      {
        "supplier_city": "Annapolis Junction"
      },
      {
        "supplier_city": "Yorktown"
      },
      {
        "supplier_city": "Grande Prairie"
      },
      {
        "supplier_city": "Los Alamos"
      },
      {
        "supplier_city": "Gillette"
      },
      {
        "supplier_city": "Bridgewater Township"
      },
      {
        "supplier_city": "Orrstown"
      },
      {
        "supplier_city": "Antioch"
      },
      {
        "supplier_city": "Schenectady"
      },
      {
        "supplier_city": "Vernon Hills"
      },
      {
        "supplier_city": "Paradise"
      },
      {
        "supplier_city": "Sarajevo"
      },
      {
        "supplier_city": "Richmond"
      },
      {
        "supplier_city": "Palm City"
      },
      {
        "supplier_city": "Cincinnati"
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Boca Raton"
      },
      {
        "supplier_city": "Spartanburg"
      },
      {
        "supplier_city": "Middleville"
      },
      {
        "supplier_city": "Kingston"
      },
      {
        "supplier_city": "Mobile"
      },
      {
        "supplier_city": "Battle Creek"
      },
      {
        "supplier_city": "Cockeysville"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Croydon"
      },
      {
        "supplier_city": "Florence"
      },
      {
        "supplier_city": "Concord"
      },
      {
        "supplier_city": "Dayton"
      },
      {
        "supplier_city": "Docklands"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "West Des Moines"
      },
      {
        "supplier_city": "Fort McMurray"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Marseille"
      },
      {
        "supplier_city": "Fort Pierce"
      },
      {
        "supplier_city": "Sleepy Hollow"
      },
      {
        "supplier_city": "Glen Allen"
      },
      {
        "supplier_city": "Wailuku"
      },
      {
        "supplier_city": "Pikesville"
      },
      {
        "supplier_city": "West Palm Beach"
      },
      {
        "supplier_city": "Bartow"
      },
      {
        "supplier_city": "Fairview"
      },
      {
        "supplier_city": "Germantown"
      },
      {
        "supplier_city": "Colonia"
      },
      {
        "supplier_city": "Harrisburg"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Princeton"
      },
      {
        "supplier_city": "Bloomington"
      },
      {
        "supplier_city": "Memphis"
      },
      {
        "supplier_city": "Camanche"
      },
      {
        "supplier_city": "Midland"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Akron"
      },
      {
        "supplier_city": "Petaling Jaya"
      },
      {
        "supplier_city": "Rancho Cucamonga"
      },
      {
        "supplier_city": "Georgetown"
      },
      {
        "supplier_city": "Thornhill"
      },
      {
        "supplier_city": "Livonia"
      },
      {
        "supplier_city": "Lake Elsinore"
      },
      {
        "supplier_city": "Doral"
      },
      {
        "supplier_city": "Carrboro"
      },
      {
        "supplier_city": "Jackson"
      },
      {
        "supplier_city": "Franklin"
      },
      {
        "supplier_city": "Latham"
      },
      {
        "supplier_city": "Woods Hole"
      },
      {
        "supplier_city": "Casper"
      },
      {
        "supplier_city": "Buzzards Bay"
      },
      {
        "supplier_city": "Bonaire"
      },
      {
        "supplier_city": "Dawson Creek"
      },
      {
        "supplier_city": "Carlsbad"
      },
      {
        "supplier_city": "Sunrise"
      },
      {
        "supplier_city": "Wichita"
      },
      {
        "supplier_city": "Shreveport"
      },
      {
        "supplier_city": "Punta Gorda"
      },
      {
        "supplier_city": "Providence"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "East Syracuse"
      },
      {
        "supplier_city": "Ontario"
      },
      {
        "supplier_city": "Hobbs"
      },
      {
        "supplier_city": "Oshkosh"
      },
      {
        "supplier_city": "Morehead City"
      },
      {
        "supplier_city": "Cold Lake"
      },
      {
        "supplier_city": "Honolulu"
      },
      {
        "supplier_city": "Fort Worth"
      },
      {
        "supplier_city": "Everett"
      },
      {
        "supplier_city": "Jacksonville"
      },
      {
        "supplier_city": "Lansdowne"
      },
      {
        "supplier_city": "Virginia Beach"
      },
      {
        "supplier_city": "Oklahoma City"
      },
      {
        "supplier_city": "Sanford"
      },
      {
        "supplier_city": "Saskatoon"
      },
      {
        "supplier_city": "McClellan Park"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Fairbanks"
      },
      {
        "supplier_city": "Billings"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Burnaby"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Shirley"
      },
      {
        "supplier_city": "Norfolk"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "Newark"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Sacramento"
      },
      {
        "supplier_city": "Conshohocken"
      },
      {
        "supplier_city": "Coleman"
      },
      {
        "supplier_city": "Fort Lauderdale"
      },
      {
        "supplier_city": "Hampstead"
      },
      {
        "supplier_city": "West Chester"
      },
      {
        "supplier_city": "Hawthorne"
      },
      {
        "supplier_city": "Manassas"
      },
      {
        "supplier_city": "Redmond"
      },
      {
        "supplier_city": "Wolfeboro"
      },
      {
        "supplier_city": "Hermosa Beach"
      },
      {
        "supplier_city": "Meridian"
      },
      {
        "supplier_city": "Spring"
      },
      {
        "supplier_city": "Albers"
      },
      {
        "supplier_city": "Lexington"
      },
      {
        "supplier_city": "Reading"
      },
      {
        "supplier_city": "Sandton"
      },
      {
        "supplier_city": "Mt. Juliet"
      },
      {
        "supplier_city": "Orange"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Hilo"
      },
      {
        "supplier_city": "Freeport"
      },
      {
        "supplier_city": "Dumfries"
      },
      {
        "supplier_city": "Naples"
      },
      {
        "supplier_city": "Warrenville"
      },
      {
        "supplier_city": "Winter Park"
      },
      {
        "supplier_city": "Annapolis"
      },
      {
        "supplier_city": "Saint Petersburg"
      },
      {
        "supplier_city": "Markham"
      },
      {
        "supplier_city": "North Charleston"
      },
      {
        "supplier_city": "Greenwood Village"
      },
      {
        "supplier_city": "Huntsville"
      },
      {
        "supplier_city": "Williamsport"
      },
      {
        "supplier_city": "Sheboygan"
      },
      {
        "supplier_city": "Hubbardston"
      },
      {
        "supplier_city": "Grand Rapids"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "Woburn"
      },
      {
        "supplier_city": "Greenville"
      },
      {
        "supplier_city": "Fort Mill"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Downingtown"
      },
      {
        "supplier_city": "Dunkirk"
      },
      {
        "supplier_city": "Gibbstown"
      },
      {
        "supplier_city": "Gloucester"
      },
      {
        "supplier_city": "San Antonio"
      },
      {
        "supplier_city": "Palmetto"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Newark"
      },
      {
        "supplier_city": "New Hope"
      },
      {
        "supplier_city": "Soda Springs"
      },
      {
        "supplier_city": "Lake Mary"
      },
      {
        "supplier_city": "Graham"
      },
      {
        "supplier_city": "Green Bay"
      },
      {
        "supplier_city": "Fresno"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Santa Fe Springs"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Marquette"
      },
      {
        "supplier_city": "Pocasset"
      },
      {
        "supplier_city": "Glen Ellyn"
      },
      {
        "supplier_city": "Orlando"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "Fort Myers"
      },
      {
        "supplier_city": "Port Orchard"
      },
      {
        "supplier_city": "Edmonton"
      },
      {
        "supplier_city": "Miramar"
      },
      {
        "supplier_city": "Richland"
      },
      {
        "supplier_city": "Nashville"
      },
      {
        "supplier_city": "Cary"
      },
      {
        "supplier_city": "Ijamsville"
      },
      {
        "supplier_city": "Anaheim"
      },
      {
        "supplier_city": "Newport News"
      },
      {
        "supplier_city": "Bellingham"
      },
      {
        "supplier_city": "Whitby"
      },
      {
        "supplier_city": "Kingston"
      },
      {
        "supplier_city": "Durango"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "Tavares"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "South Portland"
      },
      {
        "supplier_city": "Lynchburg"
      },
      {
        "supplier_city": "Rocky Hill"
      },
      {
        "supplier_city": "Miramar Beach"
      },
      {
        "supplier_city": "Spring Valley"
      },
      {
        "supplier_city": "Buffalo"
      },
      {
        "supplier_city": "Roanoke"
      },
      {
        "supplier_city": "Blaine"
      },
      {
        "supplier_city": "Vista"
      },
      {
        "supplier_city": "Cleveland"
      },
      {
        "supplier_city": "Northville"
      },
      {
        "supplier_city": "Erie"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Auburndale"
      },
      {
        "supplier_city": "Hyattsville"
      },
      {
        "supplier_city": "Grand Prairie"
      },
      {
        "supplier_city": "Menlo Park"
      },
      {
        "supplier_city": "Ventura"
      },
      {
        "supplier_city": "Clairmont"
      },
      {
        "supplier_city": "Eastlake"
      },
      {
        "supplier_city": "Pensacola"
      },
      {
        "supplier_city": "Waterbury"
      },
      {
        "supplier_city": "DeLand"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Chelmsford"
      },
      {
        "supplier_city": "Macon"
      },
      {
        "supplier_city": "Farmington"
      },
      {
        "supplier_city": "Stevens Point"
      },
      {
        "supplier_city": "Idaho Falls"
      },
      {
        "supplier_city": "Point Pleasant"
      },
      {
        "supplier_city": "Elyria"
      },
      {
        "supplier_city": "Laval"
      },
      {
        "supplier_city": "Oneida"
      },
      {
        "supplier_city": "Sahuarita"
      },
      {
        "supplier_city": "Louisville"
      },
      {
        "supplier_city": "Perth"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "Venice"
      },
      {
        "supplier_city": "Sagamore Beach"
      },
      {
        "supplier_city": "Little Rock"
      },
      {
        "supplier_city": "Morgantown"
      },
      {
        "supplier_city": "Alhambra"
      },
      {
        "supplier_city": "Franklin"
      },
      {
        "supplier_city": "Peachtree Corners"
      },
      {
        "supplier_city": "Williamsburg"
      },
      {
        "supplier_city": "Anchorage"
      },
      {
        "supplier_city": "Collinsville"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Camarillo"
      },
      {
        "supplier_city": "Lexington Park"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Harvard"
      },
      {
        "supplier_city": "Coral Gables"
      },
      {
        "supplier_city": "Chantilly"
      },
      {
        "supplier_city": "Greenville"
      },
      {
        "supplier_city": "Lindenhurst"
      },
      {
        "supplier_city": "Devon"
      },
      {
        "supplier_city": "Neosho"
      },
      {
        "supplier_city": "Abu Dhabi"
      },
      {
        "supplier_city": "Jersey City"
      },
      {
        "supplier_city": "New Orleans"
      },
      {
        "supplier_city": "Oak Park"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Milwaukee"
      },
      {
        "supplier_city": "Saint Paul"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Baton Rouge"
      },
      {
        "supplier_city": "Davie"
      },
      {
        "supplier_city": "Waterloo"
      },
      {
        "supplier_city": "Colorado Springs"
      },
      {
        "supplier_city": "Clifton"
      },
      {
        "supplier_city": "Concord"
      },
      {
        "supplier_city": "Carlsbad"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Wayne"
      },
      {
        "supplier_city": "Burlingame"
      },
      {
        "supplier_city": "Lund"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Alcobendas"
      },
      {
        "supplier_city": "Newton"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "Itasca"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "La Roquette-sur-Siagne"
      },
      {
        "supplier_city": "Auburndale"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Neuilly"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "King of Prussia"
      },
      {
        "supplier_city": "Radnor"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "La Roche-des-Arnauds"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "V\u00e1c"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Ra'anana"
      },
      {
        "supplier_city": "South Portland"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Brookfield"
      },
      {
        "supplier_city": "Longmont"
      },
      {
        "supplier_city": "Haifa"
      },
      {
        "supplier_city": "Kokomo"
      },
      {
        "supplier_city": "West Jordan"
      },
      {
        "supplier_city": "Waterloo"
      },
      {
        "supplier_city": "Ro\u017enov pod Radho\u0161t\u011bm"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Schaumburg"
      },
      {
        "supplier_city": "Tarlac City"
      },
      {
        "supplier_city": "Cebu City"
      },
      {
        "supplier_city": "Baltimore"
      },
      {
        "supplier_city": "Toulouse"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Colorado Springs"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Zagreb"
      },
      {
        "supplier_city": "Lake Oswego"
      },
      {
        "supplier_city": "Glen Ellyn"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "College Station"
      },
      {
        "supplier_city": "Livonia"
      },
      {
        "supplier_city": "Seremban"
      },
      {
        "supplier_city": "Syracuse"
      },
      {
        "supplier_city": "Stafford"
      },
      {
        "supplier_city": "Guangzhou"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Littleton"
      },
      {
        "supplier_city": "Huizhou"
      },
      {
        "supplier_city": "Anaheim"
      },
      {
        "supplier_city": "Forest Grove"
      },
      {
        "supplier_city": "Tracy"
      },
      {
        "supplier_city": "Suzhou"
      },
      {
        "supplier_city": "Chippewa Falls"
      },
      {
        "supplier_city": "Redmond"
      },
      {
        "supplier_city": "Logan"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Costa Mesa"
      },
      {
        "supplier_city": "Virginia Beach"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Eatontown"
      },
      {
        "supplier_city": "Jackson"
      },
      {
        "supplier_city": "Simpang Empat"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Dongguan"
      },
      {
        "supplier_city": "Union City"
      },
      {
        "supplier_city": "Sterling"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Santa Ana"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Rolling Hills Estates"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Pallamallawa"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Le Havre"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Marseille"
      },
      {
        "supplier_city": "Crawford"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "City of Brussels"
      },
      {
        "supplier_city": "Peachtree Corners"
      },
      {
        "supplier_city": "Plymouth"
      },
      {
        "supplier_city": "Jacksonville"
      },
      {
        "supplier_city": "Westborough"
      },
      {
        "supplier_city": "Ratingen"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Tempe"
      },
      {
        "supplier_city": "Dayton"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Lewisville"
      },
      {
        "supplier_city": "Hanson"
      },
      {
        "supplier_city": "Parsippany-Troy Hills"
      },
      {
        "supplier_city": "Wallington"
      },
      {
        "supplier_city": "Norcross"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Ypsilanti"
      },
      {
        "supplier_city": "Lebanon"
      },
      {
        "supplier_city": "Manassas"
      },
      {
        "supplier_city": "West Lebanon"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Frederick"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Frisco"
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Paramus"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Framingham"
      },
      {
        "supplier_city": "Dublin"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Powell"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Springfield"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Rae"
      },
      {
        "supplier_city": "Montevideo"
      },
      {
        "supplier_city": "Viljandi"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Porto Salvo"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Neuilly"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Porto"
      },
      {
        "supplier_city": "Coimbra"
      },
      {
        "supplier_city": "Lehi"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Foster City"
      },
      {
        "supplier_city": "Bellingham"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Orinda"
      },
      {
        "supplier_city": "Box Hill"
      },
      {
        "supplier_city": "Itasca"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Baar"
      },
      {
        "supplier_city": "Schaumburg"
      },
      {
        "supplier_city": "North Andover"
      },
      {
        "supplier_city": "Courbevoie"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Santa Monica"
      },
      {
        "supplier_city": "Haymarket"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Belleville"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Harrisonburg"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Heiloo"
      },
      {
        "supplier_city": "Ko\u0161ice"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Anchorage"
      },
      {
        "supplier_city": "San Rafael"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Tempe"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "La Garenne-Colombes"
      },
      {
        "supplier_city": "Tsuen Wan"
      },
      {
        "supplier_city": "Levallois-Perret"
      },
      {
        "supplier_city": "Herzliya"
      },
      {
        "supplier_city": "Espoo"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Coimbatore"
      },
      {
        "supplier_city": "Neu-Isenburg"
      },
      {
        "supplier_city": "Maebashi"
      },
      {
        "supplier_city": "Osaka"
      },
      {
        "supplier_city": "Issy-les-Moulineaux"
      },
      {
        "supplier_city": "Geneva"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Schaumburg"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Accra"
      },
      {
        "supplier_city": "Plymouth"
      },
      {
        "supplier_city": "Kaneohe"
      },
      {
        "supplier_city": "Buda\u00f6rs"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Perth"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Shenzhen"
      },
      {
        "supplier_city": "Fort Wayne"
      },
      {
        "supplier_city": "Espoo"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Stuttgart"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Medan"
      },
      {
        "supplier_city": "Petaling Jaya"
      },
      {
        "supplier_city": "Surabaya"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Yambol"
      },
      {
        "supplier_city": "Hyderabad"
      },
      {
        "supplier_city": "Calhoun"
      },
      {
        "supplier_city": "Whitsett"
      },
      {
        "supplier_city": "Gurugram"
      },
      {
        "supplier_city": "Campinas"
      },
      {
        "supplier_city": "Kolkata"
      },
      {
        "supplier_city": "Tehran"
      },
      {
        "supplier_city": "Bogot\u00e1"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Purchase"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "Guanajuato City"
      },
      {
        "supplier_city": "Bratislava"
      },
      {
        "supplier_city": "Riyadh"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "Smyrna"
      },
      {
        "supplier_city": "Oberursel (Taunus)"
      },
      {
        "supplier_city": "Brovary"
      },
      {
        "supplier_city": "Sofia"
      },
      {
        "supplier_city": "Davao City"
      },
      {
        "supplier_city": "Lisbon"
      },
      {
        "supplier_city": "Indaiatuba"
      },
      {
        "supplier_city": "Johor Bahru"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Lima"
      },
      {
        "supplier_city": "Yokohama"
      },
      {
        "supplier_city": "Noida"
      },
      {
        "supplier_city": "Nairobi"
      },
      {
        "supplier_city": "Mart\u00ednez"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Cebu City"
      },
      {
        "supplier_city": "Pondicherry"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Le Chambon-Feugerolles"
      },
      {
        "supplier_city": "Zagreb"
      },
      {
        "supplier_city": "Essen"
      },
      {
        "supplier_city": "Davie"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Kalisz"
      },
      {
        "supplier_city": "Pune"
      },
      {
        "supplier_city": "Grapevine"
      },
      {
        "supplier_city": "Dublin"
      },
      {
        "supplier_city": "Brunswick"
      },
      {
        "supplier_city": "Texcoco de Mora"
      },
      {
        "supplier_city": "Chernivtsi"
      },
      {
        "supplier_city": "Issaquah"
      },
      {
        "supplier_city": "Weert"
      },
      {
        "supplier_city": "Johannesburg"
      },
      {
        "supplier_city": "Markham"
      },
      {
        "supplier_city": "Krasnogorsk"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Athens"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Maple Valley"
      },
      {
        "supplier_city": "Belgrade"
      },
      {
        "supplier_city": "Budapest"
      },
      {
        "supplier_city": "Almaty"
      },
      {
        "supplier_city": "Rueil-Malmaison"
      },
      {
        "supplier_city": "Casablanca"
      },
      {
        "supplier_city": "Chatswood"
      },
      {
        "supplier_city": "Z\u00fcrich"
      },
      {
        "supplier_city": "Vilnius"
      },
      {
        "supplier_city": "Buccinasco"
      },
      {
        "supplier_city": "Petah Tikva"
      },
      {
        "supplier_city": "Las Condes"
      },
      {
        "supplier_city": "Nanjing"
      },
      {
        "supplier_city": "Chengdu"
      },
      {
        "supplier_city": "Itu"
      },
      {
        "supplier_city": "Brno"
      },
      {
        "supplier_city": "Le\u00f3n de Los Aldama"
      },
      {
        "supplier_city": "Kanas\u00edn Municipality"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Ho Chi Minh City"
      },
      {
        "supplier_city": "Bharuch"
      },
      {
        "supplier_city": "La doble p"
      },
      {
        "supplier_city": "Lviv"
      },
      {
        "supplier_city": "Auckland"
      },
      {
        "supplier_city": "Courbevoie"
      },
      {
        "supplier_city": "East Jakarta"
      },
      {
        "supplier_city": "Acapulco"
      },
      {
        "supplier_city": "Concord"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Cary"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "Dublin"
      },
      {
        "supplier_city": "Almere"
      },
      {
        "supplier_city": "Hillsboro"
      },
      {
        "supplier_city": "Livermore"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Tysons"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Santa Fe Springs"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Pune"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Basel"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Auburndale"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Newton"
      },
      {
        "supplier_city": "Westborough"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Dublin"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Pyrmont"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Bensenville"
      },
      {
        "supplier_city": "Shoreline"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Morton Grove"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Mesa"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Adelaide"
      },
      {
        "supplier_city": "St Kilda"
      },
      {
        "supplier_city": "St Kilda"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Auckland"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "Carlisle"
      },
      {
        "supplier_city": "Bloomington"
      },
      {
        "supplier_city": "Solon"
      },
      {
        "supplier_city": "Batavia"
      },
      {
        "supplier_city": "Pasadena"
      },
      {
        "supplier_city": "Bannockburn"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Lausanne"
      },
      {
        "supplier_city": "Saint-Denis"
      },
      {
        "supplier_city": "Halblech"
      },
      {
        "supplier_city": "Leipzig"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Villepinte"
      },
      {
        "supplier_city": "Schaffhausen"
      },
      {
        "supplier_city": "Tustin"
      },
      {
        "supplier_city": "Essen"
      },
      {
        "supplier_city": "Werdohl"
      },
      {
        "supplier_city": "H\u00e4ggenschwil"
      },
      {
        "supplier_city": "Bad Kreuznach"
      },
      {
        "supplier_city": "Friedrichshafen"
      },
      {
        "supplier_city": "Meyzieu"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Singen (Hohentwiel)"
      },
      {
        "supplier_city": "Altenstadt, Hesse"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "San Ramon"
      },
      {
        "supplier_city": "Schiphol-Rijk"
      },
      {
        "supplier_city": "Hillsboro"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Portsmouth"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "Upland"
      },
      {
        "supplier_city": "Jersey City"
      },
      {
        "supplier_city": "Southfield"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Syracuse"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "Framingham"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Sacramento"
      },
      {
        "supplier_city": "Duncan"
      },
      {
        "supplier_city": "Valrico"
      },
      {
        "supplier_city": "Keyser"
      },
      {
        "supplier_city": "Morgan Hill"
      },
      {
        "supplier_city": "Sudbury"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Eden Prairie"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Neu-Isenburg"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Harwood Heights"
      },
      {
        "supplier_city": "Feasterville"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Huntington Beach"
      },
      {
        "supplier_city": "Wall Township"
      },
      {
        "supplier_city": "Greenwood Village"
      },
      {
        "supplier_city": "Chicopee"
      },
      {
        "supplier_city": "Wichita"
      },
      {
        "supplier_city": "Dublin"
      },
      {
        "supplier_city": "San Antonio"
      },
      {
        "supplier_city": "Abington Township"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Thornton"
      },
      {
        "supplier_city": "Johannesburg"
      },
      {
        "supplier_city": "Tysons"
      },
      {
        "supplier_city": "Ponte Vedra Beach"
      },
      {
        "supplier_city": "Danville"
      },
      {
        "supplier_city": "Tucson"
      },
      {
        "supplier_city": "Mississauga"
      },
      {
        "supplier_city": "Charlotte Hall"
      },
      {
        "supplier_city": "Chelmsford"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "El Segundo"
      },
      {
        "supplier_city": "Lake Mary"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "Brisbane"
      },
      {
        "supplier_city": "Ogden"
      },
      {
        "supplier_city": "Troy"
      },
      {
        "supplier_city": "Doylestown"
      },
      {
        "supplier_city": "Grasbrunn"
      },
      {
        "supplier_city": "Schaumburg"
      },
      {
        "supplier_city": "Creve Coeur"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Santiago"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Elkridge"
      },
      {
        "supplier_city": "Albany"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Sandy Springs"
      },
      {
        "supplier_city": "Addison"
      },
      {
        "supplier_city": "Orem"
      },
      {
        "supplier_city": "Wrentham"
      },
      {
        "supplier_city": "Lake Oswego"
      },
      {
        "supplier_city": "Tempe"
      },
      {
        "supplier_city": "Stuttgart"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Woodland"
      },
      {
        "supplier_city": "Hamburg"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Danbury"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Surry Hills"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Coral Gables"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Fort Collins"
      },
      {
        "supplier_city": "Biot"
      },
      {
        "supplier_city": "Auburn"
      },
      {
        "supplier_city": "Miskolc"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "Ambler"
      },
      {
        "supplier_city": "Duluth"
      },
      {
        "supplier_city": "Nashua"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Andover"
      },
      {
        "supplier_city": "Rehoboth"
      },
      {
        "supplier_city": "Fort Worth"
      },
      {
        "supplier_city": "Huntington Beach"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Chandler"
      },
      {
        "supplier_city": "Newtown"
      },
      {
        "supplier_city": "Framingham"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Yerres"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Glen Rock"
      },
      {
        "supplier_city": "Norcross"
      },
      {
        "supplier_city": "Saint-Germain-en-Laye"
      },
      {
        "supplier_city": "Englewood"
      },
      {
        "supplier_city": "Yardley"
      },
      {
        "supplier_city": "Aurora"
      },
      {
        "supplier_city": "Santa Ana"
      },
      {
        "supplier_city": "Brookfield"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Hanoi"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Herzliya"
      },
      {
        "supplier_city": "Addison"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Johannesburg"
      },
      {
        "supplier_city": "Matawan"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Utrecht"
      },
      {
        "supplier_city": "Longmont"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Colorado Springs"
      },
      {
        "supplier_city": "Petaluma"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Bom Retiro do Sul"
      },
      {
        "supplier_city": "Oak Park"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Gresham"
      },
      {
        "supplier_city": "Breinigsville"
      },
      {
        "supplier_city": "Centennial"
      },
      {
        "supplier_city": "St. Gallen"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Z\u00fcrich"
      },
      {
        "supplier_city": "Tournefeuille"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Kirkland"
      },
      {
        "supplier_city": "Canton"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Toulouse"
      },
      {
        "supplier_city": "Netanya"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Plou\u00e9dern"
      },
      {
        "supplier_city": "S\u00e3o Bernardo do Campo"
      },
      {
        "supplier_city": "Glenview"
      },
      {
        "supplier_city": "Vandalia"
      },
      {
        "supplier_city": "Wantirna South"
      },
      {
        "supplier_city": "Landerneau"
      },
      {
        "supplier_city": "Rome"
      },
      {
        "supplier_city": "Sartrouville"
      },
      {
        "supplier_city": "Oud-Beijerland"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Santa Barbara"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Cupertino"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Aptos"
      },
      {
        "supplier_city": "McAllen"
      },
      {
        "supplier_city": "Sugar Land"
      },
      {
        "supplier_city": "Soquel"
      },
      {
        "supplier_city": "Garden Grove"
      },
      {
        "supplier_city": "Scotts Valley"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Shrewsbury"
      },
      {
        "supplier_city": "Derry"
      },
      {
        "supplier_city": "Valencia"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Westford"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Colorado Springs"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Spring"
      },
      {
        "supplier_city": "Dover"
      },
      {
        "supplier_city": "Aurora"
      },
      {
        "supplier_city": "Savannah"
      },
      {
        "supplier_city": "Hollis"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Round Rock"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Lafayette"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Moorpark"
      },
      {
        "supplier_city": "Bloomington"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Shakopee"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Mead"
      },
      {
        "supplier_city": "Oklahoma City"
      },
      {
        "supplier_city": "Eden Prairie"
      },
      {
        "supplier_city": "Boulogne-Billancourt"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "Yukon"
      },
      {
        "supplier_city": "Longmont"
      },
      {
        "supplier_city": "Aurora"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Leawood"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Sorgues"
      },
      {
        "supplier_city": "Hagfors"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Toulouse"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Rocky Hill"
      },
      {
        "supplier_city": "Fort Worth"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Greenwood Village"
      },
      {
        "supplier_city": "Newark"
      },
      {
        "supplier_city": "Covington"
      },
      {
        "supplier_city": "Baltimore"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Imperial"
      },
      {
        "supplier_city": "Lanham"
      },
      {
        "supplier_city": "Dundalk"
      },
      {
        "supplier_city": "Winchester"
      },
      {
        "supplier_city": "Sparrows Point"
      },
      {
        "supplier_city": "Roseville"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Bethesda"
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Cleveland"
      },
      {
        "supplier_city": "Athens"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Downey"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "Nashville"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "San Antonio"
      },
      {
        "supplier_city": "Sunrise"
      },
      {
        "supplier_city": "West Palm Beach"
      },
      {
        "supplier_city": "Encinitas"
      },
      {
        "supplier_city": "Sterling"
      },
      {
        "supplier_city": "Towson"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Anaheim"
      },
      {
        "supplier_city": "Reading"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Dahlonega"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Petah Tikva"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "Pringy"
      },
      {
        "supplier_city": "Bochum"
      },
      {
        "supplier_city": "Le Grand-Saconnex"
      },
      {
        "supplier_city": "La Roche-sur-Foron"
      },
      {
        "supplier_city": "Geneva"
      },
      {
        "supplier_city": "Vernier"
      },
      {
        "supplier_city": "Meyrin"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Brno"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Richardson"
      },
      {
        "supplier_city": "Pula"
      },
      {
        "supplier_city": "Sassenheim"
      },
      {
        "supplier_city": "Holsbeek"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Leiden"
      },
      {
        "supplier_city": "Saint-Martin-des-Champs"
      },
      {
        "supplier_city": "Issoire"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Villenave"
      },
      {
        "supplier_city": "\u010cakovec"
      },
      {
        "supplier_city": "Ceyz\u00e9riat"
      },
      {
        "supplier_city": "Lawrence Township"
      },
      {
        "supplier_city": "City of Brussels"
      },
      {
        "supplier_city": "Dolhasca"
      },
      {
        "supplier_city": "Garderen"
      },
      {
        "supplier_city": "Deventer"
      },
      {
        "supplier_city": "C\u00e9bazat"
      },
      {
        "supplier_city": "Panev\u0117\u017eys"
      },
      {
        "supplier_city": "Soest"
      },
      {
        "supplier_city": "Nieuwerkerk aan den IJssel"
      },
      {
        "supplier_city": "Morlaix"
      },
      {
        "supplier_city": "Lappeenranta"
      },
      {
        "supplier_city": "Besan\u00e7on"
      },
      {
        "supplier_city": "Versailles"
      },
      {
        "supplier_city": "Ojdula"
      },
      {
        "supplier_city": "Pi\u00e9gut-Pluviers"
      },
      {
        "supplier_city": "Egersund"
      },
      {
        "supplier_city": "Lannion"
      },
      {
        "supplier_city": "General Santos"
      },
      {
        "supplier_city": "La Chapelle"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Clermont-Ferrand"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Kent"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Mount Waverley"
      },
      {
        "supplier_city": "West Lebanon"
      },
      {
        "supplier_city": "Reno"
      },
      {
        "supplier_city": "Yerevan"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Ashland"
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Schaumburg"
      },
      {
        "supplier_city": "Eden Prairie"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Loures"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Southlake"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Hyderabad"
      },
      {
        "supplier_city": "Pune"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Nieuwegein"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Stuttgart"
      },
      {
        "supplier_city": "Farmers Branch"
      },
      {
        "supplier_city": "Westford"
      },
      {
        "supplier_city": "Pelham"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Cork"
      },
      {
        "supplier_city": "Huntsville"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Milan"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Ann Arbor"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "McLean"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Pune"
      },
      {
        "supplier_city": "Allentown"
      },
      {
        "supplier_city": "Longview"
      },
      {
        "supplier_city": "Herlev"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Syktyvkar"
      },
      {
        "supplier_city": "North Charleston"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Rennes"
      },
      {
        "supplier_city": "Amersfoort"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Farmingdale"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Rio de Janeiro"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "Bras\u00edlia"
      },
      {
        "supplier_city": "St. Louis"
      },
      {
        "supplier_city": "Brisbane"
      },
      {
        "supplier_city": "Tullahoma"
      },
      {
        "supplier_city": "Satu Mare"
      },
      {
        "supplier_city": "Grasbrunn"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "City of Brussels"
      },
      {
        "supplier_city": "\u00c9lancourt"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Savigny-sur-Orge"
      },
      {
        "supplier_city": "Morelia"
      },
      {
        "supplier_city": "Maulers"
      },
      {
        "supplier_city": "Pertheville-Ners"
      },
      {
        "supplier_city": "Grenoble"
      },
      {
        "supplier_city": "Rainvillers"
      },
      {
        "supplier_city": "Villemurlin"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Brest"
      },
      {
        "supplier_city": "Villeneuve-le-Roi"
      },
      {
        "supplier_city": "Sully-sur-Loire"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Rancho Cordova"
      },
      {
        "supplier_city": "Annapolis"
      },
      {
        "supplier_city": "Neuilly"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Versailles"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Tacoma"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Landisville"
      },
      {
        "supplier_city": "Levallois-Perret"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Tysons"
      },
      {
        "supplier_city": "Antwerp"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Eagan"
      },
      {
        "supplier_city": "Puteaux"
      },
      {
        "supplier_city": "Waterbury"
      },
      {
        "supplier_city": "Commerce"
      },
      {
        "supplier_city": "Glenview"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Kennesaw"
      },
      {
        "supplier_city": "Elmhurst"
      },
      {
        "supplier_city": "McAllen"
      },
      {
        "supplier_city": "Arlington"
      },
      {
        "supplier_city": "Twinsburg"
      },
      {
        "supplier_city": "Monroe"
      },
      {
        "supplier_city": "Livonia"
      },
      {
        "supplier_city": "Bedford"
      },
      {
        "supplier_city": "Amarillo"
      },
      {
        "supplier_city": "Frackville"
      },
      {
        "supplier_city": "Elgin"
      },
      {
        "supplier_city": "Walterboro"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Des Plaines"
      },
      {
        "supplier_city": "Schaumburg"
      },
      {
        "supplier_city": "Lake Bluff"
      },
      {
        "supplier_city": "Louisville"
      },
      {
        "supplier_city": "Mokena"
      },
      {
        "supplier_city": "Hatfield"
      },
      {
        "supplier_city": "Kernersville"
      },
      {
        "supplier_city": "Appleton"
      },
      {
        "supplier_city": "Kendallville"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Orlando"
      },
      {
        "supplier_city": "Frankfort"
      },
      {
        "supplier_city": "Baton Rouge"
      },
      {
        "supplier_city": "Lancaster"
      },
      {
        "supplier_city": "Broadview"
      },
      {
        "supplier_city": "La Porte"
      },
      {
        "supplier_city": "Park Ridge"
      },
      {
        "supplier_city": "San Leandro"
      },
      {
        "supplier_city": "Pueblo"
      },
      {
        "supplier_city": "Elizabethtown"
      },
      {
        "supplier_city": "Carol Stream"
      },
      {
        "supplier_city": "Martinsburg"
      },
      {
        "supplier_city": "Macon"
      },
      {
        "supplier_city": "Bentonville"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Bridgeview"
      },
      {
        "supplier_city": "Rockford"
      },
      {
        "supplier_city": "Azusa"
      },
      {
        "supplier_city": "Angola"
      },
      {
        "supplier_city": "Darlington"
      },
      {
        "supplier_city": "El Paso"
      },
      {
        "supplier_city": "Pharr"
      },
      {
        "supplier_city": "Hartland"
      },
      {
        "supplier_city": "Danvers"
      },
      {
        "supplier_city": "Kent"
      },
      {
        "supplier_city": "Orange"
      },
      {
        "supplier_city": "Elk Grove Village"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "Bryan"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Hopkinton"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Ontario"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "The Hague"
      },
      {
        "supplier_city": "Karlsruhe"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Bay City"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Chester"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Helsinki"
      },
      {
        "supplier_city": "Toru\u0144"
      },
      {
        "supplier_city": "Espoo"
      },
      {
        "supplier_city": "Tampere"
      },
      {
        "supplier_city": "Tallinn"
      },
      {
        "supplier_city": "Gothenburg"
      },
      {
        "supplier_city": "Dortmund"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Conlie"
      },
      {
        "supplier_city": "Vendargues"
      },
      {
        "supplier_city": "Berwyn"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "North Melbourne"
      },
      {
        "supplier_city": "Eybens"
      },
      {
        "supplier_city": "Lieusaint"
      },
      {
        "supplier_city": "Sartrouville"
      },
      {
        "supplier_city": "Amboise"
      },
      {
        "supplier_city": "Brive-la-Gaillarde"
      },
      {
        "supplier_city": "Le Mans"
      },
      {
        "supplier_city": "Lunel"
      },
      {
        "supplier_city": "Avignon"
      },
      {
        "supplier_city": "Chamb\u00e9ry"
      },
      {
        "supplier_city": "Rosny-sous-Bois"
      },
      {
        "supplier_city": "Ferney-Voltaire"
      },
      {
        "supplier_city": "Essigny-le-Grand"
      },
      {
        "supplier_city": "Lorient"
      },
      {
        "supplier_city": "M\u00e9n\u00e9villers"
      },
      {
        "supplier_city": "Thaon-les-Vosges"
      },
      {
        "supplier_city": "Joinville"
      },
      {
        "supplier_city": "Henderson"
      },
      {
        "supplier_city": "Les Sables-d'Olonne"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Conflans-Sainte-Honorine"
      },
      {
        "supplier_city": "Nancy"
      },
      {
        "supplier_city": "Roseville"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Bagneux"
      },
      {
        "supplier_city": "B\u00e9ziers"
      },
      {
        "supplier_city": "Nanterre"
      },
      {
        "supplier_city": "Mulhouse"
      },
      {
        "supplier_city": "Cayenne"
      },
      {
        "supplier_city": "Pertuis"
      },
      {
        "supplier_city": "Hy\u00e8res"
      },
      {
        "supplier_city": "Pernes-les-Fontaines"
      },
      {
        "supplier_city": "Neuilly"
      },
      {
        "supplier_city": "Mennecy"
      },
      {
        "supplier_city": "La Seyne-sur-Mer"
      },
      {
        "supplier_city": "Cr\u00e9mieu"
      },
      {
        "supplier_city": "Docelles"
      },
      {
        "supplier_city": "Compi\u00e8gne"
      },
      {
        "supplier_city": "Boulogne-Billancourt"
      },
      {
        "supplier_city": "Douzat"
      },
      {
        "supplier_city": "Saint-Maurice"
      },
      {
        "supplier_city": "Cirey-sur-Blaise"
      },
      {
        "supplier_city": "Le Havre"
      },
      {
        "supplier_city": "Bayel"
      },
      {
        "supplier_city": "Antony"
      },
      {
        "supplier_city": "Pau"
      },
      {
        "supplier_city": "Airion"
      },
      {
        "supplier_city": "Le Plessis-Bouchard"
      },
      {
        "supplier_city": "Grans"
      },
      {
        "supplier_city": "Averdoingt"
      },
      {
        "supplier_city": "Pont-Sainte-Maxence"
      },
      {
        "supplier_city": "Nogent-le-Rotrou"
      },
      {
        "supplier_city": "Rueil-Malmaison"
      },
      {
        "supplier_city": "Pforzheim"
      },
      {
        "supplier_city": "Edmonton"
      },
      {
        "supplier_city": "Marseille"
      },
      {
        "supplier_city": "Ranong"
      },
      {
        "supplier_city": "Montauban"
      },
      {
        "supplier_city": "Saint-Jacques-de-la-Lande"
      },
      {
        "supplier_city": "Garches"
      },
      {
        "supplier_city": "Heverlee"
      },
      {
        "supplier_city": "\u00c9vry"
      },
      {
        "supplier_city": "Fontenay-sous-Bois"
      },
      {
        "supplier_city": "Saint-Marcel-Bel-Accueil"
      },
      {
        "supplier_city": "Reims"
      },
      {
        "supplier_city": "Saint-Germain-en-Laye"
      },
      {
        "supplier_city": "M\u00e2con"
      },
      {
        "supplier_city": "Aix-en-Provence"
      },
      {
        "supplier_city": "Foulain"
      },
      {
        "supplier_city": "La Ravoire"
      },
      {
        "supplier_city": "Noisy-le-Grand"
      },
      {
        "supplier_city": "P\u00e9lissanne"
      },
      {
        "supplier_city": "Brest"
      },
      {
        "supplier_city": "Saint-Nazaire-les-Eymes"
      },
      {
        "supplier_city": "Colmar"
      },
      {
        "supplier_city": "N\u00eemes"
      },
      {
        "supplier_city": "Bois-Colombes"
      },
      {
        "supplier_city": "Port-la-Nouvelle"
      },
      {
        "supplier_city": "Bondy"
      },
      {
        "supplier_city": "Maisons-Laffitte"
      },
      {
        "supplier_city": "V\u00e4ster\u00e5s"
      },
      {
        "supplier_city": "Friville-Escarbotin"
      },
      {
        "supplier_city": "Imperatriz"
      },
      {
        "supplier_city": "Saint-Maurin"
      },
      {
        "supplier_city": "Bangkok"
      },
      {
        "supplier_city": "La Rochelle"
      },
      {
        "supplier_city": "Rochefort"
      },
      {
        "supplier_city": "Hussigny-Godbrange"
      },
      {
        "supplier_city": "Rennes"
      },
      {
        "supplier_city": "Hermeray"
      },
      {
        "supplier_city": "Ontex"
      },
      {
        "supplier_city": "Chelmsford"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Messina"
      },
      {
        "supplier_city": "Lima"
      },
      {
        "supplier_city": "Cali"
      },
      {
        "supplier_city": "Colomiers"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Beirut"
      },
      {
        "supplier_city": "Naucalpan de Ju\u00e1rez Municipality"
      },
      {
        "supplier_city": "Saint Petersburg"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Gda\u0144sk"
      },
      {
        "supplier_city": "Kuopio"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Passo Fundo"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Toulon"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Castricum"
      },
      {
        "supplier_city": "Delhi"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Cape Town"
      },
      {
        "supplier_city": "Midland Park"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Compton"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Danville"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Red Bank"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Mulhouse"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Bras\u00edlia"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Corte"
      },
      {
        "supplier_city": "Barentin"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Budapest"
      },
      {
        "supplier_city": "Leixlip"
      },
      {
        "supplier_city": "Pharr"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Fort Collins"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Gif-sur-Yvette"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Senai"
      },
      {
        "supplier_city": "Fontana"
      },
      {
        "supplier_city": "Newington"
      },
      {
        "supplier_city": "Voisins-le-Bretonneux"
      },
      {
        "supplier_city": "Huntsville"
      },
      {
        "supplier_city": "Johor Bahru"
      },
      {
        "supplier_city": "Englewood"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Z\u00fcrich"
      },
      {
        "supplier_city": "Ontario"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Saumur"
      },
      {
        "supplier_city": "Huntersville"
      },
      {
        "supplier_city": "Saint Paul"
      },
      {
        "supplier_city": "Pensacola"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Galway"
      },
      {
        "supplier_city": "Endicott"
      },
      {
        "supplier_city": "Calexico"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Reynosa"
      },
      {
        "supplier_city": "Bordeaux"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Harvest"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Chippewa Falls"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Southlake"
      },
      {
        "supplier_city": "Owens Cross Roads"
      },
      {
        "supplier_city": "Cergy"
      },
      {
        "supplier_city": "Saint-Germain-en-Laye"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Grenoble"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Pleasant Prairie"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Carrollton"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Uniondale"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Brno"
      },
      {
        "supplier_city": "Barueri"
      },
      {
        "supplier_city": "Tatab\u00e1nya"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Ch\u00e2teaudun"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Owego"
      },
      {
        "supplier_city": "Plaisir"
      },
      {
        "supplier_city": "Cary"
      },
      {
        "supplier_city": "Schaumburg"
      },
      {
        "supplier_city": "Newark"
      },
      {
        "supplier_city": "Turtle Lake"
      },
      {
        "supplier_city": "Neuhausen am Rheinfall"
      },
      {
        "supplier_city": "Sriperumbudur"
      },
      {
        "supplier_city": "Northglenn"
      },
      {
        "supplier_city": "Richardson"
      },
      {
        "supplier_city": "Beaverton"
      },
      {
        "supplier_city": "Huntsville"
      },
      {
        "supplier_city": "Guadalupe"
      },
      {
        "supplier_city": "Montigny-le-Bretonneux"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Tlajomulco de Zu\u00f1iga"
      },
      {
        "supplier_city": "Costa Mesa"
      },
      {
        "supplier_city": "Clovis"
      },
      {
        "supplier_city": "Fort Mill"
      },
      {
        "supplier_city": "Guyancourt"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Dayton"
      },
      {
        "supplier_city": "Orlando"
      },
      {
        "supplier_city": "San Gabriel"
      },
      {
        "supplier_city": "Rockville"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "White Oak"
      },
      {
        "supplier_city": "College Park"
      },
      {
        "supplier_city": "Silver Spring"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Calgary"
      },
      {
        "supplier_city": "Peoria"
      },
      {
        "supplier_city": "Framingham"
      },
      {
        "supplier_city": "Thousand Oaks"
      },
      {
        "supplier_city": "Charleston"
      },
      {
        "supplier_city": "Moss Point"
      },
      {
        "supplier_city": "Jacksonville"
      },
      {
        "supplier_city": "Midland"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Norfolk"
      },
      {
        "supplier_city": "Tucson"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Cincinnati"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Bettendorf"
      },
      {
        "supplier_city": "Overland Park"
      },
      {
        "supplier_city": "Nitro"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Baton Rouge"
      },
      {
        "supplier_city": "Leander"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Bohemia"
      },
      {
        "supplier_city": "Fort Lauderdale"
      },
      {
        "supplier_city": "Sunrise"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Papendrecht"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "Stoneham"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "Redmond"
      },
      {
        "supplier_city": "D\u00fcsseldorf"
      },
      {
        "supplier_city": "North Highlands"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Florence"
      },
      {
        "supplier_city": "Woburn"
      },
      {
        "supplier_city": "Aubi\u00e8re"
      },
      {
        "supplier_city": "Boisbriand"
      },
      {
        "supplier_city": "Abu Dhabi"
      },
      {
        "supplier_city": "Beaver"
      },
      {
        "supplier_city": "Braize"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Roosendaal"
      },
      {
        "supplier_city": "Saint-Herblain"
      },
      {
        "supplier_city": "La Merlati\u00e8re"
      },
      {
        "supplier_city": "Basel"
      },
      {
        "supplier_city": "Alameda"
      },
      {
        "supplier_city": "Ch\u00e2teaudun"
      },
      {
        "supplier_city": "Amherst"
      },
      {
        "supplier_city": "Riga"
      },
      {
        "supplier_city": "Arkel"
      },
      {
        "supplier_city": "Vaassen"
      },
      {
        "supplier_city": "Trappes"
      },
      {
        "supplier_city": "Luxembourg"
      },
      {
        "supplier_city": "Salleb\u0153uf"
      },
      {
        "supplier_city": "Wilton"
      },
      {
        "supplier_city": "Fort-de-France"
      },
      {
        "supplier_city": "Ivry-sur-Seine"
      },
      {
        "supplier_city": "Torrance"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Alexandria"
      },
      {
        "supplier_city": "El Segundo"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Bayonne"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Miami Beach"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Morrisville"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Sofia"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Parsippany-Troy Hills"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Duffel"
      },
      {
        "supplier_city": "Nashua"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Doral"
      },
      {
        "supplier_city": "Hyderabad"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Santa Monica"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Carrollton"
      },
      {
        "supplier_city": "Berkeley Lake"
      },
      {
        "supplier_city": "Cincinnati"
      },
      {
        "supplier_city": "Star\u00e9 M\u011bsto"
      },
      {
        "supplier_city": "City of Brussels"
      },
      {
        "supplier_city": "Rotterdam"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Westborough"
      },
      {
        "supplier_city": "Saskatoon"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Marlborough"
      },
      {
        "supplier_city": "Rockville"
      },
      {
        "supplier_city": "West Lake Hills"
      },
      {
        "supplier_city": "Fairport"
      },
      {
        "supplier_city": "Richardson"
      },
      {
        "supplier_city": "Williamsville"
      },
      {
        "supplier_city": "Kolding"
      },
      {
        "supplier_city": "Porto Alegre"
      },
      {
        "supplier_city": "Settala"
      },
      {
        "supplier_city": "Saint Paul"
      },
      {
        "supplier_city": "Issy-les-Moulineaux"
      },
      {
        "supplier_city": "Elk Grove"
      },
      {
        "supplier_city": "Burwood"
      },
      {
        "supplier_city": "Jeffersonville"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Costa Mesa"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Harrisburg"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Cham"
      },
      {
        "supplier_city": "Courbevoie"
      },
      {
        "supplier_city": "Eagan"
      },
      {
        "supplier_city": "Medell\u00edn"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Carol Stream"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Abreu e Lima"
      },
      {
        "supplier_city": "Monterrey"
      },
      {
        "supplier_city": "Tilburg"
      },
      {
        "supplier_city": "Puebla City"
      },
      {
        "supplier_city": "Acworth"
      },
      {
        "supplier_city": "Nantes"
      },
      {
        "supplier_city": "Le\u00f3n de Los Aldama"
      },
      {
        "supplier_city": "Doral"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "Bedford"
      },
      {
        "supplier_city": "Cham"
      },
      {
        "supplier_city": "Fort Worth"
      },
      {
        "supplier_city": "Bangkok"
      },
      {
        "supplier_city": "Quito"
      },
      {
        "supplier_city": "Aschheim"
      },
      {
        "supplier_city": "Alcobendas"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Valence"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Bellows Falls"
      },
      {
        "supplier_city": "Buffalo"
      },
      {
        "supplier_city": "Montigny-le-Bretonneux"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Johannesburg"
      },
      {
        "supplier_city": "Les Ulis"
      },
      {
        "supplier_city": "Mississauga"
      },
      {
        "supplier_city": "Rancho Cucamonga"
      },
      {
        "supplier_city": "Memphis"
      },
      {
        "supplier_city": "Mira Loma"
      },
      {
        "supplier_city": "Lima"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "M\u00e9rida"
      },
      {
        "supplier_city": "City of Brussels"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Joliet"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Carlsbad"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Rosersberg"
      },
      {
        "supplier_city": "Bogot\u00e1"
      },
      {
        "supplier_city": "Santiago"
      },
      {
        "supplier_city": "Santa Ana"
      },
      {
        "supplier_city": "Hat Yai"
      },
      {
        "supplier_city": "Weston"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Apex"
      },
      {
        "supplier_city": "Campbell"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Gainesville"
      },
      {
        "supplier_city": "Louisville"
      },
      {
        "supplier_city": "Pasadena"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Beaverton"
      },
      {
        "supplier_city": "Cold Spring"
      },
      {
        "supplier_city": "Bowling Green"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "South Jordan"
      },
      {
        "supplier_city": "Norwood"
      },
      {
        "supplier_city": "Champaign"
      },
      {
        "supplier_city": "Kfar Saba"
      },
      {
        "supplier_city": "Aurora"
      },
      {
        "supplier_city": "Livonia"
      },
      {
        "supplier_city": "Parker"
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Hopkins"
      },
      {
        "supplier_city": "Maumee"
      },
      {
        "supplier_city": "Glendale"
      },
      {
        "supplier_city": "Fort Wayne"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Roseville"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Woburn"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Ellicott City"
      },
      {
        "supplier_city": "Pasadena"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Quincy"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Waltham"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Fairfield"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Athens"
      },
      {
        "supplier_city": "Jacksonville"
      },
      {
        "supplier_city": "Billerica"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Hillsboro"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Slidell"
      },
      {
        "supplier_city": "Schiphol-Rijk"
      },
      {
        "supplier_city": "Nashville"
      },
      {
        "supplier_city": "West Valley City"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Elk Grove Village"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Tempe"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Memphis"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "M\u00fcnster"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Cork"
      },
      {
        "supplier_city": "Taipei"
      },
      {
        "supplier_city": "Marlborough"
      },
      {
        "supplier_city": "Malta"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Geneva"
      },
      {
        "supplier_city": "Essex Junction"
      },
      {
        "supplier_city": "Hopewell Junction"
      },
      {
        "supplier_city": "Armonk"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "Saratoga Springs"
      },
      {
        "supplier_city": "Dresden"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Odoornerveen"
      },
      {
        "supplier_city": "Yokohama"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Malta"
      },
      {
        "supplier_city": "Albany"
      },
      {
        "supplier_city": "Ballston Spa"
      },
      {
        "supplier_city": "Leuven"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Mesa"
      },
      {
        "supplier_city": "Aurora"
      },
      {
        "supplier_city": "Bellevue"
      },
      {
        "supplier_city": "Hillsboro"
      },
      {
        "supplier_city": "Tempe"
      },
      {
        "supplier_city": "Glendale"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "Virginia Beach"
      },
      {
        "supplier_city": "Alexandria"
      },
      {
        "supplier_city": "Wellington"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Little Rock"
      },
      {
        "supplier_city": "Englewood"
      },
      {
        "supplier_city": "Anchorage"
      },
      {
        "supplier_city": "Santa Rosa"
      },
      {
        "supplier_city": "San Clemente"
      },
      {
        "supplier_city": "Birmingham"
      },
      {
        "supplier_city": "Argyle"
      },
      {
        "supplier_city": "Fayetteville"
      },
      {
        "supplier_city": "Olde West Chester"
      },
      {
        "supplier_city": "Lincoln"
      },
      {
        "supplier_city": "North Charleston"
      },
      {
        "supplier_city": "Akron"
      },
      {
        "supplier_city": "Danvers"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Vilonia"
      },
      {
        "supplier_city": "Bolingbrook"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "Nutley"
      },
      {
        "supplier_city": "Rochester"
      },
      {
        "supplier_city": "Atkins"
      },
      {
        "supplier_city": "Broomfield"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "South Charleston"
      },
      {
        "supplier_city": "Lake Leelanau"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Bend"
      },
      {
        "supplier_city": "Skokie"
      },
      {
        "supplier_city": "Lantana"
      },
      {
        "supplier_city": "Conway"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Naperville"
      },
      {
        "supplier_city": "Daphne"
      },
      {
        "supplier_city": "Boca Raton"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "Windham"
      },
      {
        "supplier_city": "Tustin"
      },
      {
        "supplier_city": "Greenbrier"
      },
      {
        "supplier_city": "Loveland"
      },
      {
        "supplier_city": "Greenwood Village"
      },
      {
        "supplier_city": "Doylestown"
      },
      {
        "supplier_city": "Downers Grove"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "Coweta"
      },
      {
        "supplier_city": "Washington"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Chapel Hill"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Weehawken"
      },
      {
        "supplier_city": "Marblehead"
      },
      {
        "supplier_city": "Cedarburg"
      },
      {
        "supplier_city": "Goshen"
      },
      {
        "supplier_city": "Wheaton"
      },
      {
        "supplier_city": "Southfield"
      },
      {
        "supplier_city": "Tulsa"
      },
      {
        "supplier_city": "Milwaukee"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Independence"
      },
      {
        "supplier_city": "Memphis"
      },
      {
        "supplier_city": "Tucson"
      },
      {
        "supplier_city": "Omaha"
      },
      {
        "supplier_city": "Nashville"
      },
      {
        "supplier_city": "North Little Rock"
      },
      {
        "supplier_city": "Westlake"
      },
      {
        "supplier_city": "Kentfield"
      },
      {
        "supplier_city": "Memphis"
      },
      {
        "supplier_city": "Del Mar"
      },
      {
        "supplier_city": "Bagnolet"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Neuilly"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Norwalk"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Derio"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Bratislava"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Aliso Viejo"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "McKinney"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Vantaa"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Helsinki"
      },
      {
        "supplier_city": "Riga"
      },
      {
        "supplier_city": "Fujairah"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Minsk"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Shakopee"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Mission Viejo"
      },
      {
        "supplier_city": "Cupertino"
      },
      {
        "supplier_city": "Hopkins"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Lafayette"
      },
      {
        "supplier_city": "Evergreen"
      },
      {
        "supplier_city": "Roseville"
      },
      {
        "supplier_city": "Aliso Viejo"
      },
      {
        "supplier_city": "Louisville"
      },
      {
        "supplier_city": "Southlake"
      },
      {
        "supplier_city": "Littleton"
      },
      {
        "supplier_city": "Manor"
      },
      {
        "supplier_city": "Bloomington"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Suwanee"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Laredo"
      },
      {
        "supplier_city": "Glen Allen"
      },
      {
        "supplier_city": "Lake Jackson"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Omaha"
      },
      {
        "supplier_city": "Troy"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Cleveland"
      },
      {
        "supplier_city": "Bethlehem"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "Provo"
      },
      {
        "supplier_city": "Sofia"
      },
      {
        "supplier_city": "Bras\u00edlia"
      },
      {
        "supplier_city": "Fernandina Beach"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Vista"
      },
      {
        "supplier_city": "Augusta"
      },
      {
        "supplier_city": "Longwood"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Fort Collins"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Cupertino"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Aurora"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Medan"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Albany"
      },
      {
        "supplier_city": "Lansing"
      },
      {
        "supplier_city": "Tempe"
      },
      {
        "supplier_city": "Boise"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Jacksonville"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Liller\u00f8d"
      },
      {
        "supplier_city": "Greeley"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Boulogne-Billancourt"
      },
      {
        "supplier_city": "Rosemont"
      },
      {
        "supplier_city": "Brentwood"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Corvallis"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "Greenbelt"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Clute"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Auburn Hills"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "S\u00e3o Leopoldo"
      },
      {
        "supplier_city": "Puteaux"
      },
      {
        "supplier_city": "Lab\u00e8ge"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Orsay"
      },
      {
        "supplier_city": "Fleury-les-Aubrais"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Appleton"
      },
      {
        "supplier_city": "Earth"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Toulouse"
      },
      {
        "supplier_city": "Levallois-Perret"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "West Newbury"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Greenwood Village"
      },
      {
        "supplier_city": "Budapest"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Strasbourg"
      },
      {
        "supplier_city": "Suresnes"
      },
      {
        "supplier_city": "Nantes"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Somerville"
      },
      {
        "supplier_city": "Walldorf"
      },
      {
        "supplier_city": "Bangkok"
      },
      {
        "supplier_city": "Espoo"
      },
      {
        "supplier_city": "Aix-en-Provence"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "Hallbergmoos"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Elk Grove"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Cupertino"
      },
      {
        "supplier_city": "Pueblo"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Nice"
      },
      {
        "supplier_city": "Hawthorn"
      },
      {
        "supplier_city": "Majalgaon , Beed"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Bekasi"
      },
      {
        "supplier_city": "Flanders"
      },
      {
        "supplier_city": "Surabaya"
      },
      {
        "supplier_city": "South Jakarta"
      },
      {
        "supplier_city": "Medan"
      },
      {
        "supplier_city": "Tangerang"
      },
      {
        "supplier_city": "East Jakarta"
      },
      {
        "supplier_city": "West Jakarta"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "McLean"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Sacramento"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "King of Prussia"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Ch\u00e2teaudun"
      },
      {
        "supplier_city": "Fort-de-France"
      },
      {
        "supplier_city": "Saint-Herblain"
      },
      {
        "supplier_city": "Braize"
      },
      {
        "supplier_city": "Alameda"
      },
      {
        "supplier_city": "Beaver"
      },
      {
        "supplier_city": "La Merlati\u00e8re"
      },
      {
        "supplier_city": "Riga"
      },
      {
        "supplier_city": "Basel"
      },
      {
        "supplier_city": "Boisbriand"
      },
      {
        "supplier_city": "Abu Dhabi"
      },
      {
        "supplier_city": "Salleb\u0153uf"
      },
      {
        "supplier_city": "Amherst"
      },
      {
        "supplier_city": "Arkel"
      },
      {
        "supplier_city": "Wilton"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Ivry-sur-Seine"
      },
      {
        "supplier_city": "Florence"
      },
      {
        "supplier_city": "Vaassen"
      },
      {
        "supplier_city": "Woburn"
      },
      {
        "supplier_city": "Luxembourg"
      },
      {
        "supplier_city": "Trappes"
      },
      {
        "supplier_city": "Aubi\u00e8re"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Roosendaal"
      },
      {
        "supplier_city": "Miami"
      },
      {
        "supplier_city": "Golden"
      },
      {
        "supplier_city": "Wayne"
      },
      {
        "supplier_city": "Morelia"
      },
      {
        "supplier_city": "Baton Rouge"
      },
      {
        "supplier_city": "Chesterbrook"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Franklin"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "Jackson"
      },
      {
        "supplier_city": "Berwyn"
      },
      {
        "supplier_city": "Neenah"
      },
      {
        "supplier_city": "East Lansing"
      },
      {
        "supplier_city": "La doble p"
      },
      {
        "supplier_city": "Cranston"
      },
      {
        "supplier_city": "Conshohocken"
      },
      {
        "supplier_city": "Mechanicsburg"
      },
      {
        "supplier_city": "Overland Park"
      },
      {
        "supplier_city": "Indianapolis"
      },
      {
        "supplier_city": "Torrejoncillo"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Fairport"
      },
      {
        "supplier_city": "Kirkland"
      },
      {
        "supplier_city": "Oakbrook Terrace"
      },
      {
        "supplier_city": "Geneva"
      },
      {
        "supplier_city": "Blois"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Monterrey"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Acapulco"
      },
      {
        "supplier_city": "Lewisville"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Puente Alto"
      },
      {
        "supplier_city": "San Antonio"
      },
      {
        "supplier_city": "Garanhuns"
      },
      {
        "supplier_city": "\u00c9cully"
      },
      {
        "supplier_city": "Saint Petersburg"
      },
      {
        "supplier_city": "Nieuwegein"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Morole\u00f3n"
      },
      {
        "supplier_city": "Bloomington"
      },
      {
        "supplier_city": "Uruapan"
      },
      {
        "supplier_city": "Greenwood Village"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Woburn"
      },
      {
        "supplier_city": "Irving"
      },
      {
        "supplier_city": "Southfield"
      },
      {
        "supplier_city": "Grayslake"
      },
      {
        "supplier_city": "Jacksonville"
      },
      {
        "supplier_city": "Providence"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Tepatitl\u00e1n de Morelos"
      },
      {
        "supplier_city": "Brentwood"
      },
      {
        "supplier_city": "Minsk"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "Blue Ash"
      },
      {
        "supplier_city": "Colorado Springs"
      },
      {
        "supplier_city": "Cancun"
      },
      {
        "supplier_city": "Medan"
      },
      {
        "supplier_city": "M\u00e9rida"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Cincinnati"
      },
      {
        "supplier_city": "Imperatriz"
      },
      {
        "supplier_city": "Guadalupe"
      },
      {
        "supplier_city": "Troy"
      },
      {
        "supplier_city": "Memphis"
      },
      {
        "supplier_city": "Sim\u00e3o Dias"
      },
      {
        "supplier_city": "Tlaxcala de Xicot\u00e9ncatl"
      },
      {
        "supplier_city": "Concord"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Peachtree City"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Porto Alegre"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Mishawaka"
      },
      {
        "supplier_city": "Sacramento"
      },
      {
        "supplier_city": "Machesney Park"
      },
      {
        "supplier_city": "Michigan City"
      },
      {
        "supplier_city": "Monclova"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Royal Oak"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Troy"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Bridgeport"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Spring"
      },
      {
        "supplier_city": "Neuss"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Greenbelt"
      },
      {
        "supplier_city": "Chantilly"
      },
      {
        "supplier_city": "Mount Waverley"
      },
      {
        "supplier_city": "Chelmsford"
      },
      {
        "supplier_city": "Gaithersburg"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Rockville"
      },
      {
        "supplier_city": "Silver Spring"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Lowell"
      },
      {
        "supplier_city": "Bethesda"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Fairfax"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Surry Hills"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Jerusalem"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Los Altos"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Hayward"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Allen"
      },
      {
        "supplier_city": "Horsham"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Moon Township"
      },
      {
        "supplier_city": "Coraopolis"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "Grimbergen"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Rome"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "Milan"
      },
      {
        "supplier_city": "Rueil-Malmaison"
      },
      {
        "supplier_city": "Ingolstadt"
      },
      {
        "supplier_city": "Jerusalem"
      },
      {
        "supplier_city": "Beijing"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Utrecht"
      },
      {
        "supplier_city": "Woburn"
      },
      {
        "supplier_city": "Seoul"
      },
      {
        "supplier_city": "Docklands"
      },
      {
        "supplier_city": "Taastrup"
      },
      {
        "supplier_city": "Petaling Jaya"
      },
      {
        "supplier_city": "Z\u00fcrich"
      },
      {
        "supplier_city": "Ata\u015fehir"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Ankara"
      },
      {
        "supplier_city": "Tianjin"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Delray Beach"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Seymour"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Milpitas"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Wilmington"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Brest"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Calabasas"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Cairo"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Saint-Priest"
      },
      {
        "supplier_city": "Curitiba"
      },
      {
        "supplier_city": "Voorburg"
      },
      {
        "supplier_city": "Sofia"
      },
      {
        "supplier_city": "Guadalajara"
      },
      {
        "supplier_city": "Pune"
      },
      {
        "supplier_city": "Kanchipuram"
      },
      {
        "supplier_city": "Winnipeg"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Puteaux"
      },
      {
        "supplier_city": "New Delhi"
      },
      {
        "supplier_city": "Krak\u00f3w"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Patna"
      },
      {
        "supplier_city": "Delhi"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Downers Grove"
      },
      {
        "supplier_city": "Noida"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "S\u00e3o Leopoldo"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Hellerup"
      },
      {
        "supplier_city": "Blagnac"
      },
      {
        "supplier_city": "Mississauga"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "La doble p"
      },
      {
        "supplier_city": "Herzliya"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Kuala Lumpur"
      },
      {
        "supplier_city": "The Hague"
      },
      {
        "supplier_city": "Toulouse"
      },
      {
        "supplier_city": "Stone Mountain"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Avon"
      },
      {
        "supplier_city": "Lebanon"
      },
      {
        "supplier_city": "Oakbrook Terrace"
      },
      {
        "supplier_city": "Saint Petersburg"
      },
      {
        "supplier_city": "Villa Park"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Deerfield Beach"
      },
      {
        "supplier_city": "Bellmawr"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Jerusalem"
      },
      {
        "supplier_city": "Be'er Ora"
      },
      {
        "supplier_city": "Columbus"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Chamblee"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Upper Saddle River"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Fredericton"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Neuilly"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Barueri"
      },
      {
        "supplier_city": "Sandton"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "Lake Forest"
      },
      {
        "supplier_city": "Harrow"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Mascouche"
      },
      {
        "supplier_city": "Swalmen"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Campbell"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Bolingbrook"
      },
      {
        "supplier_city": "Port Murray"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Hillside"
      },
      {
        "supplier_city": "New Providence"
      },
      {
        "supplier_city": "Conifer"
      },
      {
        "supplier_city": "Ventura"
      },
      {
        "supplier_city": "Conshohocken"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Newark"
      },
      {
        "supplier_city": "San Rafael"
      },
      {
        "supplier_city": "Highlands Ranch"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Dearborn"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Bingham Farms"
      },
      {
        "supplier_city": "Detroit"
      },
      {
        "supplier_city": "Newton"
      },
      {
        "supplier_city": "Kfar Saba"
      },
      {
        "supplier_city": "Woburn"
      },
      {
        "supplier_city": "Buffalo Grove"
      },
      {
        "supplier_city": "Sarcelles"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Kfar Netter"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "L'Houmeau"
      },
      {
        "supplier_city": "Cancale"
      },
      {
        "supplier_city": "Nakhabino"
      },
      {
        "supplier_city": "Alpharetta"
      },
      {
        "supplier_city": "Mulhouse"
      },
      {
        "supplier_city": "Monino"
      },
      {
        "supplier_city": "Argences"
      },
      {
        "supplier_city": "Yalta"
      },
      {
        "supplier_city": "Osypenko"
      },
      {
        "supplier_city": "Bologna"
      },
      {
        "supplier_city": "Kazan"
      },
      {
        "supplier_city": "Ingwiller"
      },
      {
        "supplier_city": "Cannes"
      },
      {
        "supplier_city": "Drancy"
      },
      {
        "supplier_city": "Yoshkar-Ola"
      },
      {
        "supplier_city": "Saint-Brieuc"
      },
      {
        "supplier_city": "Lahourcade"
      },
      {
        "supplier_city": "Suresnes"
      },
      {
        "supplier_city": "Zhovkva"
      },
      {
        "supplier_city": "Novy Urengoy"
      },
      {
        "supplier_city": "Diamondhead"
      },
      {
        "supplier_city": "Protvino"
      },
      {
        "supplier_city": "Mykolaiv"
      },
      {
        "supplier_city": "Saint-Priest"
      },
      {
        "supplier_city": "Fargues-Saint-Hilaire"
      },
      {
        "supplier_city": "Chernogorsk"
      },
      {
        "supplier_city": "Bonne"
      },
      {
        "supplier_city": "\u00c9cully"
      },
      {
        "supplier_city": "Lanester"
      },
      {
        "supplier_city": "Abakan"
      },
      {
        "supplier_city": "Istra"
      },
      {
        "supplier_city": "Kazbekovsky District"
      },
      {
        "supplier_city": "Chatou"
      },
      {
        "supplier_city": "Chamb\u00e9ry"
      },
      {
        "supplier_city": "Lobnya"
      },
      {
        "supplier_city": "Boujan-sur-Libron"
      },
      {
        "supplier_city": "Marignane"
      },
      {
        "supplier_city": "Sassari"
      },
      {
        "supplier_city": "Pushkino"
      },
      {
        "supplier_city": "Nazran"
      },
      {
        "supplier_city": "Meylan"
      },
      {
        "supplier_city": "Gratentour"
      },
      {
        "supplier_city": "Bouliac"
      },
      {
        "supplier_city": "Bois-Colombes"
      },
      {
        "supplier_city": "Maisons-Laffitte"
      },
      {
        "supplier_city": "Simferopol"
      },
      {
        "supplier_city": "L'Ha\u00ff-les-Roses"
      },
      {
        "supplier_city": "Villeneuve-Saint-Germain"
      },
      {
        "supplier_city": "Krasnogorsk"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Tulette"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Vif"
      },
      {
        "supplier_city": "Sandy"
      },
      {
        "supplier_city": "Saint-Ouen-sur-Seine"
      },
      {
        "supplier_city": "Dearborn"
      },
      {
        "supplier_city": "Liorac-sur-Louyre"
      },
      {
        "supplier_city": "Bitche"
      },
      {
        "supplier_city": "Dammarie-les-Lys"
      },
      {
        "supplier_city": "Saint-Leu-d'Esserent"
      },
      {
        "supplier_city": "Bagneux"
      },
      {
        "supplier_city": "Le Loroux-Bottereau"
      },
      {
        "supplier_city": "Pringy"
      },
      {
        "supplier_city": "Nainville-les-Roches"
      },
      {
        "supplier_city": "Cagnes-sur-Mer"
      },
      {
        "supplier_city": "Zarinsk"
      },
      {
        "supplier_city": "Rennes"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Saint-Maurice-sur-Aveyron"
      },
      {
        "supplier_city": "Lorgues"
      },
      {
        "supplier_city": "Mirny"
      },
      {
        "supplier_city": "Izhevsk"
      },
      {
        "supplier_city": "Rome"
      },
      {
        "supplier_city": "Kushnarenkovo"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Puteaux"
      },
      {
        "supplier_city": "Salavat"
      },
      {
        "supplier_city": "Trept"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Chikusei"
      },
      {
        "supplier_city": "Solnechnogorsk"
      },
      {
        "supplier_city": "\u00c9chillais"
      },
      {
        "supplier_city": "Ramenskoye"
      },
      {
        "supplier_city": "Le Puy-en-Velay"
      },
      {
        "supplier_city": "Maykop"
      },
      {
        "supplier_city": "Miura"
      },
      {
        "supplier_city": "Saint-Barth\u00e9lemy-Lestra"
      },
      {
        "supplier_city": "Ufa"
      },
      {
        "supplier_city": "Novodnistrovsk"
      },
      {
        "supplier_city": "Zhytomyr"
      },
      {
        "supplier_city": "Vinnytsia"
      },
      {
        "supplier_city": "Camaiore"
      },
      {
        "supplier_city": "Mijdrecht"
      },
      {
        "supplier_city": "Ollioules"
      },
      {
        "supplier_city": "La Roche-Blanche"
      },
      {
        "supplier_city": "Ruza"
      },
      {
        "supplier_city": "La Rochelle"
      },
      {
        "supplier_city": "Marolles-en-Hurepoix"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Saint Petersburg"
      },
      {
        "supplier_city": "Naples"
      },
      {
        "supplier_city": "Laval"
      },
      {
        "supplier_city": "Lozanne"
      },
      {
        "supplier_city": "Kondinskoye"
      },
      {
        "supplier_city": "Bouxwiller"
      },
      {
        "supplier_city": "Helsinki"
      },
      {
        "supplier_city": "Toulon"
      },
      {
        "supplier_city": "Surgut"
      },
      {
        "supplier_city": "Karachayevsk"
      },
      {
        "supplier_city": "Troy"
      },
      {
        "supplier_city": "Chasselay"
      },
      {
        "supplier_city": "Ermont"
      },
      {
        "supplier_city": "Besan\u00e7on"
      },
      {
        "supplier_city": "Balashikha"
      },
      {
        "supplier_city": "Sibay"
      },
      {
        "supplier_city": "Krasnoznamensk"
      },
      {
        "supplier_city": "Courbevoie"
      },
      {
        "supplier_city": "Nice"
      },
      {
        "supplier_city": "Okinawa"
      },
      {
        "supplier_city": "Beaurains"
      },
      {
        "supplier_city": "Ferrara"
      },
      {
        "supplier_city": "Rosny-sous-Bois"
      },
      {
        "supplier_city": "Talmenka"
      },
      {
        "supplier_city": "Calais"
      },
      {
        "supplier_city": "Poissy"
      },
      {
        "supplier_city": "Haute-Isle"
      },
      {
        "supplier_city": "Reutov"
      },
      {
        "supplier_city": "Donetsk"
      },
      {
        "supplier_city": "Shebalino"
      },
      {
        "supplier_city": "Asni\u00e8res-sur-Seine"
      },
      {
        "supplier_city": "Beaugeay"
      },
      {
        "supplier_city": "Saintes"
      },
      {
        "supplier_city": "Saransk"
      },
      {
        "supplier_city": "Igrim"
      },
      {
        "supplier_city": "Konotop"
      },
      {
        "supplier_city": "Tarbes"
      },
      {
        "supplier_city": "Curitiba"
      },
      {
        "supplier_city": "Ventabren"
      },
      {
        "supplier_city": "Irvine"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "Berg"
      },
      {
        "supplier_city": "Viroflay"
      },
      {
        "supplier_city": "Biscarrosse"
      },
      {
        "supplier_city": "Vannes"
      },
      {
        "supplier_city": "Bruz"
      },
      {
        "supplier_city": "Quimper"
      },
      {
        "supplier_city": "Dinard"
      },
      {
        "supplier_city": "Lincolnshire"
      },
      {
        "supplier_city": "Vernantes"
      },
      {
        "supplier_city": "Angers"
      },
      {
        "supplier_city": "Loire-sur-Rh\u00f4ne"
      },
      {
        "supplier_city": "Budapest"
      },
      {
        "supplier_city": "Mytishchi"
      },
      {
        "supplier_city": "Villefranche-sur-Mer"
      },
      {
        "supplier_city": "Ternay"
      },
      {
        "supplier_city": "Chesnokovka"
      },
      {
        "supplier_city": "Thouar\u00e9-sur-Loire"
      },
      {
        "supplier_city": "Osseo"
      },
      {
        "supplier_city": "Mandres-les-Roses"
      },
      {
        "supplier_city": "Al\u00e8s"
      },
      {
        "supplier_city": "Versailles"
      },
      {
        "supplier_city": "Elmwood Park"
      },
      {
        "supplier_city": "Le Cannet"
      },
      {
        "supplier_city": "Toulouse"
      },
      {
        "supplier_city": "Cabestany"
      },
      {
        "supplier_city": "Boulogne-Billancourt"
      },
      {
        "supplier_city": "Montpellier"
      },
      {
        "supplier_city": "Elbl\u0105g"
      },
      {
        "supplier_city": "Sterlitamak"
      },
      {
        "supplier_city": "Vallauris"
      },
      {
        "supplier_city": "Marseille"
      },
      {
        "supplier_city": "Lugo"
      },
      {
        "supplier_city": "Syktyvkar"
      },
      {
        "supplier_city": "Biysk"
      },
      {
        "supplier_city": "Grozny"
      },
      {
        "supplier_city": "Vi\u00f1a del Mar"
      },
      {
        "supplier_city": "Malgobek"
      },
      {
        "supplier_city": "Kyzyl"
      },
      {
        "supplier_city": "Ventura"
      },
      {
        "supplier_city": "Curic\u00f3"
      },
      {
        "supplier_city": "Ternopil"
      },
      {
        "supplier_city": "Sosnogorsk"
      },
      {
        "supplier_city": "Baie-Mahault"
      },
      {
        "supplier_city": "Dubna"
      },
      {
        "supplier_city": "La Roquette-sur-Siagne"
      },
      {
        "supplier_city": "Cheboksary"
      },
      {
        "supplier_city": "Pleurtuit"
      },
      {
        "supplier_city": "Carnac"
      },
      {
        "supplier_city": "Bordeaux"
      },
      {
        "supplier_city": "Draper"
      },
      {
        "supplier_city": "La Seyne-sur-Mer"
      },
      {
        "supplier_city": "Le Muy"
      },
      {
        "supplier_city": "Suwanee"
      },
      {
        "supplier_city": "Oullins"
      },
      {
        "supplier_city": "Escalles"
      },
      {
        "supplier_city": "Arpajon"
      },
      {
        "supplier_city": "Mariupol"
      },
      {
        "supplier_city": "Montmirail"
      },
      {
        "supplier_city": "Bondoufle"
      },
      {
        "supplier_city": "Chernivtsi"
      },
      {
        "supplier_city": "Lviv"
      },
      {
        "supplier_city": "Nadym"
      },
      {
        "supplier_city": "Olonets"
      },
      {
        "supplier_city": "Mainz"
      },
      {
        "supplier_city": "Thonon-les-Bains"
      },
      {
        "supplier_city": "Grenoble"
      },
      {
        "supplier_city": "Yanaul"
      },
      {
        "supplier_city": "Sammeron"
      },
      {
        "supplier_city": "Adygeysk"
      },
      {
        "supplier_city": "Lunel"
      },
      {
        "supplier_city": "Pessac"
      },
      {
        "supplier_city": "Dordrecht"
      },
      {
        "supplier_city": "B\u00f6gelm\u00e4"
      },
      {
        "supplier_city": "Ivanteyevka"
      },
      {
        "supplier_city": "Auriol"
      },
      {
        "supplier_city": "Fabr\u00e8gues"
      },
      {
        "supplier_city": "Meadville"
      },
      {
        "supplier_city": "N\u00eemes"
      },
      {
        "supplier_city": "Baku"
      },
      {
        "supplier_city": "Saint-G\u00e9rand-le-Puy"
      },
      {
        "supplier_city": "Saint-Tropez"
      },
      {
        "supplier_city": "Nantes"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "P\u00e9rigueux"
      },
      {
        "supplier_city": "Martigues"
      },
      {
        "supplier_city": "Odintsovo"
      },
      {
        "supplier_city": "Pokrovsk"
      },
      {
        "supplier_city": "Montreuil"
      },
      {
        "supplier_city": "Bowie"
      },
      {
        "supplier_city": "Cabri\u00e8s"
      },
      {
        "supplier_city": "Launaguet"
      },
      {
        "supplier_city": "Petrozavodsk"
      },
      {
        "supplier_city": "Kanash"
      },
      {
        "supplier_city": "J\u00e4rvenp\u00e4\u00e4"
      },
      {
        "supplier_city": "Saint-\u00c9gr\u00e8ve"
      },
      {
        "supplier_city": "Zalizne"
      },
      {
        "supplier_city": "Romeny-sur-Marne"
      },
      {
        "supplier_city": "Longwood"
      },
      {
        "supplier_city": "Saint-Paul"
      },
      {
        "supplier_city": "Neuilly"
      },
      {
        "supplier_city": "S\u00e9ez"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Bourg-la-Reine"
      },
      {
        "supplier_city": "Guidonia Montecelio"
      },
      {
        "supplier_city": "L\u00e9cousse"
      },
      {
        "supplier_city": "Ivano-Frankivsk"
      },
      {
        "supplier_city": "Saint-Laurent-du-Var"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Cherkessk"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Wixom"
      },
      {
        "supplier_city": "Nanterre"
      },
      {
        "supplier_city": "Cabris"
      },
      {
        "supplier_city": "Alphen aan den Rijn"
      },
      {
        "supplier_city": "Cou\u00ebron"
      },
      {
        "supplier_city": "Drabiv"
      },
      {
        "supplier_city": "Villebon-sur-Yvette"
      },
      {
        "supplier_city": "Treviso"
      },
      {
        "supplier_city": "Sainte-Blandine"
      },
      {
        "supplier_city": "Corumba\u00edba"
      },
      {
        "supplier_city": "Odesa"
      },
      {
        "supplier_city": "Carcans"
      },
      {
        "supplier_city": "Poitiers"
      },
      {
        "supplier_city": "\u00c9couflant"
      },
      {
        "supplier_city": "Brasschaat"
      },
      {
        "supplier_city": "Guichen"
      },
      {
        "supplier_city": "Levallois-Perret"
      },
      {
        "supplier_city": "Lorient"
      },
      {
        "supplier_city": "Morzine"
      },
      {
        "supplier_city": "Ulan-Ude"
      },
      {
        "supplier_city": "Korolyov"
      },
      {
        "supplier_city": "Zvenigovo"
      },
      {
        "supplier_city": "Aix-en-Provence"
      },
      {
        "supplier_city": "Fort-de-France"
      },
      {
        "supplier_city": "\u00c7all\u0131"
      },
      {
        "supplier_city": "Noginsk"
      },
      {
        "supplier_city": "Brescia"
      },
      {
        "supplier_city": "Khotkovo"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Arthaz-Pont-Notre-Dame"
      },
      {
        "supplier_city": "Tomilino"
      },
      {
        "supplier_city": "Saint-Malo"
      },
      {
        "supplier_city": "Bismarck"
      },
      {
        "supplier_city": "Le Havre"
      },
      {
        "supplier_city": "Klin"
      },
      {
        "supplier_city": "Boulogne-sur-Mer"
      },
      {
        "supplier_city": "Ukhta"
      },
      {
        "supplier_city": "Latresne"
      },
      {
        "supplier_city": "The Hague"
      },
      {
        "supplier_city": "Mantes-la-Jolie"
      },
      {
        "supplier_city": "Rochefort"
      },
      {
        "supplier_city": "Baylar Sabas\u0131"
      },
      {
        "supplier_city": "F\u00f3t"
      },
      {
        "supplier_city": "Lyubertsy"
      },
      {
        "supplier_city": "Salekhard"
      },
      {
        "supplier_city": "Strasbourg"
      },
      {
        "supplier_city": "Limoux"
      },
      {
        "supplier_city": "Chita"
      },
      {
        "supplier_city": "Le Souli\u00e9"
      },
      {
        "supplier_city": "Monteforte d'Alpone"
      },
      {
        "supplier_city": "Bouc-Bel-Air"
      },
      {
        "supplier_city": "Avignon"
      },
      {
        "supplier_city": "Cauterets"
      },
      {
        "supplier_city": "Les Pavillons-sous-Bois"
      },
      {
        "supplier_city": "Mouans-Sartoux"
      },
      {
        "supplier_city": "Bar"
      },
      {
        "supplier_city": "Les Trois-Bassins"
      },
      {
        "supplier_city": "Auray"
      },
      {
        "supplier_city": "Yakutsk"
      },
      {
        "supplier_city": "Riga"
      },
      {
        "supplier_city": "Amiens"
      },
      {
        "supplier_city": "Bernartice nad Odrou"
      },
      {
        "supplier_city": "Milan"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "Kubinka"
      },
      {
        "supplier_city": "West Chester"
      },
      {
        "supplier_city": "Conat"
      },
      {
        "supplier_city": "Wellington"
      },
      {
        "supplier_city": "Saint-Sorlin-en-Valloire"
      },
      {
        "supplier_city": "Kalamazoo"
      },
      {
        "supplier_city": "Givry"
      },
      {
        "supplier_city": "Billom"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Sri Jayawardenepura Kotte"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Hartford"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Colombo"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "San Jos\u00e9"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Truro"
      },
      {
        "supplier_city": "Woodland"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Nashville"
      },
      {
        "supplier_city": "New Haven"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Columbia"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "McLean"
      },
      {
        "supplier_city": "Neuilly"
      },
      {
        "supplier_city": "Puteaux"
      },
      {
        "supplier_city": "Tysons"
      },
      {
        "supplier_city": "Carlsbad"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Tampa"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Newport Beach"
      },
      {
        "supplier_city": "Boulogne-Billancourt"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "El Segundo"
      },
      {
        "supplier_city": "Courbevoie"
      },
      {
        "supplier_city": "Johannesburg"
      },
      {
        "supplier_city": "Cologne"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Minneapolis"
      },
      {
        "supplier_city": "Schaumburg"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Nantes"
      },
      {
        "supplier_city": "Arcueil"
      },
      {
        "supplier_city": "Central Falls"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Menlo Park"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Los Altos"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "San Diego"
      },
      {
        "supplier_city": "Solana Beach"
      },
      {
        "supplier_city": "Signal Hill"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Encinitas"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Durham"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "Long Beach"
      },
      {
        "supplier_city": "Luxembourg"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Ramat Gan"
      },
      {
        "supplier_city": "Ann Arbor"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "McLean"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Menlo Park"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Herndon"
      },
      {
        "supplier_city": "Longview"
      },
      {
        "supplier_city": "Mankato"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Astoria"
      },
      {
        "supplier_city": "Takoma Park"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "North Mankato"
      },
      {
        "supplier_city": "Providence"
      },
      {
        "supplier_city": "Canton"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Santa Rosa"
      },
      {
        "supplier_city": "Savannah"
      },
      {
        "supplier_city": "Fort Myers"
      },
      {
        "supplier_city": "Pointe-Claire"
      },
      {
        "supplier_city": "Maize"
      },
      {
        "supplier_city": "Wichita"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Lamar"
      },
      {
        "supplier_city": "Canmore"
      },
      {
        "supplier_city": "Eugene"
      },
      {
        "supplier_city": "Midvale"
      },
      {
        "supplier_city": "Las Cruces"
      },
      {
        "supplier_city": "Bend"
      },
      {
        "supplier_city": "Metairie"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Frankston"
      },
      {
        "supplier_city": "Granger"
      },
      {
        "supplier_city": "Halifax"
      },
      {
        "supplier_city": "North Liberty"
      },
      {
        "supplier_city": "Colorado Springs"
      },
      {
        "supplier_city": "Norwood"
      },
      {
        "supplier_city": "San Marcos"
      },
      {
        "supplier_city": "Malvern"
      },
      {
        "supplier_city": "Lewiston"
      },
      {
        "supplier_city": "Skokie"
      },
      {
        "supplier_city": "Lenoir"
      },
      {
        "supplier_city": "Apple Valley"
      },
      {
        "supplier_city": "Bristol"
      },
      {
        "supplier_city": "Louisville"
      },
      {
        "supplier_city": "Kelso"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Saint Paul"
      },
      {
        "supplier_city": "Fremont"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "'s-Hertogenbosch"
      },
      {
        "supplier_city": "Prague"
      },
      {
        "supplier_city": "Sylhet"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Clarkston"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Ankara"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Cibolo"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Atoka"
      },
      {
        "supplier_city": "Glenwood"
      },
      {
        "supplier_city": "Brno"
      },
      {
        "supplier_city": "Poughkeepsie"
      },
      {
        "supplier_city": "Christchurch"
      },
      {
        "supplier_city": "Bangkok"
      },
      {
        "supplier_city": "Leiden"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Austin"
      },
      {
        "supplier_city": "West Lake Hills"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Santa Clara"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Calgary"
      },
      {
        "supplier_city": "Chartres-de-Bretagne"
      },
      {
        "supplier_city": "La Ciotat"
      },
      {
        "supplier_city": "Can\u00e9jan"
      },
      {
        "supplier_city": "Wettingen"
      },
      {
        "supplier_city": "Ankara"
      },
      {
        "supplier_city": "Pringy"
      },
      {
        "supplier_city": "Brossard"
      },
      {
        "supplier_city": "Genay, Rh\u00f4ne"
      },
      {
        "supplier_city": "Pieve di Cento"
      },
      {
        "supplier_city": "Macquarie Park"
      },
      {
        "supplier_city": "La Vergne"
      },
      {
        "supplier_city": "Marktheidenfeld"
      },
      {
        "supplier_city": "Riyadh"
      },
      {
        "supplier_city": "Oberhausen"
      },
      {
        "supplier_city": "Apodaca"
      },
      {
        "supplier_city": "Findley Lake"
      },
      {
        "supplier_city": "Shenzhen"
      },
      {
        "supplier_city": "Albuquerque"
      },
      {
        "supplier_city": "Cergy"
      },
      {
        "supplier_city": "Nantes"
      },
      {
        "supplier_city": "Metz"
      },
      {
        "supplier_city": "Lorient"
      },
      {
        "supplier_city": "South Jakarta"
      },
      {
        "supplier_city": "Kolding"
      },
      {
        "supplier_city": "Le Port"
      },
      {
        "supplier_city": "Aix-en-Provence"
      },
      {
        "supplier_city": "Baie-Mahault"
      },
      {
        "supplier_city": "Conselve"
      },
      {
        "supplier_city": "Concepci\u00f3n"
      },
      {
        "supplier_city": "Andover"
      },
      {
        "supplier_city": "Ratingen"
      },
      {
        "supplier_city": "Raleigh"
      },
      {
        "supplier_city": "Limoges"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Pessac"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "Thourotte"
      },
      {
        "supplier_city": "Pleasanton"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Delhi"
      },
      {
        "supplier_city": "Fontanil-Cornillon"
      },
      {
        "supplier_city": "Saint-Jean-le-Blanc"
      },
      {
        "supplier_city": "Paray-Vieille-Poste"
      },
      {
        "supplier_city": "Lahore"
      },
      {
        "supplier_city": "Tirana"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Semarang"
      },
      {
        "supplier_city": "Rio de Janeiro"
      },
      {
        "supplier_city": "Nairobi"
      },
      {
        "supplier_city": "Meylan"
      },
      {
        "supplier_city": "Coquelles"
      },
      {
        "supplier_city": "Pau"
      },
      {
        "supplier_city": "Lahti"
      },
      {
        "supplier_city": "Cesson-S\u00e9vign\u00e9"
      },
      {
        "supplier_city": "Arenzano"
      },
      {
        "supplier_city": "Merpins"
      },
      {
        "supplier_city": "Vitrolles"
      },
      {
        "supplier_city": "Montreuil"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Bratislava"
      },
      {
        "supplier_city": "Longvic"
      },
      {
        "supplier_city": "Gennevilliers"
      },
      {
        "supplier_city": "Reims"
      },
      {
        "supplier_city": "Charlotte"
      },
      {
        "supplier_city": "Kiel"
      },
      {
        "supplier_city": "Toulon"
      },
      {
        "supplier_city": "Winnipeg"
      },
      {
        "supplier_city": "Lattes"
      },
      {
        "supplier_city": "Novato"
      },
      {
        "supplier_city": "Espoo"
      },
      {
        "supplier_city": "Saint-Ismier"
      },
      {
        "supplier_city": "Eybens"
      },
      {
        "supplier_city": "Jubail"
      },
      {
        "supplier_city": "Tallinn"
      },
      {
        "supplier_city": "Unterschlei\u00dfheim"
      },
      {
        "supplier_city": "Bogot\u00e1"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Hanover"
      },
      {
        "supplier_city": "Warsaw"
      },
      {
        "supplier_city": "Helmond"
      },
      {
        "supplier_city": "Lincoln"
      },
      {
        "supplier_city": "Tel Aviv"
      },
      {
        "supplier_city": "Malaga"
      },
      {
        "supplier_city": "Lyon"
      },
      {
        "supplier_city": "San Ramon"
      },
      {
        "supplier_city": "Lescar"
      },
      {
        "supplier_city": "\u00c9pagny"
      },
      {
        "supplier_city": "Petit-Couronne"
      },
      {
        "supplier_city": "Illkirch-Graffenstaden"
      },
      {
        "supplier_city": "Benalla"
      },
      {
        "supplier_city": "Riga"
      },
      {
        "supplier_city": "Richmond"
      },
      {
        "supplier_city": "Concord"
      },
      {
        "supplier_city": "Saint-Savinien"
      },
      {
        "supplier_city": "East Jakarta"
      },
      {
        "supplier_city": "Compi\u00e8gne"
      },
      {
        "supplier_city": "Doha"
      },
      {
        "supplier_city": "Caxias do Sul"
      },
      {
        "supplier_city": "Celaya"
      },
      {
        "supplier_city": "Le Relecq-Kerhuon"
      },
      {
        "supplier_city": "Grenoble"
      },
      {
        "supplier_city": "Sauerlach"
      },
      {
        "supplier_city": "New Hope"
      },
      {
        "supplier_city": "Fort Worth"
      },
      {
        "supplier_city": "La Seyne-sur-Mer"
      },
      {
        "supplier_city": "Nice"
      },
      {
        "supplier_city": "Clovis"
      },
      {
        "supplier_city": "Panama City"
      },
      {
        "supplier_city": "Sofia"
      },
      {
        "supplier_city": "Clermont-Ferrand"
      },
      {
        "supplier_city": "Toronto"
      },
      {
        "supplier_city": "Caen"
      },
      {
        "supplier_city": "Joensuu"
      },
      {
        "supplier_city": "Blountville"
      },
      {
        "supplier_city": "Sein\u00e4joki"
      },
      {
        "supplier_city": "Aubi\u00e8re"
      },
      {
        "supplier_city": "Woerden"
      },
      {
        "supplier_city": "Chennai"
      },
      {
        "supplier_city": "Dhahran"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "M\u00e9rida"
      },
      {
        "supplier_city": "Boulogne-Billancourt"
      },
      {
        "supplier_city": "Ribeir\u00e3o Preto"
      },
      {
        "supplier_city": "Copenhagen"
      },
      {
        "supplier_city": "Vaasa"
      },
      {
        "supplier_city": "Sarajevo"
      },
      {
        "supplier_city": "Sausheim"
      },
      {
        "supplier_city": "Vilnius"
      },
      {
        "supplier_city": "Reuil"
      },
      {
        "supplier_city": "Edmonton"
      },
      {
        "supplier_city": "Aguascalientes City"
      },
      {
        "supplier_city": "Montpellier"
      },
      {
        "supplier_city": "Baku"
      },
      {
        "supplier_city": "Bourgu\u00e9bus"
      },
      {
        "supplier_city": "Mitry-Mory"
      },
      {
        "supplier_city": "Padua"
      },
      {
        "supplier_city": "Dijon"
      },
      {
        "supplier_city": "Saint-Priest"
      },
      {
        "supplier_city": "Belleville"
      },
      {
        "supplier_city": "Donostia / San Sebasti\u00e1n"
      },
      {
        "supplier_city": "Cayenne"
      },
      {
        "supplier_city": "Bastia Umbra"
      },
      {
        "supplier_city": "Oulu"
      },
      {
        "supplier_city": "New Cairo"
      },
      {
        "supplier_city": "Geispolsheim"
      },
      {
        "supplier_city": "Florence"
      },
      {
        "supplier_city": "Saint Petersburg"
      },
      {
        "supplier_city": "Sumar\u00e9"
      },
      {
        "supplier_city": "Chasseneuil-du-Poitou"
      },
      {
        "supplier_city": "S\u00e3o Paulo"
      },
      {
        "supplier_city": "Burnaby"
      },
      {
        "supplier_city": "Schleswig"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "M\u00e2con"
      },
      {
        "supplier_city": "Albi"
      },
      {
        "supplier_city": "Vantaa"
      },
      {
        "supplier_city": "Chen\u00f4ve"
      },
      {
        "supplier_city": "Mougins"
      },
      {
        "supplier_city": "Malm\u00f6"
      },
      {
        "supplier_city": "Marcoussis"
      },
      {
        "supplier_city": "Nanterre"
      },
      {
        "supplier_city": "Jeddah"
      },
      {
        "supplier_city": "Galena"
      },
      {
        "supplier_city": "Ballerup"
      },
      {
        "supplier_city": "Rueil-Malmaison"
      },
      {
        "supplier_city": "Saint-Jean-de-Bournay"
      },
      {
        "supplier_city": "Muscat"
      },
      {
        "supplier_city": "halfway house"
      },
      {
        "supplier_city": "M\u0101rupe"
      },
      {
        "supplier_city": "Sikeston"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Saskatoon"
      },
      {
        "supplier_city": "Carros"
      },
      {
        "supplier_city": "Castel Maggiore"
      },
      {
        "supplier_city": "Cairo Montenotte"
      },
      {
        "supplier_city": "Fontenoy"
      },
      {
        "supplier_city": "Eagle"
      },
      {
        "supplier_city": "Santo Domingo"
      },
      {
        "supplier_city": "Beaumont-le-Roger"
      },
      {
        "supplier_city": "Kolkata"
      },
      {
        "supplier_city": "Tours"
      },
      {
        "supplier_city": "Moirans"
      },
      {
        "supplier_city": "Vierzon"
      },
      {
        "supplier_city": "Le Lamentin"
      },
      {
        "supplier_city": "Springfield"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Rome"
      },
      {
        "supplier_city": "Windsor"
      },
      {
        "supplier_city": "Hermosillo"
      },
      {
        "supplier_city": "Zalaegerszeg"
      },
      {
        "supplier_city": "Novi Sad"
      },
      {
        "supplier_city": "Toulouse"
      },
      {
        "supplier_city": "Al Khobar"
      },
      {
        "supplier_city": "Fr\u00e9thun"
      },
      {
        "supplier_city": "Surabaya"
      },
      {
        "supplier_city": "Monroe"
      },
      {
        "supplier_city": "Pesaro"
      },
      {
        "supplier_city": "Santiago"
      },
      {
        "supplier_city": "P\u00edsek"
      },
      {
        "supplier_city": "Seneca"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Dubai"
      },
      {
        "supplier_city": "L'Isle-d'Espagnac"
      },
      {
        "supplier_city": "Burlingame"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "\u015awiebodzice"
      },
      {
        "supplier_city": "Kakinada"
      },
      {
        "supplier_city": "Beirut"
      },
      {
        "supplier_city": "Richmond"
      },
      {
        "supplier_city": "Saint-Denis"
      },
      {
        "supplier_city": "Cattenom"
      },
      {
        "supplier_city": "\u00c9chirolles"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Kuusankoski"
      },
      {
        "supplier_city": "Mauguio"
      },
      {
        "supplier_city": "Downers Grove"
      },
      {
        "supplier_city": "Frankfurt am Main"
      },
      {
        "supplier_city": "Bois-Guillaume"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Mount Waverley"
      },
      {
        "supplier_city": "Balikpapan"
      },
      {
        "supplier_city": "San Jos\u00e9"
      },
      {
        "supplier_city": "Roissy-en-France"
      },
      {
        "supplier_city": "Skopje"
      },
      {
        "supplier_city": "Poitiers"
      },
      {
        "supplier_city": "Joinville"
      },
      {
        "supplier_city": "Belfort"
      },
      {
        "supplier_city": "Fontenay-sous-Bois"
      },
      {
        "supplier_city": "Le Vaudreuil"
      },
      {
        "supplier_city": "Massy"
      },
      {
        "supplier_city": "Mont-Saint-Aignan"
      },
      {
        "supplier_city": "Brest"
      },
      {
        "supplier_city": "Casavatore"
      },
      {
        "supplier_city": "Feuill\u00e8res"
      },
      {
        "supplier_city": "Saint-Avertin"
      },
      {
        "supplier_city": "Jyv\u00e4skyl\u00e4"
      },
      {
        "supplier_city": "Hoofddorp"
      },
      {
        "supplier_city": "Rockville"
      },
      {
        "supplier_city": "Duncan"
      },
      {
        "supplier_city": "Wuppertal"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Carmel"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Shanghai"
      },
      {
        "supplier_city": "Tomah"
      },
      {
        "supplier_city": "Kokomo"
      },
      {
        "supplier_city": "Troy"
      },
      {
        "supplier_city": "Yokohama"
      },
      {
        "supplier_city": "Suzhou"
      },
      {
        "supplier_city": "Krak\u00f3w"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Jambeiro"
      },
      {
        "supplier_city": "Kenitra"
      },
      {
        "supplier_city": "S\u00e3o Caetano do Sul"
      },
      {
        "supplier_city": "Portland"
      },
      {
        "supplier_city": "Ciudad Ju\u00e1rez"
      },
      {
        "supplier_city": "Janesville"
      },
      {
        "supplier_city": "Gothenburg"
      },
      {
        "supplier_city": "Villeurbanne"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Szombathely"
      },
      {
        "supplier_city": "Falls Church"
      },
      {
        "supplier_city": "Engelskirchen"
      },
      {
        "supplier_city": "Esp\u00edrito Santo do Pinhal"
      },
      {
        "supplier_city": "Black River Falls"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Boulder"
      },
      {
        "supplier_city": "Longmont"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "Saint-Vincent-de-Barbeyrargues"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Princeton-by-the-Sea"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Palo Alto"
      },
      {
        "supplier_city": "Fairfax"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Washington"
      },
      {
        "supplier_city": "Brisbane"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Bethesda"
      },
      {
        "supplier_city": "Madison"
      },
      {
        "supplier_city": "Ashland"
      },
      {
        "supplier_city": "Glenview"
      },
      {
        "supplier_city": "Cupertino"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Las Vegas"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "McLean"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Courbevoie"
      },
      {
        "supplier_city": "Melbourne"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Taipei"
      },
      {
        "supplier_city": "Split"
      },
      {
        "supplier_city": "Saqqez"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Satu Mare"
      },
      {
        "supplier_city": "Ranshaw"
      },
      {
        "supplier_city": "Grand Prairie"
      },
      {
        "supplier_city": "Vienna"
      },
      {
        "supplier_city": "Labish Village"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Swanton"
      },
      {
        "supplier_city": "Washington, D.C."
      },
      {
        "supplier_city": "Lenexa"
      },
      {
        "supplier_city": "Verona"
      },
      {
        "supplier_city": "Pittsburgh"
      },
      {
        "supplier_city": "Menlo Park"
      },
      {
        "supplier_city": "Niles"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Munich"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Rockledge"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Eatontown"
      },
      {
        "supplier_city": "Manchester"
      },
      {
        "supplier_city": "Sunrise"
      },
      {
        "supplier_city": "Seminole"
      },
      {
        "supplier_city": "Emeryville"
      },
      {
        "supplier_city": "Reston"
      },
      {
        "supplier_city": "Victoria"
      },
      {
        "supplier_city": "Stockholm"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Alcobendas"
      },
      {
        "supplier_city": "Dallas"
      },
      {
        "supplier_city": "Burlington"
      },
      {
        "supplier_city": "Atlanta"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "Sydney"
      },
      {
        "supplier_city": "Sunnyvale"
      },
      {
        "supplier_city": "Ottawa"
      },
      {
        "supplier_city": "Farmington Hills"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Ocoee"
      },
      {
        "supplier_city": "Amsterdam"
      },
      {
        "supplier_city": "Windsor"
      },
      {
        "supplier_city": "Tallinn"
      },
      {
        "supplier_city": "Tartu"
      },
      {
        "supplier_city": "Berlin"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Bruges"
      },
      {
        "supplier_city": "City of Brussels"
      },
      {
        "supplier_city": "Grimbergen"
      },
      {
        "supplier_city": "Le Bouscat"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Wemmel"
      },
      {
        "supplier_city": "Bordeaux"
      },
      {
        "supplier_city": "Mechelen"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Lombard"
      },
      {
        "supplier_city": "Oakbrook Terrace"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Auckland"
      },
      {
        "supplier_city": "New Orleans"
      },
      {
        "supplier_city": "Gda\u0144sk"
      },
      {
        "supplier_city": "Denver"
      },
      {
        "supplier_city": "Chikusei"
      },
      {
        "supplier_city": "Vara\u017edin"
      },
      {
        "supplier_city": "Vancouver"
      },
      {
        "supplier_city": "Mikkeli"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Chita"
      },
      {
        "supplier_city": "Riga"
      },
      {
        "supplier_city": "Cairo"
      },
      {
        "supplier_city": "\u00c9magny"
      },
      {
        "supplier_city": "Kashira"
      },
      {
        "supplier_city": "Anglet"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Nashville"
      },
      {
        "supplier_city": "Argenteuil"
      },
      {
        "supplier_city": "Osijek"
      },
      {
        "supplier_city": "Santo Andr\u00e9"
      },
      {
        "supplier_city": "Kolding"
      },
      {
        "supplier_city": "Hilversum"
      },
      {
        "supplier_city": "Cheyenne"
      },
      {
        "supplier_city": "Ufa"
      },
      {
        "supplier_city": "Bobigny"
      },
      {
        "supplier_city": "Sveta Nedelja, Zagreb County"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Los Angeles"
      },
      {
        "supplier_city": "Florence"
      },
      {
        "supplier_city": "London"
      },
      {
        "supplier_city": "Le Bouscat"
      },
      {
        "supplier_city": "Moscow"
      },
      {
        "supplier_city": "Madrid"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "San Leandro"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Issy-les-Moulineaux"
      },
      {
        "supplier_city": "Longview"
      },
      {
        "supplier_city": "Phoenix"
      },
      {
        "supplier_city": "Scottsdale"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Naucalpan de Ju\u00e1rez Municipality"
      },
      {
        "supplier_city": "Montreal"
      },
      {
        "supplier_city": "Johnson City"
      },
      {
        "supplier_city": "Oslo"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Gainesville"
      },
      {
        "supplier_city": "Superior"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Seattle"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "San Jose"
      },
      {
        "supplier_city": "Cottonwood Heights"
      },
      {
        "supplier_city": "Hilversum"
      },
      {
        "supplier_city": "Mountain View"
      },
      {
        "supplier_city": "Noida"
      },
      {
        "supplier_city": "Redwood City"
      },
      {
        "supplier_city": "Boston"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Dover"
      },
      {
        "supplier_city": "Guadalupe"
      },
      {
        "supplier_city": "Manlius"
      },
      {
        "supplier_city": "Conshohocken"
      },
      {
        "supplier_city": "Philadelphia"
      },
      {
        "supplier_city": "Bryn Mawr"
      },
      {
        "supplier_city": "Bangalore"
      },
      {
        "supplier_city": "Salt Lake City"
      },
      {
        "supplier_city": "Buenos Aires"
      },
      {
        "supplier_city": "Santiago"
      },
      {
        "supplier_city": "Mendoza"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Thane"
      },
      {
        "supplier_city": "Pune"
      },
      {
        "supplier_city": "Noida"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Kyiv"
      },
      {
        "supplier_city": "Asni\u00e8res-sur-Seine"
      },
      {
        "supplier_city": "Lisbon"
      },
      {
        "supplier_city": "Stamford"
      },
      {
        "supplier_city": "Springfield"
      },
      {
        "supplier_city": "Esztergom"
      },
      {
        "supplier_city": "Louisville"
      },
      {
        "supplier_city": "Polla"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Mumbai"
      },
      {
        "supplier_city": "Istanbul"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "Oakland"
      },
      {
        "supplier_city": "Plano"
      },
      {
        "supplier_city": "Cambridge"
      },
      {
        "supplier_city": "Paris"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "San Mateo"
      },
      {
        "supplier_city": "San Francisco"
      },
      {
        "supplier_city": "New York City"
      },
      {
        "supplier_city": "Singapore"
      },
      {
        "supplier_city": "Jackson"
      },
      {
        "supplier_city": "Maisons-Laffitte"
      },
      {
        "supplier_city": "Chicago"
      },
      {
        "supplier_city": "Houston"
      },
      {
        "supplier_city": "Seattle"
      }
    ]
  },
  {
    "question": "Find the country of Acenture's headquarters",
    "cypher": "MATCH (o:Organization {name: 'Accenture'})-[:IN_CITY]->(c:City)-[:IN_COUNTRY]->(country:Country) RETURN country.name AS headquarters_country",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "United States of America"
      },
      {
        "headquarters_country": "Australia"
      },
      {
        "headquarters_country": "Australia"
      },
      {
        "headquarters_country": "Australia"
      },
      {
        "headquarters_country": "Netherlands"
      },
      {
        "headquarters_country": "Argentina"
      },
      {
        "headquarters_country": "Argentina"
      },
      {
        "headquarters_country": "Argentina"
      },
      {
        "headquarters_country": "Argentina"
      },
      {
        "headquarters_country": "France"
      },
      {
        "headquarters_country": "France"
      },
      {
        "headquarters_country": "India"
      },
      {
        "headquarters_country": "India"
      },
      {
        "headquarters_country": "India"
      },
      {
        "headquarters_country": "Canada"
      },
      {
        "headquarters_country": "Canada"
      },
      {
        "headquarters_country": "Canada"
      },
      {
        "headquarters_country": "Canada"
      },
      {
        "headquarters_country": "Portugal"
      },
      {
        "headquarters_country": "Portugal"
      },
      {
        "headquarters_country": "Malaysia"
      },
      {
        "headquarters_country": "Malaysia"
      },
      {
        "headquarters_country": "Malaysia"
      },
      {
        "headquarters_country": "Denmark"
      },
      {
        "headquarters_country": "Brazil"
      },
      {
        "headquarters_country": "Brazil"
      },
      {
        "headquarters_country": "Brazil"
      },
      {
        "headquarters_country": "Hong Kong"
      },
      {
        "headquarters_country": "Philippines"
      },
      {
        "headquarters_country": "Philippines"
      },
      {
        "headquarters_country": "Philippines"
      },
      {
        "headquarters_country": "Turkey"
      },
      {
        "headquarters_country": "Belgium"
      },
      {
        "headquarters_country": "Belgium"
      },
      {
        "headquarters_country": "Colombia"
      },
      {
        "headquarters_country": "Sweden"
      },
      {
        "headquarters_country": "Finland"
      },
      {
        "headquarters_country": "Finland"
      },
      {
        "headquarters_country": "Finland"
      },
      {
        "headquarters_country": "Poland"
      },
      {
        "headquarters_country": "Poland"
      },
      {
        "headquarters_country": "Poland"
      },
      {
        "headquarters_country": "Poland"
      },
      {
        "headquarters_country": "Saudi Arabia"
      }
    ]
  },
  {
    "question": "How many investors back companies that invest in Infinite Analytics?",
    "cypher": "MATCH (o:Organization {name: 'Infinite Analytics'})<-[:HAS_INVESTOR]-(i:Organization)<-[:HAS_INVESTOR]-(i2) RETURN COUNT(DISTINCT i2) AS investor_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "investor_count": 0
      }
    ],
    "answer": "Based on the query result, 0 investors back companies that invest in Infinite Analytics."
  },
  {
    "question": "What's the parent company of Oracle's suppliers?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})-[:HAS_SUPPLIER]->(s:Organization)<-[:HAS_SUBSIDIARY]-(parent:Organization) RETURN parent.name AS parent_company_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "parent_company_name": "Google"
      },
      {
        "parent_company_name": "Spectrum"
      },
      {
        "parent_company_name": "Jive Software"
      },
      {
        "parent_company_name": "Oracle"
      },
      {
        "parent_company_name": "National Instruments"
      },
      {
        "parent_company_name": "Rackspace Technology"
      },
      {
        "parent_company_name": "Rackable Systems"
      },
      {
        "parent_company_name": "Hewlett Packard Enterprise"
      },
      {
        "parent_company_name": "Broadcom"
      },
      {
        "parent_company_name": "LinkedIn"
      },
      {
        "parent_company_name": "Compass Group"
      },
      {
        "parent_company_name": "Salesforce"
      },
      {
        "parent_company_name": "Netwrix"
      },
      {
        "parent_company_name": "Liquid Web"
      },
      {
        "parent_company_name": "BYTEDANCE"
      },
      {
        "parent_company_name": "Okta"
      },
      {
        "parent_company_name": "Pearson"
      },
      {
        "parent_company_name": "Microsoft Corporation"
      },
      {
        "parent_company_name": "PTC"
      },
      {
        "parent_company_name": "Synopsys"
      },
      {
        "parent_company_name": "IBM"
      },
      {
        "parent_company_name": "Cavium"
      },
      {
        "parent_company_name": "TIBCO Software"
      },
      {
        "parent_company_name": "Pearson"
      },
      {
        "parent_company_name": "Navisite"
      },
      {
        "parent_company_name": "IBM"
      },
      {
        "parent_company_name": "Virtual Instruments"
      },
      {
        "parent_company_name": "Silicon Graphics"
      },
      {
        "parent_company_name": "Unica"
      },
      {
        "parent_company_name": "Oracle"
      },
      {
        "parent_company_name": "ZoomInfo"
      },
      {
        "parent_company_name": "SAP"
      },
      {
        "parent_company_name": "Adobe"
      },
      {
        "parent_company_name": "Quest Software"
      },
      {
        "parent_company_name": "Meta Platforms"
      },
      {
        "parent_company_name": "Cavium"
      },
      {
        "parent_company_name": "Sun Microsystems"
      },
      {
        "parent_company_name": "Marketo"
      },
      {
        "parent_company_name": "Adobe"
      },
      {
        "parent_company_name": "Avnet"
      },
      {
        "parent_company_name": "Google"
      },
      {
        "parent_company_name": "Digital Realty"
      },
      {
        "parent_company_name": "Anteriad"
      },
      {
        "parent_company_name": "Qlik"
      },
      {
        "parent_company_name": "Momentive"
      },
      {
        "parent_company_name": "Hero Digital"
      },
      {
        "parent_company_name": "SolarWinds"
      },
      {
        "parent_company_name": "Nvidia Corporation"
      },
      {
        "parent_company_name": "SAP"
      },
      {
        "parent_company_name": "Adobe"
      },
      {
        "parent_company_name": "Microsoft Corporation"
      },
      {
        "parent_company_name": "Oracle"
      },
      {
        "parent_company_name": "Gartner"
      },
      {
        "parent_company_name": "Cavium"
      },
      {
        "parent_company_name": "Marvell Technology"
      },
      {
        "parent_company_name": "Mirantis"
      },
      {
        "parent_company_name": "PTC"
      },
      {
        "parent_company_name": "Hill & Knowlton"
      },
      {
        "parent_company_name": "Hootsuite"
      }
    ]
  },
  {
    "question": "Count cities where Microsoft's suppliers are located",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})-[:HAS_SUPPLIER]->(s:Organization)-[:IN_CITY]->(c:City) RETURN COUNT(DISTINCT c) AS city_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "city_count": 5488
      }
    ],
    "answer": "Microsoft has suppliers located in 5,488 distinct cities."
  },
  {
    "question": "What industry categories do IBM's suppliers belong to?",
    "cypher": "MATCH (o:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(s:Organization)-[:HAS_CATEGORY]->(ic:IndustryCategory) RETURN ic.name AS industry_category",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Enterprise Software Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Computer Hardware Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Business Software Companies"
      },
      {
        "industry_category": "Mobile Phone Manufacturers"
      },
      {
        "industry_category": "Mobile Phone Manufacturers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Cloud Computing Providers"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "CRM Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Software Companies"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Open Source Software Organizations"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Software As A Service Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Computer Storage Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Analytics Companies"
      },
      {
        "industry_category": "Data Providers"
      },
      {
        "industry_category": "Data Providers"
      },
      {
        "industry_category": "Data Providers"
      },
      {
        "industry_category": "Data Providers"
      },
      {
        "industry_category": "Data Providers"
      },
      {
        "industry_category": "Data Providers"
      },
      {
        "industry_category": "Data Providers"
      },
      {
        "industry_category": "Data Providers"
      },
      {
        "industry_category": "Data Providers"
      },
      {
        "industry_category": "Data Providers"
      },
      {
        "industry_category": "Data Providers"
      },
      {
        "industry_category": "Data Providers"
      },
      {
        "industry_category": "Display Technology Companies"
      },
      {
        "industry_category": "Display Technology Companies"
      },
      {
        "industry_category": "Display Technology Companies"
      },
      {
        "industry_category": "Display Technology Companies"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Software Consulting Firms"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Media And Information Companies"
      },
      {
        "industry_category": "Telecommunications Companies"
      },
      {
        "industry_category": "Telecommunications Companies"
      },
      {
        "industry_category": "Telecommunications Companies"
      },
      {
        "industry_category": "Telecommunications Companies"
      },
      {
        "industry_category": "Telecommunications Companies"
      },
      {
        "industry_category": "Telecommunications Companies"
      },
      {
        "industry_category": "Telecommunications Companies"
      },
      {
        "industry_category": "Telecommunications Companies"
      },
      {
        "industry_category": "Telecommunications Companies"
      },
      {
        "industry_category": "Video Messaging Companies"
      },
      {
        "industry_category": "Video Messaging Companies"
      },
      {
        "industry_category": "Video Messaging Companies"
      },
      {
        "industry_category": "Video Messaging Companies"
      },
      {
        "industry_category": "Video Messaging Companies"
      },
      {
        "industry_category": "Video Messaging Companies"
      },
      {
        "industry_category": "Video Messaging Companies"
      },
      {
        "industry_category": "Video Messaging Companies"
      },
      {
        "industry_category": "Video Messaging Companies"
      },
      {
        "industry_category": "Video Messaging Companies"
      },
      {
        "industry_category": "Video Messaging Companies"
      },
      {
        "industry_category": "Video Messaging Companies"
      },
      {
        "industry_category": "Entertainment Companies"
      },
      {
        "industry_category": "Electrical Equipment Manufacturers"
      },
      {
        "industry_category": "Internet Of Things Companies"
      },
      {
        "industry_category": "Internet Of Things Companies"
      },
      {
        "industry_category": "Tool Manufacturers"
      },
      {
        "industry_category": "Retailers"
      },
      {
        "industry_category": "Retailers"
      },
      {
        "industry_category": "Retailers"
      },
      {
        "industry_category": "Retailers"
      },
      {
        "industry_category": "Retailers"
      },
      {
        "industry_category": "Retailers"
      },
      {
        "industry_category": "Machine Manufacturers"
      },
      {
        "industry_category": "Machine Manufacturers"
      },
      {
        "industry_category": "Machine Manufacturers"
      },
      {
        "industry_category": "Networking Companies"
      },
      {
        "industry_category": "Networking Companies"
      },
      {
        "industry_category": "Networking Companies"
      },
      {
        "industry_category": "Networking Companies"
      },
      {
        "industry_category": "Networking Companies"
      },
      {
        "industry_category": "Networking Companies"
      },
      {
        "industry_category": "Networking Companies"
      },
      {
        "industry_category": "Networking Companies"
      },
      {
        "industry_category": "Networking Companies"
      },
      {
        "industry_category": "Networking Companies"
      },
      {
        "industry_category": "Networking Companies"
      },
      {
        "industry_category": "Engine Manufacturers"
      },
      {
        "industry_category": "Energy Companies"
      },
      {
        "industry_category": "Energy Companies"
      },
      {
        "industry_category": "Energy Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Financial Services Companies"
      },
      {
        "industry_category": "Management Consulting Firms"
      },
      {
        "industry_category": "Management Consulting Firms"
      },
      {
        "industry_category": "Management Consulting Firms"
      },
      {
        "industry_category": "Management Consulting Firms"
      },
      {
        "industry_category": "Management Consulting Firms"
      },
      {
        "industry_category": "Management Consulting Firms"
      },
      {
        "industry_category": "Management Consulting Firms"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Artificial Intelligence Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Professional Service Companies"
      },
      {
        "industry_category": "Virtual Reality Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Marketing Companies"
      },
      {
        "industry_category": "Freight And Logistics Companies"
      },
      {
        "industry_category": "Freight And Logistics Companies"
      },
      {
        "industry_category": "Public Transport Operators"
      },
      {
        "industry_category": "Public Transport Operators"
      },
      {
        "industry_category": "Transport Companies"
      },
      {
        "industry_category": "Transport Companies"
      },
      {
        "industry_category": "Transport Companies"
      },
      {
        "industry_category": "Audio Video Equipment Manufacturers"
      },
      {
        "industry_category": "Audio Video Equipment Manufacturers"
      },
      {
        "industry_category": "Motor Vehicle Manufacturers"
      },
      {
        "industry_category": "Motor Vehicle Manufacturers"
      },
      {
        "industry_category": "Motor Vehicle Manufacturers"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Semiconductor Companies"
      },
      {
        "industry_category": "Autonomous Vehicles"
      },
      {
        "industry_category": "Financial Technology Companies"
      },
      {
        "industry_category": "Financial Technology Companies"
      },
      {
        "industry_category": "Financial Technology Companies"
      },
      {
        "industry_category": "Financial Technology Companies"
      },
      {
        "industry_category": "Financial Technology Companies"
      },
      {
        "industry_category": "Financial Technology Companies"
      },
      {
        "industry_category": "Financial Technology Companies"
      },
      {
        "industry_category": "Financial Technology Companies"
      },
      {
        "industry_category": "Financial Technology Companies"
      },
      {
        "industry_category": "Financial Technology Companies"
      },
      {
        "industry_category": "Financial Technology Companies"
      },
      {
        "industry_category": "Accounting Services"
      },
      {
        "industry_category": "Medical Technology Companies"
      },
      {
        "industry_category": "Medical Organizations"
      },
      {
        "industry_category": "Medical Organizations"
      },
      {
        "industry_category": "Medical Organizations"
      },
      {
        "industry_category": "Medical Organizations"
      },
      {
        "industry_category": "Medical Organizations"
      },
      {
        "industry_category": "Medical Organizations"
      },
      {
        "industry_category": "Health Care Companies"
      },
      {
        "industry_category": "Health Care Companies"
      },
      {
        "industry_category": "Food Retailers"
      },
      {
        "industry_category": "Supermarkets"
      },
      {
        "industry_category": "Superstores"
      },
      {
        "industry_category": "Defense Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Security Software Companies"
      },
      {
        "industry_category": "Investment Companies"
      },
      {
        "industry_category": "Investment Companies"
      },
      {
        "industry_category": "Investment Companies"
      },
      {
        "industry_category": "Investment Companies"
      },
      {
        "industry_category": "Investment Companies"
      },
      {
        "industry_category": "Investment Companies"
      },
      {
        "industry_category": "Investment Companies"
      },
      {
        "industry_category": "Investment Companies"
      },
      {
        "industry_category": "Investment Companies"
      },
      {
        "industry_category": "Investment Companies"
      },
      {
        "industry_category": "Brokerage Firms"
      },
      {
        "industry_category": "Brokerage Firms"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Advertising Companies"
      },
      {
        "industry_category": "Construction Companies"
      },
      {
        "industry_category": "Construction Companies"
      },
      {
        "industry_category": "Construction Companies"
      },
      {
        "industry_category": "Construction Companies"
      },
      {
        "industry_category": "Construction Companies"
      },
      {
        "industry_category": "Construction Companies"
      },
      {
        "industry_category": "Construction Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Web Design Companies"
      },
      {
        "industry_category": "Database Companies"
      },
      {
        "industry_category": "Database Companies"
      },
      {
        "industry_category": "Database Companies"
      },
      {
        "industry_category": "Database Companies"
      },
      {
        "industry_category": "Database Companies"
      },
      {
        "industry_category": "Database Companies"
      },
      {
        "industry_category": "Industrial Design Firms"
      },
      {
        "industry_category": "Industrial Design Firms"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Design Companies"
      },
      {
        "industry_category": "Online Learning Companies"
      },
      {
        "industry_category": "Online Learning Companies"
      },
      {
        "industry_category": "Online Learning Companies"
      },
      {
        "industry_category": "Online Learning Companies"
      },
      {
        "industry_category": "Online Learning Companies"
      },
      {
        "industry_category": "Online Learning Companies"
      },
      {
        "industry_category": "Online Learning Companies"
      },
      {
        "industry_category": "Online Learning Companies"
      },
      {
        "industry_category": "Online Learning Companies"
      },
      {
        "industry_category": "Online Learning Companies"
      },
      {
        "industry_category": "Online Learning Companies"
      },
      {
        "industry_category": "Educational Organizations"
      },
      {
        "industry_category": "Educational Organizations"
      },
      {
        "industry_category": "Educational Organizations"
      },
      {
        "industry_category": "Educational Organizations"
      },
      {
        "industry_category": "Educational Organizations"
      },
      {
        "industry_category": "Educational Organizations"
      },
      {
        "industry_category": "Educational Organizations"
      },
      {
        "industry_category": "Educational Organizations"
      },
      {
        "industry_category": "Educational Organizations"
      },
      {
        "industry_category": "Educational Organizations"
      },
      {
        "industry_category": "Educational Organizations"
      },
      {
        "industry_category": "Educational Organizations"
      },
      {
        "industry_category": "Payment Service Providers"
      },
      {
        "industry_category": "Payment Service Providers"
      },
      {
        "industry_category": "Payment Service Providers"
      },
      {
        "industry_category": "Payment Service Providers"
      },
      {
        "industry_category": "Payment Service Providers"
      },
      {
        "industry_category": "Payment Service Providers"
      },
      {
        "industry_category": "Payment Service Providers"
      },
      {
        "industry_category": "Investment Management Companies"
      },
      {
        "industry_category": "Investment Management Companies"
      },
      {
        "industry_category": "Investment Management Companies"
      },
      {
        "industry_category": "Investment Management Companies"
      },
      {
        "industry_category": "Investment Management Companies"
      },
      {
        "industry_category": "Investment Management Companies"
      },
      {
        "industry_category": "Investment Management Companies"
      },
      {
        "industry_category": "Engineering Consulting Firms"
      },
      {
        "industry_category": "Engineering Consulting Firms"
      },
      {
        "industry_category": "Insurance Companies"
      },
      {
        "industry_category": "Robotics Companies"
      },
      {
        "industry_category": "Robotics Companies"
      },
      {
        "industry_category": "Book Publishing Companies"
      },
      {
        "industry_category": "Publishing Companies"
      },
      {
        "industry_category": "Natural Language Processing Companies"
      },
      {
        "industry_category": "Natural Language Processing Companies"
      },
      {
        "industry_category": "Natural Language Processing Companies"
      },
      {
        "industry_category": "Natural Language Processing Companies"
      },
      {
        "industry_category": "Natural Language Processing Companies"
      },
      {
        "industry_category": "Natural Language Processing Companies"
      },
      {
        "industry_category": "Natural Language Processing Companies"
      },
      {
        "industry_category": "Natural Language Processing Companies"
      },
      {
        "industry_category": "Natural Language Processing Companies"
      },
      {
        "industry_category": "Military Related Organizations"
      },
      {
        "industry_category": "Public Administration"
      },
      {
        "industry_category": "Public Administration"
      },
      {
        "industry_category": "Public Administration"
      },
      {
        "industry_category": "Public Administration"
      },
      {
        "industry_category": "Public Administration"
      },
      {
        "industry_category": "Graphic Design Companies"
      },
      {
        "industry_category": "Graphic Design Companies"
      },
      {
        "industry_category": "Graphic Design Companies"
      },
      {
        "industry_category": "Graphic Design Companies"
      },
      {
        "industry_category": "Graphic Design Companies"
      },
      {
        "industry_category": "Graphic Design Companies"
      },
      {
        "industry_category": "Graphic Design Companies"
      },
      {
        "industry_category": "Graphic Design Companies"
      },
      {
        "industry_category": "Graphic Design Companies"
      },
      {
        "industry_category": "Graphic Design Companies"
      },
      {
        "industry_category": "Graphic Design Companies"
      },
      {
        "industry_category": "Consumer Service Companies"
      },
      {
        "industry_category": "Consumer Service Companies"
      },
      {
        "industry_category": "Consumer Service Companies"
      },
      {
        "industry_category": "Consumer Service Companies"
      },
      {
        "industry_category": "Consumer Service Companies"
      },
      {
        "industry_category": "Consumer Service Companies"
      },
      {
        "industry_category": "Consumer Service Companies"
      },
      {
        "industry_category": "Consumer Service Companies"
      },
      {
        "industry_category": "Consumer Service Companies"
      },
      {
        "industry_category": "Recruiting And Employment Agencies"
      },
      {
        "industry_category": "Recruiting And Employment Agencies"
      },
      {
        "industry_category": "Recruiting And Employment Agencies"
      },
      {
        "industry_category": "Recruiting And Employment Agencies"
      },
      {
        "industry_category": "Venture Capital Firms"
      },
      {
        "industry_category": "Venture Capital Firms"
      },
      {
        "industry_category": "Venture Capital Firms"
      },
      {
        "industry_category": "Venture Capital Firms"
      },
      {
        "industry_category": "Car Manufacturers"
      },
      {
        "industry_category": "Car Manufacturers"
      },
      {
        "industry_category": "Electric Vehicles"
      },
      {
        "industry_category": "Electric Vehicles"
      },
      {
        "industry_category": "Motion Picture Companies"
      },
      {
        "industry_category": "Motion Picture Companies"
      },
      {
        "industry_category": "Motion Picture Companies"
      },
      {
        "industry_category": "Animation Studios"
      },
      {
        "industry_category": "Film Companies"
      },
      {
        "industry_category": "Film Companies"
      },
      {
        "industry_category": "Chemical Companies"
      },
      {
        "industry_category": "Chemical Companies"
      },
      {
        "industry_category": "Vehicle Parts Manufacturers"
      },
      {
        "industry_category": "Government Departments"
      },
      {
        "industry_category": "Government Agencies"
      },
      {
        "industry_category": "Translation Services"
      },
      {
        "industry_category": "Translation Services"
      },
      {
        "industry_category": "Translation Services"
      },
      {
        "industry_category": "Translation Services"
      },
      {
        "industry_category": "Translation Services"
      },
      {
        "industry_category": "Translation Services"
      },
      {
        "industry_category": "Translation Services"
      },
      {
        "industry_category": "Natural Gas Companies"
      },
      {
        "industry_category": "Natural Gas Companies"
      },
      {
        "industry_category": "Natural Gas Companies"
      },
      {
        "industry_category": "Digital Currencies Companies"
      },
      {
        "industry_category": "Digital Currencies Companies"
      },
      {
        "industry_category": "Event Management Companies"
      },
      {
        "industry_category": "Event Management Companies"
      },
      {
        "industry_category": "Event Management Companies"
      },
      {
        "industry_category": "Event Management Companies"
      },
      {
        "industry_category": "Event Management Companies"
      },
      {
        "industry_category": "Event Management Companies"
      },
      {
        "industry_category": "Social Networking Companies"
      },
      {
        "industry_category": "Social Networking Companies"
      },
      {
        "industry_category": "Social Networking Companies"
      },
      {
        "industry_category": "Social Networking Companies"
      },
      {
        "industry_category": "Social Networking Companies"
      },
      {
        "industry_category": "Social Networking Companies"
      },
      {
        "industry_category": "Social Networking Companies"
      },
      {
        "industry_category": "Social Networking Companies"
      },
      {
        "industry_category": "Associations And Societies"
      },
      {
        "industry_category": "Associations And Societies"
      },
      {
        "industry_category": "Associations And Societies"
      },
      {
        "industry_category": "Private Equity Firms"
      },
      {
        "industry_category": "Private Equity Firms"
      },
      {
        "industry_category": "Private Equity Firms"
      },
      {
        "industry_category": "Private Equity Firms"
      },
      {
        "industry_category": "Optics Manufacturing Companies"
      },
      {
        "industry_category": "Optics Manufacturing Companies"
      },
      {
        "industry_category": "Banks"
      },
      {
        "industry_category": "Banks"
      },
      {
        "industry_category": "Banks"
      },
      {
        "industry_category": "Real Estate Companies"
      },
      {
        "industry_category": "Real Estate Companies"
      },
      {
        "industry_category": "Real Estate Companies"
      },
      {
        "industry_category": "Public Health Organizations"
      },
      {
        "industry_category": "Public Health Organizations"
      },
      {
        "industry_category": "Mining Companies"
      },
      {
        "industry_category": "Mining Companies"
      },
      {
        "industry_category": "Mining Companies"
      },
      {
        "industry_category": "Mining Companies"
      },
      {
        "industry_category": "Oil Companies"
      },
      {
        "industry_category": "Oil Companies"
      },
      {
        "industry_category": "Video Game Companies"
      },
      {
        "industry_category": "Video Game Companies"
      },
      {
        "industry_category": "Computer Vision Companies"
      },
      {
        "industry_category": "Computer Vision Companies"
      },
      {
        "industry_category": "Computer Vision Companies"
      },
      {
        "industry_category": "Biotechnology Companies"
      },
      {
        "industry_category": "Music Companies"
      },
      {
        "industry_category": "Food And Drink Companies"
      },
      {
        "industry_category": "Business Incubators"
      },
      {
        "industry_category": "Business Incubators"
      },
      {
        "industry_category": "Real Estate Investment Trusts"
      },
      {
        "industry_category": "Real Estate Investment Trusts"
      },
      {
        "industry_category": "Ministries"
      },
      {
        "industry_category": "Security Companies"
      },
      {
        "industry_category": "Security Companies"
      },
      {
        "industry_category": "Social Sciences Organizations"
      },
      {
        "industry_category": "Financial Associations"
      },
      {
        "industry_category": "Pharmaceutical Companies"
      },
      {
        "industry_category": "Architecture Firms"
      },
      {
        "industry_category": "Courts"
      },
      {
        "industry_category": "Hospitals"
      },
      {
        "industry_category": "Sporting Goods Manufacturers"
      },
      {
        "industry_category": "Mental Health Organizations"
      },
      {
        "industry_category": "Stock Exchanges"
      },
      {
        "industry_category": "Polling Companies"
      },
      {
        "industry_category": "Polling Companies"
      },
      {
        "industry_category": "Polling Companies"
      },
      {
        "industry_category": "General Contractors"
      },
      {
        "industry_category": "Sports Clubs"
      },
      {
        "industry_category": "Miscellaneous Manufacturers"
      },
      {
        "industry_category": "Journalism Associations"
      },
      {
        "industry_category": "Building Materials Companies"
      },
      {
        "industry_category": "Agricultural Machinery Manufacturers"
      },
      {
        "industry_category": "Agricultural Machinery Manufacturers"
      },
      {
        "industry_category": "Truck Manufacturers"
      },
      {
        "industry_category": "Truck Manufacturers"
      },
      {
        "industry_category": "Bus Manufacturers"
      },
      {
        "industry_category": "Bus Manufacturers"
      },
      {
        "industry_category": "Metal Companies"
      },
      {
        "industry_category": "Airports Services"
      },
      {
        "industry_category": "Infrastructure"
      },
      {
        "industry_category": "Infrastructure"
      },
      {
        "industry_category": "Bridges"
      },
      {
        "industry_category": "Gas Station"
      },
      {
        "industry_category": "Plumbing Contractors"
      },
      {
        "industry_category": "Watch Manufacturing Companies"
      },
      {
        "industry_category": "Jewelry Manufacturers"
      },
      {
        "industry_category": "Jewelry Retailers"
      }
    ]
  },
  {
    "question": "How many companies are mentioned in articles about New Energy Group?",
    "cypher": "MATCH (a:Article)-[:MENTIONS]->(o1:Organization {name: 'New Energy Group'}), (a)-[:MENTIONS]->(o2:Organization) WHERE o1 <> o2 RETURN COUNT(DISTINCT o2) AS mentioned_companies",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "mentioned_companies": 0
      }
    ],
    "answer": "Based on the query result, 0 companies are mentioned in articles about New Energy Group."
  },
  {
    "question": "How many companies supply both Microsoft Corporation and Oracle?",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(supplier:Organization)-[:HAS_SUPPLIER]->(oracle:Organization {name: 'Oracle'}) RETURN COUNT(DISTINCT supplier) AS shared_suppliers",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_suppliers": 28
      }
    ],
    "answer": "28 companies supply both Microsoft Corporation and Oracle."
  },
  {
    "question": "What's the total revenue of all subsidiaries owned by SAP?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE sub.revenue IS NOT NULL RETURN SUM(sub.revenue) AS total_subsidiary_revenue",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_subsidiary_revenue": 50200000000.0
      }
    ],
    "answer": "Based on the query result, the total revenue of all subsidiaries owned by SAP is $50.2 billion."
  },
  {
    "question": "In which city is the company that Julie Spellman Sweet leads located?",
    "cypher": "MATCH (p:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO]-(company:Organization)-[:IN_CITY]->(city:City) RETURN city.name AS company_city",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "company_city": "Berwyn"
      },
      {
        "company_city": "Bangalore"
      },
      {
        "company_city": "Miami"
      },
      {
        "company_city": "Perth"
      },
      {
        "company_city": "Bra\u0219ov"
      },
      {
        "company_city": "Albany"
      },
      {
        "company_city": "Bentonville"
      },
      {
        "company_city": "Barueri"
      },
      {
        "company_city": "Los Angeles"
      },
      {
        "company_city": "New York City"
      },
      {
        "company_city": "Petaling Jaya"
      },
      {
        "company_city": "Toronto"
      },
      {
        "company_city": "Blagnac"
      },
      {
        "company_city": "City of Brussels"
      },
      {
        "company_city": "Amsterdam"
      },
      {
        "company_city": "Tallahassee"
      },
      {
        "company_city": "Edmonton"
      },
      {
        "company_city": "London"
      },
      {
        "company_city": "Tampere"
      },
      {
        "company_city": "S\u00e3o Paulo"
      },
      {
        "company_city": "Brisbane"
      },
      {
        "company_city": "Palo Alto"
      },
      {
        "company_city": "Cambridge"
      },
      {
        "company_city": "Katowice"
      },
      {
        "company_city": "Victoria"
      },
      {
        "company_city": "Recife"
      },
      {
        "company_city": "San Francisco"
      },
      {
        "company_city": "Warsaw"
      },
      {
        "company_city": "Austin"
      },
      {
        "company_city": "Irvine"
      },
      {
        "company_city": "Atlanta"
      },
      {
        "company_city": "Oklahoma City"
      },
      {
        "company_city": "Houston"
      },
      {
        "company_city": "Earth"
      },
      {
        "company_city": "Singapore"
      },
      {
        "company_city": "Hartford"
      },
      {
        "company_city": "La Plata"
      },
      {
        "company_city": "Cebu City"
      },
      {
        "company_city": "Subang Jaya"
      },
      {
        "company_city": "Calgary"
      },
      {
        "company_city": "Beaverton"
      },
      {
        "company_city": "Kochi"
      },
      {
        "company_city": "Al Khobar"
      },
      {
        "company_city": "San Nicolas"
      },
      {
        "company_city": "Mar del Plata"
      },
      {
        "company_city": "Florham Park"
      },
      {
        "company_city": "Manchester"
      },
      {
        "company_city": "Sacramento"
      },
      {
        "company_city": "Kuala Lumpur"
      },
      {
        "company_city": "Biot"
      },
      {
        "company_city": "Irving"
      },
      {
        "company_city": "Budapest"
      },
      {
        "company_city": "Fredericton"
      },
      {
        "company_city": "Washington, D.C."
      },
      {
        "company_city": "Krak\u00f3w"
      },
      {
        "company_city": "San Jose"
      },
      {
        "company_city": "Istanbul"
      },
      {
        "company_city": "Orlando"
      },
      {
        "company_city": "Buenos Aires"
      },
      {
        "company_city": "Boise"
      },
      {
        "company_city": "Denver"
      },
      {
        "company_city": "San Antonio"
      },
      {
        "company_city": "Paris"
      },
      {
        "company_city": "Melbourne"
      },
      {
        "company_city": "St. Petersburg"
      },
      {
        "company_city": "Kuching"
      },
      {
        "company_city": "Phoenix"
      },
      {
        "company_city": "Wroc\u0142aw"
      },
      {
        "company_city": "Mumbai"
      },
      {
        "company_city": "San Diego"
      },
      {
        "company_city": "Rosario"
      },
      {
        "company_city": "Helsinki"
      },
      {
        "company_city": "Vienna"
      }
    ]
  },
  {
    "question": "What's the highest revenue among firms that compete with Microsoft's suppliers?",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(supplier:Organization)-[:HAS_COMPETITOR]->(competitor:Organization) WHERE competitor.revenue IS NOT NULL RETURN MAX(competitor.revenue) AS peak_competitor_revenue",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "peak_competitor_revenue": 198270000000.0
      }
    ],
    "answer": "The highest revenue among firms that compete with Microsoft's suppliers is $198,270,000,000."
  },
  {
    "question": "How many investors does Infinite Analytics have through all its connections?",
    "cypher": "MATCH (ia:Organization {name: 'Infinite Analytics'})<-[:HAS_INVESTOR]-(investor) RETURN COUNT(DISTINCT investor) AS total_investors",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_investors": 6
      }
    ],
    "answer": "Infinite Analytics has 6 distinct investors."
  },
  {
    "question": "What's the name of the country where Topsfield is located?",
    "cypher": "MATCH (city:City {name: 'Topsfield'})-[:IN_COUNTRY]->(country:Country) RETURN country.name AS country_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "country_name": "United States of America"
      }
    ],
    "answer": "Topsfield is located in the United States of America."
  },
  {
    "question": "How many different industry categories are represented by companies that supply Mircosoft Corporation?",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(supplier:Organization)-[:HAS_CATEGORY]->(category:IndustryCategory) RETURN COUNT(DISTINCT category) AS unique_categories",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "unique_categories": 81
      }
    ],
    "answer": "There are 81 different industry categories represented by companies that supply Microsoft Corporation."
  },
  {
    "question": "What's the average number of employees across all public companies that have subsidiaries in Seattle?",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(city:City {name: 'Seattle'}) WHERE parent.isPublic = true AND parent.nbrEmployees IS NOT NULL RETURN AVG(parent.nbrEmployees) AS average_employee_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_employee_count": 206320.4545454546
      }
    ],
    "answer": "Based on the query result, the average number of employees across public companies that have subsidiaries in Seattle is approximately 206,320 employees."
  },
  {
    "question": "Which company connects IBM to New Relic through supplier relationships?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(middle:Organization)-[:HAS_SUPPLIER]->(nr:Organization {name: 'New Relic'}) RETURN middle.name AS connecting_company LIMIT 1",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_company": "Adobe"
      }
    ],
    "answer": "Adobe connects IBM to New Relic through supplier relationships."
  },
  {
    "question": "What's the lowest employee count among dissolved companys that were subsidiaries of public organizations?",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE parent.isPublic = true AND sub.isDissolved = true AND sub.nbrEmployees IS NOT NULL RETURN MIN(sub.nbrEmployees) AS minimum_employees",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "minimum_employees": 1
      }
    ],
    "answer": "Based on the query result, the lowest employee count among dissolved subsidiaries of public organizations is 1 employee."
  },
  {
    "question": "How many articles mention organizations that have Julie Spellman Sweet as their CEO?",
    "cypher": "MATCH (p:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO]-(org:Organization)<-[:MENTIONS]-(article:Article) RETURN COUNT(DISTINCT article) AS article_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "article_count": 695
      }
    ],
    "answer": "695 articles mention organizations that have Julie Spellman Sweet as their CEO."
  },
  {
    "question": "What's the motto of the biggest employer among Microsoft Corporation's suppliers?",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(supplier:Organization) WHERE supplier.nbrEmployees IS NOT NULL AND supplier.motto IS NOT NULL RETURN supplier.motto AS company_motto ORDER BY supplier.nbrEmployees DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "company_motto": ""
      }
    ],
    "answer": "UNKNOWN. The query result returned an empty motto, which does not provide a clear answer to the question about the motto of Microsoft's largest supplier."
  },
  {
    "question": "Tell me the total number of folks working at all subsidiaries of Accenture",
    "cypher": "MATCH (acc:Organization {name: 'Accenture'})-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE sub.nbrEmployees IS NOT NULL RETURN SUM(sub.nbrEmployees) AS total_subsidiary_employees",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_subsidiary_employees": 552138
      }
    ],
    "answer": "Based on the query result, the total number of employees working at Accenture's subsidiaries is 552,138."
  },
  {
    "question": "What's the industry category of companies that have subsidiaries competing with Oracle?",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization)-[:HAS_COMPETITOR]->(oracle:Organization {name: 'Oracle'}), (parent)-[:HAS_CATEGORY]->(cat:IndustryCategory) RETURN cat.name AS industry_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "industry_name": "Electronic Products Manufacturers"
      }
    ],
    "answer": "Based on the query result, the industry category of companies that have subsidiaries competing with Oracle is Electronic Products Manufacturers."
  },
  {
    "question": "How many paths connect New Energy Group to articles through the MENTIONS relationship?",
    "cypher": "MATCH path = (neg:Organization {name: 'New Energy Group'})<-[:MENTIONS]-(article:Article) RETURN COUNT(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connection_count": 5
      }
    ],
    "answer": "There are 5 paths connecting New Energy Group to articles through the MENTIONS relationship."
  },
  {
    "question": "What's the peak sentiment score of articles mentioning companies invested in by John Hancock Investments?",
    "cypher": "MATCH (jhi:Organization {name: 'John Hancock Investments'})-[:HAS_INVESTOR]->(company:Organization)<-[:MENTIONS]-(article:Article) WHERE article.sentiment IS NOT NULL RETURN MAX(article.sentiment) AS highest_sentiment",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_sentiment": NaN
      }
    ],
    "answer": "UNKNOWN. The query result contains a NaN (Not a Number) value, which suggests there is no valid sentiment score available for articles mentioning companies invested in by John Hancock Investments."
  },
  {
    "question": "Find the revenue of the wealthiest biz that has Cloud Sherpas as a subsidiary",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(cs:Organization {name: 'Cloud Sherpas'}) WHERE parent.revenue IS NOT NULL RETURN MAX(parent.revenue) AS maximum_revenue",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "maximum_revenue": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many different cities host subsidiaries of companies that supply IBM?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(supplier:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(city:City) RETURN COUNT(DISTINCT city) AS unique_cities",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "unique_cities": 1205
      }
    ],
    "answer": "Based on the query result, there are 1,205 different cities that host subsidiaries of companies supplying IBM."
  },
  {
    "question": "What's the name of the CEO of companys that own Accenture as a subsidiary?",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(acc:Organization {name: 'Accenture'}), (parent)-[:HAS_CEO]->(ceo:Person) RETURN ceo.name AS ceo_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ceo_name": "Jon Hallett"
      }
    ],
    "answer": "Jon Hallett is the CEO of the company that owns Accenture as a subsidiary."
  },
  {
    "question": "How many board members are there across all competitors of SAP's subsidiaries?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization)<-[:HAS_COMPETITOR]-(comp:Organization)-[:HAS_BOARD_MEMBER]->(board:Person) RETURN COUNT(DISTINCT board) AS total_board_members",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_board_members": 151
      }
    ],
    "answer": "There are 151 unique board members across all competitors of SAP's subsidiaries."
  },
  {
    "question": "What's the shortest path length between Julie Spellman Sweet and any investor in tech companies?",
    "cypher": "MATCH path = shortestPath((julie:Person {name: 'Julie Spellman Sweet'})-[*]-(investor:Person)-[:HAS_INVESTOR]->(company:Organization)-[:HAS_CATEGORY]->(cat:IndustryCategory)) WHERE cat.name CONTAINS 'Tech' RETURN LENGTH(path) AS connection_distance",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "Which city hosts the most subsidiaries of Microsft Corporation?",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(city:City) RETURN city.name AS city_name, COUNT(sub) AS subsidiary_count ORDER BY subsidiary_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "city_name": "San Francisco",
        "subsidiary_count": 35
      }
    ],
    "answer": "Based on the query result, San Francisco hosts the most subsidiaries of Microsoft Corporation, with 35 subsidiaries located in the city."
  },
  {
    "question": "What's the combined revenue of all public firms that have investors in common with Infinite Analytics?",
    "cypher": "MATCH (ia:Organization {name: 'Infinite Analytics'})<-[:HAS_INVESTOR]-(investor)-[:HAS_INVESTOR]->(company:Organization) WHERE company.isPublic = true AND company.revenue IS NOT NULL RETURN SUM(company.revenue) AS total_revenue",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_revenue": 0
      }
    ],
    "answer": "Based on the query result, the combined revenue of public firms that have investors in common with Infinite Analytics is $0. This could mean either no such firms exist or the revenue data is not available in the database."
  },
  {
    "question": "Tell me the summary of the article with the highest sentiment that mentions New Energy Group",
    "cypher": "MATCH (neg:Organization {name: 'New Energy Group'})<-[:MENTIONS]-(article:Article) WHERE article.sentiment IS NOT NULL RETURN article.summary AS article_summary ORDER BY article.sentiment DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "article_summary": "NEX EXCHANGE\nBlockchain venture builder Coinsilium Group Ltd (COIN) says that RIF Labs is acquiring ..."
      }
    ],
    "answer": "The article with the highest sentiment mentioning New Energy Group summarizes a blockchain venture involving Coinsilium Group Ltd (COIN) and RIF Labs, with the specific details of an acquisition being noted."
  },
  {
    "question": "How many companies serve as bridges connecting Oracle to cities in the United States of America?",
    "cypher": "MATCH (oracle:Organization {name: 'Oracle'})-[:HAS_SUPPLIER|HAS_SUBSIDIARY]-(bridge:Organization)-[:IN_CITY]->(city:City)-[:IN_COUNTRY]->(country:Country {name: 'United States of America'}) RETURN COUNT(DISTINCT bridge) AS bridge_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "bridge_count": 512
      }
    ],
    "answer": "512 companies serve as bridges connecting Oracle to cities in the United States of America."
  },
  {
    "question": "What's the title of articles mentioning corps that IBM supplies to?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(supplied:Organization)<-[:MENTIONS]-(article:Article) RETURN article.title AS article_title LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "article_title": "Delta agent or impostor? Reddit exchange puts airline in hot seat"
      }
    ],
    "answer": "Based on the query result, the title of an article mentioning a corps that IBM supplies to is \"Delta agent or impostor? Reddit exchange puts airline in hot seat\"."
  },
  {
    "question": "Count the dissolved companies among Microsoft Corporation's supplier network",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER*1..2]-(company:Organization) WHERE company.isDissolved = true RETURN COUNT(DISTINCT company) AS dissolved_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dissolved_count": 9
      }
    ],
    "answer": "Based on the query result, 9 dissolved companies are found in Microsoft Corporation's supplier network."
  },
  {
    "question": "What's the minimum number of employees at companies that have both CEO and board members?",
    "cypher": "MATCH (company:Organization)-[:HAS_CEO]->(ceo:Person), (company)-[:HAS_BOARD_MEMBER]->(board:Person) WHERE company.nbrEmployees IS NOT NULL RETURN MIN(company.nbrEmployees) AS smallest_workforce",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "smallest_workforce": 1
      }
    ],
    "answer": "Based on the query result, the minimum number of employees at companies that have both a CEO and board members is 1."
  },
  {
    "question": "Which industry category is most common among SAP's business partners and subsidiaries?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY|HAS_SUPPLIER]-(partner:Organization)-[:HAS_CATEGORY]->(cat:IndustryCategory) RETURN cat.name AS category_name, COUNT(partner) AS partner_count ORDER BY partner_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_name": "Software Companies",
        "partner_count": 136
      }
    ],
    "answer": "Based on the query result, \"Software Companies\" is the most common industry category among SAP's business partners and subsidiaries, with 136 partners falling into this category."
  },
  {
    "question": "How many investment connections exist between Malpani Ventures and other organizations?",
    "cypher": "MATCH (mv:Organization {name: 'Malpani Ventures'})-[:HAS_INVESTOR]-(org:Organization) RETURN COUNT(DISTINCT org) AS investment_connections",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "investment_connections": 1
      }
    ],
    "answer": "Based on the query result, Malpani Ventures has 1 investment connection with another organization."
  },
  {
    "question": "What's the average revenue of public companies located in cities that also host IBM subsidiaries?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(city:City)<-[:IN_CITY]-(company:Organization) WHERE company.isPublic = true AND company.revenue IS NOT NULL RETURN AVG(company.revenue) AS average_revenue",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_revenue": 29729833673.87406
      }
    ],
    "answer": "Based on the query result, the average revenue of public companies located in cities that also host IBM subsidiaries is approximately $29.7 billion."
  },
  {
    "question": "Find me the name of the guy who's CEO at the parent company of Cloud Sherpas",
    "cypher": "MATCH (cs:Organization {name: 'Cloud Sherpas'})<-[:HAS_SUBSIDIARY]-(parent:Organization)-[:HAS_CEO]->(ceo:Person) RETURN ceo.name AS ceo_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ceo_name": "Julie Spellman Sweet"
      }
    ],
    "answer": "Julie Spellman Sweet is the CEO of the parent company of Cloud Sherpas."
  },
  {
    "question": "What's the highest employee count among suppliers shared by both Oracl and Microsoft Corporation?",
    "cypher": "MATCH (oracle:Organization {name: 'Oracle'})<-[:HAS_SUPPLIER]-(supplier:Organization)-[:HAS_SUPPLIER]->(ms:Organization {name: 'Microsoft Corporation'}) WHERE supplier.nbrEmployees IS NOT NULL RETURN MAX(supplier.nbrEmployees) AS maximum_employees",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "maximum_employees": 104430
      }
    ],
    "answer": "The highest employee count among suppliers shared by Oracle and Microsoft Corporation is 104,430 employees."
  },
  {
    "question": "How many articles were published about companies headquartered in Seattle?",
    "cypher": "MATCH (city:City {name: 'Seattle'})<-[:IN_CITY]-(company:Organization)<-[:MENTIONS]-(article:Article) RETURN COUNT(DISTINCT article) AS article_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "article_count": 4822
      }
    ],
    "answer": "4,822 articles were published about companies headquartered in Seattle."
  },
  {
    "question": "Which company motto belongs to the organization with the most board members?",
    "cypher": "MATCH (org:Organization)-[:HAS_BOARD_MEMBER]->(board:Person) WHERE org.motto IS NOT NULL WITH org, COUNT(DISTINCT board) AS board_count RETURN org.motto AS company_motto ORDER BY board_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "company_motto": "We\u2019re on a mission to empower every person and every organization on the planet to achieve more."
      }
    ],
    "answer": "The company motto \"We're on a mission to empower every person and every organization on the planet to achieve more.\" belongs to the organization with the most board members."
  },
  {
    "question": "How many different countries can be reached from Accenture through its subsidiary locations?",
    "cypher": "MATCH (acc:Organization {name: 'Accenture'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(city:City)-[:IN_COUNTRY]->(country:Country) RETURN COUNT(DISTINCT country) AS country_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "country_count": 62
      }
    ],
    "answer": "Based on the query result, Accenture has subsidiary locations in 62 different countries."
  },
  {
    "question": "What's the site name of the article with the earliest date mentioning Infinit Analytics?",
    "cypher": "MATCH (ia:Organization {name: 'Infinite Analytics'})<-[:MENTIONS]-(article:Article) WHERE article.date IS NOT NULL RETURN article.siteName AS site_name ORDER BY article.date ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "site_name": "The Times of India"
      }
    ],
    "answer": "The Times of India is the site name of the article with the earliest date mentioning Infinite Analytics."
  },
  {
    "question": "Tell me the total number of competitors across all of SAP's subsidiaries",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:HAS_COMPETITOR]->(comp:Organization) RETURN COUNT(DISTINCT comp) AS total_competitors",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_competitors": 76
      }
    ],
    "answer": "Based on the query result, SAP has a total of 76 distinct competitors across its subsidiaries."
  },
  {
    "question": "What city hosts the subsidiary of New Relic that's located outside the United States?",
    "cypher": "MATCH (nr:Organization {name: 'New Relic'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(city:City)-[:IN_COUNTRY]->(country:Country) WHERE country.name <> 'United States of America' RETURN city.name AS city_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "city_name": "Durban"
      }
    ],
    "answer": "Durban"
  },
  {
    "question": "How many paths of length 3 or less connect Julie Spellman Sweet to any article through organizations?",
    "cypher": "MATCH path = (julie:Person {name: 'Julie Spellman Sweet'})-[*1..3]-(article:Article) WHERE ANY(node IN nodes(path) WHERE 'Organization' IN labels(node)) RETURN COUNT(DISTINCT path) AS path_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "path_count": 60394
      }
    ],
    "answer": "There are 60,394 distinct paths of length 3 or less connecting Julie Spellman Sweet to articles through organizations."
  },
  {
    "question": "What's the revenue of the smallest public company that competes with Microsoft's subsidiaries?",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(sub:Organization)<-[:HAS_COMPETITOR]-(comp:Organization) WHERE comp.isPublic = true AND comp.revenue IS NOT NULL RETURN MIN(comp.revenue) AS lowest_revenue",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_revenue": 280040000.0
      }
    ],
    "answer": "Based on the query result, the revenue of the smallest public company that competes with Microsoft's subsidiaries is $280,040,000."
  },
  {
    "question": "Which person serves as both CEO and board member for diferent organizations?",
    "cypher": "MATCH (p:Person)<-[:HAS_CEO]-(org1:Organization), (p)<-[:HAS_BOARD_MEMBER]-(org2:Organization) WHERE org1 <> org2 RETURN p.name AS person_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "person_name": "Julie Sweet"
      }
    ],
    "answer": "Based on the query result, Julie Sweet serves as both CEO and board member for different organizations."
  },
  {
    "question": "Count how many investment relationships connect organizations mentioned in articles with positive sentiment",
    "cypher": "MATCH (article:Article)-[:MENTIONS]->(org1:Organization)-[:HAS_INVESTOR]-(org2:Organization) WHERE article.sentiment > 0 RETURN COUNT(DISTINCT org1) + COUNT(DISTINCT org2) AS total_investment_orgs",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_investment_orgs": 7181
      }
    ],
    "answer": "There are 7,181 distinct organizations involved in investment relationships that are mentioned in articles with a positive sentiment."
  },
  {
    "question": "What's the summary of the individual who leads the biggest subsidiary of SAP?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:HAS_CEO]->(ceo:Person) WHERE sub.revenue IS NOT NULL RETURN ceo.summary AS ceo_summary ORDER BY sub.revenue DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ceo_summary": "CEO at DNM"
      }
    ],
    "answer": "Based on the query result, the summary for the CEO of SAP's biggest subsidiary is \"CEO at DNM\"."
  },
  {
    "question": "How many subsidiaries of subsidiaries does Microsoft Corporation have in total?",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(sub1:Organization)-[:HAS_SUBSIDIARY]->(sub2:Organization) RETURN COUNT(DISTINCT sub2) AS second_level_subsidiaries",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "second_level_subsidiaries": 260
      }
    ],
    "answer": "Microsoft Corporation has 260 subsidiaries of subsidiaries in total."
  },
  {
    "question": "Find the diffbotId of the organization that connects IBM to Electronic Products Manufacturers category through supply chains",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})-[:HAS_SUPPLIER*1..2]-(org:Organization)-[:HAS_CATEGORY]->(cat:IndustryCategory {name: 'Electronic Products Manufacturers'}) RETURN org.diffbotId AS organization_id LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "organization_id": "https://diffbot.com/entity/EJH622s4BMu2i04Ye7J6fxQ"
      }
    ],
    "answer": "The diffbotId of the organization that connects IBM to the Electronic Products Manufacturers category through supply chains is 'https://diffbot.com/entity/EJH622s4BMu2i04Ye7J6fxQ'."
  },
  {
    "question": "What's the total character length of all chunk texts related to articles about New Energy Group?",
    "cypher": "MATCH (neg:Organization {name: 'New Energy Group'})<-[:MENTIONS]-(article:Article)-[:HAS_CHUNK]->(chunk:Chunk) RETURN SUM(size(chunk.text)) AS total_text_length",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_text_length": 22894
      }
    ],
    "answer": "The total character length of all chunk texts related to articles about New Energy Group is 22,894 characters."
  },
  {
    "question": "How many organizations serve as connecting points between Seattle-based companies and their investors?",
    "cypher": "MATCH (city:City {name: 'Seattle'})<-[:IN_CITY]-(company:Organization)<-[:HAS_INVESTOR]-(investor) WHERE 'Organization' IN labels(investor) RETURN COUNT(DISTINCT investor) AS org_investor_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "org_investor_count": 495
      }
    ],
    "answer": "Based on the query result, there are 495 organizations that serve as connecting points between Seattle-based companies and their investors."
  },
  {
    "question": "What's the name of the article author who wrote about companies with the highest combined market cap?",
    "cypher": "MATCH (article:Article)-[:MENTIONS]->(org:Organization) WHERE org.isPublic = true AND org.revenue IS NOT NULL AND article.author IS NOT NULL WITH article, SUM(org.revenue * org.nbrEmployees) AS market_proxy RETURN article.author AS author_name ORDER BY market_proxy DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "author_name": "Nilay Patel"
      }
    ],
    "answer": "Nilay Patel is the author of the article about companies with the highest combined market cap."
  },
  {
    "question": "How many subsidiaries does Microsoft Corporation have that are located in Seattle?",
    "cypher": "MATCH (m:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(s:Organization)-[:IN_CITY]->(c:City {name: 'Seattle'}) RETURN COUNT(DISTINCT s) AS subsidiary_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "subsidiary_count": 20
      }
    ],
    "answer": "Based on the query result, Microsoft Corporation has 20 subsidiaries located in Seattle."
  },
  {
    "question": "What's the total revenue of companies that supply to both IBM and Oracle?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(s:Organization)-[:HAS_SUPPLIER]->(oracle:Organization {name: 'Oracle'}) WHERE s.revenue IS NOT NULL RETURN SUM(s.revenue) AS total_revenue",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_revenue": 0
      }
    ],
    "answer": "Based on the query result, the total revenue of companies that supply to both IBM and Oracle is 0. This could mean either no such companies exist or the suppliers have no recorded revenue in the database."
  },
  {
    "question": "Tell me the name of the CEO who leads Accenture's parent company?",
    "cypher": "MATCH (a:Organization {name: 'Accenture'})<-[:HAS_SUBSIDIARY]-(parent:Organization)<-[:HAS_CEO]-(ceo:Person) RETURN ceo.name AS ceo_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the highest revenue among firms that compete with Mircosoft Corporation?",
    "cypher": "MATCH (m:Organization {name: 'Microsoft Corporation'})-[:HAS_COMPETITOR]->(c:Organization) WHERE c.revenue IS NOT NULL RETURN MAX(c.revenue) AS highest_revenue",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_revenue": 30870000000.0
      }
    ],
    "answer": "The highest revenue among firms competing with Microsoft Corporation is $30.87 billion."
  },
  {
    "question": "How many companies connect SAP to organizations in the Electronic Products Manufacturers category through supplier relationships?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUPPLIER]->(s:Organization)-[:HAS_SUPPLIER]->(o:Organization)-[:HAS_CATEGORY]->(c:IndustryCategory {name: 'Electronic Products Manufacturers'}) RETURN COUNT(DISTINCT s) AS connector_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connector_count": 17
      }
    ],
    "answer": "17 companies connect SAP to organizations in the Electronic Products Manufacturers category through supplier relationships."
  },
  {
    "question": "What's the average number of employees in subsidiaries of Cloud Sherpas?",
    "cypher": "MATCH (cs:Organization {name: 'Cloud Sherpas'})-[:HAS_SUBSIDIARY]->(s:Organization) WHERE s.nbrEmployees IS NOT NULL RETURN AVG(s.nbrEmployees) AS average_employees",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_employees": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Find the city where New Relic's subsidiaries are located?",
    "cypher": "MATCH (nr:Organization {name: 'New Relic'})-[:HAS_SUBSIDIARY]->(s:Organization)-[:IN_CITY]->(c:City) RETURN c.name AS city_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "city_name": "San Francisco"
      }
    ],
    "answer": "San Francisco is the city where New Relic's subsidiary is located."
  },
  {
    "question": "What's the lowest employee count among public companies that have Julie Spellman Sweet as a board member?",
    "cypher": "MATCH (j:Person {name: 'Julie Spellman Sweet'})<-[:HAS_BOARD_MEMBER]-(o:Organization) WHERE o.isPublic = true AND o.nbrEmployees IS NOT NULL RETURN MIN(o.nbrEmployees) AS lowest_employees",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_employees": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many different countries can you reach from IBM through its subsidiaries and their locations?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})-[:HAS_SUBSIDIARY]->(s:Organization)-[:IN_CITY]->(city:City)-[:IN_COUNTRY]->(country:Country) RETURN COUNT(DISTINCT country) AS country_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "country_count": 59
      }
    ],
    "answer": "Based on the query result, IBM has subsidiaries located in 59 different countries."
  },
  {
    "question": "What's the motto of the biggest firm by revenue that supplies to Oracl?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})<-[:HAS_SUPPLIER]-(s:Organization) WHERE s.revenue IS NOT NULL ORDER BY s.revenue DESC LIMIT 1 RETURN s.motto AS company_motto",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "company_motto": ""
      }
    ],
    "answer": "UNKNOWN (since the query result shows an empty motto for the top supplier)"
  },
  {
    "question": "Tell me the shortest path length between Infinite Analytics and companies invested by John Hancock Investments?",
    "cypher": "MATCH path = shortestPath((ia:Organization {name: 'Infinite Analytics'})-[*]-(target:Organization)<-[:HAS_INVESTOR]-(jhi:Organization {name: 'John Hancock Investments'})) RETURN LENGTH(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the total number of employees in all subsidiaries of Accenture that are dissolved?",
    "cypher": "MATCH (a:Organization {name: 'Accenture'})-[:HAS_SUBSIDIARY]->(s:Organization) WHERE s.isDissolved = true AND s.nbrEmployees IS NOT NULL RETURN SUM(s.nbrEmployees) AS total_employees",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_employees": 15025
      }
    ],
    "answer": "Based on the query result, the total number of employees in dissolved Accenture subsidiaries is 15,025."
  },
  {
    "question": "Which industry category does Altium belong to?",
    "cypher": "MATCH (a:Organization {name: 'Altium'})-[:HAS_CATEGORY]->(c:IndustryCategory) RETURN c.name AS category_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "category_name": "Electronic Products Manufacturers"
      },
      {
        "category_name": "Manufacturing Companies"
      },
      {
        "category_name": "Software Companies"
      }
    ]
  },
  {
    "question": "What's the peak revenue among companies that have subsidiaries in Topsfield?",
    "cypher": "MATCH (o:Organization)-[:HAS_SUBSIDIARY]->(s:Organization)-[:IN_CITY]->(c:City {name: 'Topsfield'}) WHERE o.revenue IS NOT NULL RETURN MAX(o.revenue) AS highest_revenue",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_revenue": 30870000000.0
      }
    ],
    "answer": "The peak revenue among companies with subsidiaries in Topsfield is $30,870,000,000."
  },
  {
    "question": "How many articles mention organizations that are invested by Malpani Ventures?",
    "cypher": "MATCH (mv:Organization {name: 'Malpani Ventures'})-[:HAS_INVESTOR]->(o:Organization)<-[:MENTIONS]-(a:Article) RETURN COUNT(DISTINCT a) AS article_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "article_count": 10
      }
    ],
    "answer": "10 articles mention organizations that are invested by Malpani Ventures."
  },
  {
    "question": "What country is SuccessFactors located in through its city?",
    "cypher": "MATCH (s:Organization {name: 'SuccessFactors'})-[:IN_CITY]->(city:City)-[:IN_COUNTRY]->(country:Country) RETURN country.name AS country_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "Germany"
      },
      {
        "country_name": "India"
      },
      {
        "country_name": "Denmark"
      }
    ]
  },
  {
    "question": "Find the smallest number of employees among folks who supply stuff to New Energy Group?",
    "cypher": "MATCH (neg:Organization {name: 'New Energy Group'})<-[:HAS_SUPPLIER]-(s:Organization) WHERE s.nbrEmployees IS NOT NULL RETURN MIN(s.nbrEmployees) AS lowest_employees",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_employees": null
      }
    ],
    "answer": "UNKNOWN. The query result indicates that no minimum number of employees could be found, possibly due to missing or null employee count data for suppliers of New Energy Group."
  },
  {
    "question": "How many board members does SAP share with its competitors?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_COMPETITOR]->(comp:Organization), (sap)-[:HAS_BOARD_MEMBER]->(p:Person)<-[:HAS_BOARD_MEMBER]-(comp) RETURN COUNT(DISTINCT p) AS shared_board_members",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_board_members": 0
      }
    ],
    "answer": "Based on the query result, SAP does not share any board members with its competitors."
  },
  {
    "question": "What's the average sentiment of articles mentioning IBM Research?",
    "cypher": "MATCH (ibmr:Organization {name: 'IBM Research'})<-[:MENTIONS]-(a:Article) WHERE a.sentiment IS NOT NULL RETURN AVG(a.sentiment) AS average_sentiment",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_sentiment": NaN
      }
    ],
    "answer": "UNKNOWN\n\nThe query result shows NaN (Not a Number), which suggests there might not be sufficient data to calculate the average sentiment for articles mentioning IBM Research."
  },
  {
    "question": "Tell me the summary of the parent organization of Concur?",
    "cypher": "MATCH (c:Organization {name: 'Concur'})<-[:HAS_SUBSIDIARY]-(parent:Organization) RETURN parent.summary AS parent_summary",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "parent_summary": "German software producer"
      }
    ],
    "answer": "Concur's parent organization is a German software producer."
  },
  {
    "question": "What's the highest employee count in companies that have CEOs who also serve on boards of Microsoft Corporation's suppliers?",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(s:Organization)-[:HAS_BOARD_MEMBER]->(p:Person)-[:HAS_CEO]->(c:Organization) WHERE c.nbrEmployees IS NOT NULL RETURN MAX(c.nbrEmployees) AS highest_employees",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "Count how many organizations mentioned in articles have investors from the United States of America?",
    "cypher": "MATCH (usa:Country {name: 'United States of America'})<-[:IN_COUNTRY]-(city:City)<-[:IN_CITY]-(inv:Organization)-[:HAS_INVESTOR]->(o:Organization)<-[:MENTIONS]-(a:Article) RETURN COUNT(DISTINCT o) AS org_count",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "org_count": 280
      }
    ],
    "answer": "Based on the query result, 280 distinct organizations mentioned in articles have investors from the United States of America."
  },
  {
    "question": "What's the name of the biz that owns Cloud Sherpas?",
    "cypher": "MATCH (cs:Organization {name: 'Cloud Sherpas'})<-[:HAS_SUBSIDIARY]-(parent:Organization) RETURN parent.name AS parent_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "parent_name": "Accenture"
      }
    ],
    "answer": "Accenture owns Cloud Sherpas."
  },
  {
    "question": "Which companys revenue is lowest among Oracle's suppliers that are public?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})<-[:HAS_SUPPLIER]-(s:Organization) WHERE s.isPublic = true AND s.revenue IS NOT NULL ORDER BY s.revenue ASC LIMIT 1 RETURN s.revenue AS lowest_revenue",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_revenue": 2515915000.0
      }
    ],
    "answer": "Based on the query result, the lowest revenue among Oracle's public suppliers is $2,515,915,000."
  },
  {
    "question": "How many paths exist between Julie Spellman Sweet and organizations in Seattle through corporate relationships?",
    "cypher": "MATCH path = (j:Person {name: 'Julie Spellman Sweet'})-[:HAS_CEO|HAS_BOARD_MEMBER*1..3]-(o:Organization)-[:IN_CITY]->(c:City {name: 'Seattle'}) RETURN COUNT(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connection_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 paths between Julie Spellman Sweet and organizations in Seattle through corporate relationships."
  },
  {
    "question": "What's the combined revenue of all public companies that have subsidiaries?",
    "cypher": "MATCH (o:Organization)-[:HAS_SUBSIDIARY]->(s:Organization) WHERE o.isPublic = true AND o.revenue IS NOT NULL RETURN SUM(o.revenue) AS total_revenue",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_revenue": 114377763461120.0
      }
    ],
    "answer": "The combined revenue of all public companies with subsidiaries is $114,377,763,461,120."
  },
  {
    "question": "Find the diffbotId of IBM's research division?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})-[:HAS_SUBSIDIARY]->(r:Organization {name: 'IBM Research'}) RETURN r.diffbotId AS diffbot_id",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "diffbot_id": "https://diffbot.com/entity/ED3SQoUnONj65Xse8NL9wdg"
      }
    ],
    "answer": "The diffbotId for IBM's research division is https://diffbot.com/entity/ED3SQoUnONj65Xse8NL9wdg."
  },
  {
    "question": "What's the maximum nbrEmployees among dissolved firms that were subsidiaries of other companies?",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(s:Organization) WHERE s.isDissolved = true AND s.nbrEmployees IS NOT NULL RETURN MAX(s.nbrEmployees) AS highest_employees",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_employees": 23100
      }
    ],
    "answer": "The maximum number of employees among dissolved firms that are subsidiaries is 23,100."
  },
  {
    "question": "How many suppliers does New Relic have that are also suppliers to IBM?",
    "cypher": "MATCH (nr:Organization {name: 'New Relic'})<-[:HAS_SUPPLIER]-(s:Organization)-[:HAS_SUPPLIER]->(ibm:Organization {name: 'IBM'}) RETURN COUNT(DISTINCT s) AS shared_suppliers",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_suppliers": 0
      }
    ],
    "answer": "Based on the query result, New Relic has 0 shared suppliers with IBM."
  },
  {
    "question": "What's the mean revenue of organizations that have articles written about them with positive sentiment?",
    "cypher": "MATCH (o:Organization)<-[:MENTIONS]-(a:Article) WHERE a.sentiment > 0.5 AND o.revenue IS NOT NULL RETURN AVG(o.revenue) AS average_revenue",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_revenue": 9789376529.861036
      }
    ],
    "answer": "Based on the query result, the mean revenue of organizations with articles mentioning them that have a positive sentiment (sentiment score > 0.5) is approximately $9.79 billion."
  },
  {
    "question": "Tell me the isPublic status of Accentur?",
    "cypher": "MATCH (a:Organization {name: 'Accenture'}) RETURN a.isPublic AS public_status",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": false
      },
      {
        "public_status": null
      },
      {
        "public_status": null
      }
    ]
  },
  {
    "question": "Which city has the most subsidiaries of Microsoft Corporation located in it?",
    "cypher": "MATCH (m:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(s:Organization)-[:IN_CITY]->(c:City) RETURN c.name AS city_name, COUNT(s) AS subsidiary_count ORDER BY subsidiary_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "city_name": "San Francisco",
        "subsidiary_count": 35
      }
    ],
    "answer": "San Francisco has the most subsidiaries of Microsoft Corporation, with 35 subsidiaries located in the city."
  },
  {
    "question": "Count the CEOs that lead companies supplying to both SAP and its subsidiaries?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})<-[:HAS_SUPPLIER]-(s1:Organization)<-[:HAS_CEO]-(ceo:Person), (sap)-[:HAS_SUBSIDIARY]->(sub:Organization)<-[:HAS_SUPPLIER]-(s2:Organization)<-[:HAS_CEO]-(ceo) RETURN COUNT(DISTINCT ceo) AS ceo_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "How many articles mention New Energy Group?",
    "cypher": "MATCH (neg:Organization {name: 'New Energy Group'})<-[:MENTIONS]-(a:Article) RETURN COUNT(DISTINCT a) AS article_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "article_count": 5
      }
    ],
    "answer": "5 articles mention New Energy Group."
  },
  {
    "question": "What's the name of Microsoft Corporations CEO?",
    "cypher": "MATCH (m:Organization {name: 'Microsoft Corporation'})<-[:HAS_CEO]-(ceo:Person) RETURN ceo.name AS ceo_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "Find the company with the smallest revenue that competes with Oracle and has subsidiaries?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})-[:HAS_COMPETITOR]->(c:Organization)-[:HAS_SUBSIDIARY]->(s:Organization) WHERE c.revenue IS NOT NULL RETURN c.name AS company_name, c.revenue AS company_revenue ORDER BY c.revenue ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "company_name": "MicroStrategy",
        "company_revenue": 499264000.0
      }
    ],
    "answer": "According to the data, MicroStrategy is the company with the smallest revenue that competes with Oracle and has subsidiaries, with a revenue of $499,264,000."
  },
  {
    "question": "How many different investors do companies in the Electronic Products Manufacturers category have?",
    "cypher": "MATCH (cat:IndustryCategory {name: 'Electronic Products Manufacturers'})<-[:HAS_CATEGORY]-(o:Organization)<-[:HAS_INVESTOR]-(inv) RETURN COUNT(DISTINCT inv) AS investor_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "investor_count": 252
      }
    ],
    "answer": "There are 252 different investors for companies in the Electronic Products Manufacturers category."
  },
  {
    "question": "What industry category connects to organizations that supply Microsoft through two hops?",
    "cypher": "MATCH (m:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(s1:Organization)<-[:HAS_SUPPLIER]-(s2:Organization)-[:HAS_CATEGORY]->(cat:IndustryCategory) RETURN cat.name AS category_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_name": "Electronic Products Manufacturers"
      }
    ],
    "answer": "The industry category that connects to organizations supplying Microsoft through two hops is Electronic Products Manufacturers."
  },
  {
    "question": "What's the top number of employees among companies mentioned in articles from USA Friday?",
    "cypher": "MATCH (a:Article {siteName: 'USA Friday'})-[:MENTIONS]->(o:Organization) WHERE o.nbrEmployees IS NOT NULL RETURN MAX(o.nbrEmployees) AS highest_employees",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_employees": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many organizations can Julie Spellman Sweet reach through her company's supplier network?",
    "cypher": "MATCH (j:Person {name: 'Julie Spellman Sweet'})-[:HAS_CEO]->(o:Organization)<-[:HAS_SUPPLIER]-(s1:Organization)<-[:HAS_SUPPLIER]-(s2:Organization) RETURN COUNT(DISTINCT s2) AS reachable_orgs",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the total revenue of all subsidiaries of SAP?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(s:Organization) WHERE s.revenue IS NOT NULL RETURN SUM(s.revenue) AS total_revenue",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_revenue": 50200000000.0
      }
    ],
    "answer": "The total revenue of SAP's subsidiaries is $50.2 billion."
  },
  {
    "question": "Tell me the country where Infinit Analytics investors are based?",
    "cypher": "MATCH (ia:Organization {name: 'Infinite Analytics'})<-[:HAS_INVESTOR]-(inv:Organization)-[:IN_CITY]->(city:City)-[:IN_COUNTRY]->(country:Country) RETURN country.name AS country_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Which article has the highest sentiment score among those mentioning IBM?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})<-[:MENTIONS]-(a:Article) WHERE a.sentiment IS NOT NULL ORDER BY a.sentiment DESC LIMIT 1 RETURN a.title AS article_title, a.sentiment AS sentiment_score",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "article_title": "Recommendation Engine Market to Witness Huge Growth by 2025 : IBM, Google, AWS, Microsoft, Salesforce",
        "sentiment_score": NaN
      }
    ],
    "answer": "Unfortunately, despite the query result, I cannot provide a definitive answer because the sentiment score is \"nan\" (Not a Number), which means no valid sentiment score could be determined for this article. Therefore, while an article mentioning IBM was retrieved, its sentiment cannot be evaluated."
  },
  {
    "question": "How many chunks are associated with articles mentioning organizations in Seattle?",
    "cypher": "MATCH (city:City {name: 'Seattle'})<-[:IN_CITY]-(o:Organization)<-[:MENTIONS]-(a:Article)-[:HAS_CHUNK]->(c:Chunk) RETURN COUNT(DISTINCT c) AS chunk_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "chunk_count": 8505
      }
    ],
    "answer": "There are 8,505 unique chunks associated with articles that mention organizations located in Seattle."
  },
  {
    "question": "What's the revenue of the organization that acquired Cloud Sherpas?",
    "cypher": "MATCH (cs:Organization {name: 'Cloud Sherpas'})<-[:HAS_SUBSIDIARY]-(parent:Organization) RETURN parent.revenue AS parent_revenue",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "parent_revenue": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Find the firm with minimum employees that's a subsidiary of a subsidiary of Microsoft?",
    "cypher": "MATCH (m:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(s1:Organization)-[:HAS_SUBSIDIARY]->(s2:Organization) WHERE s2.nbrEmployees IS NOT NULL ORDER BY s2.nbrEmployees ASC LIMIT 1 RETURN s2.name AS company_name, s2.nbrEmployees AS employee_count",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "company_name": "MinecraftEdu",
        "employee_count": 5
      }
    ],
    "answer": "Based on the query result, MinecraftEdu is the firm with the minimum number of employees (5) that is a subsidiary of a subsidiary of Microsoft."
  },
  {
    "question": "How many distinct organizations serve as bridges between SAP and companies in the United States through subsidiary relationships?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(bridge:Organization)-[:HAS_SUBSIDIARY]->(us_org:Organization)-[:IN_CITY]->(city:City)-[:IN_COUNTRY]->(country:Country {name: 'United States of America'}) RETURN COUNT(DISTINCT bridge) AS bridge_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "bridge_count": 2
      }
    ],
    "answer": "Based on the query result, there are 2 distinct organizations that serve as bridges between SAP and companies in the United States through subsidiary relationships."
  },
  {
    "question": "What's the average number of employees across all organizations that have board members?",
    "cypher": "MATCH (o:Organization)-[:HAS_BOARD_MEMBER]->(p:Person) WHERE o.nbrEmployees IS NOT NULL RETURN AVG(o.nbrEmployees) AS average_employees",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_employees": 31093.990015361098
      }
    ],
    "answer": "Based on the query result, the average number of employees across organizations with board members is approximately 31,094."
  },
  {
    "question": "How many companies does SAP have as subsidiaries that are located in cities within the United States of America?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(city:City)-[:IN_COUNTRY]->(country:Country {name: 'United States of America'}) RETURN COUNT(DISTINCT sub) AS total_subsidiaries",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_subsidiaries": 5
      }
    ],
    "answer": "SAP has 5 subsidiaries located in cities within the United States of America."
  },
  {
    "question": "What's the total revenue of all public companies that supply services to Microsoft Corporation?",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(supplier:Organization) WHERE supplier.isPublic = true AND supplier.revenue IS NOT NULL RETURN SUM(supplier.revenue) AS total_revenue",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_revenue": 294277243000.0
      }
    ],
    "answer": "The total revenue of all public companies that supply services to Microsoft Corporation is $294,277,243,000."
  },
  {
    "question": "Tell me the name of the city where Accenture's parent company Cloud Sherpas is located?",
    "cypher": "MATCH (acc:Organization {name: 'Accenture'})<-[:HAS_SUBSIDIARY]-(parent:Organization {name: 'Cloud Sherpas'})-[:IN_CITY]->(city:City) RETURN city.name AS city_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "city_name": "Sydney"
      },
      {
        "city_name": "Brisbane"
      },
      {
        "city_name": "London"
      },
      {
        "city_name": "San Francisco"
      },
      {
        "city_name": "Atlanta"
      },
      {
        "city_name": "Boston"
      },
      {
        "city_name": "Wellington"
      }
    ]
  },
  {
    "question": "What's the highest revenue among companies that have Julie Spellman Sweet on their executive team?",
    "cypher": "MATCH (p:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO|HAS_BOARD_MEMBER]-(org:Organization) WHERE org.revenue IS NOT NULL RETURN MAX(org.revenue) AS highest_revenue",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_revenue": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many firms does Mircosoft Corporation work with as suppliers?",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(supplier:Organization) RETURN COUNT(DISTINCT supplier) AS supplier_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_count": 119
      }
    ],
    "answer": "Microsoft Corporation works with 119 firms as suppliers."
  },
  {
    "question": "What's the name of the CEO who leads Accenture?",
    "cypher": "MATCH (org:Organization {name: 'Accenture'})-[:HAS_CEO]->(ceo:Person) RETURN ceo.name AS ceo_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ceo_name": "Julie Spellman Sweet"
      }
    ],
    "answer": "Julie Spellman Sweet is the CEO of Accenture."
  },
  {
    "question": "How many distinct investors does Infinite Analytics have across all investment rounds?",
    "cypher": "MATCH (ia:Organization {name: 'Infinite Analytics'})-[:HAS_INVESTOR]->(investor) RETURN COUNT(DISTINCT investor) AS total_investors",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_investors": 9
      }
    ],
    "answer": "Infinite Analytics has 9 distinct investors across all investment rounds."
  },
  {
    "question": "What's the average number of employees among subsidiaries of companies that compete with Oracle?",
    "cypher": "MATCH (oracle:Organization {name: 'Oracle'})<-[:HAS_COMPETITOR]-(comp:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE sub.nbrEmployees IS NOT NULL RETURN AVG(sub.nbrEmployees) AS average_employees",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_employees": 1737.4930991217068
      }
    ],
    "answer": "Based on the query result, the average number of employees among subsidiaries of companies that compete with Oracle is approximately 1,737 employees."
  },
  {
    "question": "Which industry category does Altium belong to?",
    "cypher": "MATCH (alt:Organization {name: 'Altium'})-[:HAS_CATEGORY]->(cat:IndustryCategory) RETURN cat.name AS industry_category",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "industry_category": "Electronic Products Manufacturers"
      },
      {
        "industry_category": "Manufacturing Companies"
      },
      {
        "industry_category": "Software Companies"
      }
    ]
  },
  {
    "question": "What's the lowest number of employees among companys that are subsidiaries of SAP?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE sub.nbrEmployees IS NOT NULL RETURN MIN(sub.nbrEmployees) AS minimum_employees",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "minimum_employees": 65000
      }
    ],
    "answer": "Based on the query result, the lowest number of employees among SAP's subsidiaries is 65,000 employees."
  },
  {
    "question": "How many companies connect IBM to Microsoft through supplier relationships?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(intermediate:Organization)-[:HAS_SUPPLIER]->(ms:Organization {name: 'Microsoft Corporation'}) RETURN COUNT(DISTINCT intermediate) AS connecting_companies",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_companies": 31
      }
    ],
    "answer": "31 companies connect IBM to Microsoft through supplier relationships."
  },
  {
    "question": "What's the motto of the corporation that owns SuccessFactors?",
    "cypher": "MATCH (sf:Organization {name: 'SuccessFactors'})<-[:HAS_SUBSIDIARY]-(parent:Organization) RETURN parent.motto AS parent_motto",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "parent_motto": ""
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Find the total workforce across all subsidiaries of firms based in Seattle?",
    "cypher": "MATCH (city:City {name: 'Seattle'})<-[:IN_CITY]-(parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE sub.nbrEmployees IS NOT NULL RETURN SUM(sub.nbrEmployees) AS total_workforce",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_workforce": 355949
      }
    ],
    "answer": "The total workforce across all subsidiaries of firms based in Seattle is 355,949 employees."
  },
  {
    "question": "What's the name of the country where Topsfield is located?",
    "cypher": "MATCH (city:City {name: 'Topsfield'})-[:IN_COUNTRY]->(country:Country) RETURN country.name AS country_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "country_name": "United States of America"
      }
    ],
    "answer": "Topsfield is located in the United States of America."
  },
  {
    "question": "How many articles mention organizations that are invested in by John Hancock Investments?",
    "cypher": "MATCH (jhi:Organization {name: 'John Hancock Investments'})<-[:HAS_INVESTOR]-(portfolio:Organization)<-[:MENTIONS]-(article:Article) RETURN COUNT(DISTINCT article) AS article_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "article_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 articles that mention organizations invested in by John Hancock Investments."
  },
  {
    "question": "What's the peak revenue among all subsidiaries of companies located in the United States of America?",
    "cypher": "MATCH (country:Country {name: 'United States of America'})<-[:IN_COUNTRY]-(city:City)<-[:IN_CITY]-(parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE sub.revenue IS NOT NULL RETURN MAX(sub.revenue) AS highest_revenue",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_revenue": 102301000000.0
      }
    ],
    "answer": "The peak revenue among subsidiaries of companies located in the United States of America is $102,301,000,000."
  },
  {
    "question": "Tell me the summary of IBM Reserch?",
    "cypher": "MATCH (ibmr:Organization {name: 'IBM Research'}) RETURN ibmr.summary AS organization_summary",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "organization_summary": "IBM's research and development division"
      }
    ],
    "answer": "IBM Research is IBM's research and development division, which focuses on advancing technology and innovation within the company."
  },
  {
    "question": "How many biz units does New Relic have as subsidiaries?",
    "cypher": "MATCH (nr:Organization {name: 'New Relic'})-[:HAS_SUBSIDIARY]->(sub:Organization) RETURN COUNT(DISTINCT sub) AS subsidiary_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "subsidiary_count": 9
      }
    ],
    "answer": "New Relic has 9 subsidiaries."
  },
  {
    "question": "What's the shortest path length between Julie Spellman Sweet and any investor in Infinite Analytics?",
    "cypher": "MATCH path = shortestPath((julie:Person {name: 'Julie Spellman Sweet'})-[*]-(investor)-[:HAS_INVESTOR]->(ia:Organization {name: 'Infinite Analytics'})) RETURN LENGTH(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "Which city is home to the subsidiary of SAP called Concur?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(concur:Organization {name: 'Concur'})-[:IN_CITY]->(city:City) RETURN city.name AS city_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "city_name": "Paris"
      },
      {
        "city_name": "San Francisco"
      },
      {
        "city_name": "Singapore"
      },
      {
        "city_name": "Atlanta"
      },
      {
        "city_name": "Paradise Valley"
      },
      {
        "city_name": "Eden Prairie"
      },
      {
        "city_name": "Amsterdam"
      },
      {
        "city_name": "Levallois-Perret"
      },
      {
        "city_name": "Stockholm"
      },
      {
        "city_name": "Bellevue"
      },
      {
        "city_name": "Minneapolis"
      },
      {
        "city_name": "Frankfurt am Main"
      },
      {
        "city_name": "Prague"
      },
      {
        "city_name": "Redmond"
      },
      {
        "city_name": "Noisy-le-Grand"
      },
      {
        "city_name": "Vienna"
      },
      {
        "city_name": "Taipei"
      },
      {
        "city_name": "Allen"
      },
      {
        "city_name": "Rueil-Malmaison"
      },
      {
        "city_name": "Addison"
      },
      {
        "city_name": "Andover"
      },
      {
        "city_name": "Eschborn"
      },
      {
        "city_name": "Plainfield"
      },
      {
        "city_name": "Topsfield"
      },
      {
        "city_name": "Tracy"
      },
      {
        "city_name": "Massy"
      },
      {
        "city_name": "South San Francisco"
      },
      {
        "city_name": "Alexandria"
      },
      {
        "city_name": "North Andover"
      },
      {
        "city_name": "Clichy"
      },
      {
        "city_name": "Methuen"
      },
      {
        "city_name": "Coppell"
      },
      {
        "city_name": "Vimercate"
      },
      {
        "city_name": "St. Louis Park"
      },
      {
        "city_name": "Haddonfield"
      },
      {
        "city_name": "Muskegon"
      },
      {
        "city_name": "Lebanon"
      },
      {
        "city_name": "Mukwonago"
      }
    ]
  },
  {
    "question": "What's the smallest workforce size among public companies that have board members?",
    "cypher": "MATCH (org:Organization)-[:HAS_BOARD_MEMBER]->(person:Person) WHERE org.isPublic = true AND org.nbrEmployees IS NOT NULL RETURN MIN(org.nbrEmployees) AS smallest_workforce",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "smallest_workforce": 38
      }
    ],
    "answer": "The smallest workforce size among public companies with board members is 38 employees."
  },
  {
    "question": "How many suppliers does Oracle have that are also suppliers to other tech giants?",
    "cypher": "MATCH (oracle:Organization {name: 'Oracle'})<-[:HAS_SUPPLIER]-(supplier:Organization)-[:HAS_SUPPLIER]->(other:Organization) WHERE other.name <> 'Oracle' RETURN COUNT(DISTINCT supplier) AS shared_suppliers",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_suppliers": 101
      }
    ],
    "answer": "Oracle has 101 suppliers that also supply other tech companies."
  },
  {
    "question": "What's the diffbotId of Microsoft Corporation?",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'}) RETURN ms.diffbotId AS diffbot_identifier",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "diffbot_identifier": "https://diffbot.com/entity/EIsFKrN_ZNLSWsvxdQfWutQ"
      }
    ],
    "answer": "The diffbotId of Microsoft Corporation is https://diffbot.com/entity/EIsFKrN_ZNLSWsvxdQfWutQ."
  },
  {
    "question": "Find the highest imdbRating... wait, wrong query. What's the highest revenue among dissolved companies?",
    "cypher": "MATCH (org:Organization) WHERE org.isDissolved = true AND org.revenue IS NOT NULL RETURN MAX(org.revenue) AS highest_revenue",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_revenue": 108000000000.0
      }
    ],
    "answer": "The highest revenue among dissolved companies is $108 billion."
  },
  {
    "question": "How many paths exist between Accenture and companies in the Electronic Products Manufacturers category?",
    "cypher": "MATCH path = (acc:Organization {name: 'Accenture'})-[*1..3]-(org:Organization)-[:HAS_CATEGORY]->(cat:IndustryCategory {name: 'Electronic Products Manufacturers'}) RETURN COUNT(DISTINCT path) AS path_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the total revenue of all suppliers to companies that have CEOs?",
    "cypher": "MATCH (org:Organization)-[:HAS_CEO]->(ceo:Person), (org)<-[:HAS_SUPPLIER]-(supplier:Organization) WHERE supplier.revenue IS NOT NULL RETURN SUM(DISTINCT supplier.revenue) AS total_revenue",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_revenue": 1291208387355.0
      }
    ],
    "answer": "The total revenue of suppliers to companies with CEOs is $1,291,208,387,355."
  },
  {
    "question": "Tell me the name of the firm that invested in Infinte Analytics besides John Hancock?",
    "cypher": "MATCH (ia:Organization {name: 'Infinite Analytics'})-[:HAS_INVESTOR]->(investor:Organization) WHERE investor.name <> 'John Hancock Investments' RETURN investor.name AS investor_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the most employees any subsidiary of a German software company has?",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE parent.summary CONTAINS 'German software' AND sub.nbrEmployees IS NOT NULL RETURN MAX(sub.nbrEmployees) AS maximum_employees",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "maximum_employees": 65000
      }
    ],
    "answer": "The most employees a subsidiary of a German software company has is 65,000."
  },
  {
    "question": "How many CEOs are connected to companies that supply services to firms in Seattle?",
    "cypher": "MATCH (city:City {name: 'Seattle'})<-[:IN_CITY]-(company:Organization)<-[:HAS_SUPPLIER]-(supplier:Organization)-[:HAS_CEO]->(ceo:Person) RETURN COUNT(DISTINCT ceo) AS ceo_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ceo_count": 407
      }
    ],
    "answer": "407 CEOs are connected to companies that supply services to firms in Seattle."
  },
  {
    "question": "What industry category can be reached from IBM through its suppliers and their subsidiaries?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(supplier:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization)-[:HAS_CATEGORY]->(cat:IndustryCategory) RETURN cat.name AS category_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_name": "Electronic Products Manufacturers"
      }
    ],
    "answer": "Based on the query result, the industry category that can be reached from IBM through its suppliers and their subsidiaries is Electronic Products Manufacturers."
  },
  {
    "question": "What's the lowest revenue among corps that have articles written about them?",
    "cypher": "MATCH (org:Organization)<-[:MENTIONS]-(article:Article) WHERE org.revenue IS NOT NULL RETURN MIN(org.revenue) AS lowest_revenue",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_revenue": 356.0
      }
    ],
    "answer": "The lowest revenue among corporations with articles written about them is $356."
  },
  {
    "question": "Count how many organizations serve as a bridge between Microsoft and companies with investors?",
    "cypher": "MATCH (ms:Organization {name: 'Microsoft Corporation'})-[:HAS_SUPPLIER|HAS_COMPETITOR]-(bridge:Organization)-[:HAS_INVESTOR]-(investor) RETURN COUNT(DISTINCT bridge) AS bridge_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "bridge_count": 708
      }
    ],
    "answer": "708 organizations serve as a bridge between Microsoft and companies with investors."
  },
  {
    "question": "What's the summary of the company that owns both Concur and SuccessFactors?",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(o1:Organization {name: 'Concur'}), (parent)-[:HAS_SUBSIDIARY]->(o2:Organization {name: 'SuccessFactors'}) RETURN parent.summary AS parent_summary",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "parent_summary": "German software producer"
      }
    ],
    "answer": "Based on the query result, the parent company that owns both Concur and SuccessFactors is described as a \"German software producer\"."
  },
  {
    "question": "How many folks serve as board members across all public companies?",
    "cypher": "MATCH (org:Organization)-[:HAS_BOARD_MEMBER]->(person:Person) WHERE org.isPublic = true RETURN COUNT(DISTINCT person) AS board_member_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "board_member_count": 614
      }
    ],
    "answer": "Based on the query result, 614 individuals serve as board members across all public companies."
  },
  {
    "question": "What's the highest number of employees among companies that New Energy Group has been mentioned with in articles?",
    "cypher": "MATCH (neg:Organization {name: 'New Energy Group'})<-[:MENTIONS]-(article:Article)-[:MENTIONS]->(other:Organization) WHERE other.nbrEmployees IS NOT NULL AND other.name <> 'New Energy Group' RETURN MAX(other.nbrEmployees) AS maximum_employees",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "maximum_employees": null
      }
    ],
    "answer": "UNKNOWN. The query result indicates that there are no valid employee numbers found for companies mentioned alongside New Energy Group in articles."
  },
  {
    "question": "Find the average sentiment of articles mentioning organizations based in cities within the United States?",
    "cypher": "MATCH (country:Country {name: 'United States of America'})<-[:IN_COUNTRY]-(city:City)<-[:IN_CITY]-(org:Organization)<-[:MENTIONS]-(article:Article) WHERE article.sentiment IS NOT NULL RETURN AVG(article.sentiment) AS average_sentiment",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_sentiment": NaN
      }
    ],
    "answer": "UNKNOWN\n\n(The query result returns 'nan' which suggests there is no valid sentiment data available for articles mentioning US-based organizations.)"
  },
  {
    "question": "Which city hosts companies that are both subsidiaries and have their own subsidiaries?",
    "cypher": "MATCH (parent1:Organization)-[:HAS_SUBSIDIARY]->(middle:Organization)-[:HAS_SUBSIDIARY]->(child:Organization), (middle)-[:IN_CITY]->(city:City) RETURN city.name AS city_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "city_name": "Seattle"
      }
    ],
    "answer": "Based on the query result, Seattle is a city that hosts companies which are both subsidiaries and have their own subsidiaries."
  },
  {
    "question": "What's the shortest connection between any CEO and articles about their competitorss?",
    "cypher": "MATCH path = shortestPath((ceo:Person)<-[:HAS_CEO]-(org1:Organization)-[:HAS_COMPETITOR]-(org2:Organization)<-[:MENTIONS]-(article:Article)) RETURN LENGTH(path) AS connection_distance",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "Tell me the peak workforce size among subsidiaries of subsidiaries of SAP?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub1:Organization)-[:HAS_SUBSIDIARY]->(sub2:Organization) WHERE sub2.nbrEmployees IS NOT NULL RETURN MAX(sub2.nbrEmployees) AS peak_workforce",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "peak_workforce": 111961
      }
    ],
    "answer": "The peak workforce size among subsidiaries of subsidiaries of SAP is 111,961 employees."
  },
  {
    "question": "How many distinct cities host companies that IBM works with as suppliers or competitors?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})-[:HAS_SUPPLIER|HAS_COMPETITOR]-(partner:Organization)-[:IN_CITY]->(city:City) RETURN COUNT(DISTINCT city) AS city_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "city_count": 4037
      }
    ],
    "answer": "IBM has suppliers or competitors located in 4,037 distinct cities."
  },
  {
    "question": "What's the name of the article with highest sentiment that mentions orgs in Seattle?",
    "cypher": "MATCH (city:City {name: 'Seattle'})<-[:IN_CITY]-(org:Organization)<-[:MENTIONS]-(article:Article) WHERE article.sentiment IS NOT NULL RETURN article.title AS article_title ORDER BY article.sentiment DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "article_title": "Movers and shakers: Sue McLean appointed CIO at Greater Wellington Regional Council"
      }
    ],
    "answer": "The article with the highest sentiment mentioning organizations in Seattle is \"Movers and shakers: Sue McLean appointed CIO at Greater Wellington Regional Council\"."
  },
  {
    "question": "How many investment relationships connect Malpani Ventures to companies mentioned in news articles?",
    "cypher": "MATCH (mv:Organization {name: 'Malpani Ventures'})<-[:HAS_INVESTOR]-(portfolio:Organization)<-[:MENTIONS]-(article:Article) RETURN COUNT(DISTINCT portfolio) AS portfolio_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "portfolio_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 investment relationships connecting Malpani Ventures to companies mentioned in news articles."
  },
  {
    "question": "What's the id property of the person who serves as CEO of the company that owns Cloud Sherpas?",
    "cypher": "MATCH (cs:Organization {name: 'Cloud Sherpas'})<-[:HAS_SUBSIDIARY]-(parent:Organization)-[:HAS_CEO]->(ceo:Person) RETURN ceo.id AS ceo_identifier",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ceo_identifier": "Eaf0bpz6NNoqLVUCqNZPAew"
      }
    ],
    "answer": "The id property of the CEO of the company that owns Cloud Sherpas is 'Eaf0bpz6NNoqLVUCqNZPAew'."
  },
  {
    "question": "Find the total combined revenue of all non-dissolved public companies?",
    "cypher": "MATCH (org:Organization) WHERE org.isPublic = true AND org.isDissolved = false AND org.revenue IS NOT NULL RETURN SUM(org.revenue) AS combined_revenue",
    "query_type": "Aggregation",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "combined_revenue": 921830759356.0
      }
    ],
    "answer": "The total combined revenue of all non-dissolved public companies is $921,830,759,356."
  },
  {
    "question": "What's the minimum sentiment score for articles that mention both a parent company and its subsidiary?",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization), (article:Article)-[:MENTIONS]->(parent), (article)-[:MENTIONS]->(sub) WHERE article.sentiment IS NOT NULL RETURN MIN(article.sentiment) AS lowest_sentiment",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_sentiment": -0.988
      }
    ],
    "answer": "The minimum sentiment score for articles that mention both a parent company and its subsidiary is -0.988."
  },
  {
    "question": "How many companies can Oracle reach through a chain of supplier relationships within 3 hops?",
    "cypher": "MATCH path = (oracle:Organization {name: 'Oracle'})-[:HAS_SUPPLIER*1..3]-(connected:Organization) RETURN COUNT(DISTINCT connected) AS reachable_companies",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "reachable_companies": 16744
      }
    ],
    "answer": "Oracle can reach 16,744 companies through supplier relationships within 3 hops."
  },
  {
    "question": "What's the name of the subsidary of Altium located in Richmond, Vermont?",
    "cypher": "MATCH (alt:Organization {name: 'Altium'})-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE sub.summary CONTAINS 'Richmond, Vermont' RETURN sub.name AS subsidiary_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "subsidiary_name": "Green Mountain Computing Systs"
      }
    ],
    "answer": "Green Mountain Computing Systs is the subsidiary of Altium located in Richmond, Vermont."
  },
  {
    "question": "Tell me the average number of chunks per article that mentions tech companies?",
    "cypher": "MATCH (article:Article)-[:MENTIONS]->(org:Organization), (article)-[:HAS_CHUNK]->(chunk:Chunk) WHERE org.summary CONTAINS 'technology' OR org.summary CONTAINS 'software' RETURN AVG(COUNT(chunk)) AS average_chunks",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the highest revenue among companies that share board members with publicly traded firms?",
    "cypher": "MATCH (public:Organization {isPublic: true})-[:HAS_BOARD_MEMBER]->(member:Person)<-[:HAS_BOARD_MEMBER]-(other:Organization) WHERE other.revenue IS NOT NULL AND other.id <> public.id RETURN MAX(other.revenue) AS maximum_revenue",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "maximum_revenue": 32800000000.0
      }
    ],
    "answer": "The highest revenue among companies that share board members with publicly traded firms is $32.8 billion."
  },
  {
    "question": "What's the follower count for anaseu?",
    "cypher": "MATCH (s:Stream {name: 'anaseu'}) RETURN s.followers AS follower_count",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "follower_count": 71726
      }
    ],
    "answer": "Anaseu has 71,726 followers."
  },
  {
    "question": "How many followers does fengrush have?",
    "cypher": "MATCH (s:Stream {name: 'fengrush'}) RETURN s.followers AS follower_count",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "follower_count": 107675
      }
    ],
    "answer": "Fengrush has 107,675 followers."
  },
  {
    "question": "What's itsbigchase's total view count?",
    "cypher": "MATCH (s:Stream {name: 'itsbigchase'}) RETURN s.total_view_count AS total_views",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_views": 569603
      }
    ],
    "answer": "itsbigchase's total view count is 569,603."
  },
  {
    "question": "Tell me the URL for ninja614's channel",
    "cypher": "MATCH (s:Stream {name: 'ninja614'}) RETURN s.url AS channel_url",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "channel_url": "https://www.twitch.tv/ninja614"
      }
    ],
    "answer": "The URL for ninja614's channel is https://www.twitch.tv/ninja614."
  },
  {
    "question": "What's syna's channel description?",
    "cypher": "MATCH (s:Stream {name: 'syna'}) RETURN s.description AS channel_description",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "channel_description": "\u0130leti\u015fim & Sponsorluk; mail@synatwitch.com"
      }
    ],
    "answer": "Syna's channel description is \"\u0130leti\u015fim & Sponsorluk; mail@synatwitch.com\"."
  },
  {
    "question": "How many views does 9linda have in total?",
    "cypher": "MATCH (s:Stream {name: '9linda'}) RETURN s.total_view_count AS total_views",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_views": 15219767
      }
    ],
    "answer": "9linda has a total of 15,219,767 views."
  },
  {
    "question": "What's cacarov's streamer ID?",
    "cypher": "MATCH (s:Stream {name: 'cacarov'}) RETURN s.id AS streamer_id",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "streamer_id": "175372427"
      }
    ],
    "answer": "cacarov's streamer ID is 175372427."
  },
  {
    "question": "Tell me pavagagg's follower count",
    "cypher": "MATCH (s:Stream {name: 'pavagagg'}) RETURN s.followers AS follower_count",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "follower_count": 6669
      }
    ],
    "answer": "Pavagagg has 6,669 followers."
  },
  {
    "question": "What's the description for deshplease's stream?",
    "cypher": "MATCH (s:Stream {name: 'deshplease'}) RETURN s.description AS stream_description",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_description": "Cotton Candy NIGHTMARE Fuel"
      }
    ],
    "answer": "The description for deshplease's stream is \"Cotton Candy NIGHTMARE Fuel\"."
  },
  {
    "question": "How many folks follow luckyghost?",
    "cypher": "MATCH (s:Stream {name: 'luckyghost'}) RETURN s.followers AS follower_count",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "follower_count": 36638
      }
    ],
    "answer": "luckyghost has 36,638 followers."
  },
  {
    "question": "What's creightonolsen's total views?",
    "cypher": "MATCH (s:Stream {name: 'creightonolsen'}) RETURN s.total_view_count AS total_views",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_views": 573613
      }
    ],
    "answer": "Creightonolsen has a total of 573,613 views."
  },
  {
    "question": "Tell me agustabell212's follower count",
    "cypher": "MATCH (s:Stream {name: 'agustabell212'}) RETURN s.followers AS follower_count",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "follower_count": 58208
      }
    ],
    "answer": "agustabell212 has 58,208 followers."
  },
  {
    "question": "What's the URL for spiukbs?",
    "cypher": "MATCH (s:Stream {name: 'spiukbs'}) RETURN s.url AS stream_url",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_url": "https://www.twitch.tv/spiukbs"
      }
    ],
    "answer": "The URL for spiukbs is https://www.twitch.tv/spiukbs."
  },
  {
    "question": "How many followers does romandoduik have?",
    "cypher": "MATCH (s:Stream {name: 'romandoduik'}) RETURN s.followers AS follower_count",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "follower_count": 2448
      }
    ],
    "answer": "romandoduik has 2,448 followers."
  },
  {
    "question": "What's atlanticdk's view count?",
    "cypher": "MATCH (s:Stream {name: 'atlanticdk'}) RETURN s.total_view_count AS total_views",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_views": 54524
      }
    ],
    "answer": "atlanticdk has a total view count of 54,524."
  },
  {
    "question": "Tell me the ID for anseu's channel",
    "cypher": "MATCH (s:Stream {name: 'anaseu'}) RETURN s.id AS channel_id",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "channel_id": "70747777"
      }
    ],
    "answer": "The channel ID for anseu is 70747777."
  },
  {
    "question": "What's ESO Stream Team's creation date?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'}) RETURN t.createdAt AS creation_date",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "creation_date": "2018-11-16T13:43:00.634247000+00:00"
      }
    ],
    "answer": "The ESO Stream Team was created on November 16, 2018."
  },
  {
    "question": "What game does itsbigchase play?",
    "cypher": "MATCH (s:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game) RETURN g.name AS game_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "game_name": "Rust"
      }
    ],
    "answer": "itsbigchase plays Rust."
  },
  {
    "question": "Which game does 9linda stream?",
    "cypher": "MATCH (s:Stream {name: '9linda'})-[:PLAYS]->(g:Game) RETURN g.name AS game_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "game_name": "Rust"
      }
    ],
    "answer": "9linda streams Rust."
  },
  {
    "question": "What language does anaseu stream in?",
    "cypher": "MATCH (s:Stream {name: 'anaseu'})-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS language_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "language_name": "en"
      }
    ],
    "answer": "Anaseu streams in English (en)."
  },
  {
    "question": "Tell me what team ninja614 belongs to",
    "cypher": "MATCH (s:Stream {name: 'ninja614'})<-[:HAS_TEAM]-(t:Team) RETURN t.name AS team_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What language does pavagagg use?",
    "cypher": "MATCH (s:Stream {name: 'pavagagg'})-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS language_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "language_name": "ru"
      }
    ],
    "answer": "pavagagg uses the Russian (ru) language."
  },
  {
    "question": "Which game does cacarov play?",
    "cypher": "MATCH (s:Stream {name: 'cacarov'})-[:PLAYS]->(g:Game) RETURN g.name AS game_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "game_name": "Rust"
      },
      {
        "game_name": "Grand Theft Auto V"
      },
      {
        "game_name": "Just Chatting"
      }
    ]
  },
  {
    "question": "What team is luckyghost part of?",
    "cypher": "MATCH (s:Stream {name: 'luckyghost'})<-[:HAS_TEAM]-(t:Team) RETURN t.name AS team_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "How many streamers play Rust?",
    "cypher": "MATCH (g:Game {name: 'Rust'})<-[:PLAYS]-(s:Stream) RETURN COUNT(DISTINCT s) AS streamer_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "streamer_count": 47
      }
    ],
    "answer": "Based on the query result, 47 streamers play Rust."
  },
  {
    "question": "How many channels stream in English?",
    "cypher": "MATCH (l:Language {name: 'en'})<-[:HAS_LANGUAGE]-(s:Stream) RETURN COUNT(DISTINCT s) AS channel_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "channel_count": 2344
      }
    ],
    "answer": "There are 2,344 channels that stream in English."
  },
  {
    "question": "How many streamers are in ESO Stream Team?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})-[:HAS_TEAM]->(s:Stream) RETURN COUNT(DISTINCT s) AS member_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "How many mods does syna have?",
    "cypher": "MATCH (s:Stream {name: 'syna'})<-[:MODERATOR]-(u:User) RETURN COUNT(DISTINCT u) AS mod_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "mod_count": 20
      }
    ],
    "answer": "Syna has 20 moderators."
  },
  {
    "question": "How many channels does elokratz moderate?",
    "cypher": "MATCH (u:User {name: 'elokratz'})-[:MODERATOR]->(s:Stream) RETURN COUNT(DISTINCT s) AS channel_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "channel_count": 3
      }
    ],
    "answer": "elokratz moderates 3 channels."
  },
  {
    "question": "Count the VIPs for itsbigchase",
    "cypher": "MATCH (s:Stream {name: 'itsbigchase'})<-[:VIP]-(u:User) RETURN COUNT(DISTINCT u) AS vip_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "vip_count": 5
      }
    ],
    "answer": "The stream \"itsbigchase\" has 5 VIP users."
  },
  {
    "question": "How many chatters does anaseu have?",
    "cypher": "MATCH (s:Stream {name: 'anaseu'})<-[:CHATTER]-(u:User) RETURN COUNT(DISTINCT u) AS chatter_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "chatter_count": 855
      }
    ],
    "answer": "Anaseu has 855 chatters."
  },
  {
    "question": "What's the total followers for streamers playing The Elder Scrolls Online?",
    "cypher": "MATCH (g:Game {name: 'The Elder Scrolls Online'})<-[:PLAYS]-(s:Stream) RETURN SUM(s.followers) AS total_followers",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_followers": 264208
      }
    ],
    "answer": "The total followers for streamers playing The Elder Scrolls Online is 264,208."
  },
  {
    "question": "What's the average follower count for Russian streamers?",
    "cypher": "MATCH (l:Language {name: 'ru'})<-[:HAS_LANGUAGE]-(s:Stream) RETURN AVG(s.followers) AS average_followers",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_followers": 113516.95710455754
      }
    ],
    "answer": "The average follower count for Russian streamers is approximately 113,517."
  },
  {
    "question": "Who's the most followed streamer playing Rust?",
    "cypher": "MATCH (g:Game {name: 'Rust'})<-[:PLAYS]-(s:Stream) WHERE s.followers IS NOT NULL RETURN s.name AS streamer_name ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "streamer_name": "shiphtur"
      }
    ],
    "answer": "Based on the query result, shiphtur is the most followed streamer playing Rust."
  },
  {
    "question": "What's the highest view count among English streamers?",
    "cypher": "MATCH (l:Language {name: 'en'})<-[:HAS_LANGUAGE]-(s:Stream) WHERE s.total_view_count IS NOT NULL RETURN MAX(s.total_view_count) AS max_views",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_views": 1451487256
      }
    ],
    "answer": "The highest view count among English streamers is 1,451,487,256 views."
  },
  {
    "question": "How many folks stream The Elder Scrolls Online?",
    "cypher": "MATCH (g:Game {name: 'The Elder Scrolls Online'})<-[:PLAYS]-(s:Stream) RETURN COUNT(DISTINCT s) AS streamer_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "streamer_count": 4
      }
    ],
    "answer": "Based on the query result, 4 streamers are currently streaming The Elder Scrolls Online."
  },
  {
    "question": "What game do streamers that anaseu chats with play?",
    "cypher": "MATCH (s1:Stream {name: 'anaseu'})-[:CHATTER]->(s2:Stream)-[:PLAYS]->(g:Game) RETURN g.name AS game_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "game_name": "Fortnite"
      }
    ],
    "answer": "Fortnite"
  },
  {
    "question": "What language do streamers moderated by elokratz use?",
    "cypher": "MATCH (u:User {name: 'elokratz'})-[:MODERATOR]->(s:Stream)-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS language_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "language_name": "en"
      },
      {
        "language_name": "da"
      },
      {
        "language_name": "en"
      }
    ]
  },
  {
    "question": "Which team are streamers playing The Elder Scrolls Online part of?",
    "cypher": "MATCH (g:Game {name: 'The Elder Scrolls Online'})<-[:PLAYS]-(s:Stream)<-[:HAS_TEAM]-(t:Team) RETURN t.name AS team_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "How many streamers play the same game as 9linda?",
    "cypher": "MATCH (s1:Stream {name: '9linda'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s2:Stream) WHERE s1 <> s2 RETURN COUNT(DISTINCT s2) AS streamer_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "streamer_count": 46
      }
    ],
    "answer": "46 other streamers play the same game as 9linda."
  },
  {
    "question": "What's the total followers of channels that imcoma moderates?",
    "cypher": "MATCH (u:User {name: 'imcoma'})-[:MODERATOR]->(s:Stream) RETURN SUM(s.followers) AS total_followers",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_followers": 33366
      }
    ],
    "answer": "The total followers of channels that imcoma moderates is 33,366."
  },
  {
    "question": "How many streamers speak the same language as pavagag?",
    "cypher": "MATCH (s1:Stream {name: 'pavagagg'})-[:HAS_LANGUAGE]->(l:Language)<-[:HAS_LANGUAGE]-(s2:Stream) WHERE s1 <> s2 RETURN COUNT(DISTINCT s2) AS streamer_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "streamer_count": 372
      }
    ],
    "answer": "372 other streamers speak the same language as pavagag."
  },
  {
    "question": "What's the average view count for channels in ESO Stream Team?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})-[:HAS_TEAM]->(s:Stream) RETURN AVG(s.total_view_count) AS average_views",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "How many mods does itsbigchase's game have across all streamers?",
    "cypher": "MATCH (s1:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s2:Stream)<-[:MODERATOR]-(u:User) RETURN COUNT(DISTINCT u) AS mod_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "mod_count": 325
      }
    ],
    "answer": "itsbigchase's game has 325 mods across all streamers."
  },
  {
    "question": "What's the highest follower count among streamers that syna moderates?",
    "cypher": "MATCH (s1:Stream {name: 'syna'})-[:MODERATOR]->(s2:Stream) WHERE s2.followers IS NOT NULL RETURN MAX(s2.followers) AS max_followers",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_followers": 87635
      }
    ],
    "answer": "The highest follower count among streamers that syna moderates is 87,635."
  },
  {
    "question": "How many channels do folks who chat in anaseu's stream moderate?",
    "cypher": "MATCH (s:Stream {name: 'anaseu'})<-[:CHATTER]-(u:User)-[:MODERATOR]->(s2:Stream) RETURN COUNT(DISTINCT s2) AS channel_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "channel_count": 6
      }
    ],
    "answer": "Based on the query result, people who chat in anaseu's stream moderate 6 different channels."
  },
  {
    "question": "What's the total views for channels that play the same game as carcarov?",
    "cypher": "MATCH (s1:Stream {name: 'cacarov'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s2:Stream) WHERE s1 <> s2 RETURN SUM(s2.total_view_count) AS total_views",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_views": 16783967466
      }
    ],
    "answer": "The total views for channels playing the same game as cacarov is 16,783,967,466."
  },
  {
    "question": "How many languages are used by streamers playing Rust?",
    "cypher": "MATCH (g:Game {name: 'Rust'})<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(l:Language) RETURN COUNT(DISTINCT l) AS language_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "language_count": 10
      }
    ],
    "answer": "Based on the query result, there are 10 different languages used by streamers playing Rust."
  },
  {
    "question": "What's the minimum follower count for streamers in luckyghost's team?",
    "cypher": "MATCH (s1:Stream {name: 'luckyghost'})<-[:HAS_TEAM]-(t:Team)-[:HAS_TEAM]->(s2:Stream) WHERE s2.followers IS NOT NULL AND s1 <> s2 RETURN MIN(s2.followers) AS min_followers",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "How many streamers moderate channels that play The Elder Scrolls Online?",
    "cypher": "MATCH (u:User)-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game {name: 'The Elder Scrolls Online'}) RETURN COUNT(DISTINCT u) AS total_moderators",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_moderators": 22
      }
    ],
    "answer": "22 streamers moderate channels that play The Elder Scrolls Online."
  },
  {
    "question": "What's the total view count of streams that have syna as a moderator?",
    "cypher": "MATCH (u:User {name: 'syna'})-[:MODERATOR]->(s:Stream) RETURN SUM(s.total_view_count) AS total_views",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_views": 3050171
      }
    ],
    "answer": "The total view count of streams moderated by syna is 3,050,171 views."
  },
  {
    "question": "Tell me the game played by streamers who are part of the ESO Stream Team",
    "cypher": "MATCH (s:Stream)-[:HAS_TEAM]->(t:Team {name: 'ESO Stream Team'}), (s)-[:PLAYS]->(g:Game) RETURN g.name AS game_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "game_name": "The Elder Scrolls Online"
      }
    ],
    "answer": "The streamers in the ESO Stream Team play The Elder Scrolls Online."
  },
  {
    "question": "How many folks moderate channels that itsbigchase chats in?",
    "cypher": "MATCH (itsbigchase:User {name: 'itsbigchase'})-[:CHATTER]->(s:Stream)<-[:MODERATOR]-(u:User) RETURN COUNT(DISTINCT u) AS moderator_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "moderator_count": 30
      }
    ],
    "answer": "30 people moderate channels that itsbigchase chats in."
  },
  {
    "question": "What's the highest follower count among streams playing Rust?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'Rust'}) WHERE s.followers IS NOT NULL RETURN MAX(s.followers) AS max_followers",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_followers": 754330
      }
    ],
    "answer": "The highest follower count among streams playing Rust is 754,330."
  },
  {
    "question": "Find the description of luckyghost's stream",
    "cypher": "MATCH (s:Stream {name: 'luckyghost'}) RETURN s.description AS stream_description",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_description": "Gamer and Content Creator. I love anything with RPG in the title. RPGs, ARPGs, MMORPGs"
      }
    ],
    "answer": "luckyghost describes themselves as a \"Gamer and Content Creator\" who loves RPGs, including role-playing games, action RPGs, and MMORPGs."
  },
  {
    "question": "How many streamers share moderators with fengrush?",
    "cypher": "MATCH (fengrush:Stream {name: 'fengrush'})<-[:MODERATOR]-(mod:User)-[:MODERATOR]->(other:Stream) WHERE other.name <> 'fengrush' RETURN COUNT(DISTINCT other) AS shared_streams",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_streams": 3455
      }
    ],
    "answer": "3,455 streamers share moderators with Fengrush."
  },
  {
    "question": "What language do streams use that play the same games as 9linda?",
    "cypher": "MATCH (linda:Stream {name: '9linda'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(l:Language) WHERE s.name <> '9linda' RETURN l.name AS language_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "language_name": "fr"
      }
    ],
    "answer": "French (fr) is the language used by streams that play the same games as 9linda."
  },
  {
    "question": "What's the lowest view count among channels that have wickedbad4u as a chatter?",
    "cypher": "MATCH (u:User {name: 'wickedbad4u'})-[:CHATTER]->(s:Stream) WHERE s.total_view_count IS NOT NULL RETURN MIN(s.total_view_count) AS min_views",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "min_views": 1594957
      }
    ],
    "answer": "The lowest view count among channels that have wickedbad4u as a chatter is 1,594,957 views."
  },
  {
    "question": "Count the VIP users in streams moderated by people who moderate synas channel",
    "cypher": "MATCH (syna:Stream {name: 'syna'})<-[:MODERATOR]-(mod:User)-[:MODERATOR]->(s:Stream)<-[:VIP]-(vip:User) RETURN COUNT(DISTINCT vip) AS vip_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "vip_count": 23020
      }
    ],
    "answer": "There are 23,020 VIP users in streams moderated by people who also moderate syna's channel."
  },
  {
    "question": "How many paths connect deshplease to the ESO Stream Team?",
    "cypher": "MATCH path = (s:Stream {name: 'deshplease'})-[*1..3]-(t:Team {name: 'ESO Stream Team'}) RETURN COUNT(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connection_count": 46
      }
    ],
    "answer": "There are 46 paths connecting deshplease to the ESO Stream Team."
  },
  {
    "question": "What's the average follower count of streamers playing vidya games with ninja614?",
    "cypher": "MATCH (ninja:Stream {name: 'ninja614'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream) WHERE s.followers IS NOT NULL AND s.name <> 'ninja614' RETURN AVG(s.followers) AS avg_followers",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "avg_followers": 75150.0
      }
    ],
    "answer": "The average follower count of streamers playing the same video game as ninja614 is 75,150."
  },
  {
    "question": "Which stream has the most followers among those with Russian language settings?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(l:Language {name: 'ru'}) WHERE s.followers IS NOT NULL RETURN s.name AS stream_name ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_name": "buster"
      }
    ],
    "answer": "Based on the query result, the stream with the most followers among those with Russian language settings is \"buster\"."
  },
  {
    "question": "What team is associated with streamers who play The Elder Scrolls Online?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'The Elder Scrolls Online'}), (s)-[:HAS_TEAM]->(t:Team) RETURN t.name AS team_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "team_name": "GG Talent Group"
      }
    ],
    "answer": "The team associated with streamers who play The Elder Scrolls Online is GG Talent Group."
  },
  {
    "question": "How many moderators does cacarov share with other Turkish streamers?",
    "cypher": "MATCH (cacarov:Stream {name: 'cacarov'})<-[:MODERATOR]-(mod:User)-[:MODERATOR]->(other:Stream) WHERE other.name <> 'cacarov' RETURN COUNT(DISTINCT mod) AS shared_moderators",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_moderators": 2
      }
    ],
    "answer": "Cacarov shares 2 moderators with other Turkish streamers."
  },
  {
    "question": "What's the URL of streams that atlanticdk moderates?",
    "cypher": "MATCH (u:User {name: 'atlanticdk'})-[:MODERATOR]->(s:Stream) RETURN s.url AS stream_url LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the shortest path length between anaseu and any Rust streamer",
    "cypher": "MATCH path = shortestPath((anaseu:Stream {name: 'anaseu'})-[*]-(rust:Stream)-[:PLAYS]->(:Game {name: 'Rust'})) WHERE rust.name <> 'anaseu' RETURN LENGTH(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the peak total view count for mods of spiukbs' stream?",
    "cypher": "MATCH (s:Stream {name: 'spiukbs'})<-[:MODERATOR]-(mod:User) WHERE mod:Stream AND mod.total_view_count IS NOT NULL RETURN MAX(mod.total_view_count) AS highest_views",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_views": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many chatters does agustabell212 have who are also streamers?",
    "cypher": "MATCH (s:Stream {name: 'agustabell212'})<-[:CHATTER]-(u:User) WHERE u:Stream RETURN COUNT(DISTINCT u) AS streamer_chatters",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "streamer_chatters": 1
      }
    ],
    "answer": "Based on the query result, agustabell212 has 1 chatter who is also a streamer."
  },
  {
    "question": "What game connects pavagagg to English-speaking streamers?",
    "cypher": "MATCH (p:Stream {name: 'pavagagg'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'}) RETURN g.name AS connecting_game LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_game": "Dota 2"
      }
    ],
    "answer": "Dota 2 connects pavagagg to English-speaking streamers."
  },
  {
    "question": "Count how many streams creightonolsen can reach through chatter relationships",
    "cypher": "MATCH (c:Stream {name: 'creightonolsen'})-[:CHATTER*1..2]-(s:Stream) WHERE s.name <> 'creightonolsen' RETURN COUNT(DISTINCT s) AS reachable_streams",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "reachable_streams": 5765
      }
    ],
    "answer": "Creightonolsen can reach 5,765 streams through chatter relationships within one or two hops."
  },
  {
    "question": "What's the minimum follower count among folks who moderate streams playing Rust?",
    "cypher": "MATCH (u:User)-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) WHERE u:Stream AND u.followers IS NOT NULL RETURN MIN(u.followers) AS lowest_followers",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_followers": 12112
      }
    ],
    "answer": "The minimum follower count among stream moderators playing Rust is 12,112."
  },
  {
    "question": "Tell me the created date of the ESO Strem Team",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'}) RETURN t.createdAt AS creation_date",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "creation_date": "2018-11-16T13:43:00.634247000+00:00"
      }
    ],
    "answer": "The ESO Stream Team was created on November 16, 2018 at 1:43 PM UTC."
  },
  {
    "question": "How many languages are used by streamers who share VIPs with romandoduik?",
    "cypher": "MATCH (r:Stream {name: 'romandoduik'})<-[:VIP]-(v:User)-[:VIP]->(s:Stream)-[:HAS_LANGUAGE]->(l:Language) WHERE s.name <> 'romandoduik' RETURN COUNT(DISTINCT l) AS language_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "language_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 languages used by streamers who share VIPs with romandoduik."
  },
  {
    "question": "What's the highest view count among channels that have English language?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'}) WHERE s.total_view_count IS NOT NULL RETURN MAX(s.total_view_count) AS max_views",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_views": 1451487256
      }
    ],
    "answer": "The highest view count among English language channels is 1,451,487,256 views."
  },
  {
    "question": "Which user moderates the most channels that play Rust?",
    "cypher": "MATCH (u:User)-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) WITH u, COUNT(DISTINCT s) AS mod_count WHERE mod_count > 0 RETURN u.name AS moderator_name ORDER BY mod_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "moderator_name": "nightbot"
      }
    ],
    "answer": "The user \"nightbot\" moderates the most channels that play Rust."
  },
  {
    "question": "How many streamers can imcoma reach through moderation relationships?",
    "cypher": "MATCH path = (u:User {name: 'imcoma'})-[:MODERATOR*1..3]-(s:Stream) RETURN COUNT(DISTINCT s) AS reachable_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "reachable_count": 4350
      }
    ],
    "answer": "Based on the query result, imcoma can reach 4,350 streams through moderation relationships within 1 to 3 degrees of connection."
  },
  {
    "question": "What's the sum of followers for all streams in the ESO Stream Team?",
    "cypher": "MATCH (s:Stream)-[:HAS_TEAM]->(t:Team {name: 'ESO Stream Team'}) RETURN SUM(s.followers) AS total_followers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_followers": 734848
      }
    ],
    "answer": "The total number of followers for all streams in the ESO Stream Team is 734,848."
  },
  {
    "question": "Find the game that 9linda plays",
    "cypher": "MATCH (s:Stream {name: '9linda'})-[:PLAYS]->(g:Game) RETURN g.name AS game_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "game_name": "Rust"
      }
    ],
    "answer": "9linda plays Rust."
  },
  {
    "question": "What's the lowest total view count among streams with mods who also moderate itsbigchases channel?",
    "cypher": "MATCH (itsbigchase:Stream {name: 'itsbigchase'})<-[:MODERATOR]-(mod:User)-[:MODERATOR]->(s:Stream) WHERE s.total_view_count IS NOT NULL AND s.name <> 'itsbigchase' RETURN MIN(s.total_view_count) AS min_views",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "min_views": 101
      }
    ],
    "answer": "The lowest total view count among streams moderated by mods who also moderate itsbigchase's channel is 101 views."
  },
  {
    "question": "Count VIP connections between fengrush and other streamers",
    "cypher": "MATCH (f:Stream {name: 'fengrush'})-[:VIP]-(other:Stream) WHERE other.name <> 'fengrush' RETURN COUNT(DISTINCT other) AS vip_connections",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "vip_connections": 0
      }
    ],
    "answer": "Based on the query result, fengrush has 0 VIP connections with other streamers."
  },
  {
    "question": "What's the average view count for streams that share chatters with creightonolsen?",
    "cypher": "MATCH (c:Stream {name: 'creightonolsen'})<-[:CHATTER]-(u:User)-[:CHATTER]->(s:Stream) WHERE s.total_view_count IS NOT NULL AND s.name <> 'creightonolsen' RETURN AVG(s.total_view_count) AS avg_views",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "avg_views": 11368486.48806562
      }
    ],
    "answer": "Based on the query result, the average view count for streams that share chatters with creightonolsen is approximately 11,368,486 views."
  },
  {
    "question": "Tell me the follower count of the most popular streamer on ESO Stream Team",
    "cypher": "MATCH (s:Stream)-[:HAS_TEAM]->(t:Team {name: 'ESO Stream Team'}) WHERE s.followers IS NOT NULL RETURN s.followers AS follower_count ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "follower_count": 567761
      }
    ],
    "answer": "The most popular streamer on the ESO Stream Team has 567,761 followers."
  },
  {
    "question": "How many different games do streamers play who have business_daddy as a chatter?",
    "cypher": "MATCH (u:User {name: 'business_daddy'})-[:CHATTER]->(s:Stream)-[:PLAYS]->(g:Game) RETURN COUNT(DISTINCT g) AS game_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "game_count": 197
      }
    ],
    "answer": "business_daddy has chatted in streams playing 197 different games."
  },
  {
    "question": "What language setting does pavagagg use?",
    "cypher": "MATCH (s:Stream {name: 'pavagagg'})-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS language_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "language_name": "ru"
      }
    ],
    "answer": "The language setting for pavagagg is Russian (ru)."
  },
  {
    "question": "Find streamers who moderate for both spiukbs and agustabell212",
    "cypher": "MATCH (s1:Stream {name: 'spiukbs'})<-[:MODERATOR]-(mod:User)-[:MODERATOR]->(s2:Stream {name: 'agustabell212'}) RETURN COUNT(DISTINCT mod) AS shared_moderators",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_moderators": 1
      }
    ],
    "answer": "There is 1 streamer who moderates for both spiukbs and agustabell212."
  },
  {
    "question": "What's the peak follower count among peeps who are VIPs in anaseu's stream?",
    "cypher": "MATCH (s:Stream {name: 'anaseu'})<-[:VIP]-(v:User) WHERE v:Stream AND v.followers IS NOT NULL RETURN MAX(v.followers) AS highest_followers",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_followers": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many total views do streamers have who play The Elder Scrolls Online?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(:Game {name: 'The Elder Scrolls Online'}) RETURN SUM(s.total_view_count) AS total_views",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_views": 215886661
      }
    ],
    "answer": "Streamers playing The Elder Scrolls Online have a total of 215,886,661 views."
  },
  {
    "question": "What's the creation date of ninja614's channel?",
    "cypher": "MATCH (s:Stream {name: 'ninja614'}) RETURN s.createdAt AS creation_date",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "creation_date": "2016-09-30T13:22:36.755803000+00:00"
      }
    ],
    "answer": "ninja614's channel was created on September 30, 2016 at 1:22:36 PM UTC."
  },
  {
    "question": "Count streams that can be reached from deshplease through any two relationships",
    "cypher": "MATCH path = (d:Stream {name: 'deshplease'})-[*2]-(s:Stream) WHERE s.name <> 'deshplease' RETURN COUNT(DISTINCT s) AS reachable_streams",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "reachable_streams": 5780
      }
    ],
    "answer": "There are 5,780 distinct streams that can be reached from the stream \"deshplease\" through two relationships."
  },
  {
    "question": "What's the minimum follower count for channels with ru language that play Rust?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'ru'}), (s)-[:PLAYS]->(:Game {name: 'Rust'}) WHERE s.followers IS NOT NULL RETURN MIN(s.followers) AS min_followers",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "min_followers": 915
      }
    ],
    "answer": "The minimum follower count for Russian-language Rust streams is 915 followers."
  },
  {
    "question": "Tell me how many users are chatters in luckyghost's stream",
    "cypher": "MATCH (s:Stream {name: 'luckyghost'})<-[:CHATTER]-(u:User) RETURN COUNT(DISTINCT u) AS chatter_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "chatter_count": 863
      }
    ],
    "answer": "There are 863 users who are chatters in luckyghost's stream."
  },
  {
    "question": "What's the ID of the streamer with most followers who moderates for cacarov?",
    "cypher": "MATCH (c:Stream {name: 'cacarov'})<-[:MODERATOR]-(mod:User) WHERE mod:Stream AND mod.followers IS NOT NULL RETURN mod.id AS moderator_id ORDER BY mod.followers DESC LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "moderator_id": "196783434"
      }
    ],
    "answer": "The ID of the streamer with the most followers who moderates for cacarov is 196783434."
  },
  {
    "question": "How many moderators connect atlantic_dk to English language streams?",
    "cypher": "MATCH (atlantic:Stream {name: 'atlanticdk'})<-[:MODERATOR]-(mod:User)-[:MODERATOR]->(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'}) WHERE s.name <> 'atlanticdk' RETURN COUNT(DISTINCT mod) AS connecting_moderators",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_moderators": 1
      }
    ],
    "answer": "1 moderator connects Atlantic_dk to English language streams."
  },
  {
    "question": "What's the average follower count of folks in the ESO Stream Team?",
    "cypher": "MATCH (s:Stream)-[:HAS_TEAM]->(t:Team {name: 'ESO Stream Team'}) WHERE s.followers IS NOT NULL RETURN AVG(s.followers) AS avg_followers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "avg_followers": 146969.6
      }
    ],
    "answer": "The average follower count of the ESO Stream Team is approximately 146,970 followers."
  },
  {
    "question": "Find the shortest connection between raymundogalvez and any Rust player",
    "cypher": "MATCH path = shortestPath((r:User {name: 'raymundogalvez'})-[*]-(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'})) RETURN LENGTH(path) AS connection_distance",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the total view count of the stream with highest followers among English streamers?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'}) WHERE s.followers IS NOT NULL AND s.total_view_count IS NOT NULL RETURN s.total_view_count AS view_count ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "view_count": 274283440
      }
    ],
    "answer": "The stream with the highest followers among English streamers has a total view count of 274,283,440."
  },
  {
    "question": "How many chatters do streams have that play games with 9linda?",
    "cypher": "MATCH (linda:Stream {name: '9linda'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream)<-[:CHATTER]-(u:User) WHERE s.name <> '9linda' RETURN COUNT(DISTINCT u) AS total_chatters",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_chatters": 295130
      }
    ],
    "answer": "The streams that play games with 9linda have 295,130 distinct chatters."
  },
  {
    "question": "What's the description of the channel moderated by haraldinho_?",
    "cypher": "MATCH (u:User {name: 'haraldinho_'})-[:MODERATOR]->(s:Stream) RETURN s.description AS stream_description LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_description": "Anas is a professional Fortnite player for Guild Esports. On his streams you can watch him practice and play tournaments. "
      }
    ],
    "answer": "The channel moderated by haraldinho_ is described as: \"Anas is a professional Fortnite player for Guild Esports. On his streams you can watch him practice and play tournaments.\""
  },
  {
    "question": "How many streamers play Rust who also have Russian language streams?",
    "cypher": "MATCH (g:Game {name: 'Rust'})<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(l:Language {name: 'ru'}) RETURN COUNT(DISTINCT s) AS total_streamers",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_streamers": 3
      }
    ],
    "answer": "Based on the query result, there are 3 streamers who play Rust and have Russian language streams."
  },
  {
    "question": "What's the total view count of all streamers who are part of the ESO Stream Team?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream) RETURN SUM(s.total_view_count) AS combined_views",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "combined_views": 1561603359
      }
    ],
    "answer": "The total view count of all streamers in the ESO Stream Team is 1,561,603,359 views."
  },
  {
    "question": "What's the description of the stream that connects itsbigchse to the game Rust?",
    "cypher": "MATCH (s:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game {name: 'Rust'}) RETURN s.description AS stream_description",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_description": "Welcome to my Channel, I'm Big Chase, 31 living in England UK. Mediocre game play, 2 bald cats, hilarious moments.                                                                                           Business enquiries: itsbigchase@gmail.com"
      }
    ],
    "answer": "According to the stream's description, itsbigchase is a 31-year-old streamer from England UK who plays Rust with a humorous style, and mentions having two bald cats. His channel welcomes viewers and is open to business inquiries at itsbigchase@gmail.com."
  },
  {
    "question": "Which stream has the highest follower count among those playing The Elder Scrolls Online?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'The Elder Scrolls Online'}) WHERE s.followers IS NOT NULL RETURN s.name AS top_streamer ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "top_streamer": "fengrush"
      }
    ],
    "answer": "According to the data, the stream with the highest follower count playing The Elder Scrolls Online is 'fengrush'."
  },
  {
    "question": "How many moderators does spiukbs share with other Spanish-speaking streamers?",
    "cypher": "MATCH (s1:Stream {name: 'spiukbs'})<-[:MODERATOR]-(u:User)-[:MODERATOR]->(s2:Stream)-[:HAS_LANGUAGE]->(l:Language {name: 'es'}) WHERE s1 <> s2 RETURN COUNT(DISTINCT u) AS shared_moderators",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_moderators": 1
      }
    ],
    "answer": "spiukbs shares 1 moderator with other Spanish-speaking streamers."
  },
  {
    "question": "What's the average follower count of folks who have imcoma as a moderator?",
    "cypher": "MATCH (u:User {name: 'imcoma'})-[:MODERATOR]->(s:Stream) WHERE s.followers IS NOT NULL RETURN AVG(s.followers) AS average_followers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_followers": 33366.0
      }
    ],
    "answer": "The average follower count for streams moderated by imcoma is 33,366 followers."
  },
  {
    "question": "Tell me the URL of 9lnda's stream profile",
    "cypher": "MATCH (s:Stream {name: '9linda'}) RETURN s.url AS stream_url",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_url": "https://www.twitch.tv/9linda"
      }
    ],
    "answer": "9linda's stream profile URL is https://www.twitch.tv/9linda."
  },
  {
    "question": "How many different games are played by streamers who have chatters that also chat in fengrush's stream?",
    "cypher": "MATCH (s1:Stream {name: 'fengrush'})<-[:CHATTER]-(u:User)-[:CHATTER]->(s2:Stream)-[:PLAYS]->(g:Game) WHERE s1 <> s2 RETURN COUNT(DISTINCT g) AS total_games",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_games": 594
      }
    ],
    "answer": "Based on the query result, there are 594 different games played by streamers who have chatters that also chat in fengrush's stream."
  },
  {
    "question": "What's the lowest view count among streamers in the ESO Stream Team?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream) WHERE s.total_view_count IS NOT NULL RETURN MIN(s.total_view_count) AS lowest_views",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_views": 1594957
      }
    ],
    "answer": "The lowest view count among streamers in the ESO Stream Team is 1,594,957 views."
  },
  {
    "question": "How many VIP users does deshplease have who are also moderators for other streams?",
    "cypher": "MATCH (s1:Stream {name: 'deshplease'})<-[:VIP]-(u:User)-[:MODERATOR]->(s2:Stream) WHERE s1 <> s2 RETURN COUNT(DISTINCT u) AS vip_moderators",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "vip_moderators": 0
      }
    ],
    "answer": "Based on the query result, deshplease has 0 VIP users who are moderators for other streams."
  },
  {
    "question": "What game does ninja614 play?",
    "cypher": "MATCH (s:Stream {name: 'ninja614'})-[:PLAYS]->(g:Game) RETURN g.name AS game_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "game_name": "The Elder Scrolls Online"
      }
    ],
    "answer": "ninja614 plays The Elder Scrolls Online."
  },
  {
    "question": "Count the number of English-speaking streamers who play the same vidya as 9linda",
    "cypher": "MATCH (s1:Stream {name: '9linda'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s2:Stream)-[:HAS_LANGUAGE]->(l:Language {name: 'en'}) WHERE s1 <> s2 RETURN COUNT(DISTINCT s2) AS english_streamers",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "english_streamers": 22
      }
    ],
    "answer": "There are 22 English-speaking streamers who play the same game as 9linda."
  },
  {
    "question": "What's the highest follower count among streamers who share mods with anaseu?",
    "cypher": "MATCH (s1:Stream {name: 'anaseu'})<-[:MODERATOR]-(u:User)-[:MODERATOR]->(s2:Stream) WHERE s1 <> s2 AND s2.followers IS NOT NULL RETURN MAX(s2.followers) AS max_followers",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_followers": 8975837
      }
    ],
    "answer": "The highest follower count among streamers who share mods with anaseu is 8,975,837 followers."
  },
  {
    "question": "How many paths connect cacarov to streams playing Rust through moderator relationships?",
    "cypher": "MATCH path = (s1:Stream {name: 'cacarov'})<-[:MODERATOR]-(u:User)-[:MODERATOR]->(s2:Stream)-[:PLAYS]->(g:Game {name: 'Rust'}) WHERE s1 <> s2 RETURN COUNT(path) AS connection_paths",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connection_paths": 4
      }
    ],
    "answer": "There are 4 paths that connect the stream cacarov to streams playing Rust through moderator relationships."
  },
  {
    "question": "What's the team name that luckyghost belongs to?",
    "cypher": "MATCH (s:Stream {name: 'luckyghost'})-[:HAS_TEAM]->(t:Team) RETURN t.name AS team_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "team_name": "ESO Stream Team"
      }
    ],
    "answer": "luckyghost belongs to the ESO Stream Team."
  },
  {
    "question": "Find the total number of followers for all streamers who have rubiz as a moderator",
    "cypher": "MATCH (u:User {name: 'rubiz'})-[:MODERATOR]->(s:Stream) RETURN SUM(s.followers) AS total_followers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_followers": 159814
      }
    ],
    "answer": "The total number of followers for all streams where Rubiz is a moderator is 159,814."
  },
  {
    "question": "Which streamer has the oldest account among those playing Rust?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'Rust'}) WHERE s.createdAt IS NOT NULL RETURN s.name AS oldest_streamer ORDER BY s.createdAt ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "oldest_streamer": "brityt"
      }
    ],
    "answer": "The streamer with the oldest account among those playing Rust is brityt."
  },
  {
    "question": "How many streams does business_daddy chat in that also have other VIP users?",
    "cypher": "MATCH (u1:User {name: 'business_daddy'})-[:CHATTER]->(s:Stream)<-[:VIP]-(u2:User) WHERE u1 <> u2 RETURN COUNT(DISTINCT s) AS stream_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_count": 932
      }
    ],
    "answer": "business_daddy chats in 932 streams that also have other VIP users."
  },
  {
    "question": "What's the stream ID of creightonolsen?",
    "cypher": "MATCH (s:Stream {name: 'creightonolsen'}) RETURN s.id AS stream_id",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_id": "163790744"
      }
    ],
    "answer": "The stream ID of creightonolsen is 163790744."
  },
  {
    "question": "How many different languages are used by streamers who play the same game as syna?",
    "cypher": "MATCH (s1:Stream {name: 'syna'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s2:Stream)-[:HAS_LANGUAGE]->(l:Language) WHERE s1 <> s2 RETURN COUNT(DISTINCT l) AS language_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "language_count": 21
      }
    ],
    "answer": "There are 21 different languages used by streamers who play the same game as syna."
  },
  {
    "question": "What's the newest stream creation date among those with English language settings?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(l:Language {name: 'en'}) WHERE s.createdAt IS NOT NULL RETURN s.createdAt AS newest_date ORDER BY s.createdAt DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "newest_date": "2021-05-09T14:16:40.370294000+00:00"
      }
    ],
    "answer": "The newest stream creation date for streams with English language settings is May 9, 2021 at 2:16:40 PM UTC."
  },
  {
    "question": "Count how many streamers fengrsh can reach through shared team memberships",
    "cypher": "MATCH (s1:Stream {name: 'fengrush'})-[:HAS_TEAM]->(t:Team)<-[:HAS_TEAM]-(s2:Stream) WHERE s1 <> s2 RETURN COUNT(DISTINCT s2) AS reachable_streamers",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "reachable_streamers": 15
      }
    ],
    "answer": "Fengrush can reach 15 other streamers through shared team memberships."
  },
  {
    "question": "What language does the stream pavagagg use?",
    "cypher": "MATCH (s:Stream {name: 'pavagagg'})-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS language_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "language_name": "ru"
      }
    ],
    "answer": "The stream pavagagg uses the Russian (ru) language."
  },
  {
    "question": "How many watchers in total do all Rust streamers have combined?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'Rust'}) RETURN SUM(s.total_view_count) AS combined_views",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "combined_views": 188348659
      }
    ],
    "answer": "Rust streamers have a combined total of 188,348,659 watchers."
  },
  {
    "question": "Which stream has the most followers among those that comettunes chats in?",
    "cypher": "MATCH (u:User {name: 'comettunes'})-[:CHATTER]->(s:Stream) WHERE s.followers IS NOT NULL RETURN s.name AS top_stream ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "top_stream": "shroud"
      }
    ],
    "answer": "Based on the query result, the stream with the most followers that comettunes chats in is 'shroud'."
  },
  {
    "question": "How many VIP users connect atlanticdk to other streamers through shared VIP status?",
    "cypher": "MATCH (s1:Stream {name: 'atlanticdk'})<-[:VIP]-(u:User)-[:VIP]->(s2:Stream) WHERE s1 <> s2 RETURN COUNT(DISTINCT u) AS connecting_vips",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_vips": 0
      }
    ],
    "answer": "Based on the query result, 0 VIP users connect atlanticdk to other streamers through shared VIP status."
  },
  {
    "question": "Tell me when agustabell212's stream was created",
    "cypher": "MATCH (s:Stream {name: 'agustabell212'}) RETURN s.createdAt AS creation_date",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "creation_date": "2016-02-04T04:36:01.685988000+00:00"
      }
    ],
    "answer": "The stream for agustabell212 was created on February 4, 2016 at 4:36:01 AM UTC."
  },
  {
    "question": "What's the average view count of streamers who have haraldinho_ as a mod?",
    "cypher": "MATCH (u:User {name: 'haraldinho_'})-[:MODERATOR]->(s:Stream) WHERE s.total_view_count IS NOT NULL RETURN AVG(s.total_view_count) AS average_views",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_views": 749506.0
      }
    ],
    "answer": "The average view count of streams where haraldinho_ is a moderator is 749,506 views."
  },
  {
    "question": "Find the stream with the least followers that plays The Elder Scrolls Online",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'The Elder Scrolls Online'}) WHERE s.followers IS NOT NULL RETURN s.name AS smallest_stream ORDER BY s.followers ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "smallest_stream": "luckyghost"
      }
    ],
    "answer": "The stream with the least followers playing The Elder Scrolls Online is \"luckyghost\"."
  },
  {
    "question": "How many moderator connections exist between spiukbs and streamers in the same team?",
    "cypher": "MATCH (s1:Stream {name: 'spiukbs'})-[:HAS_TEAM]->(t:Team)<-[:HAS_TEAM]-(s2:Stream)<-[:MODERATOR]-(u:User)-[:MODERATOR]->(s1) WHERE s1 <> s2 RETURN COUNT(DISTINCT u) AS moderator_connections",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "moderator_connections": 1
      }
    ],
    "answer": "There is 1 moderator connection between spiukbs and other streamers in the same team."
  },
  {
    "question": "What's the follower count of romandoduik?",
    "cypher": "MATCH (s:Stream {name: 'romandoduik'}) RETURN s.followers AS follower_count",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "follower_count": 2448
      }
    ],
    "answer": "romandoduik has 2,448 followers."
  },
  {
    "question": "Count all the different folks who moderate streams that play Rust",
    "cypher": "MATCH (u:User)-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game {name: 'Rust'}) RETURN COUNT(DISTINCT u) AS total_moderators",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_moderators": 332
      }
    ],
    "answer": "There are 332 unique moderators for streams that play Rust."
  },
  {
    "question": "Which stremer has the highest view count among those using Russian language?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(l:Language {name: 'ru'}) WHERE s.total_view_count IS NOT NULL RETURN s.name AS top_streamer ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "top_streamer": "igromania"
      }
    ],
    "answer": "Based on the query result, the streamer with the highest view count among those using the Russian language is \"igromania\"."
  },
  {
    "question": "How many chatters does itsbigchase share with other English-speaking channels?",
    "cypher": "MATCH (s1:Stream {name: 'itsbigchase'})<-[:CHATTER]-(u:User)-[:CHATTER]->(s2:Stream)-[:HAS_LANGUAGE]->(l:Language {name: 'en'}) WHERE s1 <> s2 RETURN COUNT(DISTINCT u) AS shared_chatters",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_chatters": 96546
      }
    ],
    "answer": "itsbigchase shares 96,546 chatters with other English-speaking channels."
  },
  {
    "question": "What team ID does the ESO Stream Team have?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'}) RETURN t.id AS team_id",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "team_id": "5893"
      }
    ],
    "answer": "The team ID for the ESO Stream Team is 5893."
  },
  {
    "question": "How many unique games are played by all the channels combined?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game) RETURN COUNT(DISTINCT g) AS total_games",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_games": 594
      }
    ],
    "answer": "There are 594 unique games played across all the channels."
  },
  {
    "question": "What's the oldest stream creation date among those with more than 50000 followers?",
    "cypher": "MATCH (s:Stream) WHERE s.followers > 50000 AND s.createdAt IS NOT NULL RETURN s.createdAt AS oldest_date ORDER BY s.createdAt ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "oldest_date": "2007-05-22T10:39:53.259969000+00:00"
      }
    ],
    "answer": "The oldest stream creation date among streams with more than 50,000 followers is May 22, 2007, which occurred at 10:39:53 AM UTC."
  },
  {
    "question": "Count the paths between raymundogalvez and streams that play vidya games",
    "cypher": "MATCH path = (u:User {name: 'raymundogalvez'})-[:MODERATOR]->(s1:Stream)-[:CHATTER]->(s2:Stream)-[:PLAYS]->(g:Game) RETURN COUNT(path) AS path_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "path_count": 3
      }
    ],
    "answer": "There are 3 paths between the user raymundogalvez and streams that play video games, going through the moderator and chatter relationships."
  },
  {
    "question": "What's the description of the stream with the highest follower count?",
    "cypher": "MATCH (s:Stream) WHERE s.followers IS NOT NULL AND s.description IS NOT NULL RETURN s.description AS top_description ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "top_description": "Watch Me Play VideoGames"
      }
    ],
    "answer": "The description of the stream with the highest follower count is \"Watch Me Play VideoGames\"."
  },
  {
    "question": "How many streamers have wickedbad4u as a chatter?",
    "cypher": "MATCH (u:User {name: 'wickedbad4u'})-[:CHATTER]->(s:Stream) RETURN COUNT(DISTINCT s) AS stream_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_count": 1
      }
    ],
    "answer": "wickedbad4u is a chatter in 1 stream."
  },
  {
    "question": "Find the channel with maximum followers among those who have VIPs that are also mods somewhere",
    "cypher": "MATCH (s:Stream)<-[:VIP]-(u:User)-[:MODERATOR]->(s2:Stream) WHERE s.followers IS NOT NULL RETURN s.name AS top_channel ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "top_channel": "shroud"
      }
    ],
    "answer": "Based on the query result, the channel with the maximum followers among channels with VIPs who are also mods is \"shroud\"."
  },
  {
    "question": "How many different users moderate evariss's stream?",
    "cypher": "MATCH (u:User)-[:MODERATOR]->(s:Stream) WHERE s.name = 'evariss' OR u.name = 'evariss' RETURN COUNT(DISTINCT CASE WHEN s.name = 'evariss' THEN u ELSE s END) AS moderator_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "moderator_count": 1
      }
    ],
    "answer": "1 user moderates evariss's stream."
  },
  {
    "question": "What's the URL for cacarv's stream?",
    "cypher": "MATCH (s:Stream {name: 'cacarov'}) RETURN s.url AS stream_url",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_url": "https://www.twitch.tv/cacarov"
      }
    ],
    "answer": "cacarov's stream URL is https://www.twitch.tv/cacarov"
  },
  {
    "question": "Sum up all the followers of streamrs who are part of any team",
    "cypher": "MATCH (s:Stream)-[:HAS_TEAM]->(t:Team) RETURN SUM(s.followers) AS total_followers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_followers": 996538184
      }
    ],
    "answer": "The total number of followers for streamers who are part of a team is 996,538,184."
  },
  {
    "question": "Which stream has the minimum view count among those with soydas06 as a moderator?",
    "cypher": "MATCH (u:User {name: 'soydas06'})-[:MODERATOR]->(s:Stream) WHERE s.total_view_count IS NOT NULL RETURN s.name AS lowest_viewed ORDER BY s.total_view_count ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_viewed": "syna"
      }
    ],
    "answer": "The stream with the minimum view count among those moderated by soydas06 is \"syna\"."
  },
  {
    "question": "How many games connect elokratz's moderated streams to other streamers?",
    "cypher": "MATCH (u:User {name: 'elokratz'})-[:MODERATOR]->(s1:Stream)-[:PLAYS]->(g:Game)<-[:PLAYS]-(s2:Stream) WHERE s1 <> s2 RETURN COUNT(DISTINCT g) AS connecting_games",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_games": 3
      }
    ],
    "answer": "3 games connect elokratz's moderated streams to other streamers."
  },
  {
    "question": "What's the total view count of fengrush's stream?",
    "cypher": "MATCH (s:Stream {name: 'fengrush'}) RETURN s.total_view_count AS view_count",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "view_count": 107365515
      }
    ],
    "answer": "The total view count for fengrush's stream is 107,365,515 views."
  },
  {
    "question": "How many English-speaking folks have more than 100000 followers?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(l:Language {name: 'en'}) WHERE s.followers > 100000 RETURN COUNT(DISTINCT s) AS high_follower_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "high_follower_count": 867
      }
    ],
    "answer": "There are 867 English-speaking streamers with more than 100,000 followers."
  },
  {
    "question": "Tell me which streamer created their account most recently",
    "cypher": "MATCH (s:Stream) WHERE s.createdAt IS NOT NULL RETURN s.name AS newest_streamer ORDER BY s.createdAt DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "newest_streamer": "sally_spins"
      }
    ],
    "answer": "Based on the query result, the streamer who created their account most recently is sally_spins."
  },
  {
    "question": "How many streamers play the same game as ninja614?",
    "cypher": "MATCH (s1:Stream {name: 'ninja614'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s2:Stream) WHERE s1 <> s2 RETURN COUNT(DISTINCT s2) AS total_streamers",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_streamers": 3
      }
    ],
    "answer": "3 other streamers play the same game as ninja614."
  },
  {
    "question": "What's the total follower count of all channels that have moderators who also moderate for syna?",
    "cypher": "MATCH (s1:Stream {name: 'syna'})<-[:MODERATOR]-(u:User)-[:MODERATOR]->(s2:Stream) WHERE s1 <> s2 RETURN SUM(s2.followers) AS total_followers",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_followers": 1369524696
      }
    ],
    "answer": "The total follower count of all channels with moderators who also moderate for syna is 1,369,524,696 followers."
  },
  {
    "question": "What game does itsbigchase stream?",
    "cypher": "MATCH (s:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game) RETURN g.name AS game_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "game_name": "Rust"
      }
    ],
    "answer": "itsbigchase streams Rust."
  },
  {
    "question": "Which streamer has the highest view count among those who play Rust?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'Rust'}) WHERE s.total_view_count IS NOT NULL RETURN s.name AS streamer_name ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "streamer_name": "shiphtur"
      }
    ],
    "answer": "According to the data, shiphtur has the highest view count among Rust streamers."
  },
  {
    "question": "How many moderators does cacarov share with syna?",
    "cypher": "MATCH (s1:Stream {name: 'cacarov'})<-[:MODERATOR]-(u:User)-[:MODERATOR]->(s2:Stream {name: 'syna'}) RETURN COUNT(DISTINCT u) AS shared_moderators",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_moderators": 1
      }
    ],
    "answer": "Based on the query result, cacarov and syna share 1 moderator."
  },
  {
    "question": "What's the average follower count of streamers in the ESO Stream Team?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream) WHERE s.followers IS NOT NULL RETURN AVG(s.followers) AS average_followers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_followers": 146969.6
      }
    ],
    "answer": "The average follower count of streamers in the ESO Stream Team is approximately 146,970 followers."
  },
  {
    "question": "Tell me the team name that luckyghost belongs to?",
    "cypher": "MATCH (s:Stream {name: 'luckyghost'})-[:HAS_TEAM]->(t:Team) RETURN t.name AS team_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "team_name": "ESO Stream Team"
      }
    ],
    "answer": "luckyghost belongs to the ESO Stream Team."
  },
  {
    "question": "What's the minimum view count among content creators who broadcast in Russian?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(l:Language {name: 'ru'}) WHERE s.total_view_count IS NOT NULL RETURN MIN(s.total_view_count) AS lowest_views",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_views": 21
      }
    ],
    "answer": "The minimum view count among content creators broadcasting in Russian is 21 views."
  },
  {
    "question": "How many folks are VIPs in streams that play The Elder Scrolls Online?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'The Elder Scrolls Online'}), (u:User)-[:VIP]->(s) RETURN COUNT(DISTINCT u) AS total_vips",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_vips": 3
      }
    ],
    "answer": "3 users are VIPs in streams playing The Elder Scrolls Online."
  },
  {
    "question": "What language does the stream 9linda use?",
    "cypher": "MATCH (s:Stream {name: '9linda'})-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS language_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "language_name": "ru"
      }
    ],
    "answer": "The stream 9linda uses Russian (ru) as their language."
  },
  {
    "question": "Which channel has the most followers among those with evariss as a moderator?",
    "cypher": "MATCH (u:User {name: 'evariss'})-[:MODERATOR]->(s:Stream) WHERE s.followers IS NOT NULL RETURN s.name AS stream_name ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_name": "syna"
      }
    ],
    "answer": "Based on the query result, the channel with the most followers among those moderated by evariss is \"syna\"."
  },
  {
    "question": "Count the distinct games played by streamers who have imcoma as a moderator?",
    "cypher": "MATCH (u:User {name: 'imcoma'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game) RETURN COUNT(DISTINCT g) AS total_games",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_games": 1
      }
    ],
    "answer": "Based on the query result, imcoma has moderated streams that played 1 distinct game."
  },
  {
    "question": "What's the total view count of fengrush's channel?",
    "cypher": "MATCH (s:Stream {name: 'fengrush'}) RETURN s.total_view_count AS total_views",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_views": 107365515
      }
    ],
    "answer": "Fengrush's channel has a total of 107,365,515 views."
  },
  {
    "question": "How many streamers who play Rust have more than 10000 followers?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'Rust'}) WHERE s.followers > 10000 RETURN COUNT(DISTINCT s) AS streamer_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "streamer_count": 42
      }
    ],
    "answer": "42 streamers who play Rust have more than 10,000 followers."
  },
  {
    "question": "What's the shortest path length between anaseu and 9linda?",
    "cypher": "MATCH path = shortestPath((s1:Stream {name: 'anaseu'})-[*]-(s2:Stream {name: '9linda'})) RETURN LENGTH(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "path_length": 2
      }
    ],
    "answer": "The shortest path length between anaseu and 9linda is 2."
  },
  {
    "question": "Find the stream URL of agustabell212?",
    "cypher": "MATCH (s:Stream {name: 'agustabell212'}) RETURN s.url AS stream_url",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_url": "https://www.twitch.tv/agustabell212"
      }
    ],
    "answer": "The stream URL for agustabell212 is https://www.twitch.tv/agustabell212."
  },
  {
    "question": "What's the peak follower count among streamers in teams that luckygost belongs to?",
    "cypher": "MATCH (s1:Stream {name: 'luckyghost'})-[:HAS_TEAM]->(t:Team)<-[:HAS_TEAM]-(s2:Stream) WHERE s2.followers IS NOT NULL RETURN MAX(s2.followers) AS highest_followers",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_followers": 567761
      }
    ],
    "answer": "The peak follower count among streamers in teams that luckyghost belongs to is 567,761 followers."
  },
  {
    "question": "How many chatters does romandoduik have?",
    "cypher": "MATCH (s:Stream {name: 'romandoduik'})<-[:CHATTER]-(u:User) RETURN COUNT(DISTINCT u) AS chatter_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "chatter_count": 26
      }
    ],
    "answer": "romandoduik has 26 chatters."
  },
  {
    "question": "What's the description of the stream deshplease?",
    "cypher": "MATCH (s:Stream {name: 'deshplease'}) RETURN s.description AS stream_description",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_description": "Cotton Candy NIGHTMARE Fuel"
      }
    ],
    "answer": "The description of the stream deshplease is \"Cotton Candy NIGHTMARE Fuel\"."
  },
  {
    "question": "How many streams does haraldinho_ moderate that play games also played by anaseu?",
    "cypher": "MATCH (s1:Stream {name: 'anaseu'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s2:Stream)<-[:MODERATOR]-(u:User {name: 'haraldinho_'}) RETURN COUNT(DISTINCT s2) AS stream_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_count": 0
      }
    ],
    "answer": "Based on the query result, haraldinho_ moderates 0 streams that play games also played by anaseu."
  },
  {
    "question": "What's the lowest follower count among english-speaking streamers?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(l:Language {name: 'en'}) WHERE s.followers IS NOT NULL RETURN MIN(s.followers) AS lowest_followers",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_followers": 1
      }
    ],
    "answer": "The lowest follower count among English-speaking streamers is 1."
  },
  {
    "question": "Sum up all the view counts of channels that share VIPs with spuikbs?",
    "cypher": "MATCH (s1:Stream {name: 'spiukbs'})<-[:VIP]-(u:User)-[:VIP]->(s2:Stream) WHERE s1 <> s2 AND s2.total_view_count IS NOT NULL RETURN SUM(s2.total_view_count) AS total_views",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_views": 0
      }
    ],
    "answer": "Based on the query result, the sum of view counts for channels that share VIPs with spuikbs is 0."
  },
  {
    "question": "Which game connects ninja614 to fengrush?",
    "cypher": "MATCH (s1:Stream {name: 'ninja614'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s2:Stream {name: 'fengrush'}) RETURN g.name AS connecting_game LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_game": "The Elder Scrolls Online"
      }
    ],
    "answer": "The Elder Scrolls Online connects ninja614 to fengrush."
  },
  {
    "question": "What's the highest view count among streamers who are moderated by rubiz?",
    "cypher": "MATCH (u:User {name: 'rubiz'})-[:MODERATOR]->(s:Stream) WHERE s.total_view_count IS NOT NULL RETURN MAX(s.total_view_count) AS peak_views",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "peak_views": 1417895
      }
    ],
    "answer": "The highest view count among streams moderated by rubiz is 1,417,895 views."
  },
  {
    "question": "How many users are chatters in both creightonolsen and romandoduik channels?",
    "cypher": "MATCH (s1:Stream {name: 'creightonolsen'})<-[:CHATTER]-(u:User)-[:CHATTER]->(s2:Stream {name: 'romandoduik'}) RETURN COUNT(DISTINCT u) AS shared_chatters",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_chatters": 7
      }
    ],
    "answer": "7 users are chatters in both the creightonolsen and romandoduik channels."
  },
  {
    "question": "Tell me the follower count of pavagagg's stream?",
    "cypher": "MATCH (s:Stream {name: 'pavagagg'}) RETURN s.followers AS follower_count",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "follower_count": 6669
      }
    ],
    "answer": "The stream of pavagagg has 6,669 followers."
  },
  {
    "question": "What's the average view count of streamers who share teams with ninja614?",
    "cypher": "MATCH (s1:Stream {name: 'ninja614'})-[:HAS_TEAM]->(t:Team)<-[:HAS_TEAM]-(s2:Stream) WHERE s1 <> s2 AND s2.total_view_count IS NOT NULL RETURN AVG(s2.total_view_count) AS average_views",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_views": 199634789.125
      }
    ],
    "answer": "The average view count of streamers who share teams with ninja614 is approximately 199,634,789."
  },
  {
    "question": "Which broadcaster has the smallest follower base among those playing Rust?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'Rust'}) WHERE s.followers IS NOT NULL RETURN s.name AS streamer_name ORDER BY s.followers ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "streamer_name": "z0l0t0ff"
      }
    ],
    "answer": "According to the data, z0l0t0ff has the smallest follower base among broadcasters playing Rust."
  },
  {
    "question": "How many games are played by streamers who have business_daddy as a chatter?",
    "cypher": "MATCH (u:User {name: 'business_daddy'})-[:CHATTER]->(s:Stream)-[:PLAYS]->(g:Game) RETURN COUNT(DISTINCT g) AS game_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "game_count": 197
      }
    ],
    "answer": "Based on the query result, there are 197 distinct games played by streamers who have business_daddy as a chatter."
  },
  {
    "question": "What's the creation date of the ESO Stream Team?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'}) RETURN t.createdAt AS creation_date",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "creation_date": "2018-11-16T13:43:00.634247000+00:00"
      }
    ],
    "answer": "The ESO Stream Team was created on November 16, 2018 at 1:43 PM UTC."
  },
  {
    "question": "Count how many moderators connect atlanticdk to other streams?",
    "cypher": "MATCH (s1:Stream {name: 'atlanticdk'})<-[:MODERATOR]-(u:User)-[:MODERATOR]->(s2:Stream) WHERE s1 <> s2 RETURN COUNT(DISTINCT u) AS moderator_bridges",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "moderator_bridges": 1
      }
    ],
    "answer": "1 moderator connects atlanticdk to other streams."
  },
  {
    "question": "What's the maximum followers among channels that broadcast The Elder Scrolls Online content?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'The Elder Scrolls Online'}) WHERE s.followers IS NOT NULL RETURN MAX(s.followers) AS max_followers",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_followers": 107675
      }
    ],
    "answer": "The maximum number of followers among channels broadcasting The Elder Scrolls Online content is 107,675."
  },
  {
    "question": "How many VIPs does itsbigchases channel have?",
    "cypher": "MATCH (s:Stream {name: 'itsbigchase'})<-[:VIP]-(u:User) RETURN COUNT(DISTINCT u) AS vip_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "vip_count": 5
      }
    ],
    "answer": "itsbigchase's channel has 5 VIPs."
  },
  {
    "question": "What's the stream ID of cacarov?",
    "cypher": "MATCH (s:Stream {name: 'cacarov'}) RETURN s.id AS stream_id",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_id": "175372427"
      }
    ],
    "answer": "The stream ID of cacarov is 175372427."
  },
  {
    "question": "Find the lowest view count among folks streaming in English?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(l:Language {name: 'en'}) WHERE s.total_view_count IS NOT NULL RETURN MIN(s.total_view_count) AS minimum_views",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "minimum_views": 101
      }
    ],
    "answer": "The lowest view count among streams in English is 101."
  },
  {
    "question": "How many paths of length 3 or less connect syna to pavagagg?",
    "cypher": "MATCH path = (s1:Stream {name: 'syna'})-[*1..3]-(s2:Stream {name: 'pavagagg'}) RETURN COUNT(path) AS path_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the total number of followers across all Russian-language streams?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(l:Language {name: 'ru'}) WHERE s.followers IS NOT NULL RETURN SUM(s.followers) AS total_followers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_followers": 42341825
      }
    ],
    "answer": "The total number of followers across all Russian-language streams is 42,341,825."
  },
  {
    "question": "Which team has atlantickdk as a member?",
    "cypher": "MATCH (s:Stream {name: 'atlanticdk'})-[:HAS_TEAM]->(t:Team) RETURN t.name AS team_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the peak view count among channels where elokratz is a moderator?",
    "cypher": "MATCH (u:User {name: 'elokratz'})-[:MODERATOR]->(s:Stream) WHERE s.total_view_count IS NOT NULL RETURN MAX(s.total_view_count) AS highest_views",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_views": 6990976
      }
    ],
    "answer": "The peak view count for channels where elokratz is a moderator is 6,990,976 views."
  },
  {
    "question": "How many moderators work on streams that play games fengrush also streams?",
    "cypher": "MATCH (s1:Stream {name: 'fengrush'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s2:Stream)<-[:MODERATOR]-(u:User) WHERE s1 <> s2 RETURN COUNT(DISTINCT u) AS moderator_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "moderator_count": 96
      }
    ],
    "answer": "96 moderators work on streams that play the same games as fengrush."
  },
  {
    "question": "What's the mean follower count of streams connected to comettunes through chatter relationships?",
    "cypher": "MATCH (u:User {name: 'comettunes'})-[:CHATTER]->(s:Stream) WHERE s.followers IS NOT NULL RETURN AVG(s.followers) AS mean_followers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "mean_followers": 180584.96278118592
      }
    ],
    "answer": "The mean follower count of streams connected to comettunes through chatter relationships is approximately 180,585 followers."
  },
  {
    "question": "Tell me the game that connects the most streamrs together?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game) WITH g, COUNT(DISTINCT s) as streamer_count WHERE streamer_count > 1 RETURN g.name AS game_name ORDER BY streamer_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "game_name": "Just Chatting"
      }
    ],
    "answer": "Based on the query result, \"Just Chatting\" is the game that connects the most streamers together."
  },
  {
    "question": "What language setting does creightonolsen use for broadcasting?",
    "cypher": "MATCH (s:Stream {name: 'creightonolsen'})-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS broadcast_language",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "broadcast_language": "en"
      }
    ],
    "answer": "The language setting for creightonolsen's broadcasting is English (en)."
  },
  {
    "question": "Count the VIPs that are shared between agustabell212 and spiukbs?",
    "cypher": "MATCH (s1:Stream {name: 'agustabell212'})<-[:VIP]-(u:User)-[:VIP]->(s2:Stream {name: 'spiukbs'}) RETURN COUNT(DISTINCT u) AS shared_vips",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_vips": 0
      }
    ],
    "answer": "Based on the query result, there are 0 VIPs shared between the streams agustabell212 and spiukbs."
  },
  {
    "question": "What's the sum of view counts for all streams in the ESO Stream Team?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream) WHERE s.total_view_count IS NOT NULL RETURN SUM(s.total_view_count) AS total_team_views",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_team_views": 1561603359
      }
    ],
    "answer": "The sum of view counts for all streams in the ESO Stream Team is 1,561,603,359 views."
  },
  {
    "question": "Which channel has the most views among those moderated by soydas06?",
    "cypher": "MATCH (u:User {name: 'soydas06'})-[:MODERATOR]->(s:Stream) WHERE s.total_view_count IS NOT NULL RETURN s.name AS stream_name ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "stream_name": "syna"
      }
    ],
    "answer": "Based on the query result, the channel with the most views moderated by soydas06 is 'syna'."
  },
  {
    "question": "How many streamers can wickedbad4u reach through two chatter hops?",
    "cypher": "MATCH (u:User {name: 'wickedbad4u'})-[:CHATTER*2]->(s:Stream) RETURN COUNT(DISTINCT s) AS reachable_streams",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "reachable_streams": 0
      }
    ],
    "answer": "Based on the query result, wickedbad4u can reach 0 streams through two chatter hops."
  },
  {
    "question": "What's the follower count of 9linda?",
    "cypher": "MATCH (s:Stream {name: '9linda'}) RETURN s.followers AS follower_count",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "follower_count": 5272
      }
    ],
    "answer": "9linda has 5,272 followers."
  },
  {
    "question": "How many distinct languags are used by channels playing Rust?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'Rust'}), (s)-[:HAS_LANGUAGE]->(l:Language) RETURN COUNT(DISTINCT l) AS language_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "language_count": 10
      }
    ],
    "answer": "There are 10 distinct languages used by channels playing Rust."
  },
  {
    "question": "What's the location of DC1?",
    "cypher": "MATCH (d:DataCenter {name: 'DC1'}) RETURN d.location AS datacenter_location",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The location of DC1 is Iceland, Rekjavik."
  },
  {
    "question": "What zone is rack DC1-RCK-1-1 in?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-1-1'}) RETURN r.zone AS rack_zone",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "rack_zone": 1
      }
    ],
    "answer": "Rack DC1-RCK-1-1 is in zone 1."
  },
  {
    "question": "What's the PID of the webserver process?",
    "cypher": "MATCH (p:Process {name: 'webserver'}) RETURN p.pid AS process_pid",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "process_pid": 8966
      },
      {
        "process_pid": 1320
      },
      {
        "process_pid": 422
      },
      {
        "process_pid": 2878
      },
      {
        "process_pid": 2150
      },
      {
        "process_pid": 2881
      },
      {
        "process_pid": 6602
      },
      {
        "process_pid": 9684
      },
      {
        "process_pid": 3476
      },
      {
        "process_pid": 1770
      },
      {
        "process_pid": 3041
      },
      {
        "process_pid": 5387
      },
      {
        "process_pid": 1231
      },
      {
        "process_pid": 9802
      },
      {
        "process_pid": 3703
      },
      {
        "process_pid": 2509
      },
      {
        "process_pid": 9445
      },
      {
        "process_pid": 417
      },
      {
        "process_pid": 2033
      },
      {
        "process_pid": 7104
      },
      {
        "process_pid": 6109
      },
      {
        "process_pid": 4624
      },
      {
        "process_pid": 7091
      },
      {
        "process_pid": 7154
      },
      {
        "process_pid": 1453
      },
      {
        "process_pid": 8853
      },
      {
        "process_pid": 7242
      },
      {
        "process_pid": 2384
      },
      {
        "process_pid": 5931
      },
      {
        "process_pid": 1129
      },
      {
        "process_pid": 7846
      },
      {
        "process_pid": 1602
      },
      {
        "process_pid": 2977
      },
      {
        "process_pid": 7555
      },
      {
        "process_pid": 5686
      },
      {
        "process_pid": 9732
      },
      {
        "process_pid": 4245
      },
      {
        "process_pid": 9391
      },
      {
        "process_pid": 6962
      },
      {
        "process_pid": 4052
      },
      {
        "process_pid": 5452
      },
      {
        "process_pid": 3435
      },
      {
        "process_pid": 3780
      },
      {
        "process_pid": 1753
      },
      {
        "process_pid": 4105
      },
      {
        "process_pid": 8027
      },
      {
        "process_pid": 1341
      },
      {
        "process_pid": 3968
      },
      {
        "process_pid": 3660
      },
      {
        "process_pid": 5777
      },
      {
        "process_pid": 3818
      },
      {
        "process_pid": 5957
      },
      {
        "process_pid": 7212
      },
      {
        "process_pid": 7913
      },
      {
        "process_pid": 3124
      },
      {
        "process_pid": 2921
      },
      {
        "process_pid": 2276
      },
      {
        "process_pid": 7570
      },
      {
        "process_pid": 5061
      },
      {
        "process_pid": 5582
      },
      {
        "process_pid": 1495
      },
      {
        "process_pid": 676
      },
      {
        "process_pid": 1775
      },
      {
        "process_pid": 8505
      },
      {
        "process_pid": 3079
      },
      {
        "process_pid": 3317
      },
      {
        "process_pid": 5277
      },
      {
        "process_pid": 1808
      },
      {
        "process_pid": 8293
      },
      {
        "process_pid": 2356
      },
      {
        "process_pid": 7871
      },
      {
        "process_pid": 5644
      },
      {
        "process_pid": 462
      },
      {
        "process_pid": 5120
      },
      {
        "process_pid": 4396
      },
      {
        "process_pid": 5438
      },
      {
        "process_pid": 1363
      },
      {
        "process_pid": 884
      },
      {
        "process_pid": 276
      },
      {
        "process_pid": 300
      },
      {
        "process_pid": 9330
      },
      {
        "process_pid": 5001
      },
      {
        "process_pid": 8147
      },
      {
        "process_pid": 4867
      },
      {
        "process_pid": 5256
      },
      {
        "process_pid": 9321
      },
      {
        "process_pid": 5337
      },
      {
        "process_pid": 6226
      },
      {
        "process_pid": 2758
      },
      {
        "process_pid": 1486
      },
      {
        "process_pid": 3850
      },
      {
        "process_pid": 2449
      },
      {
        "process_pid": 2031
      },
      {
        "process_pid": 4622
      },
      {
        "process_pid": 8119
      },
      {
        "process_pid": 3315
      },
      {
        "process_pid": 8009
      },
      {
        "process_pid": 3519
      },
      {
        "process_pid": 7811
      },
      {
        "process_pid": 4027
      },
      {
        "process_pid": 4891
      },
      {
        "process_pid": 228
      },
      {
        "process_pid": 5336
      },
      {
        "process_pid": 8741
      },
      {
        "process_pid": 5425
      },
      {
        "process_pid": 4780
      },
      {
        "process_pid": 1858
      },
      {
        "process_pid": 5557
      },
      {
        "process_pid": 131
      },
      {
        "process_pid": 2827
      },
      {
        "process_pid": 3919
      },
      {
        "process_pid": 8891
      },
      {
        "process_pid": 1363
      },
      {
        "process_pid": 2237
      },
      {
        "process_pid": 5472
      },
      {
        "process_pid": 1552
      },
      {
        "process_pid": 2116
      },
      {
        "process_pid": 5631
      },
      {
        "process_pid": 5183
      },
      {
        "process_pid": 7329
      },
      {
        "process_pid": 6990
      },
      {
        "process_pid": 7283
      },
      {
        "process_pid": 1472
      },
      {
        "process_pid": 9841
      },
      {
        "process_pid": 9782
      },
      {
        "process_pid": 4722
      },
      {
        "process_pid": 3347
      },
      {
        "process_pid": 1688
      },
      {
        "process_pid": 4626
      },
      {
        "process_pid": 897
      },
      {
        "process_pid": 3925
      },
      {
        "process_pid": 8076
      },
      {
        "process_pid": 9504
      },
      {
        "process_pid": 5614
      },
      {
        "process_pid": 3880
      },
      {
        "process_pid": 3060
      },
      {
        "process_pid": 8479
      },
      {
        "process_pid": 1988
      },
      {
        "process_pid": 5774
      },
      {
        "process_pid": 1337
      },
      {
        "process_pid": 6688
      },
      {
        "process_pid": 7871
      },
      {
        "process_pid": 7898
      },
      {
        "process_pid": 9780
      },
      {
        "process_pid": 6918
      },
      {
        "process_pid": 2138
      },
      {
        "process_pid": 3780
      },
      {
        "process_pid": 2125
      },
      {
        "process_pid": 5213
      },
      {
        "process_pid": 8664
      },
      {
        "process_pid": 3304
      },
      {
        "process_pid": 44
      },
      {
        "process_pid": 4002
      },
      {
        "process_pid": 5345
      },
      {
        "process_pid": 623
      },
      {
        "process_pid": 8467
      },
      {
        "process_pid": 6793
      },
      {
        "process_pid": 1836
      },
      {
        "process_pid": 9845
      },
      {
        "process_pid": 128
      },
      {
        "process_pid": 8347
      },
      {
        "process_pid": 4097
      },
      {
        "process_pid": 3969
      },
      {
        "process_pid": 4459
      },
      {
        "process_pid": 8992
      },
      {
        "process_pid": 9124
      },
      {
        "process_pid": 8799
      },
      {
        "process_pid": 5622
      },
      {
        "process_pid": 6576
      },
      {
        "process_pid": 304
      },
      {
        "process_pid": 802
      },
      {
        "process_pid": 4440
      },
      {
        "process_pid": 1319
      },
      {
        "process_pid": 7087
      },
      {
        "process_pid": 6860
      },
      {
        "process_pid": 6603
      },
      {
        "process_pid": 9331
      },
      {
        "process_pid": 5179
      },
      {
        "process_pid": 8686
      },
      {
        "process_pid": 2613
      },
      {
        "process_pid": 9809
      },
      {
        "process_pid": 4943
      },
      {
        "process_pid": 200
      },
      {
        "process_pid": 5802
      },
      {
        "process_pid": 2973
      },
      {
        "process_pid": 293
      },
      {
        "process_pid": 2866
      },
      {
        "process_pid": 3561
      },
      {
        "process_pid": 107
      },
      {
        "process_pid": 1772
      },
      {
        "process_pid": 1158
      },
      {
        "process_pid": 6511
      },
      {
        "process_pid": 4073
      },
      {
        "process_pid": 4139
      },
      {
        "process_pid": 5837
      },
      {
        "process_pid": 6132
      },
      {
        "process_pid": 8866
      },
      {
        "process_pid": 4205
      },
      {
        "process_pid": 5131
      },
      {
        "process_pid": 432
      },
      {
        "process_pid": 2762
      },
      {
        "process_pid": 4618
      },
      {
        "process_pid": 3971
      },
      {
        "process_pid": 984
      },
      {
        "process_pid": 1035
      },
      {
        "process_pid": 9309
      },
      {
        "process_pid": 6368
      },
      {
        "process_pid": 1914
      },
      {
        "process_pid": 7765
      },
      {
        "process_pid": 7412
      },
      {
        "process_pid": 2536
      },
      {
        "process_pid": 8270
      },
      {
        "process_pid": 9830
      },
      {
        "process_pid": 4082
      },
      {
        "process_pid": 1310
      },
      {
        "process_pid": 7627
      },
      {
        "process_pid": 7973
      },
      {
        "process_pid": 543
      },
      {
        "process_pid": 2445
      },
      {
        "process_pid": 4774
      },
      {
        "process_pid": 9674
      },
      {
        "process_pid": 1425
      },
      {
        "process_pid": 1932
      },
      {
        "process_pid": 5431
      },
      {
        "process_pid": 2368
      },
      {
        "process_pid": 2649
      },
      {
        "process_pid": 6429
      },
      {
        "process_pid": 3060
      },
      {
        "process_pid": 4478
      },
      {
        "process_pid": 1654
      },
      {
        "process_pid": 3241
      },
      {
        "process_pid": 2233
      },
      {
        "process_pid": 6155
      },
      {
        "process_pid": 7289
      },
      {
        "process_pid": 7359
      },
      {
        "process_pid": 7151
      },
      {
        "process_pid": 8644
      },
      {
        "process_pid": 9762
      },
      {
        "process_pid": 9276
      },
      {
        "process_pid": 2754
      },
      {
        "process_pid": 8574
      },
      {
        "process_pid": 9863
      },
      {
        "process_pid": 6575
      },
      {
        "process_pid": 905
      },
      {
        "process_pid": 807
      },
      {
        "process_pid": 8325
      },
      {
        "process_pid": 9957
      },
      {
        "process_pid": 2985
      },
      {
        "process_pid": 6272
      },
      {
        "process_pid": 9460
      },
      {
        "process_pid": 7620
      },
      {
        "process_pid": 6626
      },
      {
        "process_pid": 5033
      },
      {
        "process_pid": 4808
      },
      {
        "process_pid": 676
      },
      {
        "process_pid": 5264
      },
      {
        "process_pid": 8944
      },
      {
        "process_pid": 836
      },
      {
        "process_pid": 836
      },
      {
        "process_pid": 3359
      },
      {
        "process_pid": 4270
      },
      {
        "process_pid": 2130
      },
      {
        "process_pid": 472
      },
      {
        "process_pid": 1146
      },
      {
        "process_pid": 7039
      },
      {
        "process_pid": 5980
      },
      {
        "process_pid": 6964
      },
      {
        "process_pid": 7989
      },
      {
        "process_pid": 6085
      },
      {
        "process_pid": 2859
      },
      {
        "process_pid": 6428
      },
      {
        "process_pid": 1632
      },
      {
        "process_pid": 4924
      },
      {
        "process_pid": 4363
      },
      {
        "process_pid": 78
      },
      {
        "process_pid": 2640
      },
      {
        "process_pid": 2376
      },
      {
        "process_pid": 4070
      },
      {
        "process_pid": 1840
      },
      {
        "process_pid": 8534
      },
      {
        "process_pid": 4368
      },
      {
        "process_pid": 55
      },
      {
        "process_pid": 5698
      },
      {
        "process_pid": 8689
      },
      {
        "process_pid": 6668
      },
      {
        "process_pid": 4608
      },
      {
        "process_pid": 6998
      },
      {
        "process_pid": 9209
      },
      {
        "process_pid": 9965
      },
      {
        "process_pid": 5584
      },
      {
        "process_pid": 9745
      },
      {
        "process_pid": 4885
      },
      {
        "process_pid": 3873
      },
      {
        "process_pid": 5867
      },
      {
        "process_pid": 3902
      },
      {
        "process_pid": 7405
      },
      {
        "process_pid": 9885
      },
      {
        "process_pid": 8505
      },
      {
        "process_pid": 9107
      },
      {
        "process_pid": 4873
      },
      {
        "process_pid": 2258
      },
      {
        "process_pid": 4661
      },
      {
        "process_pid": 4300
      },
      {
        "process_pid": 8002
      },
      {
        "process_pid": 8007
      },
      {
        "process_pid": 1027
      },
      {
        "process_pid": 3594
      },
      {
        "process_pid": 2900
      },
      {
        "process_pid": 3724
      },
      {
        "process_pid": 2745
      },
      {
        "process_pid": 6953
      },
      {
        "process_pid": 6421
      },
      {
        "process_pid": 7004
      },
      {
        "process_pid": 6922
      },
      {
        "process_pid": 4563
      },
      {
        "process_pid": 4515
      },
      {
        "process_pid": 7624
      },
      {
        "process_pid": 4416
      },
      {
        "process_pid": 3993
      },
      {
        "process_pid": 7490
      },
      {
        "process_pid": 9804
      },
      {
        "process_pid": 4537
      },
      {
        "process_pid": 9102
      },
      {
        "process_pid": 876
      },
      {
        "process_pid": 8658
      },
      {
        "process_pid": 708
      },
      {
        "process_pid": 2307
      },
      {
        "process_pid": 8849
      },
      {
        "process_pid": 4135
      },
      {
        "process_pid": 7609
      },
      {
        "process_pid": 1351
      },
      {
        "process_pid": 1237
      },
      {
        "process_pid": 7492
      },
      {
        "process_pid": 1737
      },
      {
        "process_pid": 7560
      },
      {
        "process_pid": 2872
      },
      {
        "process_pid": 9895
      },
      {
        "process_pid": 6877
      },
      {
        "process_pid": 4876
      },
      {
        "process_pid": 5606
      },
      {
        "process_pid": 7606
      },
      {
        "process_pid": 8603
      },
      {
        "process_pid": 6272
      },
      {
        "process_pid": 8937
      },
      {
        "process_pid": 8934
      },
      {
        "process_pid": 7791
      },
      {
        "process_pid": 4506
      },
      {
        "process_pid": 8722
      },
      {
        "process_pid": 2120
      },
      {
        "process_pid": 239
      },
      {
        "process_pid": 801
      },
      {
        "process_pid": 7322
      },
      {
        "process_pid": 8892
      },
      {
        "process_pid": 3053
      },
      {
        "process_pid": 9224
      },
      {
        "process_pid": 3137
      },
      {
        "process_pid": 5072
      },
      {
        "process_pid": 8317
      },
      {
        "process_pid": 4055
      },
      {
        "process_pid": 4210
      },
      {
        "process_pid": 6708
      },
      {
        "process_pid": 288
      },
      {
        "process_pid": 1961
      },
      {
        "process_pid": 5927
      },
      {
        "process_pid": 5093
      },
      {
        "process_pid": 4289
      },
      {
        "process_pid": 5698
      },
      {
        "process_pid": 5283
      },
      {
        "process_pid": 2273
      },
      {
        "process_pid": 5141
      },
      {
        "process_pid": 1225
      },
      {
        "process_pid": 2276
      },
      {
        "process_pid": 1706
      },
      {
        "process_pid": 6129
      },
      {
        "process_pid": 5616
      },
      {
        "process_pid": 2759
      },
      {
        "process_pid": 5267
      },
      {
        "process_pid": 5204
      },
      {
        "process_pid": 2146
      },
      {
        "process_pid": 4390
      },
      {
        "process_pid": 5785
      },
      {
        "process_pid": 7048
      },
      {
        "process_pid": 43
      },
      {
        "process_pid": 1120
      },
      {
        "process_pid": 708
      },
      {
        "process_pid": 6779
      },
      {
        "process_pid": 972
      },
      {
        "process_pid": 4097
      },
      {
        "process_pid": 1141
      },
      {
        "process_pid": 2467
      },
      {
        "process_pid": 5708
      },
      {
        "process_pid": 9412
      },
      {
        "process_pid": 5078
      },
      {
        "process_pid": 9707
      },
      {
        "process_pid": 3191
      },
      {
        "process_pid": 8870
      },
      {
        "process_pid": 2373
      },
      {
        "process_pid": 7627
      },
      {
        "process_pid": 690
      },
      {
        "process_pid": 322
      },
      {
        "process_pid": 3053
      },
      {
        "process_pid": 2135
      },
      {
        "process_pid": 7759
      },
      {
        "process_pid": 6550
      },
      {
        "process_pid": 7241
      },
      {
        "process_pid": 6055
      },
      {
        "process_pid": 3003
      },
      {
        "process_pid": 5256
      },
      {
        "process_pid": 7716
      },
      {
        "process_pid": 6185
      },
      {
        "process_pid": 6589
      },
      {
        "process_pid": 8936
      },
      {
        "process_pid": 3659
      },
      {
        "process_pid": 9868
      },
      {
        "process_pid": 2537
      },
      {
        "process_pid": 1994
      },
      {
        "process_pid": 4431
      },
      {
        "process_pid": 1479
      },
      {
        "process_pid": 6359
      },
      {
        "process_pid": 6734
      },
      {
        "process_pid": 7281
      },
      {
        "process_pid": 787
      },
      {
        "process_pid": 6231
      },
      {
        "process_pid": 2574
      },
      {
        "process_pid": 4783
      },
      {
        "process_pid": 5899
      },
      {
        "process_pid": 9604
      },
      {
        "process_pid": 2526
      },
      {
        "process_pid": 1191
      },
      {
        "process_pid": 366
      },
      {
        "process_pid": 2480
      },
      {
        "process_pid": 2085
      },
      {
        "process_pid": 3393
      },
      {
        "process_pid": 2660
      },
      {
        "process_pid": 5708
      },
      {
        "process_pid": 4893
      },
      {
        "process_pid": 3080
      },
      {
        "process_pid": 9703
      },
      {
        "process_pid": 5159
      },
      {
        "process_pid": 7068
      },
      {
        "process_pid": 7231
      },
      {
        "process_pid": 4896
      },
      {
        "process_pid": 7201
      },
      {
        "process_pid": 9763
      },
      {
        "process_pid": 1606
      },
      {
        "process_pid": 1876
      },
      {
        "process_pid": 6636
      },
      {
        "process_pid": 1380
      },
      {
        "process_pid": 2493
      },
      {
        "process_pid": 7723
      },
      {
        "process_pid": 357
      },
      {
        "process_pid": 2120
      },
      {
        "process_pid": 7934
      },
      {
        "process_pid": 2100
      },
      {
        "process_pid": 1204
      },
      {
        "process_pid": 3619
      },
      {
        "process_pid": 33
      },
      {
        "process_pid": 9460
      },
      {
        "process_pid": 472
      },
      {
        "process_pid": 9051
      },
      {
        "process_pid": 5694
      },
      {
        "process_pid": 4398
      },
      {
        "process_pid": 1512
      },
      {
        "process_pid": 8240
      },
      {
        "process_pid": 2881
      },
      {
        "process_pid": 4389
      },
      {
        "process_pid": 1054
      },
      {
        "process_pid": 5614
      },
      {
        "process_pid": 8890
      },
      {
        "process_pid": 3522
      },
      {
        "process_pid": 8620
      },
      {
        "process_pid": 331
      },
      {
        "process_pid": 8173
      },
      {
        "process_pid": 5701
      },
      {
        "process_pid": 3498
      },
      {
        "process_pid": 2303
      },
      {
        "process_pid": 2032
      },
      {
        "process_pid": 4216
      },
      {
        "process_pid": 8224
      },
      {
        "process_pid": 7454
      },
      {
        "process_pid": 9559
      },
      {
        "process_pid": 1330
      },
      {
        "process_pid": 1457
      },
      {
        "process_pid": 4371
      },
      {
        "process_pid": 2719
      },
      {
        "process_pid": 2105
      },
      {
        "process_pid": 7721
      },
      {
        "process_pid": 9483
      },
      {
        "process_pid": 6890
      },
      {
        "process_pid": 2667
      },
      {
        "process_pid": 2415
      },
      {
        "process_pid": 4890
      },
      {
        "process_pid": 9156
      },
      {
        "process_pid": 9228
      },
      {
        "process_pid": 9877
      },
      {
        "process_pid": 3559
      },
      {
        "process_pid": 8210
      },
      {
        "process_pid": 2436
      },
      {
        "process_pid": 6347
      },
      {
        "process_pid": 4412
      },
      {
        "process_pid": 9772
      },
      {
        "process_pid": 989
      },
      {
        "process_pid": 9234
      },
      {
        "process_pid": 7598
      },
      {
        "process_pid": 9433
      },
      {
        "process_pid": 9827
      },
      {
        "process_pid": 9664
      },
      {
        "process_pid": 5059
      },
      {
        "process_pid": 3111
      },
      {
        "process_pid": 5697
      },
      {
        "process_pid": 2218
      },
      {
        "process_pid": 306
      },
      {
        "process_pid": 248
      },
      {
        "process_pid": 4960
      },
      {
        "process_pid": 1601
      },
      {
        "process_pid": 2239
      },
      {
        "process_pid": 6325
      },
      {
        "process_pid": 1938
      },
      {
        "process_pid": 2957
      },
      {
        "process_pid": 9108
      },
      {
        "process_pid": 1806
      },
      {
        "process_pid": 3638
      },
      {
        "process_pid": 6847
      },
      {
        "process_pid": 6429
      },
      {
        "process_pid": 3997
      },
      {
        "process_pid": 8035
      },
      {
        "process_pid": 5191
      },
      {
        "process_pid": 9280
      },
      {
        "process_pid": 599
      },
      {
        "process_pid": 1933
      },
      {
        "process_pid": 6430
      },
      {
        "process_pid": 9706
      },
      {
        "process_pid": 1398
      },
      {
        "process_pid": 9318
      },
      {
        "process_pid": 7916
      },
      {
        "process_pid": 6267
      },
      {
        "process_pid": 521
      },
      {
        "process_pid": 9712
      },
      {
        "process_pid": 9798
      },
      {
        "process_pid": 578
      },
      {
        "process_pid": 3123
      },
      {
        "process_pid": 6446
      },
      {
        "process_pid": 416
      },
      {
        "process_pid": 3779
      },
      {
        "process_pid": 9782
      },
      {
        "process_pid": 2552
      },
      {
        "process_pid": 8494
      },
      {
        "process_pid": 9561
      },
      {
        "process_pid": 7583
      },
      {
        "process_pid": 5912
      },
      {
        "process_pid": 9176
      },
      {
        "process_pid": 311
      },
      {
        "process_pid": 780
      },
      {
        "process_pid": 7808
      },
      {
        "process_pid": 2036
      },
      {
        "process_pid": 7519
      },
      {
        "process_pid": 6761
      },
      {
        "process_pid": 8210
      },
      {
        "process_pid": 6823
      },
      {
        "process_pid": 3456
      },
      {
        "process_pid": 5289
      },
      {
        "process_pid": 2122
      },
      {
        "process_pid": 881
      },
      {
        "process_pid": 9461
      },
      {
        "process_pid": 3602
      },
      {
        "process_pid": 623
      },
      {
        "process_pid": 254
      },
      {
        "process_pid": 8595
      },
      {
        "process_pid": 9100
      },
      {
        "process_pid": 8790
      },
      {
        "process_pid": 3921
      },
      {
        "process_pid": 5787
      },
      {
        "process_pid": 7102
      },
      {
        "process_pid": 6723
      },
      {
        "process_pid": 6945
      },
      {
        "process_pid": 335
      },
      {
        "process_pid": 3865
      },
      {
        "process_pid": 8262
      },
      {
        "process_pid": 5365
      },
      {
        "process_pid": 2224
      },
      {
        "process_pid": 3795
      },
      {
        "process_pid": 9740
      },
      {
        "process_pid": 2909
      },
      {
        "process_pid": 9402
      },
      {
        "process_pid": 3988
      },
      {
        "process_pid": 885
      },
      {
        "process_pid": 7513
      },
      {
        "process_pid": 1590
      },
      {
        "process_pid": 8484
      },
      {
        "process_pid": 281
      },
      {
        "process_pid": 7664
      },
      {
        "process_pid": 8031
      },
      {
        "process_pid": 345
      },
      {
        "process_pid": 3007
      },
      {
        "process_pid": 9517
      },
      {
        "process_pid": 5210
      },
      {
        "process_pid": 545
      },
      {
        "process_pid": 7108
      },
      {
        "process_pid": 1982
      },
      {
        "process_pid": 9984
      },
      {
        "process_pid": 2791
      },
      {
        "process_pid": 732
      },
      {
        "process_pid": 7501
      },
      {
        "process_pid": 2652
      },
      {
        "process_pid": 2497
      },
      {
        "process_pid": 5037
      },
      {
        "process_pid": 7672
      },
      {
        "process_pid": 1203
      },
      {
        "process_pid": 2330
      },
      {
        "process_pid": 2920
      },
      {
        "process_pid": 5563
      },
      {
        "process_pid": 2167
      },
      {
        "process_pid": 320
      },
      {
        "process_pid": 3125
      },
      {
        "process_pid": 7379
      },
      {
        "process_pid": 1221
      },
      {
        "process_pid": 6668
      },
      {
        "process_pid": 6917
      },
      {
        "process_pid": 9729
      },
      {
        "process_pid": 5352
      },
      {
        "process_pid": 4186
      },
      {
        "process_pid": 7228
      },
      {
        "process_pid": 4764
      },
      {
        "process_pid": 9875
      },
      {
        "process_pid": 5178
      },
      {
        "process_pid": 93
      },
      {
        "process_pid": 13
      },
      {
        "process_pid": 7725
      },
      {
        "process_pid": 2533
      },
      {
        "process_pid": 8113
      },
      {
        "process_pid": 5789
      },
      {
        "process_pid": 1593
      },
      {
        "process_pid": 9333
      },
      {
        "process_pid": 3255
      },
      {
        "process_pid": 9721
      },
      {
        "process_pid": 447
      },
      {
        "process_pid": 1052
      },
      {
        "process_pid": 4996
      },
      {
        "process_pid": 5668
      },
      {
        "process_pid": 9002
      },
      {
        "process_pid": 5994
      },
      {
        "process_pid": 6756
      },
      {
        "process_pid": 3456
      },
      {
        "process_pid": 9067
      },
      {
        "process_pid": 180
      },
      {
        "process_pid": 8076
      },
      {
        "process_pid": 5373
      },
      {
        "process_pid": 6051
      },
      {
        "process_pid": 67
      },
      {
        "process_pid": 2564
      },
      {
        "process_pid": 3444
      },
      {
        "process_pid": 9882
      },
      {
        "process_pid": 8087
      },
      {
        "process_pid": 73
      },
      {
        "process_pid": 8414
      },
      {
        "process_pid": 9761
      },
      {
        "process_pid": 7883
      },
      {
        "process_pid": 9449
      },
      {
        "process_pid": 2821
      },
      {
        "process_pid": 7446
      },
      {
        "process_pid": 7308
      },
      {
        "process_pid": 6371
      },
      {
        "process_pid": 1323
      },
      {
        "process_pid": 9263
      },
      {
        "process_pid": 5427
      },
      {
        "process_pid": 733
      },
      {
        "process_pid": 874
      },
      {
        "process_pid": 9352
      },
      {
        "process_pid": 6694
      },
      {
        "process_pid": 8930
      },
      {
        "process_pid": 3125
      },
      {
        "process_pid": 6371
      },
      {
        "process_pid": 6588
      },
      {
        "process_pid": 1059
      },
      {
        "process_pid": 9703
      },
      {
        "process_pid": 4666
      },
      {
        "process_pid": 6334
      },
      {
        "process_pid": 4773
      },
      {
        "process_pid": 5069
      },
      {
        "process_pid": 8957
      },
      {
        "process_pid": 5202
      },
      {
        "process_pid": 6153
      },
      {
        "process_pid": 7637
      },
      {
        "process_pid": 9575
      },
      {
        "process_pid": 9142
      },
      {
        "process_pid": 4371
      },
      {
        "process_pid": 6687
      },
      {
        "process_pid": 5708
      },
      {
        "process_pid": 7478
      },
      {
        "process_pid": 7038
      },
      {
        "process_pid": 7451
      },
      {
        "process_pid": 8270
      },
      {
        "process_pid": 8708
      },
      {
        "process_pid": 1540
      },
      {
        "process_pid": 6637
      },
      {
        "process_pid": 9947
      },
      {
        "process_pid": 7311
      },
      {
        "process_pid": 8855
      },
      {
        "process_pid": 5166
      },
      {
        "process_pid": 3753
      },
      {
        "process_pid": 4153
      },
      {
        "process_pid": 6532
      },
      {
        "process_pid": 8396
      },
      {
        "process_pid": 2580
      },
      {
        "process_pid": 1496
      },
      {
        "process_pid": 8698
      },
      {
        "process_pid": 6120
      },
      {
        "process_pid": 1898
      },
      {
        "process_pid": 2808
      },
      {
        "process_pid": 9922
      },
      {
        "process_pid": 8163
      },
      {
        "process_pid": 7988
      },
      {
        "process_pid": 2027
      },
      {
        "process_pid": 6462
      },
      {
        "process_pid": 533
      },
      {
        "process_pid": 7763
      },
      {
        "process_pid": 4934
      },
      {
        "process_pid": 7125
      },
      {
        "process_pid": 2305
      },
      {
        "process_pid": 897
      },
      {
        "process_pid": 8041
      },
      {
        "process_pid": 7742
      },
      {
        "process_pid": 1277
      },
      {
        "process_pid": 594
      },
      {
        "process_pid": 6460
      },
      {
        "process_pid": 5261
      },
      {
        "process_pid": 2518
      },
      {
        "process_pid": 475
      },
      {
        "process_pid": 9055
      },
      {
        "process_pid": 923
      },
      {
        "process_pid": 7753
      },
      {
        "process_pid": 9569
      },
      {
        "process_pid": 7868
      },
      {
        "process_pid": 6726
      },
      {
        "process_pid": 2014
      },
      {
        "process_pid": 5413
      },
      {
        "process_pid": 3959
      },
      {
        "process_pid": 1190
      },
      {
        "process_pid": 2567
      },
      {
        "process_pid": 9287
      },
      {
        "process_pid": 7607
      },
      {
        "process_pid": 5166
      },
      {
        "process_pid": 2108
      },
      {
        "process_pid": 1608
      },
      {
        "process_pid": 8696
      },
      {
        "process_pid": 6012
      },
      {
        "process_pid": 7106
      },
      {
        "process_pid": 5831
      },
      {
        "process_pid": 5297
      },
      {
        "process_pid": 9230
      },
      {
        "process_pid": 6695
      },
      {
        "process_pid": 8349
      },
      {
        "process_pid": 9878
      },
      {
        "process_pid": 2352
      },
      {
        "process_pid": 8644
      },
      {
        "process_pid": 1790
      },
      {
        "process_pid": 9556
      },
      {
        "process_pid": 3819
      },
      {
        "process_pid": 4711
      },
      {
        "process_pid": 9921
      },
      {
        "process_pid": 8068
      },
      {
        "process_pid": 6851
      },
      {
        "process_pid": 5921
      },
      {
        "process_pid": 3005
      },
      {
        "process_pid": 7244
      },
      {
        "process_pid": 5541
      },
      {
        "process_pid": 9611
      },
      {
        "process_pid": 8028
      },
      {
        "process_pid": 6835
      },
      {
        "process_pid": 9726
      },
      {
        "process_pid": 1773
      },
      {
        "process_pid": 5486
      },
      {
        "process_pid": 9751
      },
      {
        "process_pid": 1752
      },
      {
        "process_pid": 1762
      },
      {
        "process_pid": 7727
      },
      {
        "process_pid": 6650
      },
      {
        "process_pid": 2701
      },
      {
        "process_pid": 2658
      },
      {
        "process_pid": 596
      },
      {
        "process_pid": 1399
      },
      {
        "process_pid": 9247
      },
      {
        "process_pid": 9702
      },
      {
        "process_pid": 6310
      },
      {
        "process_pid": 5364
      },
      {
        "process_pid": 1543
      },
      {
        "process_pid": 2530
      },
      {
        "process_pid": 4591
      },
      {
        "process_pid": 3350
      },
      {
        "process_pid": 6324
      },
      {
        "process_pid": 9210
      },
      {
        "process_pid": 1788
      },
      {
        "process_pid": 1823
      },
      {
        "process_pid": 8645
      },
      {
        "process_pid": 4929
      },
      {
        "process_pid": 8478
      },
      {
        "process_pid": 7276
      },
      {
        "process_pid": 1487
      },
      {
        "process_pid": 4488
      },
      {
        "process_pid": 5235
      },
      {
        "process_pid": 9776
      },
      {
        "process_pid": 6800
      },
      {
        "process_pid": 416
      },
      {
        "process_pid": 9620
      },
      {
        "process_pid": 5722
      },
      {
        "process_pid": 1721
      },
      {
        "process_pid": 2395
      },
      {
        "process_pid": 331
      },
      {
        "process_pid": 2567
      },
      {
        "process_pid": 9598
      },
      {
        "process_pid": 4161
      },
      {
        "process_pid": 3059
      },
      {
        "process_pid": 6984
      },
      {
        "process_pid": 8636
      },
      {
        "process_pid": 5742
      },
      {
        "process_pid": 9601
      },
      {
        "process_pid": 8281
      },
      {
        "process_pid": 8671
      },
      {
        "process_pid": 6882
      },
      {
        "process_pid": 5102
      },
      {
        "process_pid": 3874
      },
      {
        "process_pid": 9096
      },
      {
        "process_pid": 5817
      },
      {
        "process_pid": 9710
      },
      {
        "process_pid": 5204
      },
      {
        "process_pid": 8873
      },
      {
        "process_pid": 5522
      },
      {
        "process_pid": 2632
      },
      {
        "process_pid": 2994
      },
      {
        "process_pid": 868
      },
      {
        "process_pid": 9084
      },
      {
        "process_pid": 7
      },
      {
        "process_pid": 9332
      },
      {
        "process_pid": 3713
      },
      {
        "process_pid": 7006
      },
      {
        "process_pid": 8734
      },
      {
        "process_pid": 3924
      },
      {
        "process_pid": 4471
      },
      {
        "process_pid": 8644
      },
      {
        "process_pid": 8602
      },
      {
        "process_pid": 9635
      },
      {
        "process_pid": 631
      },
      {
        "process_pid": 5928
      },
      {
        "process_pid": 5607
      },
      {
        "process_pid": 3491
      },
      {
        "process_pid": 9639
      },
      {
        "process_pid": 5422
      },
      {
        "process_pid": 1830
      },
      {
        "process_pid": 219
      },
      {
        "process_pid": 1052
      },
      {
        "process_pid": 1481
      },
      {
        "process_pid": 5750
      },
      {
        "process_pid": 7857
      },
      {
        "process_pid": 8526
      },
      {
        "process_pid": 5717
      },
      {
        "process_pid": 6256
      },
      {
        "process_pid": 4775
      },
      {
        "process_pid": 486
      },
      {
        "process_pid": 5533
      },
      {
        "process_pid": 4208
      },
      {
        "process_pid": 4987
      },
      {
        "process_pid": 4799
      },
      {
        "process_pid": 2200
      },
      {
        "process_pid": 7759
      },
      {
        "process_pid": 4361
      },
      {
        "process_pid": 8547
      },
      {
        "process_pid": 6216
      },
      {
        "process_pid": 4758
      },
      {
        "process_pid": 1938
      },
      {
        "process_pid": 9017
      },
      {
        "process_pid": 9681
      },
      {
        "process_pid": 6988
      },
      {
        "process_pid": 4158
      },
      {
        "process_pid": 4638
      },
      {
        "process_pid": 242
      },
      {
        "process_pid": 6700
      },
      {
        "process_pid": 9228
      },
      {
        "process_pid": 3624
      },
      {
        "process_pid": 5337
      },
      {
        "process_pid": 6739
      },
      {
        "process_pid": 8185
      },
      {
        "process_pid": 2783
      },
      {
        "process_pid": 9681
      },
      {
        "process_pid": 6726
      },
      {
        "process_pid": 3041
      },
      {
        "process_pid": 8450
      },
      {
        "process_pid": 7728
      },
      {
        "process_pid": 3439
      },
      {
        "process_pid": 425
      },
      {
        "process_pid": 2930
      },
      {
        "process_pid": 3430
      },
      {
        "process_pid": 4521
      },
      {
        "process_pid": 8807
      },
      {
        "process_pid": 5350
      },
      {
        "process_pid": 4751
      },
      {
        "process_pid": 5541
      },
      {
        "process_pid": 8717
      },
      {
        "process_pid": 2670
      },
      {
        "process_pid": 5782
      },
      {
        "process_pid": 9294
      },
      {
        "process_pid": 9091
      },
      {
        "process_pid": 7468
      },
      {
        "process_pid": 4869
      },
      {
        "process_pid": 9963
      },
      {
        "process_pid": 3831
      },
      {
        "process_pid": 165
      },
      {
        "process_pid": 1693
      },
      {
        "process_pid": 7117
      },
      {
        "process_pid": 2109
      },
      {
        "process_pid": 1474
      },
      {
        "process_pid": 5929
      },
      {
        "process_pid": 9805
      },
      {
        "process_pid": 8052
      },
      {
        "process_pid": 7141
      },
      {
        "process_pid": 5476
      },
      {
        "process_pid": 2792
      },
      {
        "process_pid": 832
      },
      {
        "process_pid": 4857
      },
      {
        "process_pid": 8855
      },
      {
        "process_pid": 4290
      },
      {
        "process_pid": 474
      },
      {
        "process_pid": 4428
      },
      {
        "process_pid": 477
      },
      {
        "process_pid": 7497
      },
      {
        "process_pid": 9038
      },
      {
        "process_pid": 9006
      },
      {
        "process_pid": 3108
      },
      {
        "process_pid": 6503
      },
      {
        "process_pid": 6362
      },
      {
        "process_pid": 8432
      },
      {
        "process_pid": 2487
      },
      {
        "process_pid": 438
      },
      {
        "process_pid": 5597
      },
      {
        "process_pid": 9928
      },
      {
        "process_pid": 7441
      },
      {
        "process_pid": 5078
      },
      {
        "process_pid": 9755
      },
      {
        "process_pid": 8764
      },
      {
        "process_pid": 2563
      },
      {
        "process_pid": 9110
      },
      {
        "process_pid": 5023
      },
      {
        "process_pid": 3803
      },
      {
        "process_pid": 5929
      },
      {
        "process_pid": 3165
      },
      {
        "process_pid": 7994
      },
      {
        "process_pid": 944
      },
      {
        "process_pid": 6874
      },
      {
        "process_pid": 7787
      },
      {
        "process_pid": 5190
      },
      {
        "process_pid": 9148
      },
      {
        "process_pid": 1241
      },
      {
        "process_pid": 9353
      },
      {
        "process_pid": 9786
      },
      {
        "process_pid": 8898
      },
      {
        "process_pid": 5940
      },
      {
        "process_pid": 8872
      },
      {
        "process_pid": 7363
      },
      {
        "process_pid": 4342
      },
      {
        "process_pid": 3190
      },
      {
        "process_pid": 386
      },
      {
        "process_pid": 7277
      },
      {
        "process_pid": 1535
      },
      {
        "process_pid": 9990
      },
      {
        "process_pid": 5294
      },
      {
        "process_pid": 8798
      },
      {
        "process_pid": 3229
      },
      {
        "process_pid": 3069
      },
      {
        "process_pid": 5092
      },
      {
        "process_pid": 3697
      },
      {
        "process_pid": 1519
      },
      {
        "process_pid": 6156
      },
      {
        "process_pid": 1146
      },
      {
        "process_pid": 9087
      },
      {
        "process_pid": 8238
      },
      {
        "process_pid": 3735
      },
      {
        "process_pid": 2266
      },
      {
        "process_pid": 7284
      },
      {
        "process_pid": 2655
      },
      {
        "process_pid": 9915
      },
      {
        "process_pid": 9938
      },
      {
        "process_pid": 3544
      },
      {
        "process_pid": 4301
      },
      {
        "process_pid": 2787
      },
      {
        "process_pid": 8252
      },
      {
        "process_pid": 9512
      },
      {
        "process_pid": 5361
      },
      {
        "process_pid": 6751
      },
      {
        "process_pid": 1510
      },
      {
        "process_pid": 4864
      },
      {
        "process_pid": 3817
      },
      {
        "process_pid": 6088
      },
      {
        "process_pid": 4939
      },
      {
        "process_pid": 2222
      },
      {
        "process_pid": 5362
      },
      {
        "process_pid": 3596
      },
      {
        "process_pid": 6127
      },
      {
        "process_pid": 8246
      },
      {
        "process_pid": 3409
      },
      {
        "process_pid": 1684
      },
      {
        "process_pid": 5246
      },
      {
        "process_pid": 5811
      },
      {
        "process_pid": 7592
      },
      {
        "process_pid": 9659
      },
      {
        "process_pid": 4997
      },
      {
        "process_pid": 1710
      },
      {
        "process_pid": 5108
      },
      {
        "process_pid": 7582
      },
      {
        "process_pid": 3703
      },
      {
        "process_pid": 8769
      },
      {
        "process_pid": 7974
      },
      {
        "process_pid": 205
      },
      {
        "process_pid": 7202
      },
      {
        "process_pid": 8422
      },
      {
        "process_pid": 2818
      },
      {
        "process_pid": 4680
      },
      {
        "process_pid": 3674
      },
      {
        "process_pid": 4468
      },
      {
        "process_pid": 8496
      },
      {
        "process_pid": 3390
      },
      {
        "process_pid": 8515
      },
      {
        "process_pid": 5860
      },
      {
        "process_pid": 5728
      },
      {
        "process_pid": 1205
      },
      {
        "process_pid": 2704
      },
      {
        "process_pid": 6569
      },
      {
        "process_pid": 158
      },
      {
        "process_pid": 636
      },
      {
        "process_pid": 21
      },
      {
        "process_pid": 8084
      },
      {
        "process_pid": 6283
      },
      {
        "process_pid": 2214
      },
      {
        "process_pid": 7445
      },
      {
        "process_pid": 5068
      },
      {
        "process_pid": 1447
      },
      {
        "process_pid": 3954
      },
      {
        "process_pid": 7334
      },
      {
        "process_pid": 6037
      },
      {
        "process_pid": 3741
      },
      {
        "process_pid": 1273
      },
      {
        "process_pid": 3329
      },
      {
        "process_pid": 9041
      },
      {
        "process_pid": 6646
      },
      {
        "process_pid": 1566
      },
      {
        "process_pid": 1383
      },
      {
        "process_pid": 5558
      },
      {
        "process_pid": 2794
      },
      {
        "process_pid": 2224
      },
      {
        "process_pid": 6622
      },
      {
        "process_pid": 6016
      },
      {
        "process_pid": 7609
      },
      {
        "process_pid": 560
      },
      {
        "process_pid": 3335
      },
      {
        "process_pid": 5994
      },
      {
        "process_pid": 3095
      },
      {
        "process_pid": 145
      },
      {
        "process_pid": 1302
      },
      {
        "process_pid": 8512
      },
      {
        "process_pid": 8665
      },
      {
        "process_pid": 3553
      },
      {
        "process_pid": 9136
      },
      {
        "process_pid": 2395
      },
      {
        "process_pid": 7179
      },
      {
        "process_pid": 6565
      },
      {
        "process_pid": 3449
      },
      {
        "process_pid": 6524
      },
      {
        "process_pid": 4739
      },
      {
        "process_pid": 2411
      },
      {
        "process_pid": 4973
      },
      {
        "process_pid": 6799
      },
      {
        "process_pid": 220
      },
      {
        "process_pid": 5974
      },
      {
        "process_pid": 7706
      },
      {
        "process_pid": 1955
      },
      {
        "process_pid": 930
      },
      {
        "process_pid": 4125
      },
      {
        "process_pid": 4608
      },
      {
        "process_pid": 7757
      },
      {
        "process_pid": 5323
      },
      {
        "process_pid": 5260
      },
      {
        "process_pid": 3588
      },
      {
        "process_pid": 8922
      },
      {
        "process_pid": 3158
      },
      {
        "process_pid": 3318
      },
      {
        "process_pid": 1926
      },
      {
        "process_pid": 4365
      },
      {
        "process_pid": 5358
      },
      {
        "process_pid": 2275
      },
      {
        "process_pid": 4067
      },
      {
        "process_pid": 2244
      },
      {
        "process_pid": 7922
      },
      {
        "process_pid": 1561
      },
      {
        "process_pid": 5594
      },
      {
        "process_pid": 7006
      },
      {
        "process_pid": 8883
      },
      {
        "process_pid": 3901
      },
      {
        "process_pid": 2650
      },
      {
        "process_pid": 9771
      },
      {
        "process_pid": 7679
      },
      {
        "process_pid": 4285
      },
      {
        "process_pid": 5078
      },
      {
        "process_pid": 4742
      },
      {
        "process_pid": 4417
      },
      {
        "process_pid": 1652
      },
      {
        "process_pid": 9670
      },
      {
        "process_pid": 8342
      },
      {
        "process_pid": 2516
      },
      {
        "process_pid": 1610
      },
      {
        "process_pid": 9082
      },
      {
        "process_pid": 2909
      },
      {
        "process_pid": 5833
      },
      {
        "process_pid": 3404
      },
      {
        "process_pid": 7608
      },
      {
        "process_pid": 7123
      },
      {
        "process_pid": 8653
      },
      {
        "process_pid": 4789
      },
      {
        "process_pid": 5119
      },
      {
        "process_pid": 6198
      },
      {
        "process_pid": 796
      },
      {
        "process_pid": 5419
      },
      {
        "process_pid": 7655
      },
      {
        "process_pid": 1789
      },
      {
        "process_pid": 1969
      },
      {
        "process_pid": 990
      },
      {
        "process_pid": 9975
      },
      {
        "process_pid": 9723
      },
      {
        "process_pid": 8616
      },
      {
        "process_pid": 5444
      },
      {
        "process_pid": 4966
      },
      {
        "process_pid": 928
      },
      {
        "process_pid": 9187
      },
      {
        "process_pid": 8140
      },
      {
        "process_pid": 3498
      },
      {
        "process_pid": 4368
      },
      {
        "process_pid": 8696
      },
      {
        "process_pid": 5527
      },
      {
        "process_pid": 473
      },
      {
        "process_pid": 2184
      },
      {
        "process_pid": 875
      },
      {
        "process_pid": 500
      },
      {
        "process_pid": 4831
      },
      {
        "process_pid": 2131
      },
      {
        "process_pid": 2388
      },
      {
        "process_pid": 6935
      },
      {
        "process_pid": 3209
      },
      {
        "process_pid": 6679
      },
      {
        "process_pid": 7931
      },
      {
        "process_pid": 9704
      },
      {
        "process_pid": 9702
      },
      {
        "process_pid": 8433
      },
      {
        "process_pid": 1558
      },
      {
        "process_pid": 9627
      },
      {
        "process_pid": 8353
      },
      {
        "process_pid": 5844
      },
      {
        "process_pid": 7841
      },
      {
        "process_pid": 3663
      },
      {
        "process_pid": 5963
      },
      {
        "process_pid": 4683
      },
      {
        "process_pid": 1999
      },
      {
        "process_pid": 5663
      },
      {
        "process_pid": 8341
      },
      {
        "process_pid": 202
      },
      {
        "process_pid": 1747
      },
      {
        "process_pid": 9171
      },
      {
        "process_pid": 3662
      },
      {
        "process_pid": 9390
      },
      {
        "process_pid": 5550
      },
      {
        "process_pid": 2529
      },
      {
        "process_pid": 6036
      },
      {
        "process_pid": 1267
      },
      {
        "process_pid": 2722
      },
      {
        "process_pid": 9885
      },
      {
        "process_pid": 8529
      },
      {
        "process_pid": 742
      },
      {
        "process_pid": 9738
      },
      {
        "process_pid": 5850
      },
      {
        "process_pid": 5772
      },
      {
        "process_pid": 6974
      },
      {
        "process_pid": 2945
      },
      {
        "process_pid": 4328
      },
      {
        "process_pid": 2220
      },
      {
        "process_pid": 3398
      },
      {
        "process_pid": 9817
      },
      {
        "process_pid": 1401
      },
      {
        "process_pid": 6923
      },
      {
        "process_pid": 758
      },
      {
        "process_pid": 8030
      },
      {
        "process_pid": 487
      },
      {
        "process_pid": 2300
      },
      {
        "process_pid": 1083
      },
      {
        "process_pid": 2790
      },
      {
        "process_pid": 9959
      },
      {
        "process_pid": 52
      },
      {
        "process_pid": 4171
      },
      {
        "process_pid": 5469
      },
      {
        "process_pid": 4266
      },
      {
        "process_pid": 6852
      },
      {
        "process_pid": 8571
      },
      {
        "process_pid": 6794
      },
      {
        "process_pid": 689
      },
      {
        "process_pid": 5380
      },
      {
        "process_pid": 5629
      },
      {
        "process_pid": 5585
      },
      {
        "process_pid": 1108
      },
      {
        "process_pid": 4672
      },
      {
        "process_pid": 4702
      },
      {
        "process_pid": 33
      },
      {
        "process_pid": 4658
      },
      {
        "process_pid": 9400
      },
      {
        "process_pid": 2556
      },
      {
        "process_pid": 7643
      },
      {
        "process_pid": 9528
      },
      {
        "process_pid": 8614
      },
      {
        "process_pid": 1053
      },
      {
        "process_pid": 6741
      },
      {
        "process_pid": 5097
      },
      {
        "process_pid": 8554
      },
      {
        "process_pid": 8193
      },
      {
        "process_pid": 7003
      },
      {
        "process_pid": 9002
      },
      {
        "process_pid": 3257
      },
      {
        "process_pid": 1572
      },
      {
        "process_pid": 8313
      },
      {
        "process_pid": 4813
      },
      {
        "process_pid": 7239
      },
      {
        "process_pid": 6142
      },
      {
        "process_pid": 9484
      },
      {
        "process_pid": 5291
      },
      {
        "process_pid": 6040
      },
      {
        "process_pid": 0
      },
      {
        "process_pid": 9458
      },
      {
        "process_pid": 6667
      },
      {
        "process_pid": 8906
      },
      {
        "process_pid": 2883
      },
      {
        "process_pid": 1397
      },
      {
        "process_pid": 7673
      },
      {
        "process_pid": 8876
      },
      {
        "process_pid": 5011
      },
      {
        "process_pid": 2118
      },
      {
        "process_pid": 4572
      },
      {
        "process_pid": 1313
      },
      {
        "process_pid": 7212
      },
      {
        "process_pid": 5995
      },
      {
        "process_pid": 7332
      },
      {
        "process_pid": 246
      },
      {
        "process_pid": 1300
      },
      {
        "process_pid": 2986
      },
      {
        "process_pid": 3840
      },
      {
        "process_pid": 5650
      },
      {
        "process_pid": 2137
      },
      {
        "process_pid": 4242
      },
      {
        "process_pid": 3619
      },
      {
        "process_pid": 8820
      },
      {
        "process_pid": 7459
      },
      {
        "process_pid": 6635
      },
      {
        "process_pid": 2036
      },
      {
        "process_pid": 3656
      },
      {
        "process_pid": 1051
      },
      {
        "process_pid": 4974
      },
      {
        "process_pid": 5847
      },
      {
        "process_pid": 2048
      },
      {
        "process_pid": 6575
      },
      {
        "process_pid": 2836
      },
      {
        "process_pid": 8832
      },
      {
        "process_pid": 9486
      },
      {
        "process_pid": 2671
      },
      {
        "process_pid": 5699
      },
      {
        "process_pid": 2197
      },
      {
        "process_pid": 8010
      },
      {
        "process_pid": 8219
      },
      {
        "process_pid": 8544
      },
      {
        "process_pid": 9829
      },
      {
        "process_pid": 2089
      },
      {
        "process_pid": 3680
      },
      {
        "process_pid": 8549
      },
      {
        "process_pid": 3683
      },
      {
        "process_pid": 3216
      },
      {
        "process_pid": 1266
      },
      {
        "process_pid": 4957
      },
      {
        "process_pid": 8071
      },
      {
        "process_pid": 7310
      },
      {
        "process_pid": 9144
      },
      {
        "process_pid": 4473
      },
      {
        "process_pid": 9130
      },
      {
        "process_pid": 5337
      },
      {
        "process_pid": 1003
      },
      {
        "process_pid": 3653
      },
      {
        "process_pid": 9741
      },
      {
        "process_pid": 1891
      },
      {
        "process_pid": 440
      },
      {
        "process_pid": 7924
      },
      {
        "process_pid": 9792
      },
      {
        "process_pid": 4568
      },
      {
        "process_pid": 5044
      },
      {
        "process_pid": 5231
      },
      {
        "process_pid": 5891
      },
      {
        "process_pid": 9894
      },
      {
        "process_pid": 1655
      },
      {
        "process_pid": 5576
      },
      {
        "process_pid": 6644
      },
      {
        "process_pid": 212
      },
      {
        "process_pid": 3942
      },
      {
        "process_pid": 1420
      },
      {
        "process_pid": 2126
      },
      {
        "process_pid": 7969
      },
      {
        "process_pid": 529
      },
      {
        "process_pid": 818
      },
      {
        "process_pid": 6071
      },
      {
        "process_pid": 1446
      },
      {
        "process_pid": 2875
      },
      {
        "process_pid": 5098
      },
      {
        "process_pid": 6275
      },
      {
        "process_pid": 9418
      },
      {
        "process_pid": 6377
      },
      {
        "process_pid": 6878
      },
      {
        "process_pid": 8068
      },
      {
        "process_pid": 6101
      },
      {
        "process_pid": 4174
      },
      {
        "process_pid": 4082
      },
      {
        "process_pid": 3999
      },
      {
        "process_pid": 2088
      },
      {
        "process_pid": 2293
      },
      {
        "process_pid": 531
      },
      {
        "process_pid": 6816
      },
      {
        "process_pid": 7750
      },
      {
        "process_pid": 6723
      },
      {
        "process_pid": 1875
      },
      {
        "process_pid": 5116
      },
      {
        "process_pid": 2811
      },
      {
        "process_pid": 2607
      },
      {
        "process_pid": 4639
      },
      {
        "process_pid": 9385
      },
      {
        "process_pid": 9563
      },
      {
        "process_pid": 1409
      },
      {
        "process_pid": 6090
      },
      {
        "process_pid": 50
      },
      {
        "process_pid": 3535
      },
      {
        "process_pid": 2240
      },
      {
        "process_pid": 1816
      },
      {
        "process_pid": 5357
      },
      {
        "process_pid": 2411
      },
      {
        "process_pid": 1873
      },
      {
        "process_pid": 8496
      },
      {
        "process_pid": 6778
      },
      {
        "process_pid": 7565
      },
      {
        "process_pid": 1507
      },
      {
        "process_pid": 5718
      },
      {
        "process_pid": 2467
      },
      {
        "process_pid": 6675
      },
      {
        "process_pid": 8135
      },
      {
        "process_pid": 1569
      },
      {
        "process_pid": 6062
      },
      {
        "process_pid": 7812
      },
      {
        "process_pid": 7436
      },
      {
        "process_pid": 3766
      },
      {
        "process_pid": 5047
      },
      {
        "process_pid": 184
      },
      {
        "process_pid": 6895
      },
      {
        "process_pid": 5720
      },
      {
        "process_pid": 6729
      },
      {
        "process_pid": 5068
      },
      {
        "process_pid": 7648
      },
      {
        "process_pid": 6155
      },
      {
        "process_pid": 9767
      },
      {
        "process_pid": 3546
      },
      {
        "process_pid": 9407
      },
      {
        "process_pid": 5671
      },
      {
        "process_pid": 7205
      },
      {
        "process_pid": 3885
      },
      {
        "process_pid": 5965
      },
      {
        "process_pid": 368
      },
      {
        "process_pid": 6291
      },
      {
        "process_pid": 9737
      },
      {
        "process_pid": 6454
      },
      {
        "process_pid": 3968
      },
      {
        "process_pid": 4527
      },
      {
        "process_pid": 766
      },
      {
        "process_pid": 7445
      },
      {
        "process_pid": 9874
      },
      {
        "process_pid": 5613
      },
      {
        "process_pid": 1874
      },
      {
        "process_pid": 4476
      },
      {
        "process_pid": 4836
      },
      {
        "process_pid": 3767
      },
      {
        "process_pid": 4380
      },
      {
        "process_pid": 5554
      },
      {
        "process_pid": 1010
      },
      {
        "process_pid": 2318
      },
      {
        "process_pid": 8996
      },
      {
        "process_pid": 7022
      },
      {
        "process_pid": 1816
      },
      {
        "process_pid": 3794
      },
      {
        "process_pid": 2527
      },
      {
        "process_pid": 4083
      },
      {
        "process_pid": 7469
      },
      {
        "process_pid": 6728
      },
      {
        "process_pid": 6398
      },
      {
        "process_pid": 1371
      },
      {
        "process_pid": 3263
      },
      {
        "process_pid": 8501
      },
      {
        "process_pid": 7867
      },
      {
        "process_pid": 6836
      },
      {
        "process_pid": 160
      },
      {
        "process_pid": 8485
      },
      {
        "process_pid": 9699
      },
      {
        "process_pid": 6804
      },
      {
        "process_pid": 6599
      },
      {
        "process_pid": 1286
      },
      {
        "process_pid": 6681
      },
      {
        "process_pid": 7216
      },
      {
        "process_pid": 9254
      },
      {
        "process_pid": 9320
      },
      {
        "process_pid": 8792
      },
      {
        "process_pid": 6793
      },
      {
        "process_pid": 7374
      },
      {
        "process_pid": 148
      },
      {
        "process_pid": 27
      },
      {
        "process_pid": 7913
      },
      {
        "process_pid": 3970
      },
      {
        "process_pid": 4250
      },
      {
        "process_pid": 7377
      },
      {
        "process_pid": 2806
      },
      {
        "process_pid": 6003
      },
      {
        "process_pid": 3788
      },
      {
        "process_pid": 6385
      },
      {
        "process_pid": 5813
      },
      {
        "process_pid": 3841
      },
      {
        "process_pid": 8
      },
      {
        "process_pid": 181
      },
      {
        "process_pid": 944
      },
      {
        "process_pid": 6386
      },
      {
        "process_pid": 2026
      },
      {
        "process_pid": 3510
      },
      {
        "process_pid": 4416
      },
      {
        "process_pid": 8565
      },
      {
        "process_pid": 4133
      },
      {
        "process_pid": 8899
      },
      {
        "process_pid": 9715
      },
      {
        "process_pid": 4258
      },
      {
        "process_pid": 9582
      },
      {
        "process_pid": 1064
      },
      {
        "process_pid": 3928
      },
      {
        "process_pid": 7685
      },
      {
        "process_pid": 5560
      },
      {
        "process_pid": 1160
      },
      {
        "process_pid": 6361
      },
      {
        "process_pid": 385
      },
      {
        "process_pid": 4826
      },
      {
        "process_pid": 9940
      },
      {
        "process_pid": 1330
      },
      {
        "process_pid": 9046
      },
      {
        "process_pid": 2767
      },
      {
        "process_pid": 4582
      },
      {
        "process_pid": 4122
      },
      {
        "process_pid": 1972
      },
      {
        "process_pid": 2211
      },
      {
        "process_pid": 5371
      },
      {
        "process_pid": 567
      },
      {
        "process_pid": 140
      },
      {
        "process_pid": 5840
      },
      {
        "process_pid": 3539
      },
      {
        "process_pid": 1493
      },
      {
        "process_pid": 3687
      },
      {
        "process_pid": 6523
      },
      {
        "process_pid": 1801
      },
      {
        "process_pid": 966
      },
      {
        "process_pid": 6682
      },
      {
        "process_pid": 7962
      },
      {
        "process_pid": 7171
      },
      {
        "process_pid": 1083
      },
      {
        "process_pid": 9553
      },
      {
        "process_pid": 4349
      },
      {
        "process_pid": 5814
      },
      {
        "process_pid": 4927
      },
      {
        "process_pid": 3494
      },
      {
        "process_pid": 5043
      },
      {
        "process_pid": 2936
      },
      {
        "process_pid": 6919
      },
      {
        "process_pid": 8865
      },
      {
        "process_pid": 7273
      },
      {
        "process_pid": 5366
      },
      {
        "process_pid": 6449
      },
      {
        "process_pid": 7934
      },
      {
        "process_pid": 6424
      },
      {
        "process_pid": 4176
      },
      {
        "process_pid": 3134
      },
      {
        "process_pid": 5778
      },
      {
        "process_pid": 2660
      },
      {
        "process_pid": 3572
      },
      {
        "process_pid": 7952
      },
      {
        "process_pid": 3503
      },
      {
        "process_pid": 9242
      },
      {
        "process_pid": 1802
      },
      {
        "process_pid": 8631
      },
      {
        "process_pid": 155
      },
      {
        "process_pid": 3611
      },
      {
        "process_pid": 8228
      },
      {
        "process_pid": 5653
      },
      {
        "process_pid": 5020
      },
      {
        "process_pid": 5369
      },
      {
        "process_pid": 1163
      },
      {
        "process_pid": 9636
      },
      {
        "process_pid": 1493
      },
      {
        "process_pid": 1397
      },
      {
        "process_pid": 2277
      },
      {
        "process_pid": 2818
      },
      {
        "process_pid": 3437
      },
      {
        "process_pid": 333
      },
      {
        "process_pid": 5627
      },
      {
        "process_pid": 7548
      },
      {
        "process_pid": 7946
      },
      {
        "process_pid": 2678
      },
      {
        "process_pid": 9675
      },
      {
        "process_pid": 6274
      },
      {
        "process_pid": 2368
      },
      {
        "process_pid": 3250
      },
      {
        "process_pid": 8993
      },
      {
        "process_pid": 8558
      },
      {
        "process_pid": 907
      },
      {
        "process_pid": 2118
      },
      {
        "process_pid": 2028
      },
      {
        "process_pid": 7173
      },
      {
        "process_pid": 2060
      },
      {
        "process_pid": 4656
      },
      {
        "process_pid": 4228
      },
      {
        "process_pid": 3081
      },
      {
        "process_pid": 8211
      },
      {
        "process_pid": 8998
      },
      {
        "process_pid": 8514
      },
      {
        "process_pid": 6400
      },
      {
        "process_pid": 764
      },
      {
        "process_pid": 8461
      },
      {
        "process_pid": 8672
      },
      {
        "process_pid": 2694
      },
      {
        "process_pid": 2714
      },
      {
        "process_pid": 5789
      },
      {
        "process_pid": 433
      },
      {
        "process_pid": 9769
      },
      {
        "process_pid": 6753
      },
      {
        "process_pid": 7284
      },
      {
        "process_pid": 6394
      },
      {
        "process_pid": 1105
      },
      {
        "process_pid": 2804
      },
      {
        "process_pid": 7611
      },
      {
        "process_pid": 6820
      },
      {
        "process_pid": 8287
      },
      {
        "process_pid": 5543
      },
      {
        "process_pid": 8144
      },
      {
        "process_pid": 7555
      },
      {
        "process_pid": 9481
      },
      {
        "process_pid": 9127
      },
      {
        "process_pid": 968
      },
      {
        "process_pid": 633
      },
      {
        "process_pid": 3870
      },
      {
        "process_pid": 3123
      },
      {
        "process_pid": 9823
      },
      {
        "process_pid": 5517
      },
      {
        "process_pid": 3166
      },
      {
        "process_pid": 5340
      },
      {
        "process_pid": 5030
      },
      {
        "process_pid": 6792
      },
      {
        "process_pid": 9885
      },
      {
        "process_pid": 2197
      },
      {
        "process_pid": 2406
      },
      {
        "process_pid": 5696
      },
      {
        "process_pid": 3029
      },
      {
        "process_pid": 3958
      },
      {
        "process_pid": 1152
      },
      {
        "process_pid": 8984
      },
      {
        "process_pid": 7700
      },
      {
        "process_pid": 8854
      },
      {
        "process_pid": 18
      },
      {
        "process_pid": 2536
      },
      {
        "process_pid": 4930
      },
      {
        "process_pid": 7054
      },
      {
        "process_pid": 7887
      },
      {
        "process_pid": 857
      },
      {
        "process_pid": 7199
      },
      {
        "process_pid": 6646
      },
      {
        "process_pid": 3622
      },
      {
        "process_pid": 5611
      },
      {
        "process_pid": 4244
      },
      {
        "process_pid": 7914
      },
      {
        "process_pid": 9388
      },
      {
        "process_pid": 1004
      },
      {
        "process_pid": 2296
      },
      {
        "process_pid": 3721
      },
      {
        "process_pid": 7712
      },
      {
        "process_pid": 2615
      },
      {
        "process_pid": 8264
      },
      {
        "process_pid": 5520
      },
      {
        "process_pid": 4766
      },
      {
        "process_pid": 1266
      },
      {
        "process_pid": 8059
      },
      {
        "process_pid": 557
      },
      {
        "process_pid": 105
      },
      {
        "process_pid": 7273
      },
      {
        "process_pid": 2613
      },
      {
        "process_pid": 6228
      },
      {
        "process_pid": 7152
      },
      {
        "process_pid": 9168
      },
      {
        "process_pid": 5242
      },
      {
        "process_pid": 5336
      },
      {
        "process_pid": 9977
      },
      {
        "process_pid": 910
      },
      {
        "process_pid": 1211
      },
      {
        "process_pid": 710
      },
      {
        "process_pid": 335
      },
      {
        "process_pid": 4659
      },
      {
        "process_pid": 7503
      },
      {
        "process_pid": 3634
      },
      {
        "process_pid": 6884
      },
      {
        "process_pid": 2175
      },
      {
        "process_pid": 8855
      },
      {
        "process_pid": 3465
      },
      {
        "process_pid": 2868
      },
      {
        "process_pid": 1416
      },
      {
        "process_pid": 8426
      },
      {
        "process_pid": 5362
      },
      {
        "process_pid": 5478
      },
      {
        "process_pid": 3394
      },
      {
        "process_pid": 893
      },
      {
        "process_pid": 9989
      },
      {
        "process_pid": 9866
      },
      {
        "process_pid": 854
      },
      {
        "process_pid": 8060
      },
      {
        "process_pid": 9381
      },
      {
        "process_pid": 8798
      },
      {
        "process_pid": 8164
      },
      {
        "process_pid": 3293
      },
      {
        "process_pid": 6274
      },
      {
        "process_pid": 3506
      },
      {
        "process_pid": 4354
      },
      {
        "process_pid": 8441
      },
      {
        "process_pid": 3132
      },
      {
        "process_pid": 9373
      },
      {
        "process_pid": 61
      },
      {
        "process_pid": 9622
      },
      {
        "process_pid": 4328
      },
      {
        "process_pid": 8983
      },
      {
        "process_pid": 2015
      },
      {
        "process_pid": 8706
      },
      {
        "process_pid": 8088
      },
      {
        "process_pid": 509
      },
      {
        "process_pid": 2399
      },
      {
        "process_pid": 1599
      },
      {
        "process_pid": 7960
      },
      {
        "process_pid": 7019
      },
      {
        "process_pid": 7104
      },
      {
        "process_pid": 3151
      },
      {
        "process_pid": 3686
      },
      {
        "process_pid": 1966
      },
      {
        "process_pid": 6689
      },
      {
        "process_pid": 3944
      },
      {
        "process_pid": 953
      },
      {
        "process_pid": 803
      },
      {
        "process_pid": 1649
      },
      {
        "process_pid": 3875
      },
      {
        "process_pid": 4114
      },
      {
        "process_pid": 3257
      },
      {
        "process_pid": 4664
      },
      {
        "process_pid": 5793
      },
      {
        "process_pid": 411
      },
      {
        "process_pid": 5208
      },
      {
        "process_pid": 5394
      },
      {
        "process_pid": 2726
      },
      {
        "process_pid": 2067
      },
      {
        "process_pid": 4136
      },
      {
        "process_pid": 208
      },
      {
        "process_pid": 9400
      },
      {
        "process_pid": 1187
      },
      {
        "process_pid": 6374
      },
      {
        "process_pid": 9611
      },
      {
        "process_pid": 9675
      },
      {
        "process_pid": 8229
      },
      {
        "process_pid": 6073
      },
      {
        "process_pid": 3076
      },
      {
        "process_pid": 8241
      },
      {
        "process_pid": 8037
      },
      {
        "process_pid": 386
      },
      {
        "process_pid": 206
      },
      {
        "process_pid": 895
      },
      {
        "process_pid": 479
      },
      {
        "process_pid": 1430
      },
      {
        "process_pid": 8873
      },
      {
        "process_pid": 5787
      },
      {
        "process_pid": 1239
      },
      {
        "process_pid": 3264
      },
      {
        "process_pid": 7225
      },
      {
        "process_pid": 7654
      },
      {
        "process_pid": 1417
      },
      {
        "process_pid": 3554
      },
      {
        "process_pid": 8988
      },
      {
        "process_pid": 8346
      },
      {
        "process_pid": 1609
      },
      {
        "process_pid": 2537
      },
      {
        "process_pid": 1328
      },
      {
        "process_pid": 7663
      },
      {
        "process_pid": 169
      },
      {
        "process_pid": 2673
      },
      {
        "process_pid": 7235
      },
      {
        "process_pid": 6813
      },
      {
        "process_pid": 8662
      },
      {
        "process_pid": 7179
      },
      {
        "process_pid": 9905
      },
      {
        "process_pid": 7571
      },
      {
        "process_pid": 459
      },
      {
        "process_pid": 1022
      },
      {
        "process_pid": 7166
      },
      {
        "process_pid": 4902
      },
      {
        "process_pid": 5914
      },
      {
        "process_pid": 3080
      },
      {
        "process_pid": 7569
      },
      {
        "process_pid": 6280
      },
      {
        "process_pid": 9927
      },
      {
        "process_pid": 7364
      },
      {
        "process_pid": 8138
      },
      {
        "process_pid": 9976
      },
      {
        "process_pid": 4138
      },
      {
        "process_pid": 4068
      },
      {
        "process_pid": 1224
      },
      {
        "process_pid": 2947
      },
      {
        "process_pid": 1755
      },
      {
        "process_pid": 6280
      },
      {
        "process_pid": 3457
      },
      {
        "process_pid": 1732
      },
      {
        "process_pid": 8900
      },
      {
        "process_pid": 6022
      },
      {
        "process_pid": 2035
      },
      {
        "process_pid": 5043
      },
      {
        "process_pid": 9842
      },
      {
        "process_pid": 5942
      },
      {
        "process_pid": 3937
      },
      {
        "process_pid": 2023
      },
      {
        "process_pid": 9634
      },
      {
        "process_pid": 4219
      },
      {
        "process_pid": 2094
      },
      {
        "process_pid": 2082
      },
      {
        "process_pid": 4117
      },
      {
        "process_pid": 3366
      },
      {
        "process_pid": 5719
      },
      {
        "process_pid": 8159
      },
      {
        "process_pid": 8458
      },
      {
        "process_pid": 5517
      },
      {
        "process_pid": 6009
      },
      {
        "process_pid": 7617
      },
      {
        "process_pid": 6447
      },
      {
        "process_pid": 3563
      },
      {
        "process_pid": 1477
      },
      {
        "process_pid": 6220
      },
      {
        "process_pid": 3233
      },
      {
        "process_pid": 900
      },
      {
        "process_pid": 1592
      },
      {
        "process_pid": 893
      },
      {
        "process_pid": 5079
      },
      {
        "process_pid": 6659
      },
      {
        "process_pid": 5393
      },
      {
        "process_pid": 1063
      },
      {
        "process_pid": 3033
      },
      {
        "process_pid": 3621
      },
      {
        "process_pid": 5091
      },
      {
        "process_pid": 6312
      },
      {
        "process_pid": 3382
      },
      {
        "process_pid": 8637
      },
      {
        "process_pid": 8584
      },
      {
        "process_pid": 175
      },
      {
        "process_pid": 1736
      },
      {
        "process_pid": 5717
      },
      {
        "process_pid": 2836
      },
      {
        "process_pid": 8272
      },
      {
        "process_pid": 3256
      },
      {
        "process_pid": 6182
      },
      {
        "process_pid": 6503
      },
      {
        "process_pid": 9012
      },
      {
        "process_pid": 7495
      },
      {
        "process_pid": 6362
      },
      {
        "process_pid": 5124
      },
      {
        "process_pid": 4669
      },
      {
        "process_pid": 5208
      },
      {
        "process_pid": 8984
      },
      {
        "process_pid": 5210
      },
      {
        "process_pid": 9717
      },
      {
        "process_pid": 4962
      },
      {
        "process_pid": 1834
      },
      {
        "process_pid": 5212
      },
      {
        "process_pid": 8019
      },
      {
        "process_pid": 9258
      },
      {
        "process_pid": 5321
      },
      {
        "process_pid": 8490
      },
      {
        "process_pid": 7760
      },
      {
        "process_pid": 624
      },
      {
        "process_pid": 7251
      },
      {
        "process_pid": 3770
      },
      {
        "process_pid": 7847
      },
      {
        "process_pid": 9678
      },
      {
        "process_pid": 8122
      },
      {
        "process_pid": 1548
      },
      {
        "process_pid": 7646
      },
      {
        "process_pid": 7412
      },
      {
        "process_pid": 5588
      },
      {
        "process_pid": 1586
      },
      {
        "process_pid": 1196
      },
      {
        "process_pid": 1493
      },
      {
        "process_pid": 4639
      },
      {
        "process_pid": 714
      },
      {
        "process_pid": 9310
      },
      {
        "process_pid": 2808
      },
      {
        "process_pid": 4416
      },
      {
        "process_pid": 5982
      },
      {
        "process_pid": 8891
      },
      {
        "process_pid": 1507
      },
      {
        "process_pid": 9362
      },
      {
        "process_pid": 8484
      },
      {
        "process_pid": 3124
      },
      {
        "process_pid": 4398
      },
      {
        "process_pid": 8097
      },
      {
        "process_pid": 6433
      },
      {
        "process_pid": 5217
      },
      {
        "process_pid": 5219
      },
      {
        "process_pid": 5064
      },
      {
        "process_pid": 314
      },
      {
        "process_pid": 8323
      },
      {
        "process_pid": 825
      },
      {
        "process_pid": 2927
      },
      {
        "process_pid": 4826
      },
      {
        "process_pid": 5980
      },
      {
        "process_pid": 3213
      },
      {
        "process_pid": 8461
      },
      {
        "process_pid": 9374
      },
      {
        "process_pid": 5410
      },
      {
        "process_pid": 3420
      },
      {
        "process_pid": 9155
      },
      {
        "process_pid": 8137
      },
      {
        "process_pid": 694
      },
      {
        "process_pid": 1306
      },
      {
        "process_pid": 6852
      },
      {
        "process_pid": 18
      },
      {
        "process_pid": 1813
      },
      {
        "process_pid": 2633
      },
      {
        "process_pid": 4435
      },
      {
        "process_pid": 3191
      },
      {
        "process_pid": 197
      },
      {
        "process_pid": 2629
      },
      {
        "process_pid": 8488
      },
      {
        "process_pid": 44
      },
      {
        "process_pid": 4251
      },
      {
        "process_pid": 4746
      },
      {
        "process_pid": 7394
      },
      {
        "process_pid": 5924
      },
      {
        "process_pid": 2491
      },
      {
        "process_pid": 6217
      },
      {
        "process_pid": 1806
      },
      {
        "process_pid": 7765
      },
      {
        "process_pid": 3264
      },
      {
        "process_pid": 4402
      },
      {
        "process_pid": 4877
      },
      {
        "process_pid": 8080
      },
      {
        "process_pid": 6272
      },
      {
        "process_pid": 3132
      },
      {
        "process_pid": 2013
      },
      {
        "process_pid": 8063
      },
      {
        "process_pid": 1593
      },
      {
        "process_pid": 445
      },
      {
        "process_pid": 7334
      },
      {
        "process_pid": 7133
      },
      {
        "process_pid": 2527
      },
      {
        "process_pid": 6104
      },
      {
        "process_pid": 1793
      },
      {
        "process_pid": 1082
      },
      {
        "process_pid": 2028
      },
      {
        "process_pid": 6170
      },
      {
        "process_pid": 6184
      },
      {
        "process_pid": 4570
      },
      {
        "process_pid": 4834
      },
      {
        "process_pid": 5565
      },
      {
        "process_pid": 1680
      },
      {
        "process_pid": 5844
      },
      {
        "process_pid": 8779
      },
      {
        "process_pid": 3491
      },
      {
        "process_pid": 4078
      },
      {
        "process_pid": 7927
      },
      {
        "process_pid": 8075
      },
      {
        "process_pid": 3640
      },
      {
        "process_pid": 2076
      },
      {
        "process_pid": 6322
      },
      {
        "process_pid": 577
      },
      {
        "process_pid": 41
      },
      {
        "process_pid": 487
      },
      {
        "process_pid": 2802
      },
      {
        "process_pid": 3154
      },
      {
        "process_pid": 2007
      },
      {
        "process_pid": 2306
      },
      {
        "process_pid": 209
      },
      {
        "process_pid": 4268
      },
      {
        "process_pid": 2910
      },
      {
        "process_pid": 2520
      },
      {
        "process_pid": 1812
      },
      {
        "process_pid": 815
      },
      {
        "process_pid": 4509
      },
      {
        "process_pid": 7494
      },
      {
        "process_pid": 1252
      },
      {
        "process_pid": 8820
      },
      {
        "process_pid": 9225
      },
      {
        "process_pid": 6303
      },
      {
        "process_pid": 6132
      },
      {
        "process_pid": 1580
      },
      {
        "process_pid": 1842
      },
      {
        "process_pid": 255
      },
      {
        "process_pid": 7038
      },
      {
        "process_pid": 5653
      },
      {
        "process_pid": 6038
      },
      {
        "process_pid": 8739
      },
      {
        "process_pid": 2550
      },
      {
        "process_pid": 2516
      },
      {
        "process_pid": 3011
      },
      {
        "process_pid": 1020
      },
      {
        "process_pid": 5327
      },
      {
        "process_pid": 1400
      },
      {
        "process_pid": 6189
      },
      {
        "process_pid": 6906
      },
      {
        "process_pid": 1103
      },
      {
        "process_pid": 9990
      },
      {
        "process_pid": 9684
      },
      {
        "process_pid": 1888
      },
      {
        "process_pid": 1042
      },
      {
        "process_pid": 784
      },
      {
        "process_pid": 4125
      },
      {
        "process_pid": 312
      },
      {
        "process_pid": 9844
      },
      {
        "process_pid": 7546
      },
      {
        "process_pid": 9802
      },
      {
        "process_pid": 3989
      },
      {
        "process_pid": 7546
      },
      {
        "process_pid": 8897
      },
      {
        "process_pid": 2644
      },
      {
        "process_pid": 8258
      },
      {
        "process_pid": 7279
      },
      {
        "process_pid": 3701
      },
      {
        "process_pid": 7086
      },
      {
        "process_pid": 7119
      },
      {
        "process_pid": 9058
      },
      {
        "process_pid": 8055
      },
      {
        "process_pid": 8866
      },
      {
        "process_pid": 1544
      },
      {
        "process_pid": 9286
      },
      {
        "process_pid": 6138
      },
      {
        "process_pid": 2231
      },
      {
        "process_pid": 93
      },
      {
        "process_pid": 5847
      },
      {
        "process_pid": 4252
      },
      {
        "process_pid": 936
      },
      {
        "process_pid": 1838
      },
      {
        "process_pid": 7352
      },
      {
        "process_pid": 1271
      },
      {
        "process_pid": 1749
      },
      {
        "process_pid": 4445
      },
      {
        "process_pid": 8289
      },
      {
        "process_pid": 7340
      },
      {
        "process_pid": 3317
      },
      {
        "process_pid": 3262
      },
      {
        "process_pid": 3352
      },
      {
        "process_pid": 5237
      },
      {
        "process_pid": 2967
      },
      {
        "process_pid": 6972
      },
      {
        "process_pid": 6004
      },
      {
        "process_pid": 1982
      },
      {
        "process_pid": 4154
      },
      {
        "process_pid": 6257
      },
      {
        "process_pid": 4753
      },
      {
        "process_pid": 4138
      },
      {
        "process_pid": 4112
      },
      {
        "process_pid": 2261
      },
      {
        "process_pid": 4169
      },
      {
        "process_pid": 3326
      },
      {
        "process_pid": 1763
      },
      {
        "process_pid": 2631
      },
      {
        "process_pid": 108
      },
      {
        "process_pid": 5700
      },
      {
        "process_pid": 8976
      },
      {
        "process_pid": 8826
      },
      {
        "process_pid": 1387
      },
      {
        "process_pid": 3551
      },
      {
        "process_pid": 4696
      },
      {
        "process_pid": 8453
      },
      {
        "process_pid": 3128
      },
      {
        "process_pid": 2744
      },
      {
        "process_pid": 1971
      },
      {
        "process_pid": 2196
      },
      {
        "process_pid": 6142
      },
      {
        "process_pid": 3587
      },
      {
        "process_pid": 9854
      },
      {
        "process_pid": 5647
      },
      {
        "process_pid": 5250
      },
      {
        "process_pid": 7417
      },
      {
        "process_pid": 9280
      },
      {
        "process_pid": 133
      },
      {
        "process_pid": 8445
      },
      {
        "process_pid": 4583
      },
      {
        "process_pid": 7032
      },
      {
        "process_pid": 2783
      },
      {
        "process_pid": 9020
      },
      {
        "process_pid": 5182
      },
      {
        "process_pid": 2790
      },
      {
        "process_pid": 927
      },
      {
        "process_pid": 3461
      },
      {
        "process_pid": 6637
      },
      {
        "process_pid": 4088
      },
      {
        "process_pid": 5431
      },
      {
        "process_pid": 6799
      },
      {
        "process_pid": 928
      },
      {
        "process_pid": 5120
      },
      {
        "process_pid": 6003
      },
      {
        "process_pid": 1839
      },
      {
        "process_pid": 9290
      },
      {
        "process_pid": 1121
      },
      {
        "process_pid": 8752
      },
      {
        "process_pid": 4196
      },
      {
        "process_pid": 248
      },
      {
        "process_pid": 2458
      },
      {
        "process_pid": 645
      },
      {
        "process_pid": 674
      },
      {
        "process_pid": 4436
      },
      {
        "process_pid": 2357
      },
      {
        "process_pid": 4511
      },
      {
        "process_pid": 6665
      },
      {
        "process_pid": 153
      },
      {
        "process_pid": 8543
      },
      {
        "process_pid": 9482
      },
      {
        "process_pid": 657
      },
      {
        "process_pid": 3578
      },
      {
        "process_pid": 3732
      },
      {
        "process_pid": 8347
      },
      {
        "process_pid": 2140
      },
      {
        "process_pid": 2447
      },
      {
        "process_pid": 714
      },
      {
        "process_pid": 7312
      },
      {
        "process_pid": 4001
      },
      {
        "process_pid": 4276
      },
      {
        "process_pid": 5008
      },
      {
        "process_pid": 2261
      },
      {
        "process_pid": 894
      },
      {
        "process_pid": 1151
      },
      {
        "process_pid": 4271
      },
      {
        "process_pid": 9042
      },
      {
        "process_pid": 1331
      },
      {
        "process_pid": 3433
      },
      {
        "process_pid": 4448
      },
      {
        "process_pid": 5072
      },
      {
        "process_pid": 4831
      },
      {
        "process_pid": 2450
      },
      {
        "process_pid": 9377
      },
      {
        "process_pid": 3314
      },
      {
        "process_pid": 6999
      },
      {
        "process_pid": 9288
      },
      {
        "process_pid": 1974
      },
      {
        "process_pid": 9249
      },
      {
        "process_pid": 7697
      },
      {
        "process_pid": 9674
      },
      {
        "process_pid": 8371
      },
      {
        "process_pid": 1298
      },
      {
        "process_pid": 3815
      },
      {
        "process_pid": 6670
      },
      {
        "process_pid": 3692
      },
      {
        "process_pid": 8226
      },
      {
        "process_pid": 7190
      },
      {
        "process_pid": 3849
      },
      {
        "process_pid": 3410
      },
      {
        "process_pid": 9806
      },
      {
        "process_pid": 8527
      },
      {
        "process_pid": 1985
      },
      {
        "process_pid": 5360
      },
      {
        "process_pid": 7544
      },
      {
        "process_pid": 3960
      },
      {
        "process_pid": 8627
      },
      {
        "process_pid": 9744
      },
      {
        "process_pid": 6542
      },
      {
        "process_pid": 5451
      },
      {
        "process_pid": 6832
      },
      {
        "process_pid": 6623
      },
      {
        "process_pid": 7371
      },
      {
        "process_pid": 4875
      },
      {
        "process_pid": 6060
      },
      {
        "process_pid": 1066
      },
      {
        "process_pid": 3543
      },
      {
        "process_pid": 6297
      },
      {
        "process_pid": 2735
      },
      {
        "process_pid": 1403
      },
      {
        "process_pid": 9340
      },
      {
        "process_pid": 4382
      },
      {
        "process_pid": 5590
      },
      {
        "process_pid": 6924
      },
      {
        "process_pid": 4879
      },
      {
        "process_pid": 8290
      },
      {
        "process_pid": 978
      },
      {
        "process_pid": 6901
      },
      {
        "process_pid": 7987
      },
      {
        "process_pid": 2350
      },
      {
        "process_pid": 1020
      },
      {
        "process_pid": 2616
      },
      {
        "process_pid": 3196
      },
      {
        "process_pid": 1497
      },
      {
        "process_pid": 5313
      },
      {
        "process_pid": 298
      },
      {
        "process_pid": 6947
      },
      {
        "process_pid": 6909
      },
      {
        "process_pid": 4462
      },
      {
        "process_pid": 1182
      },
      {
        "process_pid": 7646
      },
      {
        "process_pid": 446
      },
      {
        "process_pid": 6429
      },
      {
        "process_pid": 1109
      },
      {
        "process_pid": 5926
      },
      {
        "process_pid": 269
      },
      {
        "process_pid": 8448
      },
      {
        "process_pid": 9453
      },
      {
        "process_pid": 3005
      },
      {
        "process_pid": 4264
      },
      {
        "process_pid": 1887
      },
      {
        "process_pid": 799
      },
      {
        "process_pid": 8340
      },
      {
        "process_pid": 909
      },
      {
        "process_pid": 4973
      },
      {
        "process_pid": 9761
      },
      {
        "process_pid": 904
      },
      {
        "process_pid": 7627
      },
      {
        "process_pid": 2747
      },
      {
        "process_pid": 9969
      },
      {
        "process_pid": 9593
      },
      {
        "process_pid": 4774
      },
      {
        "process_pid": 1203
      },
      {
        "process_pid": 8466
      },
      {
        "process_pid": 7461
      },
      {
        "process_pid": 422
      },
      {
        "process_pid": 360
      },
      {
        "process_pid": 8188
      },
      {
        "process_pid": 7214
      },
      {
        "process_pid": 9708
      },
      {
        "process_pid": 7967
      },
      {
        "process_pid": 2362
      },
      {
        "process_pid": 2568
      },
      {
        "process_pid": 8227
      },
      {
        "process_pid": 7999
      },
      {
        "process_pid": 472
      },
      {
        "process_pid": 6695
      },
      {
        "process_pid": 4687
      },
      {
        "process_pid": 4263
      },
      {
        "process_pid": 5883
      },
      {
        "process_pid": 9968
      },
      {
        "process_pid": 2334
      },
      {
        "process_pid": 3474
      },
      {
        "process_pid": 3611
      },
      {
        "process_pid": 8507
      },
      {
        "process_pid": 5007
      },
      {
        "process_pid": 2073
      },
      {
        "process_pid": 6702
      },
      {
        "process_pid": 3703
      },
      {
        "process_pid": 7312
      },
      {
        "process_pid": 3699
      },
      {
        "process_pid": 9768
      },
      {
        "process_pid": 3177
      },
      {
        "process_pid": 8710
      },
      {
        "process_pid": 2666
      },
      {
        "process_pid": 5322
      },
      {
        "process_pid": 9638
      },
      {
        "process_pid": 1601
      },
      {
        "process_pid": 9775
      },
      {
        "process_pid": 4999
      },
      {
        "process_pid": 5504
      },
      {
        "process_pid": 2957
      },
      {
        "process_pid": 3671
      },
      {
        "process_pid": 6839
      },
      {
        "process_pid": 3555
      },
      {
        "process_pid": 9027
      },
      {
        "process_pid": 9551
      },
      {
        "process_pid": 7955
      },
      {
        "process_pid": 2440
      },
      {
        "process_pid": 5953
      },
      {
        "process_pid": 4798
      },
      {
        "process_pid": 9480
      },
      {
        "process_pid": 21
      },
      {
        "process_pid": 6274
      },
      {
        "process_pid": 834
      },
      {
        "process_pid": 4075
      },
      {
        "process_pid": 6923
      },
      {
        "process_pid": 1468
      },
      {
        "process_pid": 6905
      },
      {
        "process_pid": 371
      },
      {
        "process_pid": 6188
      },
      {
        "process_pid": 7017
      },
      {
        "process_pid": 3025
      },
      {
        "process_pid": 8870
      },
      {
        "process_pid": 9787
      },
      {
        "process_pid": 1090
      },
      {
        "process_pid": 5969
      },
      {
        "process_pid": 6199
      },
      {
        "process_pid": 4446
      },
      {
        "process_pid": 9289
      },
      {
        "process_pid": 2308
      },
      {
        "process_pid": 2593
      },
      {
        "process_pid": 5697
      },
      {
        "process_pid": 9907
      },
      {
        "process_pid": 3166
      },
      {
        "process_pid": 6734
      },
      {
        "process_pid": 957
      },
      {
        "process_pid": 1356
      },
      {
        "process_pid": 2158
      },
      {
        "process_pid": 2456
      },
      {
        "process_pid": 5229
      },
      {
        "process_pid": 7834
      },
      {
        "process_pid": 7763
      },
      {
        "process_pid": 4518
      },
      {
        "process_pid": 6732
      },
      {
        "process_pid": 3261
      },
      {
        "process_pid": 7325
      },
      {
        "process_pid": 8307
      },
      {
        "process_pid": 3645
      },
      {
        "process_pid": 860
      },
      {
        "process_pid": 866
      },
      {
        "process_pid": 1938
      },
      {
        "process_pid": 7933
      },
      {
        "process_pid": 3639
      },
      {
        "process_pid": 731
      },
      {
        "process_pid": 4824
      },
      {
        "process_pid": 5604
      },
      {
        "process_pid": 3297
      },
      {
        "process_pid": 1693
      },
      {
        "process_pid": 504
      },
      {
        "process_pid": 8886
      },
      {
        "process_pid": 7303
      },
      {
        "process_pid": 655
      },
      {
        "process_pid": 160
      },
      {
        "process_pid": 7074
      },
      {
        "process_pid": 574
      },
      {
        "process_pid": 7034
      },
      {
        "process_pid": 7728
      },
      {
        "process_pid": 4121
      },
      {
        "process_pid": 1422
      },
      {
        "process_pid": 5693
      },
      {
        "process_pid": 6745
      },
      {
        "process_pid": 5232
      },
      {
        "process_pid": 1541
      },
      {
        "process_pid": 3275
      },
      {
        "process_pid": 3414
      },
      {
        "process_pid": 972
      },
      {
        "process_pid": 1199
      },
      {
        "process_pid": 353
      },
      {
        "process_pid": 18
      },
      {
        "process_pid": 4197
      },
      {
        "process_pid": 7049
      },
      {
        "process_pid": 976
      },
      {
        "process_pid": 1910
      },
      {
        "process_pid": 2148
      },
      {
        "process_pid": 7154
      },
      {
        "process_pid": 645
      },
      {
        "process_pid": 1925
      },
      {
        "process_pid": 9504
      },
      {
        "process_pid": 7636
      },
      {
        "process_pid": 8473
      },
      {
        "process_pid": 1278
      },
      {
        "process_pid": 5689
      },
      {
        "process_pid": 5528
      },
      {
        "process_pid": 7705
      },
      {
        "process_pid": 6978
      },
      {
        "process_pid": 6123
      },
      {
        "process_pid": 6803
      },
      {
        "process_pid": 3759
      },
      {
        "process_pid": 9896
      },
      {
        "process_pid": 3004
      },
      {
        "process_pid": 8802
      },
      {
        "process_pid": 7618
      },
      {
        "process_pid": 1870
      },
      {
        "process_pid": 8006
      },
      {
        "process_pid": 1146
      },
      {
        "process_pid": 6761
      },
      {
        "process_pid": 280
      },
      {
        "process_pid": 7939
      },
      {
        "process_pid": 1665
      },
      {
        "process_pid": 3050
      },
      {
        "process_pid": 1420
      },
      {
        "process_pid": 1511
      },
      {
        "process_pid": 7604
      },
      {
        "process_pid": 3501
      },
      {
        "process_pid": 6548
      },
      {
        "process_pid": 3731
      },
      {
        "process_pid": 2476
      },
      {
        "process_pid": 5884
      },
      {
        "process_pid": 8997
      },
      {
        "process_pid": 564
      },
      {
        "process_pid": 3787
      },
      {
        "process_pid": 3309
      },
      {
        "process_pid": 6763
      },
      {
        "process_pid": 7367
      },
      {
        "process_pid": 5723
      },
      {
        "process_pid": 997
      },
      {
        "process_pid": 473
      },
      {
        "process_pid": 2150
      },
      {
        "process_pid": 7715
      },
      {
        "process_pid": 7104
      },
      {
        "process_pid": 3040
      },
      {
        "process_pid": 3317
      },
      {
        "process_pid": 8832
      },
      {
        "process_pid": 1224
      },
      {
        "process_pid": 7146
      },
      {
        "process_pid": 4558
      },
      {
        "process_pid": 5822
      },
      {
        "process_pid": 9331
      },
      {
        "process_pid": 1010
      },
      {
        "process_pid": 5024
      },
      {
        "process_pid": 3801
      },
      {
        "process_pid": 9997
      },
      {
        "process_pid": 4188
      },
      {
        "process_pid": 1767
      },
      {
        "process_pid": 9426
      },
      {
        "process_pid": 9410
      },
      {
        "process_pid": 6131
      },
      {
        "process_pid": 2085
      },
      {
        "process_pid": 9872
      },
      {
        "process_pid": 7711
      },
      {
        "process_pid": 5965
      },
      {
        "process_pid": 2547
      },
      {
        "process_pid": 6053
      },
      {
        "process_pid": 5303
      },
      {
        "process_pid": 6203
      },
      {
        "process_pid": 6644
      },
      {
        "process_pid": 1881
      },
      {
        "process_pid": 529
      },
      {
        "process_pid": 4048
      },
      {
        "process_pid": 4692
      },
      {
        "process_pid": 6286
      },
      {
        "process_pid": 8938
      },
      {
        "process_pid": 5930
      },
      {
        "process_pid": 2154
      },
      {
        "process_pid": 4176
      },
      {
        "process_pid": 4226
      },
      {
        "process_pid": 1638
      },
      {
        "process_pid": 6343
      },
      {
        "process_pid": 1551
      },
      {
        "process_pid": 2139
      },
      {
        "process_pid": 6158
      },
      {
        "process_pid": 2020
      },
      {
        "process_pid": 2781
      },
      {
        "process_pid": 8107
      },
      {
        "process_pid": 6922
      },
      {
        "process_pid": 7998
      },
      {
        "process_pid": 9091
      },
      {
        "process_pid": 763
      },
      {
        "process_pid": 4266
      },
      {
        "process_pid": 764
      },
      {
        "process_pid": 7145
      },
      {
        "process_pid": 5355
      },
      {
        "process_pid": 5600
      },
      {
        "process_pid": 3150
      },
      {
        "process_pid": 3933
      },
      {
        "process_pid": 3586
      },
      {
        "process_pid": 3914
      },
      {
        "process_pid": 7970
      },
      {
        "process_pid": 6788
      },
      {
        "process_pid": 4082
      },
      {
        "process_pid": 3167
      },
      {
        "process_pid": 7514
      },
      {
        "process_pid": 1885
      },
      {
        "process_pid": 4631
      },
      {
        "process_pid": 1544
      },
      {
        "process_pid": 7223
      },
      {
        "process_pid": 54
      },
      {
        "process_pid": 7788
      },
      {
        "process_pid": 6864
      },
      {
        "process_pid": 86
      },
      {
        "process_pid": 9785
      },
      {
        "process_pid": 2772
      },
      {
        "process_pid": 3321
      },
      {
        "process_pid": 7143
      },
      {
        "process_pid": 741
      },
      {
        "process_pid": 67
      },
      {
        "process_pid": 946
      },
      {
        "process_pid": 6515
      },
      {
        "process_pid": 1515
      },
      {
        "process_pid": 119
      },
      {
        "process_pid": 3770
      },
      {
        "process_pid": 1119
      },
      {
        "process_pid": 5063
      },
      {
        "process_pid": 2757
      },
      {
        "process_pid": 7866
      },
      {
        "process_pid": 4101
      },
      {
        "process_pid": 1626
      },
      {
        "process_pid": 2881
      },
      {
        "process_pid": 2714
      },
      {
        "process_pid": 1917
      },
      {
        "process_pid": 7030
      },
      {
        "process_pid": 8600
      },
      {
        "process_pid": 8628
      },
      {
        "process_pid": 56
      },
      {
        "process_pid": 299
      },
      {
        "process_pid": 9797
      },
      {
        "process_pid": 2661
      },
      {
        "process_pid": 8118
      },
      {
        "process_pid": 2994
      },
      {
        "process_pid": 2559
      },
      {
        "process_pid": 3181
      },
      {
        "process_pid": 3072
      },
      {
        "process_pid": 5459
      },
      {
        "process_pid": 7545
      },
      {
        "process_pid": 9878
      },
      {
        "process_pid": 4644
      },
      {
        "process_pid": 3870
      },
      {
        "process_pid": 8375
      },
      {
        "process_pid": 3362
      },
      {
        "process_pid": 4139
      },
      {
        "process_pid": 9155
      },
      {
        "process_pid": 3841
      },
      {
        "process_pid": 3123
      },
      {
        "process_pid": 9815
      },
      {
        "process_pid": 7276
      },
      {
        "process_pid": 5440
      },
      {
        "process_pid": 4792
      },
      {
        "process_pid": 2599
      },
      {
        "process_pid": 2843
      },
      {
        "process_pid": 2268
      },
      {
        "process_pid": 4411
      },
      {
        "process_pid": 9583
      },
      {
        "process_pid": 5150
      },
      {
        "process_pid": 8509
      },
      {
        "process_pid": 7321
      },
      {
        "process_pid": 2748
      },
      {
        "process_pid": 5673
      },
      {
        "process_pid": 249
      },
      {
        "process_pid": 6990
      },
      {
        "process_pid": 2468
      },
      {
        "process_pid": 1677
      },
      {
        "process_pid": 1761
      },
      {
        "process_pid": 8725
      },
      {
        "process_pid": 8598
      },
      {
        "process_pid": 9867
      },
      {
        "process_pid": 2111
      },
      {
        "process_pid": 4880
      },
      {
        "process_pid": 9445
      },
      {
        "process_pid": 2152
      },
      {
        "process_pid": 7081
      },
      {
        "process_pid": 4364
      },
      {
        "process_pid": 5041
      },
      {
        "process_pid": 5733
      },
      {
        "process_pid": 9351
      },
      {
        "process_pid": 2071
      },
      {
        "process_pid": 3227
      },
      {
        "process_pid": 5076
      },
      {
        "process_pid": 4194
      },
      {
        "process_pid": 2642
      },
      {
        "process_pid": 7306
      },
      {
        "process_pid": 1258
      },
      {
        "process_pid": 3548
      },
      {
        "process_pid": 2139
      },
      {
        "process_pid": 7564
      },
      {
        "process_pid": 2855
      },
      {
        "process_pid": 3284
      },
      {
        "process_pid": 8598
      },
      {
        "process_pid": 8363
      },
      {
        "process_pid": 5449
      },
      {
        "process_pid": 9653
      },
      {
        "process_pid": 3501
      },
      {
        "process_pid": 7345
      },
      {
        "process_pid": 5906
      },
      {
        "process_pid": 624
      },
      {
        "process_pid": 1802
      },
      {
        "process_pid": 9035
      },
      {
        "process_pid": 7329
      },
      {
        "process_pid": 2813
      },
      {
        "process_pid": 438
      },
      {
        "process_pid": 8281
      },
      {
        "process_pid": 2070
      },
      {
        "process_pid": 6671
      },
      {
        "process_pid": 3689
      },
      {
        "process_pid": 2783
      },
      {
        "process_pid": 6967
      },
      {
        "process_pid": 2573
      },
      {
        "process_pid": 2219
      },
      {
        "process_pid": 2691
      },
      {
        "process_pid": 5841
      },
      {
        "process_pid": 5735
      },
      {
        "process_pid": 8289
      },
      {
        "process_pid": 1825
      },
      {
        "process_pid": 8172
      },
      {
        "process_pid": 3427
      },
      {
        "process_pid": 7558
      },
      {
        "process_pid": 7912
      },
      {
        "process_pid": 5695
      },
      {
        "process_pid": 2309
      },
      {
        "process_pid": 7154
      },
      {
        "process_pid": 350
      },
      {
        "process_pid": 9694
      },
      {
        "process_pid": 7824
      },
      {
        "process_pid": 2035
      },
      {
        "process_pid": 5834
      },
      {
        "process_pid": 3606
      },
      {
        "process_pid": 1107
      },
      {
        "process_pid": 7384
      },
      {
        "process_pid": 2183
      },
      {
        "process_pid": 6793
      },
      {
        "process_pid": 1503
      },
      {
        "process_pid": 2761
      },
      {
        "process_pid": 5063
      },
      {
        "process_pid": 160
      },
      {
        "process_pid": 1834
      },
      {
        "process_pid": 3728
      },
      {
        "process_pid": 7127
      },
      {
        "process_pid": 257
      },
      {
        "process_pid": 2392
      },
      {
        "process_pid": 8624
      },
      {
        "process_pid": 5155
      },
      {
        "process_pid": 1806
      },
      {
        "process_pid": 7592
      },
      {
        "process_pid": 8904
      },
      {
        "process_pid": 6034
      },
      {
        "process_pid": 1879
      },
      {
        "process_pid": 8199
      },
      {
        "process_pid": 8072
      },
      {
        "process_pid": 4110
      },
      {
        "process_pid": 9318
      },
      {
        "process_pid": 5244
      },
      {
        "process_pid": 3153
      },
      {
        "process_pid": 218
      },
      {
        "process_pid": 3324
      },
      {
        "process_pid": 519
      },
      {
        "process_pid": 8143
      },
      {
        "process_pid": 8952
      },
      {
        "process_pid": 8221
      },
      {
        "process_pid": 6073
      },
      {
        "process_pid": 6606
      },
      {
        "process_pid": 1461
      },
      {
        "process_pid": 9744
      },
      {
        "process_pid": 2430
      },
      {
        "process_pid": 9986
      },
      {
        "process_pid": 7966
      },
      {
        "process_pid": 6659
      },
      {
        "process_pid": 9860
      },
      {
        "process_pid": 3503
      },
      {
        "process_pid": 7011
      },
      {
        "process_pid": 6272
      },
      {
        "process_pid": 1194
      },
      {
        "process_pid": 6284
      },
      {
        "process_pid": 7311
      },
      {
        "process_pid": 7086
      },
      {
        "process_pid": 8270
      },
      {
        "process_pid": 582
      },
      {
        "process_pid": 5483
      },
      {
        "process_pid": 2933
      },
      {
        "process_pid": 2966
      },
      {
        "process_pid": 2573
      },
      {
        "process_pid": 425
      },
      {
        "process_pid": 9657
      },
      {
        "process_pid": 4503
      },
      {
        "process_pid": 1739
      },
      {
        "process_pid": 997
      },
      {
        "process_pid": 5935
      },
      {
        "process_pid": 812
      },
      {
        "process_pid": 9672
      },
      {
        "process_pid": 5617
      },
      {
        "process_pid": 6237
      },
      {
        "process_pid": 6542
      },
      {
        "process_pid": 1129
      },
      {
        "process_pid": 1947
      },
      {
        "process_pid": 7305
      },
      {
        "process_pid": 5644
      },
      {
        "process_pid": 5813
      },
      {
        "process_pid": 6741
      },
      {
        "process_pid": 775
      },
      {
        "process_pid": 5383
      },
      {
        "process_pid": 5223
      },
      {
        "process_pid": 641
      },
      {
        "process_pid": 8545
      },
      {
        "process_pid": 505
      },
      {
        "process_pid": 6140
      },
      {
        "process_pid": 5812
      },
      {
        "process_pid": 222
      },
      {
        "process_pid": 3124
      },
      {
        "process_pid": 6751
      },
      {
        "process_pid": 9961
      },
      {
        "process_pid": 884
      },
      {
        "process_pid": 2963
      },
      {
        "process_pid": 6994
      },
      {
        "process_pid": 2066
      },
      {
        "process_pid": 3223
      },
      {
        "process_pid": 4656
      },
      {
        "process_pid": 7299
      },
      {
        "process_pid": 6526
      },
      {
        "process_pid": 3949
      },
      {
        "process_pid": 529
      },
      {
        "process_pid": 1312
      },
      {
        "process_pid": 6555
      },
      {
        "process_pid": 8357
      },
      {
        "process_pid": 3295
      },
      {
        "process_pid": 6007
      },
      {
        "process_pid": 3941
      },
      {
        "process_pid": 537
      },
      {
        "process_pid": 771
      },
      {
        "process_pid": 2775
      },
      {
        "process_pid": 7065
      },
      {
        "process_pid": 7698
      },
      {
        "process_pid": 668
      },
      {
        "process_pid": 2854
      },
      {
        "process_pid": 4035
      },
      {
        "process_pid": 5558
      },
      {
        "process_pid": 6784
      },
      {
        "process_pid": 8809
      },
      {
        "process_pid": 7146
      },
      {
        "process_pid": 7514
      },
      {
        "process_pid": 8018
      },
      {
        "process_pid": 4515
      },
      {
        "process_pid": 2213
      },
      {
        "process_pid": 2115
      },
      {
        "process_pid": 8061
      },
      {
        "process_pid": 7006
      },
      {
        "process_pid": 9838
      },
      {
        "process_pid": 3373
      },
      {
        "process_pid": 6877
      },
      {
        "process_pid": 7813
      },
      {
        "process_pid": 7311
      },
      {
        "process_pid": 8792
      },
      {
        "process_pid": 6437
      },
      {
        "process_pid": 8036
      },
      {
        "process_pid": 8674
      },
      {
        "process_pid": 3884
      },
      {
        "process_pid": 744
      },
      {
        "process_pid": 3998
      },
      {
        "process_pid": 1746
      },
      {
        "process_pid": 6418
      },
      {
        "process_pid": 8326
      },
      {
        "process_pid": 7239
      },
      {
        "process_pid": 647
      },
      {
        "process_pid": 315
      },
      {
        "process_pid": 3899
      },
      {
        "process_pid": 1161
      },
      {
        "process_pid": 3796
      },
      {
        "process_pid": 1939
      },
      {
        "process_pid": 2986
      },
      {
        "process_pid": 1953
      },
      {
        "process_pid": 6269
      },
      {
        "process_pid": 9862
      },
      {
        "process_pid": 3389
      },
      {
        "process_pid": 6137
      },
      {
        "process_pid": 5432
      },
      {
        "process_pid": 8233
      },
      {
        "process_pid": 2716
      },
      {
        "process_pid": 2678
      },
      {
        "process_pid": 394
      },
      {
        "process_pid": 4836
      },
      {
        "process_pid": 2555
      },
      {
        "process_pid": 9098
      },
      {
        "process_pid": 9762
      },
      {
        "process_pid": 5549
      },
      {
        "process_pid": 8399
      },
      {
        "process_pid": 3548
      },
      {
        "process_pid": 9472
      },
      {
        "process_pid": 3893
      },
      {
        "process_pid": 1337
      },
      {
        "process_pid": 3583
      },
      {
        "process_pid": 3263
      },
      {
        "process_pid": 3513
      },
      {
        "process_pid": 5436
      },
      {
        "process_pid": 9324
      },
      {
        "process_pid": 3680
      },
      {
        "process_pid": 1784
      },
      {
        "process_pid": 303
      },
      {
        "process_pid": 3285
      },
      {
        "process_pid": 5296
      },
      {
        "process_pid": 9213
      },
      {
        "process_pid": 5008
      },
      {
        "process_pid": 8892
      },
      {
        "process_pid": 28
      },
      {
        "process_pid": 7865
      },
      {
        "process_pid": 6640
      },
      {
        "process_pid": 1085
      },
      {
        "process_pid": 1656
      },
      {
        "process_pid": 1495
      },
      {
        "process_pid": 7932
      },
      {
        "process_pid": 66
      },
      {
        "process_pid": 9272
      },
      {
        "process_pid": 5414
      },
      {
        "process_pid": 9632
      },
      {
        "process_pid": 8580
      },
      {
        "process_pid": 2712
      },
      {
        "process_pid": 3548
      },
      {
        "process_pid": 7440
      },
      {
        "process_pid": 6023
      },
      {
        "process_pid": 1481
      },
      {
        "process_pid": 1233
      },
      {
        "process_pid": 4455
      },
      {
        "process_pid": 2475
      },
      {
        "process_pid": 9477
      },
      {
        "process_pid": 5606
      },
      {
        "process_pid": 4996
      },
      {
        "process_pid": 1966
      },
      {
        "process_pid": 7101
      },
      {
        "process_pid": 1471
      },
      {
        "process_pid": 4113
      },
      {
        "process_pid": 5127
      },
      {
        "process_pid": 879
      },
      {
        "process_pid": 4913
      },
      {
        "process_pid": 8802
      },
      {
        "process_pid": 9496
      },
      {
        "process_pid": 8507
      },
      {
        "process_pid": 1857
      },
      {
        "process_pid": 3431
      },
      {
        "process_pid": 1231
      },
      {
        "process_pid": 6819
      },
      {
        "process_pid": 2737
      },
      {
        "process_pid": 245
      },
      {
        "process_pid": 9540
      },
      {
        "process_pid": 8524
      },
      {
        "process_pid": 5538
      },
      {
        "process_pid": 2705
      },
      {
        "process_pid": 2703
      },
      {
        "process_pid": 2581
      },
      {
        "process_pid": 146
      },
      {
        "process_pid": 3207
      },
      {
        "process_pid": 5640
      },
      {
        "process_pid": 2778
      },
      {
        "process_pid": 2574
      },
      {
        "process_pid": 5295
      },
      {
        "process_pid": 8906
      },
      {
        "process_pid": 6283
      },
      {
        "process_pid": 7042
      },
      {
        "process_pid": 252
      },
      {
        "process_pid": 442
      },
      {
        "process_pid": 6718
      },
      {
        "process_pid": 8708
      },
      {
        "process_pid": 9380
      },
      {
        "process_pid": 7019
      },
      {
        "process_pid": 4063
      },
      {
        "process_pid": 9095
      },
      {
        "process_pid": 2963
      },
      {
        "process_pid": 1276
      },
      {
        "process_pid": 8015
      },
      {
        "process_pid": 6918
      },
      {
        "process_pid": 7959
      },
      {
        "process_pid": 1907
      },
      {
        "process_pid": 9018
      },
      {
        "process_pid": 3227
      },
      {
        "process_pid": 6936
      },
      {
        "process_pid": 7271
      },
      {
        "process_pid": 2976
      },
      {
        "process_pid": 9872
      },
      {
        "process_pid": 5201
      },
      {
        "process_pid": 9683
      },
      {
        "process_pid": 1929
      },
      {
        "process_pid": 9401
      },
      {
        "process_pid": 1004
      },
      {
        "process_pid": 7404
      },
      {
        "process_pid": 3655
      },
      {
        "process_pid": 2794
      },
      {
        "process_pid": 5461
      },
      {
        "process_pid": 6502
      },
      {
        "process_pid": 3432
      },
      {
        "process_pid": 9969
      },
      {
        "process_pid": 2772
      },
      {
        "process_pid": 7136
      },
      {
        "process_pid": 8721
      },
      {
        "process_pid": 616
      },
      {
        "process_pid": 820
      },
      {
        "process_pid": 2612
      },
      {
        "process_pid": 1641
      },
      {
        "process_pid": 7363
      },
      {
        "process_pid": 4803
      },
      {
        "process_pid": 9472
      },
      {
        "process_pid": 192
      },
      {
        "process_pid": 9768
      },
      {
        "process_pid": 1983
      },
      {
        "process_pid": 4624
      },
      {
        "process_pid": 5512
      },
      {
        "process_pid": 3148
      },
      {
        "process_pid": 2765
      },
      {
        "process_pid": 1147
      },
      {
        "process_pid": 2945
      },
      {
        "process_pid": 6531
      },
      {
        "process_pid": 820
      },
      {
        "process_pid": 4852
      },
      {
        "process_pid": 2285
      },
      {
        "process_pid": 5935
      },
      {
        "process_pid": 8546
      },
      {
        "process_pid": 8301
      },
      {
        "process_pid": 9871
      },
      {
        "process_pid": 4115
      },
      {
        "process_pid": 613
      },
      {
        "process_pid": 6327
      },
      {
        "process_pid": 246
      },
      {
        "process_pid": 6827
      },
      {
        "process_pid": 9903
      },
      {
        "process_pid": 1778
      },
      {
        "process_pid": 5432
      },
      {
        "process_pid": 3391
      },
      {
        "process_pid": 9708
      },
      {
        "process_pid": 7719
      },
      {
        "process_pid": 2943
      },
      {
        "process_pid": 542
      },
      {
        "process_pid": 4153
      },
      {
        "process_pid": 6853
      },
      {
        "process_pid": 1706
      },
      {
        "process_pid": 3781
      },
      {
        "process_pid": 6572
      },
      {
        "process_pid": 6407
      },
      {
        "process_pid": 8767
      },
      {
        "process_pid": 6284
      },
      {
        "process_pid": 6192
      },
      {
        "process_pid": 5056
      },
      {
        "process_pid": 8846
      },
      {
        "process_pid": 5227
      },
      {
        "process_pid": 5132
      },
      {
        "process_pid": 2717
      },
      {
        "process_pid": 9653
      },
      {
        "process_pid": 6901
      },
      {
        "process_pid": 7049
      },
      {
        "process_pid": 28
      },
      {
        "process_pid": 9299
      },
      {
        "process_pid": 6567
      },
      {
        "process_pid": 1846
      },
      {
        "process_pid": 9630
      },
      {
        "process_pid": 9505
      },
      {
        "process_pid": 9478
      },
      {
        "process_pid": 2030
      },
      {
        "process_pid": 5476
      },
      {
        "process_pid": 6781
      },
      {
        "process_pid": 9970
      },
      {
        "process_pid": 2048
      },
      {
        "process_pid": 3071
      },
      {
        "process_pid": 9338
      },
      {
        "process_pid": 8835
      },
      {
        "process_pid": 8025
      },
      {
        "process_pid": 1958
      },
      {
        "process_pid": 5767
      },
      {
        "process_pid": 8821
      },
      {
        "process_pid": 893
      },
      {
        "process_pid": 1053
      },
      {
        "process_pid": 3222
      },
      {
        "process_pid": 9653
      },
      {
        "process_pid": 6478
      },
      {
        "process_pid": 8449
      },
      {
        "process_pid": 3895
      },
      {
        "process_pid": 1374
      },
      {
        "process_pid": 853
      },
      {
        "process_pid": 1700
      },
      {
        "process_pid": 7752
      },
      {
        "process_pid": 8865
      },
      {
        "process_pid": 9995
      },
      {
        "process_pid": 6913
      },
      {
        "process_pid": 5971
      },
      {
        "process_pid": 5762
      },
      {
        "process_pid": 9470
      },
      {
        "process_pid": 5274
      },
      {
        "process_pid": 4360
      },
      {
        "process_pid": 8383
      },
      {
        "process_pid": 9573
      },
      {
        "process_pid": 3513
      },
      {
        "process_pid": 6555
      },
      {
        "process_pid": 5592
      },
      {
        "process_pid": 6670
      },
      {
        "process_pid": 5228
      },
      {
        "process_pid": 1245
      },
      {
        "process_pid": 453
      },
      {
        "process_pid": 3673
      },
      {
        "process_pid": 6205
      },
      {
        "process_pid": 454
      },
      {
        "process_pid": 8437
      },
      {
        "process_pid": 3038
      },
      {
        "process_pid": 9957
      },
      {
        "process_pid": 7735
      },
      {
        "process_pid": 7101
      },
      {
        "process_pid": 486
      },
      {
        "process_pid": 5376
      },
      {
        "process_pid": 5935
      },
      {
        "process_pid": 7315
      },
      {
        "process_pid": 8920
      },
      {
        "process_pid": 801
      },
      {
        "process_pid": 3020
      },
      {
        "process_pid": 7786
      },
      {
        "process_pid": 4571
      },
      {
        "process_pid": 5976
      },
      {
        "process_pid": 7538
      },
      {
        "process_pid": 8287
      },
      {
        "process_pid": 1831
      },
      {
        "process_pid": 3476
      },
      {
        "process_pid": 4998
      },
      {
        "process_pid": 8831
      },
      {
        "process_pid": 524
      },
      {
        "process_pid": 6235
      },
      {
        "process_pid": 1222
      },
      {
        "process_pid": 7469
      },
      {
        "process_pid": 9078
      },
      {
        "process_pid": 4017
      },
      {
        "process_pid": 7102
      },
      {
        "process_pid": 4156
      },
      {
        "process_pid": 6069
      },
      {
        "process_pid": 5689
      },
      {
        "process_pid": 1493
      },
      {
        "process_pid": 8165
      },
      {
        "process_pid": 8985
      },
      {
        "process_pid": 5549
      },
      {
        "process_pid": 5874
      },
      {
        "process_pid": 4046
      },
      {
        "process_pid": 1060
      },
      {
        "process_pid": 2876
      },
      {
        "process_pid": 8217
      },
      {
        "process_pid": 5046
      },
      {
        "process_pid": 6917
      },
      {
        "process_pid": 9084
      },
      {
        "process_pid": 6312
      },
      {
        "process_pid": 9360
      },
      {
        "process_pid": 6781
      },
      {
        "process_pid": 2779
      },
      {
        "process_pid": 2461
      },
      {
        "process_pid": 5603
      },
      {
        "process_pid": 6211
      },
      {
        "process_pid": 6738
      },
      {
        "process_pid": 5491
      },
      {
        "process_pid": 8227
      },
      {
        "process_pid": 6589
      },
      {
        "process_pid": 5817
      },
      {
        "process_pid": 3884
      },
      {
        "process_pid": 8473
      },
      {
        "process_pid": 4532
      },
      {
        "process_pid": 618
      },
      {
        "process_pid": 7688
      },
      {
        "process_pid": 118
      },
      {
        "process_pid": 6856
      },
      {
        "process_pid": 8699
      },
      {
        "process_pid": 4354
      },
      {
        "process_pid": 3734
      },
      {
        "process_pid": 4131
      },
      {
        "process_pid": 9240
      },
      {
        "process_pid": 7320
      },
      {
        "process_pid": 3980
      },
      {
        "process_pid": 4158
      },
      {
        "process_pid": 9726
      },
      {
        "process_pid": 9640
      },
      {
        "process_pid": 6391
      },
      {
        "process_pid": 503
      },
      {
        "process_pid": 5527
      },
      {
        "process_pid": 7520
      },
      {
        "process_pid": 7909
      },
      {
        "process_pid": 5541
      },
      {
        "process_pid": 1354
      },
      {
        "process_pid": 886
      },
      {
        "process_pid": 3075
      },
      {
        "process_pid": 8449
      },
      {
        "process_pid": 4862
      },
      {
        "process_pid": 6719
      },
      {
        "process_pid": 5853
      },
      {
        "process_pid": 6224
      },
      {
        "process_pid": 9114
      },
      {
        "process_pid": 9382
      },
      {
        "process_pid": 5249
      },
      {
        "process_pid": 1177
      },
      {
        "process_pid": 9216
      },
      {
        "process_pid": 2181
      },
      {
        "process_pid": 5449
      },
      {
        "process_pid": 9345
      },
      {
        "process_pid": 7900
      },
      {
        "process_pid": 8256
      },
      {
        "process_pid": 8497
      },
      {
        "process_pid": 1538
      },
      {
        "process_pid": 2809
      },
      {
        "process_pid": 723
      },
      {
        "process_pid": 5647
      },
      {
        "process_pid": 8720
      },
      {
        "process_pid": 2807
      },
      {
        "process_pid": 3249
      },
      {
        "process_pid": 2449
      },
      {
        "process_pid": 2375
      },
      {
        "process_pid": 9500
      },
      {
        "process_pid": 8317
      },
      {
        "process_pid": 8095
      },
      {
        "process_pid": 1731
      },
      {
        "process_pid": 9553
      },
      {
        "process_pid": 4721
      },
      {
        "process_pid": 9489
      },
      {
        "process_pid": 4496
      },
      {
        "process_pid": 9018
      },
      {
        "process_pid": 358
      },
      {
        "process_pid": 7382
      },
      {
        "process_pid": 5218
      },
      {
        "process_pid": 226
      },
      {
        "process_pid": 5870
      },
      {
        "process_pid": 4953
      },
      {
        "process_pid": 1447
      },
      {
        "process_pid": 313
      },
      {
        "process_pid": 6063
      },
      {
        "process_pid": 1352
      },
      {
        "process_pid": 7986
      },
      {
        "process_pid": 1306
      },
      {
        "process_pid": 8104
      },
      {
        "process_pid": 8098
      },
      {
        "process_pid": 9210
      },
      {
        "process_pid": 5288
      },
      {
        "process_pid": 3782
      },
      {
        "process_pid": 1490
      },
      {
        "process_pid": 9103
      },
      {
        "process_pid": 9390
      },
      {
        "process_pid": 5765
      },
      {
        "process_pid": 4964
      },
      {
        "process_pid": 1784
      },
      {
        "process_pid": 7118
      },
      {
        "process_pid": 2948
      },
      {
        "process_pid": 3378
      },
      {
        "process_pid": 7799
      },
      {
        "process_pid": 4996
      },
      {
        "process_pid": 9101
      },
      {
        "process_pid": 5511
      },
      {
        "process_pid": 3791
      },
      {
        "process_pid": 2662
      },
      {
        "process_pid": 810
      },
      {
        "process_pid": 3729
      },
      {
        "process_pid": 4484
      },
      {
        "process_pid": 6595
      },
      {
        "process_pid": 7890
      },
      {
        "process_pid": 9084
      },
      {
        "process_pid": 1801
      },
      {
        "process_pid": 6654
      },
      {
        "process_pid": 5631
      },
      {
        "process_pid": 5017
      },
      {
        "process_pid": 78
      },
      {
        "process_pid": 1590
      },
      {
        "process_pid": 2105
      },
      {
        "process_pid": 3594
      },
      {
        "process_pid": 8548
      },
      {
        "process_pid": 6688
      },
      {
        "process_pid": 3862
      },
      {
        "process_pid": 5736
      },
      {
        "process_pid": 1887
      },
      {
        "process_pid": 9685
      },
      {
        "process_pid": 9585
      },
      {
        "process_pid": 7898
      },
      {
        "process_pid": 9223
      },
      {
        "process_pid": 8
      },
      {
        "process_pid": 6701
      },
      {
        "process_pid": 1281
      },
      {
        "process_pid": 4224
      },
      {
        "process_pid": 4906
      },
      {
        "process_pid": 7760
      },
      {
        "process_pid": 250
      },
      {
        "process_pid": 7150
      },
      {
        "process_pid": 4712
      },
      {
        "process_pid": 5085
      },
      {
        "process_pid": 768
      },
      {
        "process_pid": 3589
      },
      {
        "process_pid": 33
      },
      {
        "process_pid": 2331
      },
      {
        "process_pid": 4700
      },
      {
        "process_pid": 7758
      },
      {
        "process_pid": 2000
      },
      {
        "process_pid": 3212
      },
      {
        "process_pid": 1649
      },
      {
        "process_pid": 1064
      },
      {
        "process_pid": 1543
      },
      {
        "process_pid": 1696
      },
      {
        "process_pid": 7009
      },
      {
        "process_pid": 5075
      },
      {
        "process_pid": 6349
      },
      {
        "process_pid": 9826
      },
      {
        "process_pid": 6212
      },
      {
        "process_pid": 6204
      },
      {
        "process_pid": 464
      },
      {
        "process_pid": 3429
      },
      {
        "process_pid": 231
      },
      {
        "process_pid": 6089
      },
      {
        "process_pid": 9682
      },
      {
        "process_pid": 8351
      },
      {
        "process_pid": 3644
      },
      {
        "process_pid": 4074
      },
      {
        "process_pid": 6056
      },
      {
        "process_pid": 4503
      },
      {
        "process_pid": 8942
      },
      {
        "process_pid": 5846
      },
      {
        "process_pid": 1332
      },
      {
        "process_pid": 4552
      },
      {
        "process_pid": 8911
      },
      {
        "process_pid": 9002
      },
      {
        "process_pid": 352
      },
      {
        "process_pid": 40
      },
      {
        "process_pid": 4903
      },
      {
        "process_pid": 369
      },
      {
        "process_pid": 6833
      },
      {
        "process_pid": 5144
      },
      {
        "process_pid": 229
      },
      {
        "process_pid": 3313
      },
      {
        "process_pid": 1049
      },
      {
        "process_pid": 5544
      },
      {
        "process_pid": 1877
      },
      {
        "process_pid": 550
      },
      {
        "process_pid": 2098
      },
      {
        "process_pid": 5632
      },
      {
        "process_pid": 6981
      },
      {
        "process_pid": 6610
      },
      {
        "process_pid": 6046
      },
      {
        "process_pid": 3600
      },
      {
        "process_pid": 227
      },
      {
        "process_pid": 1391
      },
      {
        "process_pid": 865
      },
      {
        "process_pid": 1759
      },
      {
        "process_pid": 1395
      },
      {
        "process_pid": 5957
      },
      {
        "process_pid": 6389
      },
      {
        "process_pid": 1651
      },
      {
        "process_pid": 8545
      },
      {
        "process_pid": 1878
      },
      {
        "process_pid": 4713
      },
      {
        "process_pid": 1541
      },
      {
        "process_pid": 7849
      },
      {
        "process_pid": 8039
      },
      {
        "process_pid": 4849
      },
      {
        "process_pid": 883
      },
      {
        "process_pid": 6466
      },
      {
        "process_pid": 3615
      },
      {
        "process_pid": 2545
      },
      {
        "process_pid": 8764
      },
      {
        "process_pid": 1694
      },
      {
        "process_pid": 5611
      },
      {
        "process_pid": 2567
      },
      {
        "process_pid": 9416
      },
      {
        "process_pid": 5015
      },
      {
        "process_pid": 6796
      },
      {
        "process_pid": 9833
      },
      {
        "process_pid": 3754
      },
      {
        "process_pid": 3670
      },
      {
        "process_pid": 3386
      },
      {
        "process_pid": 4190
      },
      {
        "process_pid": 2037
      },
      {
        "process_pid": 9961
      },
      {
        "process_pid": 9274
      },
      {
        "process_pid": 1082
      },
      {
        "process_pid": 3837
      },
      {
        "process_pid": 872
      },
      {
        "process_pid": 796
      },
      {
        "process_pid": 4816
      },
      {
        "process_pid": 6878
      },
      {
        "process_pid": 9203
      },
      {
        "process_pid": 7088
      },
      {
        "process_pid": 4807
      },
      {
        "process_pid": 1136
      },
      {
        "process_pid": 9418
      },
      {
        "process_pid": 5069
      },
      {
        "process_pid": 100
      },
      {
        "process_pid": 4110
      },
      {
        "process_pid": 9993
      },
      {
        "process_pid": 3892
      },
      {
        "process_pid": 6564
      },
      {
        "process_pid": 9353
      },
      {
        "process_pid": 9111
      },
      {
        "process_pid": 3279
      },
      {
        "process_pid": 6550
      },
      {
        "process_pid": 8910
      },
      {
        "process_pid": 5754
      },
      {
        "process_pid": 8736
      },
      {
        "process_pid": 1587
      },
      {
        "process_pid": 1297
      },
      {
        "process_pid": 3295
      },
      {
        "process_pid": 5781
      },
      {
        "process_pid": 9272
      },
      {
        "process_pid": 6875
      },
      {
        "process_pid": 7188
      },
      {
        "process_pid": 8733
      },
      {
        "process_pid": 18
      },
      {
        "process_pid": 9704
      },
      {
        "process_pid": 9760
      },
      {
        "process_pid": 3684
      },
      {
        "process_pid": 7887
      },
      {
        "process_pid": 8967
      },
      {
        "process_pid": 1069
      },
      {
        "process_pid": 5472
      },
      {
        "process_pid": 2068
      },
      {
        "process_pid": 8730
      },
      {
        "process_pid": 3098
      },
      {
        "process_pid": 7
      },
      {
        "process_pid": 1477
      },
      {
        "process_pid": 1815
      },
      {
        "process_pid": 4264
      },
      {
        "process_pid": 1358
      },
      {
        "process_pid": 3860
      },
      {
        "process_pid": 2146
      },
      {
        "process_pid": 4280
      },
      {
        "process_pid": 8897
      },
      {
        "process_pid": 1117
      },
      {
        "process_pid": 5885
      },
      {
        "process_pid": 6790
      },
      {
        "process_pid": 8985
      },
      {
        "process_pid": 5871
      },
      {
        "process_pid": 5398
      },
      {
        "process_pid": 7639
      },
      {
        "process_pid": 6830
      },
      {
        "process_pid": 9194
      },
      {
        "process_pid": 1504
      },
      {
        "process_pid": 5274
      },
      {
        "process_pid": 3198
      },
      {
        "process_pid": 2583
      },
      {
        "process_pid": 6806
      },
      {
        "process_pid": 9550
      },
      {
        "process_pid": 8533
      },
      {
        "process_pid": 1230
      },
      {
        "process_pid": 7913
      },
      {
        "process_pid": 4797
      },
      {
        "process_pid": 9911
      },
      {
        "process_pid": 2173
      },
      {
        "process_pid": 1771
      },
      {
        "process_pid": 9451
      },
      {
        "process_pid": 3107
      },
      {
        "process_pid": 4074
      },
      {
        "process_pid": 8726
      },
      {
        "process_pid": 8151
      },
      {
        "process_pid": 6451
      },
      {
        "process_pid": 4806
      },
      {
        "process_pid": 2149
      },
      {
        "process_pid": 2536
      },
      {
        "process_pid": 5717
      },
      {
        "process_pid": 2876
      },
      {
        "process_pid": 9507
      },
      {
        "process_pid": 1277
      },
      {
        "process_pid": 893
      },
      {
        "process_pid": 5201
      },
      {
        "process_pid": 9793
      },
      {
        "process_pid": 539
      },
      {
        "process_pid": 2416
      },
      {
        "process_pid": 4171
      },
      {
        "process_pid": 4090
      },
      {
        "process_pid": 4876
      },
      {
        "process_pid": 4643
      },
      {
        "process_pid": 992
      },
      {
        "process_pid": 9745
      },
      {
        "process_pid": 9804
      },
      {
        "process_pid": 630
      },
      {
        "process_pid": 9454
      },
      {
        "process_pid": 9540
      },
      {
        "process_pid": 8616
      },
      {
        "process_pid": 1137
      },
      {
        "process_pid": 4339
      },
      {
        "process_pid": 3753
      },
      {
        "process_pid": 3689
      },
      {
        "process_pid": 2376
      },
      {
        "process_pid": 7246
      },
      {
        "process_pid": 1421
      },
      {
        "process_pid": 3714
      },
      {
        "process_pid": 3158
      },
      {
        "process_pid": 828
      },
      {
        "process_pid": 6394
      },
      {
        "process_pid": 3263
      },
      {
        "process_pid": 7035
      },
      {
        "process_pid": 194
      },
      {
        "process_pid": 9589
      },
      {
        "process_pid": 2686
      },
      {
        "process_pid": 6660
      },
      {
        "process_pid": 5321
      },
      {
        "process_pid": 156
      },
      {
        "process_pid": 2327
      },
      {
        "process_pid": 2149
      },
      {
        "process_pid": 2253
      },
      {
        "process_pid": 7432
      },
      {
        "process_pid": 4728
      },
      {
        "process_pid": 7886
      },
      {
        "process_pid": 2740
      },
      {
        "process_pid": 2354
      },
      {
        "process_pid": 9717
      },
      {
        "process_pid": 5843
      },
      {
        "process_pid": 5716
      },
      {
        "process_pid": 7784
      },
      {
        "process_pid": 2869
      },
      {
        "process_pid": 917
      },
      {
        "process_pid": 6545
      },
      {
        "process_pid": 2285
      },
      {
        "process_pid": 3404
      },
      {
        "process_pid": 1740
      },
      {
        "process_pid": 7208
      },
      {
        "process_pid": 7088
      },
      {
        "process_pid": 697
      },
      {
        "process_pid": 402
      },
      {
        "process_pid": 9702
      },
      {
        "process_pid": 1553
      },
      {
        "process_pid": 8306
      },
      {
        "process_pid": 6460
      },
      {
        "process_pid": 246
      },
      {
        "process_pid": 9450
      },
      {
        "process_pid": 3249
      },
      {
        "process_pid": 7335
      },
      {
        "process_pid": 5483
      },
      {
        "process_pid": 5967
      },
      {
        "process_pid": 3577
      },
      {
        "process_pid": 5339
      },
      {
        "process_pid": 8647
      },
      {
        "process_pid": 632
      },
      {
        "process_pid": 7159
      },
      {
        "process_pid": 2412
      },
      {
        "process_pid": 3972
      },
      {
        "process_pid": 765
      },
      {
        "process_pid": 2296
      },
      {
        "process_pid": 500
      },
      {
        "process_pid": 6617
      },
      {
        "process_pid": 9418
      },
      {
        "process_pid": 9169
      }
    ]
  },
  {
    "question": "Tell me the IP address of interface 10.1.1.1",
    "cypher": "MATCH (i:Interface {ip: '10.1.1.1'}) RETURN i.ip AS interface_ip",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interface_ip": "10.1.1.1"
      }
    ],
    "answer": "10.1.1.1"
  },
  {
    "question": "What port does the webserver listen on?",
    "cypher": "MATCH (a:Application {name: 'webserver'})-[:LISTENS]->(p:Port) RETURN p.port AS listening_port",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      },
      {
        "listening_port": 443
      }
    ]
  },
  {
    "question": "How many machines does rack DC1-RCK-1-1 hold?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-1-1'})-[:HOLDS]->(m:Machine) RETURN COUNT(m) AS total_machines",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_machines": 200
      }
    ],
    "answer": "Rack DC1-RCK-1-1 holds 200 machines."
  },
  {
    "question": "What's the start time of the cms application?",
    "cypher": "MATCH (a:Application {name: 'cms'}) RETURN a.startTime AS app_start_time",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "app_start_time": null
      },
      {
        "app_start_time": 1606585350284
      },
      {
        "app_start_time": 1606664116379
      },
      {
        "app_start_time": 1606724144921
      },
      {
        "app_start_time": 1607017808458
      },
      {
        "app_start_time": 1606382520636
      },
      {
        "app_start_time": 1606952634315
      },
      {
        "app_start_time": 1606649395828
      },
      {
        "app_start_time": 1606221463106
      },
      {
        "app_start_time": 1606219329802
      },
      {
        "app_start_time": 1606415124026
      },
      {
        "app_start_time": 1606383192042
      },
      {
        "app_start_time": 1606463378301
      },
      {
        "app_start_time": 1606415170288
      },
      {
        "app_start_time": 1606716530367
      },
      {
        "app_start_time": 1606784798841
      },
      {
        "app_start_time": 1606870788405
      },
      {
        "app_start_time": 1606537923951
      },
      {
        "app_start_time": 1606536519772
      },
      {
        "app_start_time": 1606973110129
      },
      {
        "app_start_time": 1606716718068
      },
      {
        "app_start_time": 1606954190687
      },
      {
        "app_start_time": 1606235336623
      },
      {
        "app_start_time": 1606474511850
      },
      {
        "app_start_time": 1606310944764
      },
      {
        "app_start_time": 1606944994445
      },
      {
        "app_start_time": 1606445692995
      },
      {
        "app_start_time": 1606967631414
      },
      {
        "app_start_time": 1606479553921
      },
      {
        "app_start_time": 1606773344101
      },
      {
        "app_start_time": 1606545664881
      },
      {
        "app_start_time": 1606308334240
      },
      {
        "app_start_time": 1606874424830
      },
      {
        "app_start_time": 1606929280050
      },
      {
        "app_start_time": 1606525057672
      },
      {
        "app_start_time": 1606724128152
      },
      {
        "app_start_time": 1606866933073
      },
      {
        "app_start_time": 1606554644463
      },
      {
        "app_start_time": 1606239462342
      },
      {
        "app_start_time": 1606635996384
      },
      {
        "app_start_time": 1606254370046
      },
      {
        "app_start_time": 1606870599971
      },
      {
        "app_start_time": 1606903135907
      },
      {
        "app_start_time": 1606198688731
      },
      {
        "app_start_time": 1606921426841
      },
      {
        "app_start_time": 1606689586528
      },
      {
        "app_start_time": 1606494630316
      },
      {
        "app_start_time": 1606742106622
      },
      {
        "app_start_time": 1606337833437
      },
      {
        "app_start_time": 1606379727099
      },
      {
        "app_start_time": 1606770973598
      },
      {
        "app_start_time": 1606509417480
      },
      {
        "app_start_time": 1606354582927
      },
      {
        "app_start_time": 1606688359550
      },
      {
        "app_start_time": 1606301417145
      },
      {
        "app_start_time": 1606954321196
      },
      {
        "app_start_time": 1606264168918
      },
      {
        "app_start_time": 1606627785877
      },
      {
        "app_start_time": 1606572622427
      },
      {
        "app_start_time": 1606408078596
      },
      {
        "app_start_time": 1606892529990
      },
      {
        "app_start_time": 1606711864599
      },
      {
        "app_start_time": 1606263438505
      },
      {
        "app_start_time": 1606313798455
      },
      {
        "app_start_time": 1606789776005
      },
      {
        "app_start_time": 1606759115530
      },
      {
        "app_start_time": 1607027677549
      },
      {
        "app_start_time": 1606758698151
      },
      {
        "app_start_time": 1606589643914
      },
      {
        "app_start_time": 1606311853909
      },
      {
        "app_start_time": 1607026169241
      },
      {
        "app_start_time": 1606693439293
      },
      {
        "app_start_time": 1606756681921
      },
      {
        "app_start_time": 1606491873888
      },
      {
        "app_start_time": 1606682904416
      },
      {
        "app_start_time": 1607005766840
      },
      {
        "app_start_time": 1606468851410
      },
      {
        "app_start_time": 1606903846588
      },
      {
        "app_start_time": 1606363143104
      },
      {
        "app_start_time": 1606527931972
      },
      {
        "app_start_time": 1606426651791
      },
      {
        "app_start_time": 1606177665746
      },
      {
        "app_start_time": 1606736949684
      },
      {
        "app_start_time": 1606472575629
      },
      {
        "app_start_time": 1606273692826
      },
      {
        "app_start_time": 1606668129105
      },
      {
        "app_start_time": 1606739650051
      },
      {
        "app_start_time": 1606652335054
      },
      {
        "app_start_time": 1606605552978
      },
      {
        "app_start_time": 1606335810346
      },
      {
        "app_start_time": 1606750333975
      },
      {
        "app_start_time": 1606603485471
      },
      {
        "app_start_time": 1606943372819
      },
      {
        "app_start_time": 1606184516573
      },
      {
        "app_start_time": 1606676642537
      },
      {
        "app_start_time": 1606727407389
      },
      {
        "app_start_time": 1606795378036
      },
      {
        "app_start_time": 1606327001389
      },
      {
        "app_start_time": 1606546236795
      },
      {
        "app_start_time": 1606386021583
      },
      {
        "app_start_time": 1606626848692
      },
      {
        "app_start_time": 1606457903554
      },
      {
        "app_start_time": 1606873250268
      },
      {
        "app_start_time": 1606714761226
      },
      {
        "app_start_time": 1606738169713
      },
      {
        "app_start_time": 1606262593764
      },
      {
        "app_start_time": 1606471359018
      },
      {
        "app_start_time": 1606872283611
      },
      {
        "app_start_time": 1606537204510
      },
      {
        "app_start_time": 1606899850026
      },
      {
        "app_start_time": 1606567496203
      },
      {
        "app_start_time": 1606957045319
      },
      {
        "app_start_time": 1606968534747
      },
      {
        "app_start_time": 1606899434980
      },
      {
        "app_start_time": 1606184494440
      },
      {
        "app_start_time": 1606703946973
      },
      {
        "app_start_time": 1606441256034
      },
      {
        "app_start_time": 1606701395078
      },
      {
        "app_start_time": 1606884479256
      },
      {
        "app_start_time": 1606361627881
      },
      {
        "app_start_time": 1606880799634
      },
      {
        "app_start_time": 1606228059423
      },
      {
        "app_start_time": 1606504378878
      },
      {
        "app_start_time": 1606677447023
      },
      {
        "app_start_time": 1606974023936
      },
      {
        "app_start_time": 1606626523129
      },
      {
        "app_start_time": 1606867368090
      },
      {
        "app_start_time": 1606649021966
      },
      {
        "app_start_time": 1606807963392
      },
      {
        "app_start_time": 1607009322067
      },
      {
        "app_start_time": 1606961939534
      },
      {
        "app_start_time": 1606865269013
      },
      {
        "app_start_time": 1606835891588
      },
      {
        "app_start_time": 1606344791460
      },
      {
        "app_start_time": 1606404297515
      },
      {
        "app_start_time": 1606499222609
      },
      {
        "app_start_time": 1606518323829
      },
      {
        "app_start_time": 1606782597157
      },
      {
        "app_start_time": 1606531894492
      },
      {
        "app_start_time": 1606269996583
      },
      {
        "app_start_time": 1606258745870
      },
      {
        "app_start_time": 1606312873008
      },
      {
        "app_start_time": 1606330113412
      },
      {
        "app_start_time": 1606891702561
      },
      {
        "app_start_time": 1606706579726
      },
      {
        "app_start_time": 1606427093334
      },
      {
        "app_start_time": 1606751663350
      },
      {
        "app_start_time": 1607003474397
      },
      {
        "app_start_time": 1606751952140
      },
      {
        "app_start_time": 1606967469731
      },
      {
        "app_start_time": 1606673942059
      },
      {
        "app_start_time": 1606951612995
      },
      {
        "app_start_time": 1606819226491
      },
      {
        "app_start_time": 1606764323990
      },
      {
        "app_start_time": 1606869470677
      },
      {
        "app_start_time": 1606378437007
      },
      {
        "app_start_time": 1606693991758
      },
      {
        "app_start_time": 1606406556402
      },
      {
        "app_start_time": 1607018812521
      },
      {
        "app_start_time": 1606254226713
      },
      {
        "app_start_time": 1606918184483
      },
      {
        "app_start_time": 1606984973583
      },
      {
        "app_start_time": 1606454762147
      },
      {
        "app_start_time": 1606362671595
      },
      {
        "app_start_time": 1606758032106
      },
      {
        "app_start_time": 1606985297684
      },
      {
        "app_start_time": 1606197114885
      },
      {
        "app_start_time": 1606674587898
      },
      {
        "app_start_time": 1606435688913
      },
      {
        "app_start_time": 1606226440947
      },
      {
        "app_start_time": 1606927034595
      },
      {
        "app_start_time": 1606937218185
      },
      {
        "app_start_time": 1606977312116
      },
      {
        "app_start_time": 1606310008779
      },
      {
        "app_start_time": 1606476168411
      },
      {
        "app_start_time": 1606533352233
      },
      {
        "app_start_time": 1606971651905
      },
      {
        "app_start_time": 1606984474555
      },
      {
        "app_start_time": 1606931501486
      },
      {
        "app_start_time": 1606314320054
      },
      {
        "app_start_time": 1606731231812
      },
      {
        "app_start_time": 1606597005328
      },
      {
        "app_start_time": 1607000413323
      },
      {
        "app_start_time": 1606254570934
      },
      {
        "app_start_time": 1606596576994
      },
      {
        "app_start_time": 1606793252113
      },
      {
        "app_start_time": 1606455906924
      },
      {
        "app_start_time": 1606947708147
      },
      {
        "app_start_time": 1606987941358
      },
      {
        "app_start_time": 1606892408060
      },
      {
        "app_start_time": 1606480578837
      },
      {
        "app_start_time": 1606728390695
      },
      {
        "app_start_time": 1606859416379
      },
      {
        "app_start_time": 1607002896087
      },
      {
        "app_start_time": 1606980500403
      },
      {
        "app_start_time": 1606587189167
      },
      {
        "app_start_time": 1606681943630
      },
      {
        "app_start_time": 1606249808045
      },
      {
        "app_start_time": 1606192485943
      },
      {
        "app_start_time": 1606884110088
      },
      {
        "app_start_time": 1606459365562
      },
      {
        "app_start_time": 1606418095466
      },
      {
        "app_start_time": 1606623228964
      },
      {
        "app_start_time": 1606562691714
      },
      {
        "app_start_time": 1606540931416
      },
      {
        "app_start_time": 1606948783671
      },
      {
        "app_start_time": 1606687861823
      },
      {
        "app_start_time": 1606344256244
      },
      {
        "app_start_time": 1606224365919
      },
      {
        "app_start_time": 1606945623732
      },
      {
        "app_start_time": 1606272878309
      },
      {
        "app_start_time": 1606499218557
      },
      {
        "app_start_time": 1606521480501
      },
      {
        "app_start_time": 1606314268295
      },
      {
        "app_start_time": 1606433268088
      },
      {
        "app_start_time": 1606380103312
      },
      {
        "app_start_time": 1606629094709
      },
      {
        "app_start_time": 1606402499822
      },
      {
        "app_start_time": 1606558143777
      },
      {
        "app_start_time": 1606808718482
      },
      {
        "app_start_time": 1606605051598
      },
      {
        "app_start_time": 1606455914811
      },
      {
        "app_start_time": 1606712814439
      },
      {
        "app_start_time": 1606379583400
      },
      {
        "app_start_time": 1606755943468
      },
      {
        "app_start_time": 1606579120494
      },
      {
        "app_start_time": 1606716625562
      },
      {
        "app_start_time": 1606235648985
      },
      {
        "app_start_time": 1606563792717
      },
      {
        "app_start_time": 1606481425491
      },
      {
        "app_start_time": 1606917738916
      },
      {
        "app_start_time": 1606453619194
      },
      {
        "app_start_time": 1606258286385
      },
      {
        "app_start_time": 1606537588043
      },
      {
        "app_start_time": 1606473293907
      },
      {
        "app_start_time": 1606593645054
      },
      {
        "app_start_time": 1606577290028
      },
      {
        "app_start_time": 1606267593531
      },
      {
        "app_start_time": 1606989096427
      },
      {
        "app_start_time": 1606524388951
      },
      {
        "app_start_time": 1606170196056
      },
      {
        "app_start_time": 1606928848010
      },
      {
        "app_start_time": 1606957454322
      },
      {
        "app_start_time": 1606767763482
      },
      {
        "app_start_time": 1606494906998
      },
      {
        "app_start_time": 1606720451820
      },
      {
        "app_start_time": 1606478253136
      },
      {
        "app_start_time": 1606955676714
      },
      {
        "app_start_time": 1606663901688
      },
      {
        "app_start_time": 1606388507616
      },
      {
        "app_start_time": 1606524113353
      },
      {
        "app_start_time": 1606171489013
      },
      {
        "app_start_time": 1606742879884
      },
      {
        "app_start_time": 1606495880100
      },
      {
        "app_start_time": 1606854602657
      },
      {
        "app_start_time": 1606577571282
      },
      {
        "app_start_time": 1606843924543
      },
      {
        "app_start_time": 1606414585173
      },
      {
        "app_start_time": 1606497109026
      },
      {
        "app_start_time": 1606521643735
      },
      {
        "app_start_time": 1606409673359
      },
      {
        "app_start_time": 1606337784605
      },
      {
        "app_start_time": 1606599478430
      },
      {
        "app_start_time": 1606350700993
      },
      {
        "app_start_time": 1606224292770
      },
      {
        "app_start_time": 1606174760667
      },
      {
        "app_start_time": 1606910794169
      },
      {
        "app_start_time": 1606575294454
      },
      {
        "app_start_time": 1606863597586
      },
      {
        "app_start_time": 1606638244950
      },
      {
        "app_start_time": 1606703316545
      },
      {
        "app_start_time": 1606609092586
      },
      {
        "app_start_time": 1606332157099
      },
      {
        "app_start_time": 1606992543000
      },
      {
        "app_start_time": 1606302133061
      },
      {
        "app_start_time": 1606931109251
      },
      {
        "app_start_time": 1606602991886
      },
      {
        "app_start_time": 1606910955419
      },
      {
        "app_start_time": 1606475591134
      },
      {
        "app_start_time": 1606382576503
      },
      {
        "app_start_time": 1606530329692
      },
      {
        "app_start_time": 1606219249175
      },
      {
        "app_start_time": 1606223860500
      },
      {
        "app_start_time": 1606927416005
      },
      {
        "app_start_time": 1606943141005
      },
      {
        "app_start_time": 1606520534570
      },
      {
        "app_start_time": 1606337927133
      },
      {
        "app_start_time": 1606295985269
      },
      {
        "app_start_time": 1606562379513
      },
      {
        "app_start_time": 1606371809710
      },
      {
        "app_start_time": 1606318139720
      },
      {
        "app_start_time": 1606788431564
      },
      {
        "app_start_time": 1606738526022
      },
      {
        "app_start_time": 1606459618089
      },
      {
        "app_start_time": 1606250463867
      },
      {
        "app_start_time": 1606188143977
      },
      {
        "app_start_time": 1606621167168
      },
      {
        "app_start_time": 1606723332257
      },
      {
        "app_start_time": 1606859306442
      },
      {
        "app_start_time": 1606369716283
      },
      {
        "app_start_time": 1606266074900
      },
      {
        "app_start_time": 1606386225564
      },
      {
        "app_start_time": 1606169871957
      },
      {
        "app_start_time": 1606887911642
      },
      {
        "app_start_time": 1606804889069
      },
      {
        "app_start_time": 1606443987254
      },
      {
        "app_start_time": 1606733085542
      },
      {
        "app_start_time": 1606207822644
      },
      {
        "app_start_time": 1606298468439
      },
      {
        "app_start_time": 1606362322046
      },
      {
        "app_start_time": 1606444861847
      },
      {
        "app_start_time": 1606892375250
      },
      {
        "app_start_time": 1606636248873
      },
      {
        "app_start_time": 1606779643246
      },
      {
        "app_start_time": 1606696808635
      },
      {
        "app_start_time": 1606771710015
      },
      {
        "app_start_time": 1606455469997
      },
      {
        "app_start_time": 1606756652119
      },
      {
        "app_start_time": 1606962760175
      },
      {
        "app_start_time": 1606267835480
      },
      {
        "app_start_time": 1606996619470
      },
      {
        "app_start_time": 1606306325210
      },
      {
        "app_start_time": 1606887577709
      },
      {
        "app_start_time": 1606288394645
      },
      {
        "app_start_time": 1606279508369
      },
      {
        "app_start_time": 1606284222651
      },
      {
        "app_start_time": 1606933423874
      },
      {
        "app_start_time": 1607007526714
      },
      {
        "app_start_time": 1606247267375
      },
      {
        "app_start_time": 1606538980695
      },
      {
        "app_start_time": 1606307325141
      },
      {
        "app_start_time": 1606422049960
      },
      {
        "app_start_time": 1606628740564
      },
      {
        "app_start_time": 1606215727593
      },
      {
        "app_start_time": 1606648122620
      },
      {
        "app_start_time": 1606544288001
      },
      {
        "app_start_time": 1606512402098
      },
      {
        "app_start_time": 1606465056041
      },
      {
        "app_start_time": 1606775646195
      },
      {
        "app_start_time": 1606193495318
      },
      {
        "app_start_time": 1606780384775
      },
      {
        "app_start_time": 1606568175870
      },
      {
        "app_start_time": 1606629742026
      },
      {
        "app_start_time": 1606891666031
      },
      {
        "app_start_time": 1606234497596
      },
      {
        "app_start_time": 1606945063549
      },
      {
        "app_start_time": 1606986267767
      },
      {
        "app_start_time": 1606491022521
      },
      {
        "app_start_time": 1606489874720
      },
      {
        "app_start_time": 1606848297700
      },
      {
        "app_start_time": 1606210434832
      },
      {
        "app_start_time": 1606816608019
      },
      {
        "app_start_time": 1606218399448
      },
      {
        "app_start_time": 1606733820456
      },
      {
        "app_start_time": 1606956907050
      },
      {
        "app_start_time": 1606226227584
      },
      {
        "app_start_time": 1606666688908
      },
      {
        "app_start_time": 1606666222678
      },
      {
        "app_start_time": 1606456197236
      },
      {
        "app_start_time": 1606294684561
      },
      {
        "app_start_time": 1606560756260
      },
      {
        "app_start_time": 1606222120027
      },
      {
        "app_start_time": 1606382741913
      },
      {
        "app_start_time": 1606269477686
      },
      {
        "app_start_time": 1606467050669
      },
      {
        "app_start_time": 1606476365019
      },
      {
        "app_start_time": 1606774500933
      },
      {
        "app_start_time": 1606629864625
      },
      {
        "app_start_time": 1606488869125
      },
      {
        "app_start_time": 1606814251949
      },
      {
        "app_start_time": 1606233528484
      },
      {
        "app_start_time": 1606182599264
      },
      {
        "app_start_time": 1606233482525
      },
      {
        "app_start_time": 1606714642095
      },
      {
        "app_start_time": 1606746087436
      },
      {
        "app_start_time": 1606420582309
      },
      {
        "app_start_time": 1606196598650
      },
      {
        "app_start_time": 1607022938923
      },
      {
        "app_start_time": 1606577932359
      },
      {
        "app_start_time": 1606318688452
      },
      {
        "app_start_time": 1606326844397
      },
      {
        "app_start_time": 1606629941173
      },
      {
        "app_start_time": 1606255957861
      },
      {
        "app_start_time": 1606224627218
      },
      {
        "app_start_time": 1606797211521
      },
      {
        "app_start_time": 1606442864695
      },
      {
        "app_start_time": 1606908527930
      },
      {
        "app_start_time": 1607014776780
      },
      {
        "app_start_time": 1606626639816
      },
      {
        "app_start_time": 1606222131680
      },
      {
        "app_start_time": 1606292932144
      },
      {
        "app_start_time": 1606747139392
      },
      {
        "app_start_time": 1606618668945
      },
      {
        "app_start_time": 1606529489182
      },
      {
        "app_start_time": 1606684424187
      },
      {
        "app_start_time": 1606195701374
      },
      {
        "app_start_time": 1606345403971
      },
      {
        "app_start_time": 1606773949523
      },
      {
        "app_start_time": 1606348921205
      },
      {
        "app_start_time": 1606234126058
      },
      {
        "app_start_time": 1606311282787
      },
      {
        "app_start_time": 1606239007827
      },
      {
        "app_start_time": 1606609522158
      },
      {
        "app_start_time": 1606172718413
      },
      {
        "app_start_time": 1606890798354
      },
      {
        "app_start_time": 1606620183650
      },
      {
        "app_start_time": 1606282092292
      },
      {
        "app_start_time": 1606908387938
      },
      {
        "app_start_time": 1606952989945
      },
      {
        "app_start_time": 1606630912365
      },
      {
        "app_start_time": 1606518936618
      },
      {
        "app_start_time": 1606673291838
      },
      {
        "app_start_time": 1606597440149
      },
      {
        "app_start_time": 1606853360975
      },
      {
        "app_start_time": 1606700679691
      },
      {
        "app_start_time": 1606467086298
      },
      {
        "app_start_time": 1606264694945
      },
      {
        "app_start_time": 1607007466578
      },
      {
        "app_start_time": 1606421038828
      },
      {
        "app_start_time": 1606927018482
      },
      {
        "app_start_time": 1606609810834
      },
      {
        "app_start_time": 1606632455480
      },
      {
        "app_start_time": 1606810329954
      },
      {
        "app_start_time": 1606316553847
      },
      {
        "app_start_time": 1606626745062
      },
      {
        "app_start_time": 1606575277252
      },
      {
        "app_start_time": 1606774374205
      },
      {
        "app_start_time": 1606614932762
      },
      {
        "app_start_time": 1606399633595
      },
      {
        "app_start_time": 1606357942241
      },
      {
        "app_start_time": 1606710146194
      },
      {
        "app_start_time": 1606372002694
      },
      {
        "app_start_time": 1606454539982
      },
      {
        "app_start_time": 1606448472463
      },
      {
        "app_start_time": 1606702288060
      },
      {
        "app_start_time": 1606416592462
      },
      {
        "app_start_time": 1606372076859
      },
      {
        "app_start_time": 1606967339111
      },
      {
        "app_start_time": 1606995163283
      },
      {
        "app_start_time": 1606973517351
      },
      {
        "app_start_time": 1606849563440
      },
      {
        "app_start_time": 1606252114262
      },
      {
        "app_start_time": 1606516777204
      },
      {
        "app_start_time": 1606649497218
      },
      {
        "app_start_time": 1606571532457
      },
      {
        "app_start_time": 1606990795287
      },
      {
        "app_start_time": 1606245776161
      },
      {
        "app_start_time": 1606998484021
      },
      {
        "app_start_time": 1606588726322
      },
      {
        "app_start_time": 1606317602786
      },
      {
        "app_start_time": 1606277214395
      },
      {
        "app_start_time": 1606249147893
      },
      {
        "app_start_time": 1606995025558
      },
      {
        "app_start_time": 1606414750110
      },
      {
        "app_start_time": 1606654580503
      },
      {
        "app_start_time": 1606659070932
      },
      {
        "app_start_time": 1606978214665
      },
      {
        "app_start_time": 1606464524573
      },
      {
        "app_start_time": 1606416238286
      },
      {
        "app_start_time": 1606351103927
      },
      {
        "app_start_time": 1606317755305
      },
      {
        "app_start_time": 1606619568103
      },
      {
        "app_start_time": 1606702420773
      },
      {
        "app_start_time": 1607009398075
      },
      {
        "app_start_time": 1606407244238
      },
      {
        "app_start_time": 1606651142788
      },
      {
        "app_start_time": 1606954418139
      },
      {
        "app_start_time": 1606280038773
      },
      {
        "app_start_time": 1606590335080
      },
      {
        "app_start_time": 1606364528089
      },
      {
        "app_start_time": 1606526745820
      },
      {
        "app_start_time": 1607012310431
      },
      {
        "app_start_time": 1606190363071
      },
      {
        "app_start_time": 1606870555232
      },
      {
        "app_start_time": 1606252989296
      },
      {
        "app_start_time": 1606305467721
      },
      {
        "app_start_time": 1606375656216
      },
      {
        "app_start_time": 1606301753529
      },
      {
        "app_start_time": 1606201276633
      },
      {
        "app_start_time": 1606414707075
      },
      {
        "app_start_time": 1606282881162
      },
      {
        "app_start_time": 1606430446349
      },
      {
        "app_start_time": 1606740450684
      },
      {
        "app_start_time": 1606401694575
      },
      {
        "app_start_time": 1606979812209
      },
      {
        "app_start_time": 1606423973879
      },
      {
        "app_start_time": 1607006458340
      },
      {
        "app_start_time": 1606524330606
      },
      {
        "app_start_time": 1606189561383
      },
      {
        "app_start_time": 1606655778287
      },
      {
        "app_start_time": 1606529283102
      },
      {
        "app_start_time": 1606820599122
      },
      {
        "app_start_time": 1606976782625
      },
      {
        "app_start_time": 1606298071445
      },
      {
        "app_start_time": 1606216109943
      },
      {
        "app_start_time": 1606743205931
      },
      {
        "app_start_time": 1606410248007
      },
      {
        "app_start_time": 1606794556533
      },
      {
        "app_start_time": 1606873393928
      },
      {
        "app_start_time": 1606851359931
      },
      {
        "app_start_time": 1606825802069
      },
      {
        "app_start_time": 1606586008643
      },
      {
        "app_start_time": 1606989518718
      },
      {
        "app_start_time": 1606191594721
      },
      {
        "app_start_time": 1606324305856
      },
      {
        "app_start_time": 1606181974349
      },
      {
        "app_start_time": 1606553667432
      },
      {
        "app_start_time": 1606858878577
      },
      {
        "app_start_time": 1606865770769
      },
      {
        "app_start_time": 1606291410106
      },
      {
        "app_start_time": 1606587410920
      },
      {
        "app_start_time": 1606780820524
      },
      {
        "app_start_time": 1606320928676
      },
      {
        "app_start_time": 1606731433523
      },
      {
        "app_start_time": 1606464583198
      },
      {
        "app_start_time": 1606953989088
      },
      {
        "app_start_time": 1607027318124
      },
      {
        "app_start_time": 1606905473564
      },
      {
        "app_start_time": 1607005596673
      },
      {
        "app_start_time": 1606492522904
      },
      {
        "app_start_time": 1606923237884
      },
      {
        "app_start_time": 1606453090906
      },
      {
        "app_start_time": 1606180688373
      },
      {
        "app_start_time": 1606908832578
      },
      {
        "app_start_time": 1606262774401
      },
      {
        "app_start_time": 1606481384027
      },
      {
        "app_start_time": 1606248106306
      },
      {
        "app_start_time": 1606595801846
      },
      {
        "app_start_time": 1606227247529
      },
      {
        "app_start_time": 1606728911903
      },
      {
        "app_start_time": 1606791365974
      },
      {
        "app_start_time": 1606560371569
      },
      {
        "app_start_time": 1606900486960
      },
      {
        "app_start_time": 1606749387316
      },
      {
        "app_start_time": 1606669314594
      },
      {
        "app_start_time": 1606584767444
      },
      {
        "app_start_time": 1606618023590
      },
      {
        "app_start_time": 1606377624763
      },
      {
        "app_start_time": 1606361978246
      },
      {
        "app_start_time": 1606768404518
      },
      {
        "app_start_time": 1606674678480
      },
      {
        "app_start_time": 1606220838441
      },
      {
        "app_start_time": 1606959495948
      },
      {
        "app_start_time": 1606986353803
      },
      {
        "app_start_time": 1606722574968
      },
      {
        "app_start_time": 1606256096546
      },
      {
        "app_start_time": 1606732098135
      },
      {
        "app_start_time": 1606689286737
      },
      {
        "app_start_time": 1606191257133
      },
      {
        "app_start_time": 1606315299200
      },
      {
        "app_start_time": 1606671038632
      },
      {
        "app_start_time": 1606280754145
      },
      {
        "app_start_time": 1606897963735
      },
      {
        "app_start_time": 1606927389296
      },
      {
        "app_start_time": 1606682989937
      },
      {
        "app_start_time": 1606781779763
      },
      {
        "app_start_time": 1606458233244
      },
      {
        "app_start_time": 1606685543777
      },
      {
        "app_start_time": 1606453189755
      },
      {
        "app_start_time": 1606998581712
      },
      {
        "app_start_time": 1606873544333
      },
      {
        "app_start_time": 1606725869688
      },
      {
        "app_start_time": 1606878739218
      },
      {
        "app_start_time": 1606263059423
      },
      {
        "app_start_time": 1606414534648
      },
      {
        "app_start_time": 1606246512054
      },
      {
        "app_start_time": 1606890579131
      },
      {
        "app_start_time": 1606440566692
      },
      {
        "app_start_time": 1606323103049
      },
      {
        "app_start_time": 1606643216543
      },
      {
        "app_start_time": 1606264015996
      },
      {
        "app_start_time": 1606276317552
      },
      {
        "app_start_time": 1606323271325
      },
      {
        "app_start_time": 1606494775004
      },
      {
        "app_start_time": 1606715739879
      },
      {
        "app_start_time": 1607013406166
      },
      {
        "app_start_time": 1606385871781
      },
      {
        "app_start_time": 1606516188647
      },
      {
        "app_start_time": 1606949254599
      },
      {
        "app_start_time": 1606960961150
      },
      {
        "app_start_time": 1606435399025
      },
      {
        "app_start_time": 1606880444570
      },
      {
        "app_start_time": 1606375624048
      },
      {
        "app_start_time": 1606667464697
      },
      {
        "app_start_time": 1606759101435
      },
      {
        "app_start_time": 1606771368956
      },
      {
        "app_start_time": 1606436896633
      },
      {
        "app_start_time": 1606768677781
      },
      {
        "app_start_time": 1606366413476
      },
      {
        "app_start_time": 1606928728469
      },
      {
        "app_start_time": 1606590689205
      },
      {
        "app_start_time": 1606884349148
      },
      {
        "app_start_time": 1606364060102
      },
      {
        "app_start_time": 1606948799515
      },
      {
        "app_start_time": 1606868896407
      },
      {
        "app_start_time": 1606199370520
      },
      {
        "app_start_time": 1606208616692
      },
      {
        "app_start_time": 1606167469249
      },
      {
        "app_start_time": 1606718999408
      },
      {
        "app_start_time": 1606359635995
      },
      {
        "app_start_time": 1606912988020
      },
      {
        "app_start_time": 1606338840285
      },
      {
        "app_start_time": 1606502537593
      },
      {
        "app_start_time": 1606741538535
      },
      {
        "app_start_time": 1606224606989
      },
      {
        "app_start_time": 1606679228796
      },
      {
        "app_start_time": 1606834273125
      },
      {
        "app_start_time": 1606929181563
      },
      {
        "app_start_time": 1606214268583
      },
      {
        "app_start_time": 1606571713192
      },
      {
        "app_start_time": 1606522171976
      },
      {
        "app_start_time": 1606466163708
      },
      {
        "app_start_time": 1606573844393
      },
      {
        "app_start_time": 1606438526963
      },
      {
        "app_start_time": 1606789791964
      },
      {
        "app_start_time": 1606439348208
      },
      {
        "app_start_time": 1606999192518
      },
      {
        "app_start_time": 1606502047997
      },
      {
        "app_start_time": 1606266560521
      },
      {
        "app_start_time": 1606287038414
      },
      {
        "app_start_time": 1606249964452
      },
      {
        "app_start_time": 1606216749660
      },
      {
        "app_start_time": 1606345801078
      },
      {
        "app_start_time": 1606448119299
      },
      {
        "app_start_time": 1606314689483
      },
      {
        "app_start_time": 1606883707118
      },
      {
        "app_start_time": 1606776505804
      },
      {
        "app_start_time": 1606338482437
      },
      {
        "app_start_time": 1606721649678
      },
      {
        "app_start_time": 1606890949543
      },
      {
        "app_start_time": 1606621921341
      },
      {
        "app_start_time": 1606369891938
      },
      {
        "app_start_time": 1606368285919
      },
      {
        "app_start_time": 1606874260880
      },
      {
        "app_start_time": 1606500331500
      },
      {
        "app_start_time": 1606491021143
      },
      {
        "app_start_time": 1606653939831
      },
      {
        "app_start_time": 1606380226861
      },
      {
        "app_start_time": 1606381100299
      },
      {
        "app_start_time": 1606524787087
      },
      {
        "app_start_time": 1606202693397
      },
      {
        "app_start_time": 1606945951495
      },
      {
        "app_start_time": 1606801736646
      },
      {
        "app_start_time": 1606357830093
      },
      {
        "app_start_time": 1606778045775
      },
      {
        "app_start_time": 1606891758195
      },
      {
        "app_start_time": 1606687678672
      },
      {
        "app_start_time": 1606175992188
      },
      {
        "app_start_time": 1606989778500
      },
      {
        "app_start_time": 1606661110146
      },
      {
        "app_start_time": 1606382174189
      },
      {
        "app_start_time": 1606811989426
      },
      {
        "app_start_time": 1606819943323
      },
      {
        "app_start_time": 1606916373203
      },
      {
        "app_start_time": 1606335916881
      },
      {
        "app_start_time": 1606617044667
      },
      {
        "app_start_time": 1606859931795
      },
      {
        "app_start_time": 1606241571040
      },
      {
        "app_start_time": 1606572806949
      },
      {
        "app_start_time": 1606863899612
      },
      {
        "app_start_time": 1607013639270
      },
      {
        "app_start_time": 1606426957285
      },
      {
        "app_start_time": 1606221487973
      },
      {
        "app_start_time": 1606788589611
      },
      {
        "app_start_time": 1606600763897
      },
      {
        "app_start_time": 1606717914297
      },
      {
        "app_start_time": 1606248227407
      },
      {
        "app_start_time": 1606356238034
      },
      {
        "app_start_time": 1606301078531
      },
      {
        "app_start_time": 1606718483202
      },
      {
        "app_start_time": 1606223819286
      },
      {
        "app_start_time": 1606609047154
      },
      {
        "app_start_time": 1606926294672
      },
      {
        "app_start_time": 1606171998740
      },
      {
        "app_start_time": 1606655870130
      },
      {
        "app_start_time": 1606391700946
      },
      {
        "app_start_time": 1606825860753
      },
      {
        "app_start_time": 1606367455528
      },
      {
        "app_start_time": 1607024843796
      },
      {
        "app_start_time": 1606788138771
      },
      {
        "app_start_time": 1606814594477
      },
      {
        "app_start_time": 1606227827054
      },
      {
        "app_start_time": 1606381495351
      },
      {
        "app_start_time": 1606248174572
      },
      {
        "app_start_time": 1606747063443
      },
      {
        "app_start_time": 1606338903355
      },
      {
        "app_start_time": 1606958930349
      },
      {
        "app_start_time": 1606658114410
      },
      {
        "app_start_time": 1606772476268
      },
      {
        "app_start_time": 1606969520519
      },
      {
        "app_start_time": 1606828062399
      },
      {
        "app_start_time": 1606315388407
      },
      {
        "app_start_time": 1606432152267
      },
      {
        "app_start_time": 1606979396461
      },
      {
        "app_start_time": 1606366518761
      },
      {
        "app_start_time": 1606930021420
      },
      {
        "app_start_time": 1606456723559
      },
      {
        "app_start_time": 1606401159777
      },
      {
        "app_start_time": 1606820594214
      },
      {
        "app_start_time": 1606730888131
      },
      {
        "app_start_time": 1606843657595
      },
      {
        "app_start_time": 1606517700456
      },
      {
        "app_start_time": 1606360828498
      },
      {
        "app_start_time": 1606508837117
      },
      {
        "app_start_time": 1606535133819
      },
      {
        "app_start_time": 1606506163999
      },
      {
        "app_start_time": 1606596867970
      },
      {
        "app_start_time": 1606879664121
      },
      {
        "app_start_time": 1606711596524
      },
      {
        "app_start_time": 1606380292288
      },
      {
        "app_start_time": 1606731829701
      },
      {
        "app_start_time": 1606262054511
      },
      {
        "app_start_time": 1607013084975
      },
      {
        "app_start_time": 1606823906744
      },
      {
        "app_start_time": 1606950330072
      },
      {
        "app_start_time": 1606725506469
      },
      {
        "app_start_time": 1606354167104
      },
      {
        "app_start_time": 1606347720032
      },
      {
        "app_start_time": 1606363891544
      },
      {
        "app_start_time": 1606900206632
      },
      {
        "app_start_time": 1606809504679
      },
      {
        "app_start_time": 1606890551815
      },
      {
        "app_start_time": 1606296197258
      },
      {
        "app_start_time": 1606261879267
      },
      {
        "app_start_time": 1606443108310
      },
      {
        "app_start_time": 1606286391798
      },
      {
        "app_start_time": 1606822745159
      },
      {
        "app_start_time": 1606689594822
      },
      {
        "app_start_time": 1606431274651
      },
      {
        "app_start_time": 1606356468651
      },
      {
        "app_start_time": 1606519830557
      },
      {
        "app_start_time": 1606519076697
      },
      {
        "app_start_time": 1606974335636
      },
      {
        "app_start_time": 1606995150685
      },
      {
        "app_start_time": 1606559957296
      },
      {
        "app_start_time": 1606196580614
      },
      {
        "app_start_time": 1606752934773
      },
      {
        "app_start_time": 1606942941137
      },
      {
        "app_start_time": 1606237023334
      },
      {
        "app_start_time": 1606307158386
      },
      {
        "app_start_time": 1606478858144
      },
      {
        "app_start_time": 1606679220571
      },
      {
        "app_start_time": 1607019596221
      },
      {
        "app_start_time": 1606971921849
      },
      {
        "app_start_time": 1606369227623
      },
      {
        "app_start_time": 1606696935760
      },
      {
        "app_start_time": 1606549680781
      },
      {
        "app_start_time": 1606935514217
      },
      {
        "app_start_time": 1606705277495
      },
      {
        "app_start_time": 1606485393758
      },
      {
        "app_start_time": 1606817600114
      },
      {
        "app_start_time": 1606281142063
      },
      {
        "app_start_time": 1606401710639
      },
      {
        "app_start_time": 1606522568867
      },
      {
        "app_start_time": 1606480080884
      },
      {
        "app_start_time": 1606439684110
      },
      {
        "app_start_time": 1606720384797
      },
      {
        "app_start_time": 1606911063647
      },
      {
        "app_start_time": 1606495903696
      },
      {
        "app_start_time": 1606505387089
      },
      {
        "app_start_time": 1606199258861
      },
      {
        "app_start_time": 1606709651968
      },
      {
        "app_start_time": 1606634081615
      },
      {
        "app_start_time": 1606247562060
      },
      {
        "app_start_time": 1606610583736
      },
      {
        "app_start_time": 1606501245441
      },
      {
        "app_start_time": 1606625816280
      },
      {
        "app_start_time": 1606502786947
      },
      {
        "app_start_time": 1606561199599
      },
      {
        "app_start_time": 1606385396863
      },
      {
        "app_start_time": 1606792656271
      },
      {
        "app_start_time": 1606292980712
      },
      {
        "app_start_time": 1606875983984
      },
      {
        "app_start_time": 1606359308033
      },
      {
        "app_start_time": 1606609838980
      },
      {
        "app_start_time": 1606747255070
      },
      {
        "app_start_time": 1606247659001
      },
      {
        "app_start_time": 1606166454653
      },
      {
        "app_start_time": 1606951194639
      },
      {
        "app_start_time": 1606985981208
      },
      {
        "app_start_time": 1606952968488
      },
      {
        "app_start_time": 1606952063837
      },
      {
        "app_start_time": 1606397167786
      },
      {
        "app_start_time": 1606686984825
      },
      {
        "app_start_time": 1606344960365
      },
      {
        "app_start_time": 1606295664825
      },
      {
        "app_start_time": 1606724310644
      },
      {
        "app_start_time": 1606810258636
      },
      {
        "app_start_time": 1606308586623
      },
      {
        "app_start_time": 1606821234059
      },
      {
        "app_start_time": 1606399291053
      },
      {
        "app_start_time": 1606259967475
      },
      {
        "app_start_time": 1606470735056
      },
      {
        "app_start_time": 1606646716614
      },
      {
        "app_start_time": 1606502819058
      },
      {
        "app_start_time": 1606966060465
      },
      {
        "app_start_time": 1606854773509
      },
      {
        "app_start_time": 1606749093301
      },
      {
        "app_start_time": 1606442400144
      },
      {
        "app_start_time": 1606969601187
      },
      {
        "app_start_time": 1606707261289
      },
      {
        "app_start_time": 1606252797276
      },
      {
        "app_start_time": 1606561011558
      },
      {
        "app_start_time": 1606661507925
      },
      {
        "app_start_time": 1606861795435
      },
      {
        "app_start_time": 1606244638399
      },
      {
        "app_start_time": 1606472837291
      },
      {
        "app_start_time": 1606879389332
      },
      {
        "app_start_time": 1606917174883
      },
      {
        "app_start_time": 1606709720185
      },
      {
        "app_start_time": 1606224130586
      },
      {
        "app_start_time": 1606367099136
      },
      {
        "app_start_time": 1606437670619
      },
      {
        "app_start_time": 1606844768785
      },
      {
        "app_start_time": 1606596209487
      },
      {
        "app_start_time": 1606860334500
      },
      {
        "app_start_time": 1606223534418
      },
      {
        "app_start_time": 1606622844599
      },
      {
        "app_start_time": 1607013251693
      },
      {
        "app_start_time": 1607026655520
      },
      {
        "app_start_time": 1606506560039
      },
      {
        "app_start_time": 1606814549403
      },
      {
        "app_start_time": 1606876057729
      },
      {
        "app_start_time": 1606648687054
      },
      {
        "app_start_time": 1606932898764
      },
      {
        "app_start_time": 1606542162608
      },
      {
        "app_start_time": 1606667434985
      },
      {
        "app_start_time": 1606748781353
      },
      {
        "app_start_time": 1606720582191
      },
      {
        "app_start_time": 1606424707024
      },
      {
        "app_start_time": 1606436670551
      },
      {
        "app_start_time": 1606667933404
      },
      {
        "app_start_time": 1606278401977
      },
      {
        "app_start_time": 1606504716890
      },
      {
        "app_start_time": 1607009115874
      },
      {
        "app_start_time": 1606894517925
      },
      {
        "app_start_time": 1606622521305
      },
      {
        "app_start_time": 1606852666104
      },
      {
        "app_start_time": 1606682631029
      },
      {
        "app_start_time": 1606890992537
      },
      {
        "app_start_time": 1606916937329
      },
      {
        "app_start_time": 1606264596999
      },
      {
        "app_start_time": 1606444823173
      },
      {
        "app_start_time": 1606596279625
      },
      {
        "app_start_time": 1606370694355
      },
      {
        "app_start_time": 1606481607847
      },
      {
        "app_start_time": 1606533475075
      },
      {
        "app_start_time": 1606542797214
      },
      {
        "app_start_time": 1606478977654
      },
      {
        "app_start_time": 1606745740577
      },
      {
        "app_start_time": 1606595110943
      },
      {
        "app_start_time": 1606448410101
      },
      {
        "app_start_time": 1606548068752
      },
      {
        "app_start_time": 1606988763488
      },
      {
        "app_start_time": 1606562261729
      },
      {
        "app_start_time": 1606373497847
      },
      {
        "app_start_time": 1606897302973
      },
      {
        "app_start_time": 1606393622735
      },
      {
        "app_start_time": 1606608463405
      },
      {
        "app_start_time": 1606596649440
      },
      {
        "app_start_time": 1606207407338
      },
      {
        "app_start_time": 1606862927394
      },
      {
        "app_start_time": 1606392217356
      },
      {
        "app_start_time": 1606429644552
      },
      {
        "app_start_time": 1606859957095
      },
      {
        "app_start_time": 1606543822845
      },
      {
        "app_start_time": 1606201836761
      },
      {
        "app_start_time": 1606211301180
      },
      {
        "app_start_time": 1606641434294
      },
      {
        "app_start_time": 1606439782769
      },
      {
        "app_start_time": 1606209976188
      },
      {
        "app_start_time": 1606284241499
      },
      {
        "app_start_time": 1606681420274
      },
      {
        "app_start_time": 1606720504117
      },
      {
        "app_start_time": 1606249002705
      },
      {
        "app_start_time": 1606563167851
      },
      {
        "app_start_time": 1606826040378
      },
      {
        "app_start_time": 1606885917431
      },
      {
        "app_start_time": 1606898981523
      },
      {
        "app_start_time": 1606836789993
      },
      {
        "app_start_time": 1606292796152
      },
      {
        "app_start_time": 1606261318287
      },
      {
        "app_start_time": 1606787295569
      },
      {
        "app_start_time": 1606788062153
      },
      {
        "app_start_time": 1606724621322
      },
      {
        "app_start_time": 1606976889012
      },
      {
        "app_start_time": 1606623170397
      },
      {
        "app_start_time": 1606230753203
      },
      {
        "app_start_time": 1606478315345
      },
      {
        "app_start_time": 1606588777632
      },
      {
        "app_start_time": 1606523056561
      },
      {
        "app_start_time": 1606527586897
      },
      {
        "app_start_time": 1606870486616
      },
      {
        "app_start_time": 1606424052401
      },
      {
        "app_start_time": 1606232063431
      },
      {
        "app_start_time": 1606478691532
      },
      {
        "app_start_time": 1606501854958
      },
      {
        "app_start_time": 1606375370209
      },
      {
        "app_start_time": 1606391332263
      },
      {
        "app_start_time": 1606425196592
      },
      {
        "app_start_time": 1606482993130
      },
      {
        "app_start_time": 1606458957675
      },
      {
        "app_start_time": 1606283592462
      },
      {
        "app_start_time": 1606941711745
      },
      {
        "app_start_time": 1606322231870
      },
      {
        "app_start_time": 1606195076368
      },
      {
        "app_start_time": 1606785710622
      },
      {
        "app_start_time": 1606833421211
      },
      {
        "app_start_time": 1606282186925
      },
      {
        "app_start_time": 1606226179333
      },
      {
        "app_start_time": 1606905751327
      },
      {
        "app_start_time": 1606965833045
      },
      {
        "app_start_time": 1606435835361
      },
      {
        "app_start_time": 1606565384428
      },
      {
        "app_start_time": 1606530442853
      },
      {
        "app_start_time": 1606943860604
      },
      {
        "app_start_time": 1606419044018
      },
      {
        "app_start_time": 1606341630003
      },
      {
        "app_start_time": 1606298760504
      },
      {
        "app_start_time": 1606555903358
      },
      {
        "app_start_time": 1606502094035
      },
      {
        "app_start_time": 1606313147339
      },
      {
        "app_start_time": 1606238274658
      },
      {
        "app_start_time": 1606356646261
      },
      {
        "app_start_time": 1607011436231
      },
      {
        "app_start_time": 1606288658740
      },
      {
        "app_start_time": 1606966243518
      },
      {
        "app_start_time": 1606336299574
      },
      {
        "app_start_time": 1606382102590
      },
      {
        "app_start_time": 1606767900993
      },
      {
        "app_start_time": 1606319918859
      },
      {
        "app_start_time": 1606455711150
      },
      {
        "app_start_time": 1606809558501
      },
      {
        "app_start_time": 1606428481602
      },
      {
        "app_start_time": 1606192431019
      },
      {
        "app_start_time": 1606251149916
      },
      {
        "app_start_time": 1606495571374
      },
      {
        "app_start_time": 1606723755774
      },
      {
        "app_start_time": 1606831607413
      },
      {
        "app_start_time": 1606438753378
      },
      {
        "app_start_time": 1606599902821
      },
      {
        "app_start_time": 1606544574445
      },
      {
        "app_start_time": 1606843463330
      },
      {
        "app_start_time": 1606791141386
      },
      {
        "app_start_time": 1606855060552
      },
      {
        "app_start_time": 1606892382527
      },
      {
        "app_start_time": 1606302765678
      },
      {
        "app_start_time": 1606628191313
      },
      {
        "app_start_time": 1606537429499
      },
      {
        "app_start_time": 1606341628844
      },
      {
        "app_start_time": 1606451209647
      },
      {
        "app_start_time": 1606696079669
      },
      {
        "app_start_time": 1606927527918
      },
      {
        "app_start_time": 1606384545542
      },
      {
        "app_start_time": 1606483447508
      },
      {
        "app_start_time": 1606783770927
      },
      {
        "app_start_time": 1606763820280
      },
      {
        "app_start_time": 1606851725427
      },
      {
        "app_start_time": 1606649730842
      },
      {
        "app_start_time": 1606572059181
      },
      {
        "app_start_time": 1606451038733
      },
      {
        "app_start_time": 1606346612032
      },
      {
        "app_start_time": 1606710220366
      },
      {
        "app_start_time": 1606930564973
      },
      {
        "app_start_time": 1606753571803
      },
      {
        "app_start_time": 1606348403423
      },
      {
        "app_start_time": 1606969967508
      },
      {
        "app_start_time": 1606904548098
      },
      {
        "app_start_time": 1606513415433
      },
      {
        "app_start_time": 1606741722870
      },
      {
        "app_start_time": 1606863293285
      },
      {
        "app_start_time": 1606276346412
      },
      {
        "app_start_time": 1606888952831
      },
      {
        "app_start_time": 1606205480979
      },
      {
        "app_start_time": 1606602955227
      },
      {
        "app_start_time": 1606691211335
      },
      {
        "app_start_time": 1606696762325
      },
      {
        "app_start_time": 1606598458703
      },
      {
        "app_start_time": 1606605497790
      },
      {
        "app_start_time": 1606715187876
      },
      {
        "app_start_time": 1606696088211
      },
      {
        "app_start_time": 1606537781290
      },
      {
        "app_start_time": 1606677843472
      },
      {
        "app_start_time": 1606710051731
      },
      {
        "app_start_time": 1606424630933
      },
      {
        "app_start_time": 1606959717642
      },
      {
        "app_start_time": 1606924146872
      },
      {
        "app_start_time": 1607020428461
      },
      {
        "app_start_time": 1606714591336
      },
      {
        "app_start_time": 1606312586698
      },
      {
        "app_start_time": 1606475807785
      },
      {
        "app_start_time": 1606333333812
      },
      {
        "app_start_time": 1606745814124
      },
      {
        "app_start_time": 1606201757066
      },
      {
        "app_start_time": 1606288628048
      },
      {
        "app_start_time": 1606398754200
      },
      {
        "app_start_time": 1606805534114
      },
      {
        "app_start_time": 1606327979317
      },
      {
        "app_start_time": 1606365222316
      },
      {
        "app_start_time": 1606383247894
      },
      {
        "app_start_time": 1606644997987
      },
      {
        "app_start_time": 1606507401353
      },
      {
        "app_start_time": 1606811345787
      },
      {
        "app_start_time": 1606803366132
      },
      {
        "app_start_time": 1606399549047
      },
      {
        "app_start_time": 1606327320055
      },
      {
        "app_start_time": 1606590393896
      },
      {
        "app_start_time": 1606194680067
      },
      {
        "app_start_time": 1606342471233
      },
      {
        "app_start_time": 1606645240339
      },
      {
        "app_start_time": 1606193982993
      },
      {
        "app_start_time": 1606893594025
      },
      {
        "app_start_time": 1606728096063
      },
      {
        "app_start_time": 1606801883950
      },
      {
        "app_start_time": 1606278797436
      },
      {
        "app_start_time": 1606851572664
      },
      {
        "app_start_time": 1606897903813
      },
      {
        "app_start_time": 1606880825992
      },
      {
        "app_start_time": 1606406491998
      },
      {
        "app_start_time": 1606232586247
      },
      {
        "app_start_time": 1606981005992
      },
      {
        "app_start_time": 1606995257881
      },
      {
        "app_start_time": 1606654534113
      },
      {
        "app_start_time": 1606908699137
      },
      {
        "app_start_time": 1606834489802
      },
      {
        "app_start_time": 1606822395053
      },
      {
        "app_start_time": 1606823069494
      },
      {
        "app_start_time": 1606433381377
      },
      {
        "app_start_time": 1607018369483
      },
      {
        "app_start_time": 1606800567609
      },
      {
        "app_start_time": 1606929151509
      },
      {
        "app_start_time": 1606235550854
      },
      {
        "app_start_time": 1606545154261
      },
      {
        "app_start_time": 1606304672585
      },
      {
        "app_start_time": 1606599450442
      },
      {
        "app_start_time": 1606863992976
      },
      {
        "app_start_time": 1606749475494
      },
      {
        "app_start_time": 1606658481817
      },
      {
        "app_start_time": 1606221930811
      },
      {
        "app_start_time": 1606853929642
      },
      {
        "app_start_time": 1606825719385
      },
      {
        "app_start_time": 1606553165756
      },
      {
        "app_start_time": 1606463261917
      },
      {
        "app_start_time": 1606694609092
      },
      {
        "app_start_time": 1606779003157
      },
      {
        "app_start_time": 1606966494230
      },
      {
        "app_start_time": 1606741967334
      },
      {
        "app_start_time": 1606382758415
      },
      {
        "app_start_time": 1606616593213
      },
      {
        "app_start_time": 1606323173823
      },
      {
        "app_start_time": 1606711828216
      },
      {
        "app_start_time": 1606521234774
      },
      {
        "app_start_time": 1606387658397
      },
      {
        "app_start_time": 1606574451302
      },
      {
        "app_start_time": 1606887853780
      },
      {
        "app_start_time": 1606888681352
      },
      {
        "app_start_time": 1606240524185
      },
      {
        "app_start_time": 1606457630398
      },
      {
        "app_start_time": 1606747828750
      },
      {
        "app_start_time": 1606898054630
      },
      {
        "app_start_time": 1606771261083
      },
      {
        "app_start_time": 1606437407365
      },
      {
        "app_start_time": 1606441604287
      },
      {
        "app_start_time": 1606508124689
      },
      {
        "app_start_time": 1606538206455
      },
      {
        "app_start_time": 1606469695327
      },
      {
        "app_start_time": 1606282207531
      },
      {
        "app_start_time": 1606187260266
      },
      {
        "app_start_time": 1606474836673
      },
      {
        "app_start_time": 1606369991737
      },
      {
        "app_start_time": 1606308220737
      },
      {
        "app_start_time": 1606519233760
      },
      {
        "app_start_time": 1606203702543
      },
      {
        "app_start_time": 1606574798696
      },
      {
        "app_start_time": 1606722270007
      },
      {
        "app_start_time": 1606721689806
      },
      {
        "app_start_time": 1606874589872
      },
      {
        "app_start_time": 1606892389955
      },
      {
        "app_start_time": 1606663913280
      },
      {
        "app_start_time": 1606427105638
      },
      {
        "app_start_time": 1606398409238
      },
      {
        "app_start_time": 1606351677216
      },
      {
        "app_start_time": 1606825371275
      },
      {
        "app_start_time": 1606715142051
      },
      {
        "app_start_time": 1606438259129
      },
      {
        "app_start_time": 1606843165738
      },
      {
        "app_start_time": 1606928689963
      },
      {
        "app_start_time": 1606929544400
      },
      {
        "app_start_time": 1606830786415
      },
      {
        "app_start_time": 1606746407221
      },
      {
        "app_start_time": 1606311332342
      },
      {
        "app_start_time": 1606664920353
      },
      {
        "app_start_time": 1606803935506
      },
      {
        "app_start_time": 1606513110046
      },
      {
        "app_start_time": 1606696901089
      },
      {
        "app_start_time": 1606263559464
      },
      {
        "app_start_time": 1606638896322
      },
      {
        "app_start_time": 1606678304515
      },
      {
        "app_start_time": 1606774575390
      },
      {
        "app_start_time": 1606928952302
      },
      {
        "app_start_time": 1606535583943
      },
      {
        "app_start_time": 1606856334043
      },
      {
        "app_start_time": 1606975044989
      },
      {
        "app_start_time": 1606657535142
      },
      {
        "app_start_time": 1606968384405
      },
      {
        "app_start_time": 1606881071586
      },
      {
        "app_start_time": 1606395096987
      },
      {
        "app_start_time": 1606828600722
      },
      {
        "app_start_time": 1606234861613
      },
      {
        "app_start_time": 1606266955865
      },
      {
        "app_start_time": 1606619893746
      },
      {
        "app_start_time": 1606914498098
      },
      {
        "app_start_time": 1606895303322
      },
      {
        "app_start_time": 1606633319768
      },
      {
        "app_start_time": 1607006926241
      },
      {
        "app_start_time": 1606540943829
      },
      {
        "app_start_time": 1606852426369
      },
      {
        "app_start_time": 1606171324713
      },
      {
        "app_start_time": 1606677010035
      },
      {
        "app_start_time": 1606719309991
      },
      {
        "app_start_time": 1606318303846
      },
      {
        "app_start_time": 1606768008728
      },
      {
        "app_start_time": 1606618164630
      },
      {
        "app_start_time": 1606501002845
      },
      {
        "app_start_time": 1606247191872
      },
      {
        "app_start_time": 1606432428062
      },
      {
        "app_start_time": 1606754002950
      },
      {
        "app_start_time": 1606430369133
      },
      {
        "app_start_time": 1606593835388
      },
      {
        "app_start_time": 1606635322225
      },
      {
        "app_start_time": 1606222236688
      },
      {
        "app_start_time": 1606568079663
      },
      {
        "app_start_time": 1606371483903
      },
      {
        "app_start_time": 1606402535234
      },
      {
        "app_start_time": 1606870287718
      },
      {
        "app_start_time": 1606300849678
      },
      {
        "app_start_time": 1606505888768
      },
      {
        "app_start_time": 1606399657972
      },
      {
        "app_start_time": 1606570961764
      },
      {
        "app_start_time": 1606936712857
      },
      {
        "app_start_time": 1606631424505
      },
      {
        "app_start_time": 1606295334141
      },
      {
        "app_start_time": 1606508967849
      },
      {
        "app_start_time": 1606904314146
      },
      {
        "app_start_time": 1606223794781
      },
      {
        "app_start_time": 1606201859915
      },
      {
        "app_start_time": 1606671518874
      },
      {
        "app_start_time": 1606223822647
      },
      {
        "app_start_time": 1606501486287
      },
      {
        "app_start_time": 1606938792100
      },
      {
        "app_start_time": 1606248441510
      },
      {
        "app_start_time": 1606256244954
      },
      {
        "app_start_time": 1606642899604
      },
      {
        "app_start_time": 1607029401909
      },
      {
        "app_start_time": 1607000087119
      },
      {
        "app_start_time": 1606658073863
      },
      {
        "app_start_time": 1606802924779
      },
      {
        "app_start_time": 1606627954741
      },
      {
        "app_start_time": 1606851821021
      },
      {
        "app_start_time": 1606563616650
      },
      {
        "app_start_time": 1606537493203
      },
      {
        "app_start_time": 1606313757485
      },
      {
        "app_start_time": 1606954814630
      },
      {
        "app_start_time": 1606697038414
      },
      {
        "app_start_time": 1606658993350
      },
      {
        "app_start_time": 1606979665784
      },
      {
        "app_start_time": 1606877571307
      },
      {
        "app_start_time": 1606857420581
      },
      {
        "app_start_time": 1606432778600
      },
      {
        "app_start_time": 1606759907117
      },
      {
        "app_start_time": 1606543430596
      },
      {
        "app_start_time": 1606709165104
      },
      {
        "app_start_time": 1606983003342
      },
      {
        "app_start_time": 1606433411387
      },
      {
        "app_start_time": 1606243059253
      },
      {
        "app_start_time": 1606984177725
      },
      {
        "app_start_time": 1606514388786
      },
      {
        "app_start_time": 1606407379914
      },
      {
        "app_start_time": 1606725122972
      },
      {
        "app_start_time": 1606588341217
      },
      {
        "app_start_time": 1606978678507
      },
      {
        "app_start_time": 1606741698040
      },
      {
        "app_start_time": 1606484764878
      },
      {
        "app_start_time": 1606666355216
      },
      {
        "app_start_time": 1606699942718
      },
      {
        "app_start_time": 1607017750538
      },
      {
        "app_start_time": 1606655105916
      },
      {
        "app_start_time": 1606988509299
      },
      {
        "app_start_time": 1606955905909
      },
      {
        "app_start_time": 1606516475199
      },
      {
        "app_start_time": 1606896502885
      },
      {
        "app_start_time": 1606678389417
      },
      {
        "app_start_time": 1606748501381
      },
      {
        "app_start_time": 1606910307169
      },
      {
        "app_start_time": 1606560277374
      },
      {
        "app_start_time": 1606334055652
      },
      {
        "app_start_time": 1606719637831
      },
      {
        "app_start_time": 1606652108999
      },
      {
        "app_start_time": 1606263393185
      },
      {
        "app_start_time": 1606454112863
      },
      {
        "app_start_time": 1606417437623
      },
      {
        "app_start_time": 1606909485445
      },
      {
        "app_start_time": 1606590108562
      },
      {
        "app_start_time": 1606453522024
      },
      {
        "app_start_time": 1607021154474
      },
      {
        "app_start_time": 1606370229185
      },
      {
        "app_start_time": 1606323737812
      },
      {
        "app_start_time": 1606885904069
      },
      {
        "app_start_time": 1606601656426
      },
      {
        "app_start_time": 1606410047455
      },
      {
        "app_start_time": 1606898193658
      },
      {
        "app_start_time": 1606579850816
      },
      {
        "app_start_time": 1606906440213
      },
      {
        "app_start_time": 1606436424253
      },
      {
        "app_start_time": 1606380539629
      },
      {
        "app_start_time": 1606216348411
      },
      {
        "app_start_time": 1606550678299
      },
      {
        "app_start_time": 1606814126422
      },
      {
        "app_start_time": 1606859136034
      },
      {
        "app_start_time": 1606875285941
      },
      {
        "app_start_time": 1606679788533
      },
      {
        "app_start_time": 1606284631668
      },
      {
        "app_start_time": 1606552304754
      },
      {
        "app_start_time": 1606194593158
      },
      {
        "app_start_time": 1606267508717
      },
      {
        "app_start_time": 1606886251372
      },
      {
        "app_start_time": 1606911581531
      },
      {
        "app_start_time": 1606506534298
      },
      {
        "app_start_time": 1606863648382
      },
      {
        "app_start_time": 1606904588103
      },
      {
        "app_start_time": 1606484313860
      },
      {
        "app_start_time": 1606993222110
      },
      {
        "app_start_time": 1606218925800
      },
      {
        "app_start_time": 1606888218731
      },
      {
        "app_start_time": 1606945008167
      },
      {
        "app_start_time": 1607008487805
      },
      {
        "app_start_time": 1606986585562
      },
      {
        "app_start_time": 1606988066792
      },
      {
        "app_start_time": 1606752815384
      },
      {
        "app_start_time": 1606853538998
      },
      {
        "app_start_time": 1606832721482
      },
      {
        "app_start_time": 1607007561771
      },
      {
        "app_start_time": 1606898210803
      },
      {
        "app_start_time": 1606755284819
      },
      {
        "app_start_time": 1606492909794
      },
      {
        "app_start_time": 1606498061709
      },
      {
        "app_start_time": 1606241435355
      },
      {
        "app_start_time": 1606920078080
      },
      {
        "app_start_time": 1606192356553
      },
      {
        "app_start_time": 1606584640908
      },
      {
        "app_start_time": 1606267627355
      },
      {
        "app_start_time": 1607027900180
      },
      {
        "app_start_time": 1606488875180
      },
      {
        "app_start_time": 1606353573484
      },
      {
        "app_start_time": 1606486261555
      },
      {
        "app_start_time": 1606820085142
      },
      {
        "app_start_time": 1606890861689
      },
      {
        "app_start_time": 1606399134628
      },
      {
        "app_start_time": 1606568733604
      },
      {
        "app_start_time": 1606648567372
      },
      {
        "app_start_time": 1606929249950
      },
      {
        "app_start_time": 1607024113156
      },
      {
        "app_start_time": 1606393619934
      },
      {
        "app_start_time": 1606214957639
      },
      {
        "app_start_time": 1606940882578
      },
      {
        "app_start_time": 1606676011187
      },
      {
        "app_start_time": 1606252917472
      },
      {
        "app_start_time": 1606555407852
      },
      {
        "app_start_time": 1606798788916
      },
      {
        "app_start_time": 1606653438317
      },
      {
        "app_start_time": 1606366019016
      },
      {
        "app_start_time": 1606846552630
      },
      {
        "app_start_time": 1606996486300
      },
      {
        "app_start_time": 1607000091208
      },
      {
        "app_start_time": 1606695254506
      },
      {
        "app_start_time": 1606480789318
      },
      {
        "app_start_time": 1606185977472
      },
      {
        "app_start_time": 1606561201075
      },
      {
        "app_start_time": 1606317954211
      },
      {
        "app_start_time": 1606882198948
      },
      {
        "app_start_time": 1606649935840
      },
      {
        "app_start_time": 1606357276286
      },
      {
        "app_start_time": 1606402388962
      },
      {
        "app_start_time": 1606763374281
      },
      {
        "app_start_time": 1606678498422
      },
      {
        "app_start_time": 1606935066726
      },
      {
        "app_start_time": 1606577963880
      },
      {
        "app_start_time": 1606349899690
      },
      {
        "app_start_time": 1606450348965
      },
      {
        "app_start_time": 1606845067739
      },
      {
        "app_start_time": 1606750090846
      },
      {
        "app_start_time": 1606373806877
      },
      {
        "app_start_time": 1606272077719
      },
      {
        "app_start_time": 1606450996225
      },
      {
        "app_start_time": 1606649511663
      },
      {
        "app_start_time": 1606478527284
      },
      {
        "app_start_time": 1606538442945
      },
      {
        "app_start_time": 1606977275027
      },
      {
        "app_start_time": 1606859365300
      },
      {
        "app_start_time": 1606305752479
      },
      {
        "app_start_time": 1606716638266
      },
      {
        "app_start_time": 1606660467891
      },
      {
        "app_start_time": 1606462909389
      },
      {
        "app_start_time": 1606671918415
      },
      {
        "app_start_time": 1606533148848
      },
      {
        "app_start_time": 1607002259346
      },
      {
        "app_start_time": 1606590629153
      },
      {
        "app_start_time": 1606532754050
      },
      {
        "app_start_time": 1606272956526
      },
      {
        "app_start_time": 1606719959704
      },
      {
        "app_start_time": 1606366896708
      },
      {
        "app_start_time": 1606796495681
      },
      {
        "app_start_time": 1606368726773
      },
      {
        "app_start_time": 1606497972908
      },
      {
        "app_start_time": 1606693742061
      },
      {
        "app_start_time": 1606986719016
      },
      {
        "app_start_time": 1606767662524
      },
      {
        "app_start_time": 1606873624147
      },
      {
        "app_start_time": 1606838308688
      },
      {
        "app_start_time": 1606640755717
      },
      {
        "app_start_time": 1606656325346
      },
      {
        "app_start_time": 1606492608473
      },
      {
        "app_start_time": 1607017705270
      },
      {
        "app_start_time": 1606529498917
      },
      {
        "app_start_time": 1606953780799
      },
      {
        "app_start_time": 1606947751568
      },
      {
        "app_start_time": 1606431479392
      },
      {
        "app_start_time": 1606828862139
      },
      {
        "app_start_time": 1606306554670
      },
      {
        "app_start_time": 1606583452392
      },
      {
        "app_start_time": 1606512253282
      },
      {
        "app_start_time": 1606357581068
      },
      {
        "app_start_time": 1606707051835
      },
      {
        "app_start_time": 1606574424220
      },
      {
        "app_start_time": 1606270213963
      },
      {
        "app_start_time": 1606903894008
      },
      {
        "app_start_time": 1606492915132
      },
      {
        "app_start_time": 1606327563679
      },
      {
        "app_start_time": 1606508580429
      },
      {
        "app_start_time": 1606715960643
      },
      {
        "app_start_time": 1607016870841
      },
      {
        "app_start_time": 1606609713517
      },
      {
        "app_start_time": 1606532012570
      },
      {
        "app_start_time": 1606884240802
      },
      {
        "app_start_time": 1606611846187
      },
      {
        "app_start_time": 1606166403159
      },
      {
        "app_start_time": 1606940271656
      },
      {
        "app_start_time": 1606398706099
      },
      {
        "app_start_time": 1606342587858
      },
      {
        "app_start_time": 1606801724301
      },
      {
        "app_start_time": 1606283045380
      },
      {
        "app_start_time": 1606335834461
      },
      {
        "app_start_time": 1606460660089
      },
      {
        "app_start_time": 1606962662579
      },
      {
        "app_start_time": 1606884096384
      },
      {
        "app_start_time": 1606672137184
      },
      {
        "app_start_time": 1606358018426
      },
      {
        "app_start_time": 1606560209857
      },
      {
        "app_start_time": 1606784868594
      },
      {
        "app_start_time": 1606750748489
      },
      {
        "app_start_time": 1606716324732
      },
      {
        "app_start_time": 1606656020889
      },
      {
        "app_start_time": 1606768694181
      },
      {
        "app_start_time": 1606327916124
      },
      {
        "app_start_time": 1606468650073
      },
      {
        "app_start_time": 1606233198370
      },
      {
        "app_start_time": 1606976470053
      },
      {
        "app_start_time": 1606720801517
      },
      {
        "app_start_time": 1606737529848
      },
      {
        "app_start_time": 1606533587646
      },
      {
        "app_start_time": 1606255869249
      },
      {
        "app_start_time": 1607022470303
      },
      {
        "app_start_time": 1606656657997
      },
      {
        "app_start_time": 1606934209595
      },
      {
        "app_start_time": 1606581160183
      },
      {
        "app_start_time": 1606957781807
      },
      {
        "app_start_time": 1606977925438
      },
      {
        "app_start_time": 1606182850411
      },
      {
        "app_start_time": 1606529163155
      },
      {
        "app_start_time": 1606295528409
      },
      {
        "app_start_time": 1606396891283
      },
      {
        "app_start_time": 1606339062279
      },
      {
        "app_start_time": 1606239386329
      },
      {
        "app_start_time": 1606287802019
      },
      {
        "app_start_time": 1606968774168
      },
      {
        "app_start_time": 1606258019610
      },
      {
        "app_start_time": 1606562700448
      },
      {
        "app_start_time": 1606166900038
      },
      {
        "app_start_time": 1606315338029
      },
      {
        "app_start_time": 1606881226382
      },
      {
        "app_start_time": 1606886240334
      },
      {
        "app_start_time": 1606515142254
      },
      {
        "app_start_time": 1606590359795
      },
      {
        "app_start_time": 1606748683656
      },
      {
        "app_start_time": 1606770175769
      },
      {
        "app_start_time": 1606251052158
      },
      {
        "app_start_time": 1606828087939
      },
      {
        "app_start_time": 1606892901952
      },
      {
        "app_start_time": 1606642239603
      },
      {
        "app_start_time": 1607027804877
      },
      {
        "app_start_time": 1606534162539
      },
      {
        "app_start_time": 1606452922565
      },
      {
        "app_start_time": 1606507825514
      },
      {
        "app_start_time": 1606245515855
      },
      {
        "app_start_time": 1606302417969
      },
      {
        "app_start_time": 1606170374957
      },
      {
        "app_start_time": 1606395986563
      },
      {
        "app_start_time": 1606274437215
      },
      {
        "app_start_time": 1606251887214
      },
      {
        "app_start_time": 1606455452769
      },
      {
        "app_start_time": 1606408132625
      },
      {
        "app_start_time": 1606280676324
      },
      {
        "app_start_time": 1606909453267
      },
      {
        "app_start_time": 1606811897245
      },
      {
        "app_start_time": 1606693933772
      },
      {
        "app_start_time": 1606663205002
      },
      {
        "app_start_time": 1606324472004
      },
      {
        "app_start_time": 1606792595906
      },
      {
        "app_start_time": 1606603996681
      },
      {
        "app_start_time": 1606789637377
      },
      {
        "app_start_time": 1606790553949
      },
      {
        "app_start_time": 1606500512418
      },
      {
        "app_start_time": 1606586938243
      },
      {
        "app_start_time": 1606200752141
      },
      {
        "app_start_time": 1606976811517
      },
      {
        "app_start_time": 1606903643149
      },
      {
        "app_start_time": 1606443436415
      },
      {
        "app_start_time": 1606909530823
      },
      {
        "app_start_time": 1606174847932
      },
      {
        "app_start_time": 1606590734408
      },
      {
        "app_start_time": 1606815967257
      },
      {
        "app_start_time": 1606645974821
      },
      {
        "app_start_time": 1606375213334
      },
      {
        "app_start_time": 1606578538079
      },
      {
        "app_start_time": 1606538083571
      },
      {
        "app_start_time": 1606818260225
      },
      {
        "app_start_time": 1606797552764
      },
      {
        "app_start_time": 1606694385733
      },
      {
        "app_start_time": 1606874367053
      },
      {
        "app_start_time": 1606407271471
      },
      {
        "app_start_time": 1606370735522
      },
      {
        "app_start_time": 1606270051971
      },
      {
        "app_start_time": 1606278469481
      },
      {
        "app_start_time": 1606539914050
      },
      {
        "app_start_time": 1606654940936
      },
      {
        "app_start_time": 1606308533841
      },
      {
        "app_start_time": 1606652788814
      },
      {
        "app_start_time": 1606433018914
      },
      {
        "app_start_time": 1606171629304
      },
      {
        "app_start_time": 1606969172306
      },
      {
        "app_start_time": 1606787487969
      },
      {
        "app_start_time": 1606840078169
      },
      {
        "app_start_time": 1606186435487
      },
      {
        "app_start_time": 1606742269473
      },
      {
        "app_start_time": 1606730657405
      },
      {
        "app_start_time": 1606817049871
      },
      {
        "app_start_time": 1606895944517
      },
      {
        "app_start_time": 1606963658698
      },
      {
        "app_start_time": 1606741195348
      },
      {
        "app_start_time": 1606877579605
      },
      {
        "app_start_time": 1606644229180
      },
      {
        "app_start_time": 1606698855597
      },
      {
        "app_start_time": 1606427521744
      },
      {
        "app_start_time": 1606679726811
      },
      {
        "app_start_time": 1606283411215
      },
      {
        "app_start_time": 1606625273822
      },
      {
        "app_start_time": 1606985329427
      },
      {
        "app_start_time": 1606257724675
      },
      {
        "app_start_time": 1606303980551
      },
      {
        "app_start_time": 1606392635777
      },
      {
        "app_start_time": 1606681246141
      },
      {
        "app_start_time": 1606626674883
      },
      {
        "app_start_time": 1606947847090
      },
      {
        "app_start_time": 1606775046092
      },
      {
        "app_start_time": 1606274124290
      },
      {
        "app_start_time": 1606198347515
      },
      {
        "app_start_time": 1606911366090
      },
      {
        "app_start_time": 1606317936569
      },
      {
        "app_start_time": 1606430011537
      },
      {
        "app_start_time": 1606292314557
      },
      {
        "app_start_time": 1606258470992
      },
      {
        "app_start_time": 1606742995235
      },
      {
        "app_start_time": 1606740840222
      },
      {
        "app_start_time": 1606700110423
      },
      {
        "app_start_time": 1606604187235
      },
      {
        "app_start_time": 1606313560978
      },
      {
        "app_start_time": 1606491065516
      },
      {
        "app_start_time": 1606219832135
      },
      {
        "app_start_time": 1606532228949
      },
      {
        "app_start_time": 1606438609832
      },
      {
        "app_start_time": 1606629416834
      },
      {
        "app_start_time": 1606312756370
      },
      {
        "app_start_time": 1606872383424
      },
      {
        "app_start_time": 1606196376922
      },
      {
        "app_start_time": 1606287477439
      },
      {
        "app_start_time": 1606416615056
      },
      {
        "app_start_time": 1606383451128
      },
      {
        "app_start_time": 1606247667206
      },
      {
        "app_start_time": 1606709790874
      },
      {
        "app_start_time": 1606856369316
      },
      {
        "app_start_time": 1606753932542
      },
      {
        "app_start_time": 1606584582884
      },
      {
        "app_start_time": 1606853049459
      },
      {
        "app_start_time": 1606275402053
      },
      {
        "app_start_time": 1606549204933
      },
      {
        "app_start_time": 1606938787494
      },
      {
        "app_start_time": 1606836915374
      },
      {
        "app_start_time": 1606662359547
      },
      {
        "app_start_time": 1606825136571
      },
      {
        "app_start_time": 1606190410238
      },
      {
        "app_start_time": 1606339880465
      },
      {
        "app_start_time": 1606902766853
      },
      {
        "app_start_time": 1606457330505
      },
      {
        "app_start_time": 1606618369179
      },
      {
        "app_start_time": 1606361546549
      },
      {
        "app_start_time": 1606891850665
      },
      {
        "app_start_time": 1606304793011
      },
      {
        "app_start_time": 1606424424088
      },
      {
        "app_start_time": 1607008380599
      },
      {
        "app_start_time": 1606579926901
      },
      {
        "app_start_time": 1606173599088
      },
      {
        "app_start_time": 1606888402500
      },
      {
        "app_start_time": 1606941929920
      },
      {
        "app_start_time": 1606434891411
      },
      {
        "app_start_time": 1606715298915
      },
      {
        "app_start_time": 1606957521582
      },
      {
        "app_start_time": 1606438766762
      },
      {
        "app_start_time": 1606310511225
      },
      {
        "app_start_time": 1606623600425
      },
      {
        "app_start_time": 1606628906533
      },
      {
        "app_start_time": 1606288528128
      },
      {
        "app_start_time": 1606807762820
      },
      {
        "app_start_time": 1606511327402
      },
      {
        "app_start_time": 1607019083461
      },
      {
        "app_start_time": 1606869882945
      },
      {
        "app_start_time": 1606998103502
      },
      {
        "app_start_time": 1606513052501
      },
      {
        "app_start_time": 1606247972001
      },
      {
        "app_start_time": 1606907461216
      },
      {
        "app_start_time": 1606771771457
      },
      {
        "app_start_time": 1606663686503
      },
      {
        "app_start_time": 1606580549007
      },
      {
        "app_start_time": 1606754328789
      },
      {
        "app_start_time": 1606501186991
      },
      {
        "app_start_time": 1606663992426
      },
      {
        "app_start_time": 1606309057970
      },
      {
        "app_start_time": 1606311458388
      },
      {
        "app_start_time": 1606351405556
      },
      {
        "app_start_time": 1606995077255
      },
      {
        "app_start_time": 1606816185079
      },
      {
        "app_start_time": 1606545014177
      },
      {
        "app_start_time": 1606617310299
      },
      {
        "app_start_time": 1606748923921
      },
      {
        "app_start_time": 1606838296841
      },
      {
        "app_start_time": 1606189370512
      },
      {
        "app_start_time": 1606411482867
      },
      {
        "app_start_time": 1606382303949
      },
      {
        "app_start_time": 1606571730841
      },
      {
        "app_start_time": 1606797925316
      },
      {
        "app_start_time": 1606667883680
      },
      {
        "app_start_time": 1606755773285
      },
      {
        "app_start_time": 1606306332681
      },
      {
        "app_start_time": 1606648679169
      },
      {
        "app_start_time": 1606722433212
      },
      {
        "app_start_time": 1606644869265
      },
      {
        "app_start_time": 1606611275639
      },
      {
        "app_start_time": 1606992497998
      },
      {
        "app_start_time": 1606620816606
      },
      {
        "app_start_time": 1606194610427
      },
      {
        "app_start_time": 1606782824326
      },
      {
        "app_start_time": 1606913211139
      },
      {
        "app_start_time": 1606395942662
      },
      {
        "app_start_time": 1606973399427
      },
      {
        "app_start_time": 1606661345194
      },
      {
        "app_start_time": 1606881885503
      },
      {
        "app_start_time": 1606216179164
      },
      {
        "app_start_time": 1606386864794
      },
      {
        "app_start_time": 1606763607310
      },
      {
        "app_start_time": 1606324063408
      },
      {
        "app_start_time": 1606731180599
      },
      {
        "app_start_time": 1606717636668
      },
      {
        "app_start_time": 1606845925912
      },
      {
        "app_start_time": 1606667729591
      },
      {
        "app_start_time": 1606897064826
      },
      {
        "app_start_time": 1606624286158
      },
      {
        "app_start_time": 1606820610166
      },
      {
        "app_start_time": 1606471527275
      },
      {
        "app_start_time": 1607029239977
      },
      {
        "app_start_time": 1606321654090
      },
      {
        "app_start_time": 1606457916784
      },
      {
        "app_start_time": 1606548771540
      },
      {
        "app_start_time": 1606420270569
      },
      {
        "app_start_time": 1606468065291
      },
      {
        "app_start_time": 1606362003557
      },
      {
        "app_start_time": 1606787948181
      },
      {
        "app_start_time": 1606650950808
      },
      {
        "app_start_time": 1606722564434
      },
      {
        "app_start_time": 1606682944223
      },
      {
        "app_start_time": 1606491489324
      },
      {
        "app_start_time": 1606415774712
      },
      {
        "app_start_time": 1606478122230
      },
      {
        "app_start_time": 1606938672220
      },
      {
        "app_start_time": 1606575861675
      },
      {
        "app_start_time": 1606503124833
      },
      {
        "app_start_time": 1606878622620
      },
      {
        "app_start_time": 1606788824269
      },
      {
        "app_start_time": 1606185575422
      },
      {
        "app_start_time": 1606415423859
      },
      {
        "app_start_time": 1606700532372
      },
      {
        "app_start_time": 1606327880332
      },
      {
        "app_start_time": 1606832561122
      },
      {
        "app_start_time": 1606175686892
      },
      {
        "app_start_time": 1606529292031
      },
      {
        "app_start_time": 1606607181507
      },
      {
        "app_start_time": 1606719399151
      },
      {
        "app_start_time": 1606511620565
      },
      {
        "app_start_time": 1607005498018
      },
      {
        "app_start_time": 1606526452529
      },
      {
        "app_start_time": 1606528692500
      },
      {
        "app_start_time": 1606320506345
      },
      {
        "app_start_time": 1606487884822
      },
      {
        "app_start_time": 1606400589855
      },
      {
        "app_start_time": 1606743298723
      },
      {
        "app_start_time": 1606558144513
      },
      {
        "app_start_time": 1606789174710
      },
      {
        "app_start_time": 1606410452912
      },
      {
        "app_start_time": 1606872319372
      },
      {
        "app_start_time": 1606872446032
      },
      {
        "app_start_time": 1606455989929
      },
      {
        "app_start_time": 1606985118097
      },
      {
        "app_start_time": 1606830146712
      },
      {
        "app_start_time": 1606359459788
      },
      {
        "app_start_time": 1606862729672
      },
      {
        "app_start_time": 1606874008996
      },
      {
        "app_start_time": 1606239547018
      }
    ]
  },
  {
    "question": "What datacenter contains rack DC1-RCK-4-2?",
    "cypher": "MATCH (d:DataCenter)-[:CONTAINS]->(r:Rack {name: 'DC1-RCK-4-2'}) RETURN d.name AS datacenter_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "datacenter_name": "DC1"
      }
    ],
    "answer": "The rack DC1-RCK-4-2 is located in the datacenter DC1."
  },
  {
    "question": "How many racks are in DC-1?",
    "cypher": "MATCH (d:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack) RETURN COUNT(r) AS total_racks",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_racks": 40
      }
    ],
    "answer": "There are 40 racks in DC-1."
  },
  {
    "question": "What's running on machine DC1-RCK-1-1-M-1?",
    "cypher": "MATCH (m:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(p:Process) RETURN COUNT(p) AS total_processes",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_processes": 3
      }
    ],
    "answer": "3 processes are running on machine DC1-RCK-1-1-M-1."
  },
  {
    "question": "Tell me the rack number of DC1-RCK-2-9",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-2-9'}) RETURN r.rack AS rack_number",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "rack_number": 9
      }
    ],
    "answer": "The rack number of DC1-RCK-2-9 is 9."
  },
  {
    "question": "What software does the cms app depend on?",
    "cypher": "MATCH (s:Software {name: 'cms'})-[:DEPENDS_ON]->(dep:Software) RETURN COUNT(dep) AS dependency_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dependency_count": 3
      }
    ],
    "answer": "The cms app depends on 3 different software components."
  },
  {
    "question": "What's the zone of network 10.1?",
    "cypher": "MATCH (n:Network {ip: '10.1'}) RETURN n.zone AS network_zone",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "network_zone": 1
      }
    ],
    "answer": "The zone of network 10.1 is 1."
  },
  {
    "question": "What version of RHEL is running?",
    "cypher": "MATCH (os:OS)-[:INSTANCE]->(v:Version) WHERE os.name = '7.1' RETURN v.name AS os_version",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      },
      {
        "os_version": "7.1"
      }
    ]
  },
  {
    "question": "How many applications run on DC1-RCK-2-9-M-90?",
    "cypher": "MATCH (m:Machine {name: 'DC1-RCK-2-9-M-90'})-[:RUNS]->(a:Application) RETURN COUNT(a) AS app_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "app_count": 1
      }
    ],
    "answer": "1 application runs on DC1-RCK-2-9-M-90."
  },
  {
    "question": "What datacenter is machine DC1-RCK-4-2-M-174 located in?",
    "cypher": "MATCH (d:DataCenter)-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine {name: 'DC1-RCK-4-2-M-174'}) RETURN d.name AS datacenter_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "datacenter_name": "DC1"
      }
    ],
    "answer": "The machine DC1-RCK-4-2-M-174 is located in the datacenter DC1."
  },
  {
    "question": "What's the IP of the switch in rack 10?",
    "cypher": "MATCH (s:Switch {rack: 10}) RETURN s.ip AS switch_ip",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "switch_ip": "10.1.10"
      },
      {
        "switch_ip": "10.2.10"
      },
      {
        "switch_ip": "10.3.10"
      },
      {
        "switch_ip": "10.4.10"
      }
    ]
  },
  {
    "question": "How many ports does the webserver expose?",
    "cypher": "MATCH (a:Application {name: 'webserver'})-[:LISTENS]->(p:Port) RETURN COUNT(p) AS exposed_ports",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "exposed_ports": 3316
      }
    ],
    "answer": "The webserver exposes 3,316 ports."
  },
  {
    "question": "What software is webapp an instance of?",
    "cypher": "MATCH (a:Application {name: 'webapp'})-[:INSTANCE]->(s:Software) RETURN s.name AS software_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      },
      {
        "software_name": "webapp"
      }
    ]
  },
  {
    "question": "Tell me the location of the DC that contains rack DC1-RCK-1-1",
    "cypher": "MATCH (d:DataCenter)-[:CONTAINS]->(r:Rack {name: 'DC1-RCK-1-1'}) RETURN d.location AS dc_location",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dc_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The rack DC1-RCK-1-1 is located in the data center in Rekjavik, Iceland."
  },
  {
    "question": "What's the pid of the postgres 9.4 service?",
    "cypher": "MATCH (s:Service {name: '9.4'}) WHERE s.pid IS NOT NULL RETURN s.pid AS service_pid",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "service_pid": 7211
      },
      {
        "service_pid": 3732
      },
      {
        "service_pid": 9644
      },
      {
        "service_pid": 7763
      },
      {
        "service_pid": 3087
      },
      {
        "service_pid": 5280
      },
      {
        "service_pid": 1298
      },
      {
        "service_pid": 8554
      },
      {
        "service_pid": 3266
      },
      {
        "service_pid": 1475
      },
      {
        "service_pid": 6336
      },
      {
        "service_pid": 5151
      },
      {
        "service_pid": 4266
      },
      {
        "service_pid": 8505
      },
      {
        "service_pid": 3081
      },
      {
        "service_pid": 4909
      },
      {
        "service_pid": 4819
      },
      {
        "service_pid": 5326
      },
      {
        "service_pid": 7036
      },
      {
        "service_pid": 595
      },
      {
        "service_pid": 3650
      },
      {
        "service_pid": 1665
      },
      {
        "service_pid": 9135
      },
      {
        "service_pid": 943
      },
      {
        "service_pid": 8904
      },
      {
        "service_pid": 4953
      },
      {
        "service_pid": 8170
      },
      {
        "service_pid": 5115
      },
      {
        "service_pid": 4916
      },
      {
        "service_pid": 3725
      },
      {
        "service_pid": 7171
      },
      {
        "service_pid": 2707
      },
      {
        "service_pid": 7816
      },
      {
        "service_pid": 2227
      },
      {
        "service_pid": 4373
      },
      {
        "service_pid": 4867
      },
      {
        "service_pid": 2584
      },
      {
        "service_pid": 8821
      },
      {
        "service_pid": 1909
      },
      {
        "service_pid": 1141
      },
      {
        "service_pid": 5354
      },
      {
        "service_pid": 7642
      },
      {
        "service_pid": 9732
      },
      {
        "service_pid": 7810
      },
      {
        "service_pid": 1774
      },
      {
        "service_pid": 7909
      },
      {
        "service_pid": 4841
      },
      {
        "service_pid": 924
      },
      {
        "service_pid": 5626
      },
      {
        "service_pid": 2256
      },
      {
        "service_pid": 678
      },
      {
        "service_pid": 91
      },
      {
        "service_pid": 206
      },
      {
        "service_pid": 4992
      },
      {
        "service_pid": 8778
      },
      {
        "service_pid": 6249
      },
      {
        "service_pid": 4138
      },
      {
        "service_pid": 5986
      },
      {
        "service_pid": 1728
      },
      {
        "service_pid": 5898
      },
      {
        "service_pid": 3865
      },
      {
        "service_pid": 5231
      },
      {
        "service_pid": 1801
      },
      {
        "service_pid": 2993
      },
      {
        "service_pid": 2171
      },
      {
        "service_pid": 5947
      },
      {
        "service_pid": 1018
      },
      {
        "service_pid": 7986
      },
      {
        "service_pid": 7456
      },
      {
        "service_pid": 2607
      },
      {
        "service_pid": 7847
      },
      {
        "service_pid": 6749
      },
      {
        "service_pid": 7929
      },
      {
        "service_pid": 9372
      },
      {
        "service_pid": 2292
      },
      {
        "service_pid": 1732
      },
      {
        "service_pid": 4623
      },
      {
        "service_pid": 7427
      },
      {
        "service_pid": 7788
      },
      {
        "service_pid": 598
      },
      {
        "service_pid": 9358
      },
      {
        "service_pid": 7084
      },
      {
        "service_pid": 6345
      },
      {
        "service_pid": 5349
      },
      {
        "service_pid": 1230
      },
      {
        "service_pid": 5911
      },
      {
        "service_pid": 607
      },
      {
        "service_pid": 3204
      },
      {
        "service_pid": 446
      },
      {
        "service_pid": 8896
      },
      {
        "service_pid": 1467
      },
      {
        "service_pid": 8315
      },
      {
        "service_pid": 488
      },
      {
        "service_pid": 9849
      },
      {
        "service_pid": 9073
      },
      {
        "service_pid": 9324
      },
      {
        "service_pid": 3827
      },
      {
        "service_pid": 8317
      },
      {
        "service_pid": 3036
      },
      {
        "service_pid": 1453
      },
      {
        "service_pid": 2751
      },
      {
        "service_pid": 6667
      },
      {
        "service_pid": 3492
      },
      {
        "service_pid": 1140
      },
      {
        "service_pid": 9686
      },
      {
        "service_pid": 6015
      },
      {
        "service_pid": 9844
      },
      {
        "service_pid": 3360
      },
      {
        "service_pid": 867
      },
      {
        "service_pid": 8231
      },
      {
        "service_pid": 2519
      },
      {
        "service_pid": 9670
      },
      {
        "service_pid": 3969
      },
      {
        "service_pid": 7920
      },
      {
        "service_pid": 4803
      },
      {
        "service_pid": 8501
      },
      {
        "service_pid": 4065
      },
      {
        "service_pid": 1622
      },
      {
        "service_pid": 642
      },
      {
        "service_pid": 3109
      },
      {
        "service_pid": 4301
      },
      {
        "service_pid": 9300
      },
      {
        "service_pid": 6279
      },
      {
        "service_pid": 7808
      },
      {
        "service_pid": 1721
      },
      {
        "service_pid": 7493
      },
      {
        "service_pid": 6042
      },
      {
        "service_pid": 8277
      },
      {
        "service_pid": 3760
      },
      {
        "service_pid": 2835
      },
      {
        "service_pid": 2738
      },
      {
        "service_pid": 9067
      },
      {
        "service_pid": 5109
      },
      {
        "service_pid": 8324
      },
      {
        "service_pid": 80
      },
      {
        "service_pid": 1400
      },
      {
        "service_pid": 9705
      },
      {
        "service_pid": 1466
      },
      {
        "service_pid": 9888
      },
      {
        "service_pid": 5572
      },
      {
        "service_pid": 3479
      },
      {
        "service_pid": 4128
      },
      {
        "service_pid": 4819
      },
      {
        "service_pid": 5584
      },
      {
        "service_pid": 9196
      },
      {
        "service_pid": 8676
      },
      {
        "service_pid": 7148
      },
      {
        "service_pid": 9040
      },
      {
        "service_pid": 959
      },
      {
        "service_pid": 7750
      },
      {
        "service_pid": 3642
      },
      {
        "service_pid": 4519
      },
      {
        "service_pid": 1776
      },
      {
        "service_pid": 1326
      },
      {
        "service_pid": 2770
      },
      {
        "service_pid": 4287
      },
      {
        "service_pid": 2008
      },
      {
        "service_pid": 667
      },
      {
        "service_pid": 2745
      },
      {
        "service_pid": 1025
      },
      {
        "service_pid": 7562
      },
      {
        "service_pid": 7934
      },
      {
        "service_pid": 9082
      },
      {
        "service_pid": 6105
      },
      {
        "service_pid": 5356
      },
      {
        "service_pid": 6590
      },
      {
        "service_pid": 8822
      },
      {
        "service_pid": 3301
      },
      {
        "service_pid": 8672
      },
      {
        "service_pid": 3363
      },
      {
        "service_pid": 4714
      },
      {
        "service_pid": 1388
      },
      {
        "service_pid": 7882
      },
      {
        "service_pid": 2354
      },
      {
        "service_pid": 8373
      },
      {
        "service_pid": 2096
      },
      {
        "service_pid": 3898
      },
      {
        "service_pid": 584
      },
      {
        "service_pid": 4596
      },
      {
        "service_pid": 6424
      },
      {
        "service_pid": 7905
      },
      {
        "service_pid": 3610
      },
      {
        "service_pid": 995
      },
      {
        "service_pid": 3810
      },
      {
        "service_pid": 523
      },
      {
        "service_pid": 8060
      },
      {
        "service_pid": 6873
      },
      {
        "service_pid": 477
      },
      {
        "service_pid": 538
      },
      {
        "service_pid": 7209
      },
      {
        "service_pid": 5677
      },
      {
        "service_pid": 7799
      },
      {
        "service_pid": 7117
      },
      {
        "service_pid": 3368
      },
      {
        "service_pid": 897
      },
      {
        "service_pid": 6313
      },
      {
        "service_pid": 3466
      },
      {
        "service_pid": 4369
      },
      {
        "service_pid": 72
      },
      {
        "service_pid": 3076
      },
      {
        "service_pid": 9870
      },
      {
        "service_pid": 9982
      },
      {
        "service_pid": 1800
      },
      {
        "service_pid": 8874
      },
      {
        "service_pid": 3879
      },
      {
        "service_pid": 5644
      },
      {
        "service_pid": 1343
      },
      {
        "service_pid": 8508
      },
      {
        "service_pid": 2026
      },
      {
        "service_pid": 4608
      },
      {
        "service_pid": 9780
      },
      {
        "service_pid": 4147
      },
      {
        "service_pid": 7388
      },
      {
        "service_pid": 9621
      },
      {
        "service_pid": 3021
      },
      {
        "service_pid": 1260
      },
      {
        "service_pid": 4668
      },
      {
        "service_pid": 9425
      },
      {
        "service_pid": 7208
      },
      {
        "service_pid": 707
      },
      {
        "service_pid": 4392
      },
      {
        "service_pid": 356
      },
      {
        "service_pid": 8953
      },
      {
        "service_pid": 1618
      },
      {
        "service_pid": 1287
      },
      {
        "service_pid": 4400
      },
      {
        "service_pid": 4758
      },
      {
        "service_pid": 9452
      },
      {
        "service_pid": 7084
      },
      {
        "service_pid": 1992
      },
      {
        "service_pid": 8022
      },
      {
        "service_pid": 8018
      },
      {
        "service_pid": 2116
      },
      {
        "service_pid": 3351
      },
      {
        "service_pid": 6408
      },
      {
        "service_pid": 4713
      },
      {
        "service_pid": 1308
      },
      {
        "service_pid": 5600
      },
      {
        "service_pid": 7928
      },
      {
        "service_pid": 6055
      },
      {
        "service_pid": 3942
      },
      {
        "service_pid": 4962
      },
      {
        "service_pid": 7944
      },
      {
        "service_pid": 4635
      },
      {
        "service_pid": 2723
      },
      {
        "service_pid": 3039
      },
      {
        "service_pid": 6820
      },
      {
        "service_pid": 575
      },
      {
        "service_pid": 8445
      },
      {
        "service_pid": 6417
      },
      {
        "service_pid": 8119
      },
      {
        "service_pid": 8995
      },
      {
        "service_pid": 3430
      },
      {
        "service_pid": 96
      },
      {
        "service_pid": 5016
      },
      {
        "service_pid": 1419
      },
      {
        "service_pid": 840
      },
      {
        "service_pid": 6010
      },
      {
        "service_pid": 523
      },
      {
        "service_pid": 9155
      },
      {
        "service_pid": 6818
      },
      {
        "service_pid": 6690
      },
      {
        "service_pid": 4154
      },
      {
        "service_pid": 4058
      },
      {
        "service_pid": 9987
      },
      {
        "service_pid": 2917
      },
      {
        "service_pid": 5802
      },
      {
        "service_pid": 6797
      },
      {
        "service_pid": 5047
      },
      {
        "service_pid": 3038
      },
      {
        "service_pid": 994
      },
      {
        "service_pid": 7193
      },
      {
        "service_pid": 1877
      },
      {
        "service_pid": 443
      },
      {
        "service_pid": 8030
      },
      {
        "service_pid": 832
      },
      {
        "service_pid": 7109
      },
      {
        "service_pid": 9591
      },
      {
        "service_pid": 1413
      },
      {
        "service_pid": 6136
      },
      {
        "service_pid": 5359
      },
      {
        "service_pid": 7184
      },
      {
        "service_pid": 9666
      },
      {
        "service_pid": 1400
      },
      {
        "service_pid": 7966
      },
      {
        "service_pid": 5418
      },
      {
        "service_pid": 7550
      },
      {
        "service_pid": 9742
      },
      {
        "service_pid": 9779
      },
      {
        "service_pid": 3659
      },
      {
        "service_pid": 665
      },
      {
        "service_pid": 4603
      },
      {
        "service_pid": 9496
      },
      {
        "service_pid": 7473
      },
      {
        "service_pid": 7774
      },
      {
        "service_pid": 5161
      },
      {
        "service_pid": 8553
      },
      {
        "service_pid": 5206
      },
      {
        "service_pid": 572
      },
      {
        "service_pid": 3351
      },
      {
        "service_pid": 1570
      },
      {
        "service_pid": 1547
      },
      {
        "service_pid": 6881
      },
      {
        "service_pid": 9973
      },
      {
        "service_pid": 1157
      },
      {
        "service_pid": 8090
      },
      {
        "service_pid": 822
      },
      {
        "service_pid": 5795
      },
      {
        "service_pid": 6981
      },
      {
        "service_pid": 377
      },
      {
        "service_pid": 5184
      },
      {
        "service_pid": 8740
      },
      {
        "service_pid": 9078
      },
      {
        "service_pid": 6239
      },
      {
        "service_pid": 1578
      },
      {
        "service_pid": 212
      },
      {
        "service_pid": 4600
      },
      {
        "service_pid": 1266
      },
      {
        "service_pid": 7929
      },
      {
        "service_pid": 5473
      },
      {
        "service_pid": 2830
      },
      {
        "service_pid": 2724
      },
      {
        "service_pid": 3404
      },
      {
        "service_pid": 628
      },
      {
        "service_pid": 9736
      },
      {
        "service_pid": 6269
      },
      {
        "service_pid": 7677
      },
      {
        "service_pid": 9308
      },
      {
        "service_pid": 9461
      },
      {
        "service_pid": 1104
      },
      {
        "service_pid": 2044
      },
      {
        "service_pid": 90
      },
      {
        "service_pid": 7121
      },
      {
        "service_pid": 5161
      },
      {
        "service_pid": 831
      },
      {
        "service_pid": 7494
      },
      {
        "service_pid": 6303
      },
      {
        "service_pid": 3259
      },
      {
        "service_pid": 611
      },
      {
        "service_pid": 7345
      },
      {
        "service_pid": 9888
      },
      {
        "service_pid": 918
      },
      {
        "service_pid": 7789
      },
      {
        "service_pid": 2135
      },
      {
        "service_pid": 7852
      },
      {
        "service_pid": 3774
      },
      {
        "service_pid": 3945
      },
      {
        "service_pid": 8133
      },
      {
        "service_pid": 3728
      },
      {
        "service_pid": 6626
      },
      {
        "service_pid": 1469
      },
      {
        "service_pid": 3168
      },
      {
        "service_pid": 5160
      },
      {
        "service_pid": 9873
      },
      {
        "service_pid": 2490
      },
      {
        "service_pid": 5412
      },
      {
        "service_pid": 184
      },
      {
        "service_pid": 1823
      },
      {
        "service_pid": 7598
      },
      {
        "service_pid": 651
      },
      {
        "service_pid": 5109
      },
      {
        "service_pid": 6875
      },
      {
        "service_pid": 8236
      },
      {
        "service_pid": 8775
      },
      {
        "service_pid": 3323
      },
      {
        "service_pid": 6142
      },
      {
        "service_pid": 6948
      },
      {
        "service_pid": 8292
      },
      {
        "service_pid": 4846
      },
      {
        "service_pid": 7491
      },
      {
        "service_pid": 44
      },
      {
        "service_pid": 2380
      },
      {
        "service_pid": 9876
      },
      {
        "service_pid": 5796
      },
      {
        "service_pid": 9400
      },
      {
        "service_pid": 2444
      },
      {
        "service_pid": 9854
      },
      {
        "service_pid": 3676
      },
      {
        "service_pid": 2528
      },
      {
        "service_pid": 5739
      },
      {
        "service_pid": 155
      },
      {
        "service_pid": 4683
      },
      {
        "service_pid": 4074
      },
      {
        "service_pid": 4812
      },
      {
        "service_pid": 9271
      },
      {
        "service_pid": 1086
      },
      {
        "service_pid": 6213
      },
      {
        "service_pid": 9620
      },
      {
        "service_pid": 8087
      },
      {
        "service_pid": 7472
      },
      {
        "service_pid": 7667
      },
      {
        "service_pid": 6481
      },
      {
        "service_pid": 8965
      },
      {
        "service_pid": 691
      },
      {
        "service_pid": 1064
      },
      {
        "service_pid": 1626
      },
      {
        "service_pid": 6599
      },
      {
        "service_pid": 3288
      },
      {
        "service_pid": 5085
      },
      {
        "service_pid": 8738
      },
      {
        "service_pid": 1566
      },
      {
        "service_pid": 7751
      },
      {
        "service_pid": 9558
      },
      {
        "service_pid": 5324
      },
      {
        "service_pid": 5374
      },
      {
        "service_pid": 6041
      },
      {
        "service_pid": 9539
      },
      {
        "service_pid": 8297
      },
      {
        "service_pid": 682
      },
      {
        "service_pid": 1265
      },
      {
        "service_pid": 7373
      },
      {
        "service_pid": 6929
      },
      {
        "service_pid": 5248
      },
      {
        "service_pid": 2619
      },
      {
        "service_pid": 8697
      },
      {
        "service_pid": 402
      },
      {
        "service_pid": 6000
      },
      {
        "service_pid": 1722
      },
      {
        "service_pid": 3702
      },
      {
        "service_pid": 6144
      },
      {
        "service_pid": 3879
      },
      {
        "service_pid": 1226
      },
      {
        "service_pid": 7965
      },
      {
        "service_pid": 5947
      },
      {
        "service_pid": 9816
      },
      {
        "service_pid": 7218
      },
      {
        "service_pid": 4142
      },
      {
        "service_pid": 1693
      },
      {
        "service_pid": 8367
      },
      {
        "service_pid": 6218
      },
      {
        "service_pid": 1803
      },
      {
        "service_pid": 1160
      },
      {
        "service_pid": 7237
      },
      {
        "service_pid": 7040
      },
      {
        "service_pid": 7863
      },
      {
        "service_pid": 268
      },
      {
        "service_pid": 8039
      },
      {
        "service_pid": 5034
      },
      {
        "service_pid": 6314
      },
      {
        "service_pid": 6025
      },
      {
        "service_pid": 9786
      },
      {
        "service_pid": 5941
      },
      {
        "service_pid": 7752
      },
      {
        "service_pid": 4856
      },
      {
        "service_pid": 5152
      },
      {
        "service_pid": 1563
      },
      {
        "service_pid": 6263
      },
      {
        "service_pid": 9380
      },
      {
        "service_pid": 2046
      },
      {
        "service_pid": 2559
      },
      {
        "service_pid": 9218
      },
      {
        "service_pid": 5305
      },
      {
        "service_pid": 2563
      },
      {
        "service_pid": 605
      },
      {
        "service_pid": 2084
      },
      {
        "service_pid": 3040
      },
      {
        "service_pid": 492
      },
      {
        "service_pid": 9206
      },
      {
        "service_pid": 4961
      },
      {
        "service_pid": 5474
      },
      {
        "service_pid": 2170
      },
      {
        "service_pid": 2243
      },
      {
        "service_pid": 8566
      },
      {
        "service_pid": 907
      },
      {
        "service_pid": 8729
      },
      {
        "service_pid": 1665
      },
      {
        "service_pid": 1038
      },
      {
        "service_pid": 9560
      },
      {
        "service_pid": 1510
      },
      {
        "service_pid": 4422
      },
      {
        "service_pid": 3512
      },
      {
        "service_pid": 6917
      },
      {
        "service_pid": 9927
      },
      {
        "service_pid": 2956
      },
      {
        "service_pid": 7727
      },
      {
        "service_pid": 3536
      },
      {
        "service_pid": 3018
      },
      {
        "service_pid": 6022
      },
      {
        "service_pid": 7260
      },
      {
        "service_pid": 4831
      },
      {
        "service_pid": 2990
      },
      {
        "service_pid": 830
      },
      {
        "service_pid": 5183
      },
      {
        "service_pid": 1356
      },
      {
        "service_pid": 9055
      },
      {
        "service_pid": 5865
      },
      {
        "service_pid": 7301
      },
      {
        "service_pid": 4639
      },
      {
        "service_pid": 3911
      },
      {
        "service_pid": 3970
      },
      {
        "service_pid": 2055
      },
      {
        "service_pid": 9508
      },
      {
        "service_pid": 2779
      },
      {
        "service_pid": 7282
      },
      {
        "service_pid": 1909
      },
      {
        "service_pid": 591
      },
      {
        "service_pid": 3638
      },
      {
        "service_pid": 3465
      },
      {
        "service_pid": 2142
      },
      {
        "service_pid": 8935
      },
      {
        "service_pid": 1188
      },
      {
        "service_pid": 16
      },
      {
        "service_pid": 9646
      },
      {
        "service_pid": 9886
      },
      {
        "service_pid": 3711
      },
      {
        "service_pid": 9750
      },
      {
        "service_pid": 1536
      },
      {
        "service_pid": 4803
      },
      {
        "service_pid": 1580
      },
      {
        "service_pid": 1827
      },
      {
        "service_pid": 6443
      },
      {
        "service_pid": 3381
      },
      {
        "service_pid": 5724
      },
      {
        "service_pid": 4189
      },
      {
        "service_pid": 4894
      },
      {
        "service_pid": 2121
      },
      {
        "service_pid": 6501
      },
      {
        "service_pid": 1332
      },
      {
        "service_pid": 9945
      },
      {
        "service_pid": 9340
      },
      {
        "service_pid": 422
      },
      {
        "service_pid": 9159
      },
      {
        "service_pid": 8901
      },
      {
        "service_pid": 6047
      },
      {
        "service_pid": 1377
      },
      {
        "service_pid": 4194
      },
      {
        "service_pid": 9127
      },
      {
        "service_pid": 1593
      },
      {
        "service_pid": 3025
      },
      {
        "service_pid": 980
      },
      {
        "service_pid": 9095
      },
      {
        "service_pid": 7662
      },
      {
        "service_pid": 7481
      },
      {
        "service_pid": 1162
      },
      {
        "service_pid": 1413
      },
      {
        "service_pid": 5361
      },
      {
        "service_pid": 4794
      },
      {
        "service_pid": 6488
      },
      {
        "service_pid": 4017
      },
      {
        "service_pid": 2016
      },
      {
        "service_pid": 2305
      },
      {
        "service_pid": 8262
      },
      {
        "service_pid": 9903
      },
      {
        "service_pid": 1209
      },
      {
        "service_pid": 3315
      },
      {
        "service_pid": 7324
      },
      {
        "service_pid": 8335
      },
      {
        "service_pid": 1743
      },
      {
        "service_pid": 3702
      },
      {
        "service_pid": 7565
      },
      {
        "service_pid": 9798
      },
      {
        "service_pid": 1686
      },
      {
        "service_pid": 1834
      },
      {
        "service_pid": 5128
      },
      {
        "service_pid": 8917
      },
      {
        "service_pid": 1688
      },
      {
        "service_pid": 418
      },
      {
        "service_pid": 99
      },
      {
        "service_pid": 4352
      },
      {
        "service_pid": 4572
      },
      {
        "service_pid": 7174
      },
      {
        "service_pid": 9771
      },
      {
        "service_pid": 5551
      },
      {
        "service_pid": 5775
      },
      {
        "service_pid": 3158
      },
      {
        "service_pid": 3558
      },
      {
        "service_pid": 7173
      },
      {
        "service_pid": 9333
      },
      {
        "service_pid": 2281
      },
      {
        "service_pid": 1869
      },
      {
        "service_pid": 8012
      },
      {
        "service_pid": 718
      },
      {
        "service_pid": 666
      },
      {
        "service_pid": 5053
      },
      {
        "service_pid": 7016
      },
      {
        "service_pid": 4667
      },
      {
        "service_pid": 7968
      },
      {
        "service_pid": 5591
      },
      {
        "service_pid": 776
      },
      {
        "service_pid": 6451
      },
      {
        "service_pid": 913
      },
      {
        "service_pid": 840
      },
      {
        "service_pid": 6923
      },
      {
        "service_pid": 2237
      },
      {
        "service_pid": 5034
      },
      {
        "service_pid": 9749
      },
      {
        "service_pid": 102
      },
      {
        "service_pid": 6483
      },
      {
        "service_pid": 6299
      },
      {
        "service_pid": 724
      },
      {
        "service_pid": 8990
      },
      {
        "service_pid": 7778
      },
      {
        "service_pid": 3480
      },
      {
        "service_pid": 9465
      },
      {
        "service_pid": 679
      },
      {
        "service_pid": 3849
      },
      {
        "service_pid": 8289
      },
      {
        "service_pid": 6320
      },
      {
        "service_pid": 2735
      },
      {
        "service_pid": 433
      },
      {
        "service_pid": 5605
      },
      {
        "service_pid": 1268
      },
      {
        "service_pid": 7942
      },
      {
        "service_pid": 8206
      },
      {
        "service_pid": 3890
      },
      {
        "service_pid": 8573
      },
      {
        "service_pid": 9717
      },
      {
        "service_pid": 8538
      },
      {
        "service_pid": 8842
      },
      {
        "service_pid": 2909
      },
      {
        "service_pid": 8650
      },
      {
        "service_pid": 8077
      },
      {
        "service_pid": 5177
      },
      {
        "service_pid": 1515
      },
      {
        "service_pid": 1080
      },
      {
        "service_pid": 8641
      },
      {
        "service_pid": 2119
      },
      {
        "service_pid": 2674
      },
      {
        "service_pid": 4147
      },
      {
        "service_pid": 9276
      },
      {
        "service_pid": 5124
      },
      {
        "service_pid": 4446
      },
      {
        "service_pid": 1890
      },
      {
        "service_pid": 7859
      },
      {
        "service_pid": 2003
      },
      {
        "service_pid": 6177
      },
      {
        "service_pid": 2567
      },
      {
        "service_pid": 3503
      },
      {
        "service_pid": 156
      },
      {
        "service_pid": 4452
      },
      {
        "service_pid": 3279
      },
      {
        "service_pid": 6693
      },
      {
        "service_pid": 8235
      },
      {
        "service_pid": 4280
      },
      {
        "service_pid": 4003
      },
      {
        "service_pid": 6611
      },
      {
        "service_pid": 2892
      },
      {
        "service_pid": 4137
      },
      {
        "service_pid": 9842
      },
      {
        "service_pid": 1168
      },
      {
        "service_pid": 8921
      },
      {
        "service_pid": 2181
      },
      {
        "service_pid": 2382
      },
      {
        "service_pid": 8380
      },
      {
        "service_pid": 6907
      },
      {
        "service_pid": 8456
      },
      {
        "service_pid": 6894
      },
      {
        "service_pid": 2635
      },
      {
        "service_pid": 6384
      },
      {
        "service_pid": 4585
      },
      {
        "service_pid": 4801
      },
      {
        "service_pid": 6730
      },
      {
        "service_pid": 8976
      },
      {
        "service_pid": 9992
      },
      {
        "service_pid": 5185
      },
      {
        "service_pid": 8109
      },
      {
        "service_pid": 5730
      },
      {
        "service_pid": 3343
      },
      {
        "service_pid": 1721
      },
      {
        "service_pid": 2812
      },
      {
        "service_pid": 1456
      },
      {
        "service_pid": 7306
      },
      {
        "service_pid": 9732
      },
      {
        "service_pid": 4102
      },
      {
        "service_pid": 9946
      },
      {
        "service_pid": 7870
      },
      {
        "service_pid": 8540
      },
      {
        "service_pid": 8438
      },
      {
        "service_pid": 4697
      },
      {
        "service_pid": 1610
      },
      {
        "service_pid": 1844
      },
      {
        "service_pid": 7702
      },
      {
        "service_pid": 4240
      },
      {
        "service_pid": 4142
      },
      {
        "service_pid": 460
      },
      {
        "service_pid": 7257
      },
      {
        "service_pid": 8580
      },
      {
        "service_pid": 3981
      },
      {
        "service_pid": 4718
      },
      {
        "service_pid": 2805
      },
      {
        "service_pid": 8928
      },
      {
        "service_pid": 2209
      },
      {
        "service_pid": 3597
      },
      {
        "service_pid": 4943
      },
      {
        "service_pid": 2184
      },
      {
        "service_pid": 1158
      },
      {
        "service_pid": 8928
      },
      {
        "service_pid": 723
      },
      {
        "service_pid": 3785
      },
      {
        "service_pid": 8420
      },
      {
        "service_pid": 3835
      },
      {
        "service_pid": 6996
      },
      {
        "service_pid": 7458
      },
      {
        "service_pid": 1270
      },
      {
        "service_pid": 4786
      },
      {
        "service_pid": 5704
      },
      {
        "service_pid": 6899
      },
      {
        "service_pid": 5620
      },
      {
        "service_pid": 4582
      },
      {
        "service_pid": 7151
      },
      {
        "service_pid": 4817
      },
      {
        "service_pid": 9648
      },
      {
        "service_pid": 9501
      },
      {
        "service_pid": 2036
      },
      {
        "service_pid": 6216
      },
      {
        "service_pid": 9834
      },
      {
        "service_pid": 4258
      },
      {
        "service_pid": 1419
      },
      {
        "service_pid": 1327
      },
      {
        "service_pid": 5258
      },
      {
        "service_pid": 6028
      },
      {
        "service_pid": 6227
      },
      {
        "service_pid": 1508
      },
      {
        "service_pid": 2859
      },
      {
        "service_pid": 2261
      },
      {
        "service_pid": 4131
      },
      {
        "service_pid": 2173
      },
      {
        "service_pid": 9587
      },
      {
        "service_pid": 8200
      },
      {
        "service_pid": 1894
      },
      {
        "service_pid": 4801
      },
      {
        "service_pid": 8783
      },
      {
        "service_pid": 9482
      },
      {
        "service_pid": 9987
      },
      {
        "service_pid": 4119
      },
      {
        "service_pid": 2909
      },
      {
        "service_pid": 6078
      },
      {
        "service_pid": 9602
      },
      {
        "service_pid": 7410
      },
      {
        "service_pid": 63
      },
      {
        "service_pid": 1799
      },
      {
        "service_pid": 4959
      },
      {
        "service_pid": 4147
      },
      {
        "service_pid": 1481
      },
      {
        "service_pid": 9927
      },
      {
        "service_pid": 9605
      },
      {
        "service_pid": 4157
      },
      {
        "service_pid": 5503
      },
      {
        "service_pid": 727
      },
      {
        "service_pid": 3521
      },
      {
        "service_pid": 1923
      },
      {
        "service_pid": 9465
      },
      {
        "service_pid": 2457
      },
      {
        "service_pid": 9707
      },
      {
        "service_pid": 7947
      },
      {
        "service_pid": 109
      },
      {
        "service_pid": 6233
      },
      {
        "service_pid": 2043
      },
      {
        "service_pid": 1587
      },
      {
        "service_pid": 8472
      },
      {
        "service_pid": 876
      },
      {
        "service_pid": 956
      },
      {
        "service_pid": 3721
      },
      {
        "service_pid": 2661
      },
      {
        "service_pid": 585
      },
      {
        "service_pid": 2400
      },
      {
        "service_pid": 5290
      },
      {
        "service_pid": 4467
      },
      {
        "service_pid": 2741
      },
      {
        "service_pid": 9201
      },
      {
        "service_pid": 395
      },
      {
        "service_pid": 9113
      },
      {
        "service_pid": 643
      },
      {
        "service_pid": 2741
      },
      {
        "service_pid": 1456
      },
      {
        "service_pid": 3163
      },
      {
        "service_pid": 3763
      },
      {
        "service_pid": 122
      },
      {
        "service_pid": 1106
      },
      {
        "service_pid": 3624
      },
      {
        "service_pid": 2743
      },
      {
        "service_pid": 6011
      },
      {
        "service_pid": 2788
      },
      {
        "service_pid": 681
      },
      {
        "service_pid": 1002
      },
      {
        "service_pid": 3691
      },
      {
        "service_pid": 9914
      },
      {
        "service_pid": 148
      },
      {
        "service_pid": 8277
      },
      {
        "service_pid": 2835
      },
      {
        "service_pid": 1272
      },
      {
        "service_pid": 1478
      },
      {
        "service_pid": 4756
      },
      {
        "service_pid": 566
      },
      {
        "service_pid": 113
      },
      {
        "service_pid": 3934
      },
      {
        "service_pid": 3883
      },
      {
        "service_pid": 9752
      },
      {
        "service_pid": 1975
      },
      {
        "service_pid": 2332
      },
      {
        "service_pid": 1666
      },
      {
        "service_pid": 9694
      },
      {
        "service_pid": 9973
      },
      {
        "service_pid": 3360
      },
      {
        "service_pid": 8272
      },
      {
        "service_pid": 7486
      },
      {
        "service_pid": 7179
      },
      {
        "service_pid": 319
      },
      {
        "service_pid": 3852
      },
      {
        "service_pid": 4830
      },
      {
        "service_pid": 556
      },
      {
        "service_pid": 6625
      },
      {
        "service_pid": 2602
      },
      {
        "service_pid": 9895
      },
      {
        "service_pid": 1665
      },
      {
        "service_pid": 5771
      },
      {
        "service_pid": 1750
      },
      {
        "service_pid": 5793
      },
      {
        "service_pid": 4582
      },
      {
        "service_pid": 8735
      },
      {
        "service_pid": 4564
      },
      {
        "service_pid": 6880
      },
      {
        "service_pid": 5327
      },
      {
        "service_pid": 7890
      },
      {
        "service_pid": 2536
      },
      {
        "service_pid": 6666
      },
      {
        "service_pid": 5312
      },
      {
        "service_pid": 8966
      },
      {
        "service_pid": 5687
      },
      {
        "service_pid": 7859
      },
      {
        "service_pid": 3699
      },
      {
        "service_pid": 5644
      },
      {
        "service_pid": 5116
      },
      {
        "service_pid": 6492
      },
      {
        "service_pid": 8176
      },
      {
        "service_pid": 5288
      },
      {
        "service_pid": 2586
      },
      {
        "service_pid": 8108
      },
      {
        "service_pid": 2308
      },
      {
        "service_pid": 9934
      },
      {
        "service_pid": 5680
      },
      {
        "service_pid": 4137
      },
      {
        "service_pid": 2414
      },
      {
        "service_pid": 219
      },
      {
        "service_pid": 4446
      },
      {
        "service_pid": 9713
      },
      {
        "service_pid": 5985
      },
      {
        "service_pid": 5705
      },
      {
        "service_pid": 9203
      },
      {
        "service_pid": 8972
      },
      {
        "service_pid": 4324
      },
      {
        "service_pid": 8550
      },
      {
        "service_pid": 2465
      },
      {
        "service_pid": 2702
      },
      {
        "service_pid": 6599
      },
      {
        "service_pid": 3975
      },
      {
        "service_pid": 3548
      },
      {
        "service_pid": 5012
      },
      {
        "service_pid": 8539
      },
      {
        "service_pid": 1549
      },
      {
        "service_pid": 3762
      },
      {
        "service_pid": 1897
      },
      {
        "service_pid": 7532
      },
      {
        "service_pid": 8366
      },
      {
        "service_pid": 5134
      },
      {
        "service_pid": 2535
      },
      {
        "service_pid": 2733
      },
      {
        "service_pid": 5675
      },
      {
        "service_pid": 8872
      },
      {
        "service_pid": 9789
      },
      {
        "service_pid": 3255
      },
      {
        "service_pid": 5873
      },
      {
        "service_pid": 9904
      },
      {
        "service_pid": 2134
      },
      {
        "service_pid": 4186
      },
      {
        "service_pid": 5430
      },
      {
        "service_pid": 6996
      },
      {
        "service_pid": 8183
      },
      {
        "service_pid": 1100
      },
      {
        "service_pid": 3969
      },
      {
        "service_pid": 3946
      },
      {
        "service_pid": 8409
      },
      {
        "service_pid": 9843
      },
      {
        "service_pid": 1748
      },
      {
        "service_pid": 7263
      },
      {
        "service_pid": 5100
      },
      {
        "service_pid": 360
      },
      {
        "service_pid": 377
      },
      {
        "service_pid": 3347
      },
      {
        "service_pid": 2325
      },
      {
        "service_pid": 6774
      },
      {
        "service_pid": 9368
      },
      {
        "service_pid": 1930
      },
      {
        "service_pid": 5924
      },
      {
        "service_pid": 3048
      },
      {
        "service_pid": 3614
      },
      {
        "service_pid": 6607
      },
      {
        "service_pid": 6974
      },
      {
        "service_pid": 1688
      },
      {
        "service_pid": 1818
      },
      {
        "service_pid": 7234
      },
      {
        "service_pid": 5169
      },
      {
        "service_pid": 2301
      },
      {
        "service_pid": 2310
      },
      {
        "service_pid": 409
      },
      {
        "service_pid": 9595
      },
      {
        "service_pid": 7494
      },
      {
        "service_pid": 6478
      },
      {
        "service_pid": 6402
      },
      {
        "service_pid": 5993
      },
      {
        "service_pid": 432
      },
      {
        "service_pid": 9552
      },
      {
        "service_pid": 1997
      },
      {
        "service_pid": 3564
      },
      {
        "service_pid": 3957
      },
      {
        "service_pid": 7100
      },
      {
        "service_pid": 6000
      },
      {
        "service_pid": 5317
      },
      {
        "service_pid": 3999
      },
      {
        "service_pid": 4994
      },
      {
        "service_pid": 8154
      },
      {
        "service_pid": 426
      },
      {
        "service_pid": 263
      },
      {
        "service_pid": 2061
      },
      {
        "service_pid": 9917
      },
      {
        "service_pid": 5339
      },
      {
        "service_pid": 2709
      },
      {
        "service_pid": 8620
      },
      {
        "service_pid": 10
      },
      {
        "service_pid": 3775
      },
      {
        "service_pid": 2099
      },
      {
        "service_pid": 8904
      },
      {
        "service_pid": 5274
      },
      {
        "service_pid": 6976
      },
      {
        "service_pid": 3145
      },
      {
        "service_pid": 11
      },
      {
        "service_pid": 3979
      },
      {
        "service_pid": 1649
      },
      {
        "service_pid": 4270
      },
      {
        "service_pid": 6549
      },
      {
        "service_pid": 5399
      },
      {
        "service_pid": 3011
      },
      {
        "service_pid": 4116
      },
      {
        "service_pid": 1221
      },
      {
        "service_pid": 1359
      },
      {
        "service_pid": 8475
      },
      {
        "service_pid": 1735
      },
      {
        "service_pid": 5475
      },
      {
        "service_pid": 2476
      },
      {
        "service_pid": 7632
      },
      {
        "service_pid": 5984
      },
      {
        "service_pid": 2959
      },
      {
        "service_pid": 7733
      },
      {
        "service_pid": 1453
      },
      {
        "service_pid": 5672
      },
      {
        "service_pid": 9425
      },
      {
        "service_pid": 797
      },
      {
        "service_pid": 7261
      },
      {
        "service_pid": 248
      },
      {
        "service_pid": 1913
      },
      {
        "service_pid": 9444
      },
      {
        "service_pid": 5507
      },
      {
        "service_pid": 6158
      },
      {
        "service_pid": 7640
      },
      {
        "service_pid": 7580
      },
      {
        "service_pid": 9794
      },
      {
        "service_pid": 6209
      },
      {
        "service_pid": 7623
      },
      {
        "service_pid": 399
      },
      {
        "service_pid": 6701
      },
      {
        "service_pid": 3057
      },
      {
        "service_pid": 5991
      },
      {
        "service_pid": 561
      },
      {
        "service_pid": 5302
      },
      {
        "service_pid": 5385
      },
      {
        "service_pid": 3160
      },
      {
        "service_pid": 8348
      },
      {
        "service_pid": 4564
      },
      {
        "service_pid": 1289
      },
      {
        "service_pid": 6564
      },
      {
        "service_pid": 7037
      },
      {
        "service_pid": 9270
      },
      {
        "service_pid": 8897
      },
      {
        "service_pid": 6620
      },
      {
        "service_pid": 1247
      },
      {
        "service_pid": 9722
      },
      {
        "service_pid": 8205
      },
      {
        "service_pid": 4314
      },
      {
        "service_pid": 1645
      },
      {
        "service_pid": 9688
      },
      {
        "service_pid": 1257
      },
      {
        "service_pid": 2222
      },
      {
        "service_pid": 4666
      },
      {
        "service_pid": 156
      },
      {
        "service_pid": 9355
      },
      {
        "service_pid": 2333
      },
      {
        "service_pid": 8550
      },
      {
        "service_pid": 9280
      },
      {
        "service_pid": 2750
      },
      {
        "service_pid": 3861
      },
      {
        "service_pid": 7699
      },
      {
        "service_pid": 5591
      },
      {
        "service_pid": 2709
      },
      {
        "service_pid": 8796
      },
      {
        "service_pid": 540
      },
      {
        "service_pid": 3963
      },
      {
        "service_pid": 6034
      },
      {
        "service_pid": 7152
      },
      {
        "service_pid": 9491
      },
      {
        "service_pid": 3030
      },
      {
        "service_pid": 2205
      },
      {
        "service_pid": 4758
      },
      {
        "service_pid": 2857
      },
      {
        "service_pid": 4586
      },
      {
        "service_pid": 8247
      },
      {
        "service_pid": 7591
      },
      {
        "service_pid": 3294
      },
      {
        "service_pid": 9351
      },
      {
        "service_pid": 1770
      },
      {
        "service_pid": 7478
      },
      {
        "service_pid": 2846
      },
      {
        "service_pid": 3169
      },
      {
        "service_pid": 1069
      },
      {
        "service_pid": 4144
      },
      {
        "service_pid": 2023
      },
      {
        "service_pid": 7017
      },
      {
        "service_pid": 3310
      },
      {
        "service_pid": 561
      },
      {
        "service_pid": 8713
      },
      {
        "service_pid": 2260
      },
      {
        "service_pid": 2100
      },
      {
        "service_pid": 843
      },
      {
        "service_pid": 189
      },
      {
        "service_pid": 2858
      },
      {
        "service_pid": 9870
      },
      {
        "service_pid": 433
      },
      {
        "service_pid": 2408
      },
      {
        "service_pid": 6007
      },
      {
        "service_pid": 3323
      },
      {
        "service_pid": 1358
      },
      {
        "service_pid": 2841
      },
      {
        "service_pid": 1800
      },
      {
        "service_pid": 3723
      },
      {
        "service_pid": 8408
      },
      {
        "service_pid": 2666
      },
      {
        "service_pid": 1913
      },
      {
        "service_pid": 7368
      },
      {
        "service_pid": 3088
      },
      {
        "service_pid": 5847
      },
      {
        "service_pid": 9176
      },
      {
        "service_pid": 22
      },
      {
        "service_pid": 1927
      },
      {
        "service_pid": 3880
      },
      {
        "service_pid": 2092
      },
      {
        "service_pid": 8178
      },
      {
        "service_pid": 3185
      },
      {
        "service_pid": 4245
      },
      {
        "service_pid": 8508
      },
      {
        "service_pid": 7281
      },
      {
        "service_pid": 8565
      },
      {
        "service_pid": 4279
      },
      {
        "service_pid": 354
      },
      {
        "service_pid": 9164
      },
      {
        "service_pid": 4680
      },
      {
        "service_pid": 5687
      },
      {
        "service_pid": 3683
      },
      {
        "service_pid": 6561
      },
      {
        "service_pid": 1663
      },
      {
        "service_pid": 141
      },
      {
        "service_pid": 3784
      },
      {
        "service_pid": 8832
      },
      {
        "service_pid": 4725
      },
      {
        "service_pid": 2731
      },
      {
        "service_pid": 3136
      },
      {
        "service_pid": 1872
      },
      {
        "service_pid": 6939
      },
      {
        "service_pid": 3348
      },
      {
        "service_pid": 8280
      },
      {
        "service_pid": 8383
      },
      {
        "service_pid": 7610
      },
      {
        "service_pid": 7932
      },
      {
        "service_pid": 1517
      },
      {
        "service_pid": 3166
      },
      {
        "service_pid": 4218
      },
      {
        "service_pid": 8630
      },
      {
        "service_pid": 4024
      },
      {
        "service_pid": 7702
      },
      {
        "service_pid": 4742
      },
      {
        "service_pid": 2750
      },
      {
        "service_pid": 9172
      },
      {
        "service_pid": 5977
      },
      {
        "service_pid": 1213
      },
      {
        "service_pid": 9765
      },
      {
        "service_pid": 1652
      },
      {
        "service_pid": 4781
      },
      {
        "service_pid": 4051
      },
      {
        "service_pid": 1966
      },
      {
        "service_pid": 1837
      },
      {
        "service_pid": 8317
      },
      {
        "service_pid": 5442
      },
      {
        "service_pid": 4068
      },
      {
        "service_pid": 8265
      },
      {
        "service_pid": 9337
      },
      {
        "service_pid": 2773
      },
      {
        "service_pid": 8215
      },
      {
        "service_pid": 5340
      },
      {
        "service_pid": 2902
      },
      {
        "service_pid": 1244
      },
      {
        "service_pid": 8006
      },
      {
        "service_pid": 565
      },
      {
        "service_pid": 6735
      },
      {
        "service_pid": 9833
      },
      {
        "service_pid": 8896
      },
      {
        "service_pid": 1242
      },
      {
        "service_pid": 4130
      },
      {
        "service_pid": 6722
      },
      {
        "service_pid": 2496
      },
      {
        "service_pid": 2613
      },
      {
        "service_pid": 8626
      },
      {
        "service_pid": 8779
      },
      {
        "service_pid": 2960
      },
      {
        "service_pid": 5021
      },
      {
        "service_pid": 332
      },
      {
        "service_pid": 5158
      },
      {
        "service_pid": 6957
      },
      {
        "service_pid": 9742
      },
      {
        "service_pid": 5742
      },
      {
        "service_pid": 952
      },
      {
        "service_pid": 622
      },
      {
        "service_pid": 4022
      },
      {
        "service_pid": 5880
      },
      {
        "service_pid": 1290
      },
      {
        "service_pid": 4376
      },
      {
        "service_pid": 7681
      },
      {
        "service_pid": 5955
      },
      {
        "service_pid": 6137
      },
      {
        "service_pid": 1557
      },
      {
        "service_pid": 6352
      },
      {
        "service_pid": 4141
      },
      {
        "service_pid": 246
      },
      {
        "service_pid": 8025
      },
      {
        "service_pid": 525
      },
      {
        "service_pid": 8917
      },
      {
        "service_pid": 6702
      },
      {
        "service_pid": 1833
      },
      {
        "service_pid": 2429
      },
      {
        "service_pid": 8866
      },
      {
        "service_pid": 1279
      },
      {
        "service_pid": 5785
      },
      {
        "service_pid": 3074
      },
      {
        "service_pid": 8921
      },
      {
        "service_pid": 5863
      },
      {
        "service_pid": 2160
      },
      {
        "service_pid": 6046
      },
      {
        "service_pid": 6040
      },
      {
        "service_pid": 394
      },
      {
        "service_pid": 3921
      },
      {
        "service_pid": 1632
      },
      {
        "service_pid": 7080
      },
      {
        "service_pid": 4108
      },
      {
        "service_pid": 9025
      },
      {
        "service_pid": 8835
      },
      {
        "service_pid": 3908
      },
      {
        "service_pid": 3754
      },
      {
        "service_pid": 5106
      },
      {
        "service_pid": 4981
      },
      {
        "service_pid": 9763
      },
      {
        "service_pid": 8054
      },
      {
        "service_pid": 7540
      },
      {
        "service_pid": 5956
      },
      {
        "service_pid": 8778
      },
      {
        "service_pid": 282
      },
      {
        "service_pid": 2139
      },
      {
        "service_pid": 1072
      },
      {
        "service_pid": 9183
      },
      {
        "service_pid": 2732
      },
      {
        "service_pid": 5070
      },
      {
        "service_pid": 3167
      },
      {
        "service_pid": 7055
      },
      {
        "service_pid": 1065
      },
      {
        "service_pid": 7787
      },
      {
        "service_pid": 6356
      },
      {
        "service_pid": 9728
      },
      {
        "service_pid": 9502
      },
      {
        "service_pid": 6998
      },
      {
        "service_pid": 8404
      },
      {
        "service_pid": 8909
      },
      {
        "service_pid": 4643
      },
      {
        "service_pid": 7780
      },
      {
        "service_pid": 4348
      },
      {
        "service_pid": 5945
      },
      {
        "service_pid": 8512
      },
      {
        "service_pid": 4201
      },
      {
        "service_pid": 5663
      },
      {
        "service_pid": 8684
      },
      {
        "service_pid": 420
      },
      {
        "service_pid": 1384
      },
      {
        "service_pid": 716
      },
      {
        "service_pid": 6143
      },
      {
        "service_pid": 8200
      },
      {
        "service_pid": 1939
      },
      {
        "service_pid": 7547
      },
      {
        "service_pid": 7827
      },
      {
        "service_pid": 7035
      },
      {
        "service_pid": 7088
      },
      {
        "service_pid": 4384
      },
      {
        "service_pid": 1062
      },
      {
        "service_pid": 4055
      },
      {
        "service_pid": 1572
      },
      {
        "service_pid": 9591
      },
      {
        "service_pid": 5098
      },
      {
        "service_pid": 2856
      },
      {
        "service_pid": 2980
      },
      {
        "service_pid": 2453
      },
      {
        "service_pid": 1675
      },
      {
        "service_pid": 5828
      },
      {
        "service_pid": 9367
      },
      {
        "service_pid": 2733
      },
      {
        "service_pid": 9658
      },
      {
        "service_pid": 5824
      },
      {
        "service_pid": 6710
      },
      {
        "service_pid": 4764
      },
      {
        "service_pid": 2892
      },
      {
        "service_pid": 7081
      },
      {
        "service_pid": 1501
      },
      {
        "service_pid": 391
      },
      {
        "service_pid": 6211
      },
      {
        "service_pid": 9373
      },
      {
        "service_pid": 6860
      },
      {
        "service_pid": 8676
      },
      {
        "service_pid": 4975
      },
      {
        "service_pid": 6152
      },
      {
        "service_pid": 2623
      },
      {
        "service_pid": 9512
      },
      {
        "service_pid": 9917
      },
      {
        "service_pid": 7461
      },
      {
        "service_pid": 833
      },
      {
        "service_pid": 8126
      },
      {
        "service_pid": 3470
      },
      {
        "service_pid": 718
      },
      {
        "service_pid": 4353
      },
      {
        "service_pid": 3190
      },
      {
        "service_pid": 7572
      },
      {
        "service_pid": 8286
      },
      {
        "service_pid": 4635
      },
      {
        "service_pid": 4996
      },
      {
        "service_pid": 2182
      },
      {
        "service_pid": 1181
      },
      {
        "service_pid": 3789
      },
      {
        "service_pid": 7298
      },
      {
        "service_pid": 2875
      },
      {
        "service_pid": 4942
      },
      {
        "service_pid": 1529
      },
      {
        "service_pid": 8448
      },
      {
        "service_pid": 7080
      },
      {
        "service_pid": 676
      },
      {
        "service_pid": 8706
      },
      {
        "service_pid": 1658
      },
      {
        "service_pid": 7941
      },
      {
        "service_pid": 3262
      },
      {
        "service_pid": 8224
      },
      {
        "service_pid": 4752
      },
      {
        "service_pid": 5640
      },
      {
        "service_pid": 7311
      },
      {
        "service_pid": 6474
      },
      {
        "service_pid": 5599
      },
      {
        "service_pid": 8892
      },
      {
        "service_pid": 1244
      },
      {
        "service_pid": 4962
      },
      {
        "service_pid": 2630
      },
      {
        "service_pid": 900
      },
      {
        "service_pid": 1739
      },
      {
        "service_pid": 2361
      },
      {
        "service_pid": 2322
      },
      {
        "service_pid": 2849
      },
      {
        "service_pid": 3748
      },
      {
        "service_pid": 4229
      },
      {
        "service_pid": 5277
      },
      {
        "service_pid": 8657
      },
      {
        "service_pid": 9751
      },
      {
        "service_pid": 7818
      },
      {
        "service_pid": 9259
      },
      {
        "service_pid": 5482
      },
      {
        "service_pid": 3377
      },
      {
        "service_pid": 4224
      },
      {
        "service_pid": 3884
      },
      {
        "service_pid": 3671
      },
      {
        "service_pid": 9645
      },
      {
        "service_pid": 6933
      },
      {
        "service_pid": 3806
      },
      {
        "service_pid": 3330
      },
      {
        "service_pid": 4168
      },
      {
        "service_pid": 9736
      },
      {
        "service_pid": 3825
      },
      {
        "service_pid": 9762
      },
      {
        "service_pid": 1515
      },
      {
        "service_pid": 7393
      },
      {
        "service_pid": 3501
      },
      {
        "service_pid": 6500
      },
      {
        "service_pid": 1351
      },
      {
        "service_pid": 3376
      },
      {
        "service_pid": 4201
      },
      {
        "service_pid": 1700
      },
      {
        "service_pid": 2512
      },
      {
        "service_pid": 3327
      },
      {
        "service_pid": 1514
      },
      {
        "service_pid": 9892
      },
      {
        "service_pid": 1532
      },
      {
        "service_pid": 1965
      },
      {
        "service_pid": 5771
      },
      {
        "service_pid": 3968
      },
      {
        "service_pid": 3917
      },
      {
        "service_pid": 5908
      },
      {
        "service_pid": 2194
      },
      {
        "service_pid": 7141
      },
      {
        "service_pid": 3754
      },
      {
        "service_pid": 2736
      },
      {
        "service_pid": 3469
      },
      {
        "service_pid": 5596
      },
      {
        "service_pid": 721
      },
      {
        "service_pid": 5498
      },
      {
        "service_pid": 2484
      },
      {
        "service_pid": 4494
      },
      {
        "service_pid": 6412
      },
      {
        "service_pid": 6240
      },
      {
        "service_pid": 9829
      },
      {
        "service_pid": 437
      },
      {
        "service_pid": 7735
      },
      {
        "service_pid": 3586
      },
      {
        "service_pid": 2391
      },
      {
        "service_pid": 2402
      },
      {
        "service_pid": 9280
      },
      {
        "service_pid": 3097
      },
      {
        "service_pid": 4854
      },
      {
        "service_pid": 5428
      },
      {
        "service_pid": 4252
      },
      {
        "service_pid": 3050
      },
      {
        "service_pid": 1000
      },
      {
        "service_pid": 9114
      },
      {
        "service_pid": 3409
      },
      {
        "service_pid": 3233
      },
      {
        "service_pid": 1360
      },
      {
        "service_pid": 6534
      },
      {
        "service_pid": 2125
      },
      {
        "service_pid": 7215
      },
      {
        "service_pid": 8326
      },
      {
        "service_pid": 3829
      },
      {
        "service_pid": 4089
      },
      {
        "service_pid": 7037
      },
      {
        "service_pid": 242
      },
      {
        "service_pid": 9726
      },
      {
        "service_pid": 3984
      },
      {
        "service_pid": 6236
      },
      {
        "service_pid": 6514
      },
      {
        "service_pid": 9879
      },
      {
        "service_pid": 6670
      },
      {
        "service_pid": 9120
      },
      {
        "service_pid": 5484
      },
      {
        "service_pid": 8573
      },
      {
        "service_pid": 9824
      },
      {
        "service_pid": 3535
      },
      {
        "service_pid": 5003
      },
      {
        "service_pid": 6857
      },
      {
        "service_pid": 8167
      },
      {
        "service_pid": 4338
      },
      {
        "service_pid": 4223
      },
      {
        "service_pid": 5114
      },
      {
        "service_pid": 1271
      },
      {
        "service_pid": 2824
      },
      {
        "service_pid": 1330
      },
      {
        "service_pid": 5455
      },
      {
        "service_pid": 5327
      },
      {
        "service_pid": 1151
      },
      {
        "service_pid": 3767
      },
      {
        "service_pid": 5456
      },
      {
        "service_pid": 6320
      },
      {
        "service_pid": 8623
      },
      {
        "service_pid": 3889
      },
      {
        "service_pid": 2699
      },
      {
        "service_pid": 9683
      },
      {
        "service_pid": 8586
      },
      {
        "service_pid": 9794
      },
      {
        "service_pid": 1604
      },
      {
        "service_pid": 6805
      },
      {
        "service_pid": 9483
      },
      {
        "service_pid": 6242
      },
      {
        "service_pid": 1087
      },
      {
        "service_pid": 7066
      },
      {
        "service_pid": 4459
      },
      {
        "service_pid": 558
      },
      {
        "service_pid": 789
      },
      {
        "service_pid": 4243
      },
      {
        "service_pid": 6313
      },
      {
        "service_pid": 6361
      },
      {
        "service_pid": 4433
      },
      {
        "service_pid": 9477
      },
      {
        "service_pid": 1686
      },
      {
        "service_pid": 2699
      },
      {
        "service_pid": 395
      },
      {
        "service_pid": 305
      },
      {
        "service_pid": 7992
      },
      {
        "service_pid": 8945
      },
      {
        "service_pid": 8816
      },
      {
        "service_pid": 7792
      },
      {
        "service_pid": 4341
      },
      {
        "service_pid": 5076
      },
      {
        "service_pid": 3734
      },
      {
        "service_pid": 748
      },
      {
        "service_pid": 6547
      },
      {
        "service_pid": 657
      },
      {
        "service_pid": 5940
      },
      {
        "service_pid": 3735
      },
      {
        "service_pid": 8487
      },
      {
        "service_pid": 6820
      },
      {
        "service_pid": 54
      },
      {
        "service_pid": 1103
      },
      {
        "service_pid": 6343
      },
      {
        "service_pid": 1401
      },
      {
        "service_pid": 92
      },
      {
        "service_pid": 9594
      },
      {
        "service_pid": 959
      },
      {
        "service_pid": 6633
      },
      {
        "service_pid": 9986
      },
      {
        "service_pid": 4937
      },
      {
        "service_pid": 1150
      },
      {
        "service_pid": 7572
      },
      {
        "service_pid": 6965
      },
      {
        "service_pid": 9371
      },
      {
        "service_pid": 6827
      },
      {
        "service_pid": 4285
      },
      {
        "service_pid": 9680
      },
      {
        "service_pid": 7098
      },
      {
        "service_pid": 2734
      },
      {
        "service_pid": 2724
      },
      {
        "service_pid": 4640
      },
      {
        "service_pid": 8488
      },
      {
        "service_pid": 2053
      },
      {
        "service_pid": 7259
      },
      {
        "service_pid": 5453
      },
      {
        "service_pid": 2755
      },
      {
        "service_pid": 9221
      },
      {
        "service_pid": 6971
      },
      {
        "service_pid": 8857
      },
      {
        "service_pid": 180
      },
      {
        "service_pid": 862
      },
      {
        "service_pid": 4453
      },
      {
        "service_pid": 8598
      },
      {
        "service_pid": 3966
      },
      {
        "service_pid": 6535
      },
      {
        "service_pid": 290
      },
      {
        "service_pid": 8469
      },
      {
        "service_pid": 6257
      },
      {
        "service_pid": 2039
      },
      {
        "service_pid": 6784
      },
      {
        "service_pid": 5116
      },
      {
        "service_pid": 4267
      },
      {
        "service_pid": 294
      },
      {
        "service_pid": 5941
      },
      {
        "service_pid": 6168
      },
      {
        "service_pid": 9265
      },
      {
        "service_pid": 3845
      },
      {
        "service_pid": 4171
      },
      {
        "service_pid": 95
      },
      {
        "service_pid": 3023
      },
      {
        "service_pid": 2346
      },
      {
        "service_pid": 1024
      },
      {
        "service_pid": 7181
      },
      {
        "service_pid": 9157
      },
      {
        "service_pid": 5060
      },
      {
        "service_pid": 4890
      },
      {
        "service_pid": 111
      },
      {
        "service_pid": 3931
      },
      {
        "service_pid": 8155
      },
      {
        "service_pid": 1873
      },
      {
        "service_pid": 7756
      },
      {
        "service_pid": 929
      },
      {
        "service_pid": 7576
      },
      {
        "service_pid": 6462
      },
      {
        "service_pid": 1133
      },
      {
        "service_pid": 500
      },
      {
        "service_pid": 1930
      },
      {
        "service_pid": 5725
      },
      {
        "service_pid": 7740
      },
      {
        "service_pid": 5080
      },
      {
        "service_pid": 6552
      },
      {
        "service_pid": 1566
      },
      {
        "service_pid": 3086
      },
      {
        "service_pid": 2026
      },
      {
        "service_pid": 9479
      },
      {
        "service_pid": 8591
      },
      {
        "service_pid": 4412
      },
      {
        "service_pid": 4297
      },
      {
        "service_pid": 333
      },
      {
        "service_pid": 9259
      },
      {
        "service_pid": 1785
      },
      {
        "service_pid": 1152
      },
      {
        "service_pid": 5906
      },
      {
        "service_pid": 7429
      },
      {
        "service_pid": 4912
      },
      {
        "service_pid": 1087
      },
      {
        "service_pid": 8544
      },
      {
        "service_pid": 9202
      },
      {
        "service_pid": 1157
      },
      {
        "service_pid": 6836
      },
      {
        "service_pid": 6879
      },
      {
        "service_pid": 4571
      },
      {
        "service_pid": 1902
      },
      {
        "service_pid": 9955
      },
      {
        "service_pid": 4161
      },
      {
        "service_pid": 7324
      },
      {
        "service_pid": 6264
      },
      {
        "service_pid": 2738
      },
      {
        "service_pid": 3247
      },
      {
        "service_pid": 392
      },
      {
        "service_pid": 4787
      },
      {
        "service_pid": 3003
      },
      {
        "service_pid": 1616
      },
      {
        "service_pid": 5514
      },
      {
        "service_pid": 5269
      },
      {
        "service_pid": 5530
      },
      {
        "service_pid": 4791
      },
      {
        "service_pid": 873
      },
      {
        "service_pid": 6867
      },
      {
        "service_pid": 6775
      },
      {
        "service_pid": 6458
      },
      {
        "service_pid": 342
      },
      {
        "service_pid": 8435
      },
      {
        "service_pid": 723
      },
      {
        "service_pid": 8358
      },
      {
        "service_pid": 3124
      },
      {
        "service_pid": 8338
      },
      {
        "service_pid": 9890
      },
      {
        "service_pid": 696
      },
      {
        "service_pid": 8019
      },
      {
        "service_pid": 168
      },
      {
        "service_pid": 2815
      },
      {
        "service_pid": 6365
      },
      {
        "service_pid": 2943
      },
      {
        "service_pid": 5789
      },
      {
        "service_pid": 5980
      },
      {
        "service_pid": 8327
      },
      {
        "service_pid": 7304
      },
      {
        "service_pid": 9416
      },
      {
        "service_pid": 1183
      },
      {
        "service_pid": 2141
      },
      {
        "service_pid": 6573
      },
      {
        "service_pid": 3309
      },
      {
        "service_pid": 9102
      },
      {
        "service_pid": 9801
      },
      {
        "service_pid": 3799
      },
      {
        "service_pid": 4801
      },
      {
        "service_pid": 307
      },
      {
        "service_pid": 6623
      },
      {
        "service_pid": 5849
      },
      {
        "service_pid": 9156
      },
      {
        "service_pid": 9764
      },
      {
        "service_pid": 9644
      },
      {
        "service_pid": 8538
      },
      {
        "service_pid": 3355
      },
      {
        "service_pid": 7771
      },
      {
        "service_pid": 2848
      },
      {
        "service_pid": 7401
      },
      {
        "service_pid": 5577
      },
      {
        "service_pid": 7874
      },
      {
        "service_pid": 60
      },
      {
        "service_pid": 376
      },
      {
        "service_pid": 2370
      },
      {
        "service_pid": 6732
      },
      {
        "service_pid": 3195
      },
      {
        "service_pid": 9826
      },
      {
        "service_pid": 6421
      },
      {
        "service_pid": 6078
      },
      {
        "service_pid": 6748
      },
      {
        "service_pid": 5610
      },
      {
        "service_pid": 5576
      },
      {
        "service_pid": 7439
      },
      {
        "service_pid": 5627
      },
      {
        "service_pid": 9278
      },
      {
        "service_pid": 7068
      },
      {
        "service_pid": 5032
      },
      {
        "service_pid": 316
      },
      {
        "service_pid": 4375
      },
      {
        "service_pid": 3088
      },
      {
        "service_pid": 1889
      },
      {
        "service_pid": 79
      },
      {
        "service_pid": 4470
      },
      {
        "service_pid": 7261
      },
      {
        "service_pid": 2847
      },
      {
        "service_pid": 3785
      },
      {
        "service_pid": 4429
      },
      {
        "service_pid": 2764
      },
      {
        "service_pid": 2146
      },
      {
        "service_pid": 3365
      },
      {
        "service_pid": 8749
      },
      {
        "service_pid": 3536
      },
      {
        "service_pid": 6411
      },
      {
        "service_pid": 4480
      },
      {
        "service_pid": 7886
      },
      {
        "service_pid": 9071
      },
      {
        "service_pid": 9953
      },
      {
        "service_pid": 2049
      },
      {
        "service_pid": 1345
      },
      {
        "service_pid": 7101
      },
      {
        "service_pid": 3836
      },
      {
        "service_pid": 9530
      },
      {
        "service_pid": 8030
      },
      {
        "service_pid": 9034
      },
      {
        "service_pid": 9413
      },
      {
        "service_pid": 7976
      },
      {
        "service_pid": 3193
      },
      {
        "service_pid": 9598
      },
      {
        "service_pid": 1122
      },
      {
        "service_pid": 8130
      },
      {
        "service_pid": 1443
      },
      {
        "service_pid": 3692
      },
      {
        "service_pid": 2586
      },
      {
        "service_pid": 3145
      },
      {
        "service_pid": 8643
      },
      {
        "service_pid": 9903
      },
      {
        "service_pid": 5372
      },
      {
        "service_pid": 9324
      },
      {
        "service_pid": 6638
      },
      {
        "service_pid": 1837
      },
      {
        "service_pid": 9814
      },
      {
        "service_pid": 7978
      },
      {
        "service_pid": 2162
      },
      {
        "service_pid": 8389
      },
      {
        "service_pid": 4047
      },
      {
        "service_pid": 1783
      },
      {
        "service_pid": 1749
      },
      {
        "service_pid": 4396
      },
      {
        "service_pid": 7158
      },
      {
        "service_pid": 8850
      },
      {
        "service_pid": 3168
      },
      {
        "service_pid": 2464
      },
      {
        "service_pid": 4870
      },
      {
        "service_pid": 49
      },
      {
        "service_pid": 6976
      },
      {
        "service_pid": 8814
      },
      {
        "service_pid": 5072
      },
      {
        "service_pid": 8593
      },
      {
        "service_pid": 2862
      },
      {
        "service_pid": 2876
      },
      {
        "service_pid": 4867
      },
      {
        "service_pid": 8987
      },
      {
        "service_pid": 8880
      },
      {
        "service_pid": 2547
      },
      {
        "service_pid": 8890
      },
      {
        "service_pid": 4142
      },
      {
        "service_pid": 1086
      },
      {
        "service_pid": 4960
      },
      {
        "service_pid": 1657
      },
      {
        "service_pid": 3517
      },
      {
        "service_pid": 6681
      },
      {
        "service_pid": 3959
      },
      {
        "service_pid": 2379
      },
      {
        "service_pid": 6047
      },
      {
        "service_pid": 938
      },
      {
        "service_pid": 5152
      },
      {
        "service_pid": 6588
      },
      {
        "service_pid": 9900
      },
      {
        "service_pid": 3674
      },
      {
        "service_pid": 5991
      },
      {
        "service_pid": 6355
      },
      {
        "service_pid": 4613
      },
      {
        "service_pid": 9303
      },
      {
        "service_pid": 7705
      },
      {
        "service_pid": 1374
      }
    ]
  },
  {
    "question": "How many versions does RHEL software have?",
    "cypher": "MATCH (s:Software {name: 'RHEL'}) RETURN size(s.versions) AS version_count",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "version_count": 3
      }
    ],
    "answer": "Based on the query result, RHEL (Red Hat Enterprise Linux) has 3 versions."
  },
  {
    "question": "What zone is the box DC1-RCK-4-2-M-174 in?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(m:Machine {name: 'DC1-RCK-4-2-M-174'}) RETURN r.zone AS machine_zone",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "machine_zone": 4
      }
    ],
    "answer": "The box DC1-RCK-4-2-M-174 is in Zone 4."
  },
  {
    "question": "What's the size of network 10.1?",
    "cypher": "MATCH (n:Network {ip: '10.1'}) RETURN n.size AS network_size",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "network_size": 16
      }
    ],
    "answer": "The size of network 10.1 is 16."
  },
  {
    "question": "How many dependencies does neo4j have?",
    "cypher": "MATCH (s:Software {name: 'neo4j'}) RETURN size(s.dependencies) AS dependency_count",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dependency_count": 1
      }
    ],
    "answer": "Based on the query result, Neo4j has 1 dependency."
  },
  {
    "question": "What port does postgres listen on?",
    "cypher": "MATCH (s:Software {name: 'postgres'}) WHERE s.ports IS NOT NULL RETURN s.ports[0] AS listening_port",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "listening_port": 5432
      }
    ],
    "answer": "Postgres listens on port 5432."
  },
  {
    "question": "What OS runs on machine DC1-RCK-1-1-M-1?",
    "cypher": "MATCH (m:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(os:OS) RETURN os.name AS os_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "os_name": "7.1"
      }
    ],
    "answer": "The machine DC1-RCK-1-1-M-1 runs OS version 7.1."
  },
  {
    "question": "How many interfaces does router DC1-RE route to?",
    "cypher": "MATCH (r:Router {name: 'DC1-RE'})-[:ROUTES]->(i:Interface) RETURN COUNT(i) AS interface_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interface_count": 1
      }
    ],
    "answer": "Based on the query result, router DC1-RE routes to 1 interface."
  },
  {
    "question": "What's the start time of java service?",
    "cypher": "MATCH (s:Service) WHERE s.name = 'java' AND s.startTime IS NOT NULL RETURN MIN(s.startTime) AS earliest_start",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_start": 1606166180635
      }
    ],
    "answer": "The start time of the java service is 1606166180635 milliseconds since the Unix epoch."
  },
  {
    "question": "What datacenter is in Rekjavik?",
    "cypher": "MATCH (d:DataCenter {location: 'Iceland, Rekjavik'}) RETURN d.name AS datacenter_name",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "datacenter_name": "DC1"
      }
    ],
    "answer": "The datacenter in Reykjavik is DC1."
  },
  {
    "question": "How many machines are in zone 1?",
    "cypher": "MATCH (r:Rack {zone: 1})-[:HOLDS]->(m:Machine) RETURN COUNT(DISTINCT m) AS machine_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "machine_count": 2000
      }
    ],
    "answer": "There are 2000 machines in zone 1."
  },
  {
    "question": "What interface connects to network 10.1?",
    "cypher": "MATCH (n:Network {ip: '10.1'})-[:ROUTES]->(i:Interface) RETURN i.ip AS interface_ip",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "interface_ip": "10.1.10.254"
      },
      {
        "interface_ip": "10.1.4.254"
      },
      {
        "interface_ip": "10.1.9.254"
      },
      {
        "interface_ip": "10.1.8.254"
      },
      {
        "interface_ip": "10.1.7.254"
      },
      {
        "interface_ip": "10.1.5.254"
      },
      {
        "interface_ip": "10.1.6.254"
      },
      {
        "interface_ip": "10.1.3.254"
      },
      {
        "interface_ip": "10.1.2.254"
      },
      {
        "interface_ip": "10.1.1.254"
      }
    ]
  },
  {
    "question": "What's the rack number of the switch with IP 10.1.1?",
    "cypher": "MATCH (s:Switch {ip: '10.1.1'}) RETURN s.rack AS rack_number",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "rack_number": 1
      }
    ],
    "answer": "The rack number of the switch with IP 10.1.1 is 1."
  },
  {
    "question": "How many apps depend on php?",
    "cypher": "MATCH (s:Software)<-[:DEPENDS_ON]-(a:Application) WHERE s.name = 'php' RETURN COUNT(a) AS dependent_apps",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dependent_apps": 1
      }
    ],
    "answer": "1 app depends on PHP."
  },
  {
    "question": "What version comes after RHEL 7.2?",
    "cypher": "MATCH (v1:Version {name: '7.2'})-[:PREVIOUS]->(v2:Version) RETURN v2.name AS next_version",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "next_version": "7.1"
      }
    ],
    "answer": "Based on the query result, there is no version that comes after RHEL 7.2. In fact, the result shows that 7.1 is the version before 7.2, which implies that the query did not find a version after 7.2."
  },
  {
    "question": "How many routers are in DC1?",
    "cypher": "MATCH (d:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Router) RETURN COUNT(r) AS router_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "router_count": 5
      }
    ],
    "answer": "There are 5 routers in DC1."
  },
  {
    "question": "What's the location of the datacenter containing machine DC1-RCK-2-9-M-90?",
    "cypher": "MATCH (d:DataCenter)-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine {name: 'DC1-RCK-2-9-M-90'}) RETURN d.location AS dc_location",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dc_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The datacenter containing machine DC1-RCK-2-9-M-90 is located in Iceland, Rekjavik."
  },
  {
    "question": "What port does the cms application listen on?",
    "cypher": "MATCH (a:Application {name: 'cms'})-[:LISTENS]->(p:Port) RETURN p.port AS listening_port",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      },
      {
        "listening_port": 8080
      }
    ]
  },
  {
    "question": "How many switches are in zone 1?",
    "cypher": "MATCH (r:Rack {zone: 1})-[:HOLDS]->(s:Switch) RETURN COUNT(s) AS switch_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "switch_count": 10
      }
    ],
    "answer": "There are 10 switches in zone 1."
  },
  {
    "question": "What software version is the webserver app?",
    "cypher": "MATCH (a:Application {name: 'webserver'})-[:INSTANCE]->(v:Version) RETURN v.name AS app_version",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What datacenter has racks in zone 4?",
    "cypher": "MATCH (d:DataCenter)-[:CONTAINS]->(r:Rack {zone: 4}) RETURN DISTINCT d.name AS datacenter_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "datacenter_name": "DC1"
      }
    ],
    "answer": "The datacenter with racks in zone 4 is DC1."
  },
  {
    "question": "How many services run on machine DC1-RCK-4-9-M-103?",
    "cypher": "MATCH (m:Machine {name: 'DC1-RCK-4-9-M-103'})-[:RUNS]->(s:Service) RETURN COUNT(s) AS service_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "service_count": 1
      }
    ],
    "answer": "1 service runs on machine DC1-RCK-4-9-M-103."
  },
  {
    "question": "What's the zone of the rack holding machine DC1-RCK-1-1-M-1?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(m:Machine {name: 'DC1-RCK-1-1-M-1'}) RETURN r.zone AS rack_zone",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "rack_zone": 1
      }
    ],
    "answer": "The zone of the rack holding machine DC1-RCK-1-1-M-1 is Zone 1."
  },
  {
    "question": "What interface does switch 10.1.10 route to?",
    "cypher": "MATCH (s:Switch {ip: '10.1.10'})-[:ROUTES]->(i:Interface) RETURN i.ip AS interface_ip",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interface_ip": "10.1.10.254"
      }
    ],
    "answer": "Switch 10.1.10 routes to interface 10.1.10.254."
  },
  {
    "question": "How many machines are in rack DC1-RCK-4-2?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-4-2'})-[:HOLDS]->(m:Machine) RETURN COUNT(m) AS machine_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "machine_count": 200
      }
    ],
    "answer": "There are 200 machines in rack DC1-RCK-4-2."
  },
  {
    "question": "What's the PID of the java service?",
    "cypher": "MATCH (s:Service) WHERE s.name = 'java' AND s.pid IS NOT NULL RETURN s.pid AS service_pid",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "service_pid": 5161
      },
      {
        "service_pid": 2809
      },
      {
        "service_pid": 182
      },
      {
        "service_pid": 2507
      },
      {
        "service_pid": 5009
      },
      {
        "service_pid": 6854
      },
      {
        "service_pid": 3766
      },
      {
        "service_pid": 4993
      },
      {
        "service_pid": 6381
      },
      {
        "service_pid": 226
      },
      {
        "service_pid": 2123
      },
      {
        "service_pid": 5673
      },
      {
        "service_pid": 7144
      },
      {
        "service_pid": 7804
      },
      {
        "service_pid": 8265
      },
      {
        "service_pid": 7701
      },
      {
        "service_pid": 952
      },
      {
        "service_pid": 8028
      },
      {
        "service_pid": 8008
      },
      {
        "service_pid": 8215
      },
      {
        "service_pid": 9664
      },
      {
        "service_pid": 666
      },
      {
        "service_pid": 9196
      },
      {
        "service_pid": 8696
      },
      {
        "service_pid": 885
      },
      {
        "service_pid": 9149
      },
      {
        "service_pid": 886
      },
      {
        "service_pid": 8517
      },
      {
        "service_pid": 6915
      },
      {
        "service_pid": 2032
      },
      {
        "service_pid": 2054
      },
      {
        "service_pid": 1031
      },
      {
        "service_pid": 1731
      },
      {
        "service_pid": 3800
      },
      {
        "service_pid": 5100
      },
      {
        "service_pid": 6067
      },
      {
        "service_pid": 9363
      },
      {
        "service_pid": 8101
      },
      {
        "service_pid": 680
      },
      {
        "service_pid": 4385
      },
      {
        "service_pid": 9514
      },
      {
        "service_pid": 527
      },
      {
        "service_pid": 4863
      },
      {
        "service_pid": 2924
      },
      {
        "service_pid": 6073
      },
      {
        "service_pid": 965
      },
      {
        "service_pid": 7768
      },
      {
        "service_pid": 8196
      },
      {
        "service_pid": 2177
      },
      {
        "service_pid": 5703
      },
      {
        "service_pid": 903
      },
      {
        "service_pid": 411
      },
      {
        "service_pid": 478
      },
      {
        "service_pid": 7146
      },
      {
        "service_pid": 4972
      },
      {
        "service_pid": 6173
      },
      {
        "service_pid": 2893
      },
      {
        "service_pid": 39
      },
      {
        "service_pid": 6310
      },
      {
        "service_pid": 9535
      },
      {
        "service_pid": 8698
      },
      {
        "service_pid": 908
      },
      {
        "service_pid": 7757
      },
      {
        "service_pid": 3024
      },
      {
        "service_pid": 7724
      },
      {
        "service_pid": 8315
      },
      {
        "service_pid": 8568
      },
      {
        "service_pid": 3670
      },
      {
        "service_pid": 8671
      },
      {
        "service_pid": 3380
      },
      {
        "service_pid": 6835
      },
      {
        "service_pid": 2691
      },
      {
        "service_pid": 8588
      },
      {
        "service_pid": 8519
      },
      {
        "service_pid": 1407
      },
      {
        "service_pid": 7925
      },
      {
        "service_pid": 2231
      },
      {
        "service_pid": 9727
      },
      {
        "service_pid": 2931
      },
      {
        "service_pid": 1762
      },
      {
        "service_pid": 1993
      },
      {
        "service_pid": 4871
      },
      {
        "service_pid": 6728
      },
      {
        "service_pid": 9534
      },
      {
        "service_pid": 5173
      },
      {
        "service_pid": 766
      },
      {
        "service_pid": 3997
      },
      {
        "service_pid": 649
      },
      {
        "service_pid": 6577
      },
      {
        "service_pid": 4433
      },
      {
        "service_pid": 6520
      },
      {
        "service_pid": 6132
      },
      {
        "service_pid": 2727
      },
      {
        "service_pid": 8481
      },
      {
        "service_pid": 3799
      },
      {
        "service_pid": 3247
      },
      {
        "service_pid": 2338
      },
      {
        "service_pid": 5819
      },
      {
        "service_pid": 1615
      },
      {
        "service_pid": 1649
      },
      {
        "service_pid": 2452
      },
      {
        "service_pid": 8156
      },
      {
        "service_pid": 2516
      },
      {
        "service_pid": 6011
      },
      {
        "service_pid": 7139
      },
      {
        "service_pid": 3727
      },
      {
        "service_pid": 8021
      },
      {
        "service_pid": 2504
      },
      {
        "service_pid": 2225
      },
      {
        "service_pid": 6104
      },
      {
        "service_pid": 2015
      },
      {
        "service_pid": 6787
      },
      {
        "service_pid": 7808
      },
      {
        "service_pid": 4361
      },
      {
        "service_pid": 7549
      },
      {
        "service_pid": 6078
      },
      {
        "service_pid": 1786
      },
      {
        "service_pid": 2854
      },
      {
        "service_pid": 4751
      },
      {
        "service_pid": 9308
      },
      {
        "service_pid": 1472
      },
      {
        "service_pid": 7517
      },
      {
        "service_pid": 8557
      },
      {
        "service_pid": 2455
      },
      {
        "service_pid": 9926
      },
      {
        "service_pid": 1303
      },
      {
        "service_pid": 2389
      },
      {
        "service_pid": 8103
      },
      {
        "service_pid": 4113
      },
      {
        "service_pid": 733
      },
      {
        "service_pid": 9760
      },
      {
        "service_pid": 1612
      },
      {
        "service_pid": 4676
      },
      {
        "service_pid": 888
      },
      {
        "service_pid": 2703
      },
      {
        "service_pid": 2450
      },
      {
        "service_pid": 3573
      },
      {
        "service_pid": 2816
      },
      {
        "service_pid": 3644
      },
      {
        "service_pid": 4993
      },
      {
        "service_pid": 1849
      },
      {
        "service_pid": 5133
      },
      {
        "service_pid": 2339
      },
      {
        "service_pid": 7805
      },
      {
        "service_pid": 3454
      },
      {
        "service_pid": 271
      },
      {
        "service_pid": 5411
      },
      {
        "service_pid": 807
      },
      {
        "service_pid": 4933
      },
      {
        "service_pid": 9520
      },
      {
        "service_pid": 6627
      },
      {
        "service_pid": 1422
      },
      {
        "service_pid": 4311
      },
      {
        "service_pid": 5368
      },
      {
        "service_pid": 1273
      },
      {
        "service_pid": 2632
      },
      {
        "service_pid": 2507
      },
      {
        "service_pid": 6230
      },
      {
        "service_pid": 7631
      },
      {
        "service_pid": 2839
      },
      {
        "service_pid": 7058
      },
      {
        "service_pid": 2696
      },
      {
        "service_pid": 467
      },
      {
        "service_pid": 7440
      },
      {
        "service_pid": 8593
      },
      {
        "service_pid": 252
      },
      {
        "service_pid": 5812
      },
      {
        "service_pid": 7297
      },
      {
        "service_pid": 9727
      },
      {
        "service_pid": 5227
      },
      {
        "service_pid": 3523
      },
      {
        "service_pid": 4963
      },
      {
        "service_pid": 3418
      },
      {
        "service_pid": 5456
      },
      {
        "service_pid": 9318
      },
      {
        "service_pid": 5606
      },
      {
        "service_pid": 6696
      },
      {
        "service_pid": 4273
      },
      {
        "service_pid": 4602
      },
      {
        "service_pid": 7642
      },
      {
        "service_pid": 4604
      },
      {
        "service_pid": 2362
      },
      {
        "service_pid": 3955
      },
      {
        "service_pid": 8791
      },
      {
        "service_pid": 6802
      },
      {
        "service_pid": 182
      },
      {
        "service_pid": 9235
      },
      {
        "service_pid": 769
      },
      {
        "service_pid": 7412
      },
      {
        "service_pid": 2750
      },
      {
        "service_pid": 8119
      },
      {
        "service_pid": 4447
      },
      {
        "service_pid": 6148
      },
      {
        "service_pid": 2741
      },
      {
        "service_pid": 7843
      },
      {
        "service_pid": 8847
      },
      {
        "service_pid": 9591
      },
      {
        "service_pid": 9757
      },
      {
        "service_pid": 5608
      },
      {
        "service_pid": 8063
      },
      {
        "service_pid": 3888
      },
      {
        "service_pid": 7595
      },
      {
        "service_pid": 286
      },
      {
        "service_pid": 9448
      },
      {
        "service_pid": 9251
      },
      {
        "service_pid": 4843
      },
      {
        "service_pid": 1921
      },
      {
        "service_pid": 9819
      },
      {
        "service_pid": 2011
      },
      {
        "service_pid": 9785
      },
      {
        "service_pid": 7615
      },
      {
        "service_pid": 1652
      },
      {
        "service_pid": 80
      },
      {
        "service_pid": 8907
      },
      {
        "service_pid": 8368
      },
      {
        "service_pid": 7094
      },
      {
        "service_pid": 7661
      },
      {
        "service_pid": 875
      },
      {
        "service_pid": 3679
      },
      {
        "service_pid": 6521
      },
      {
        "service_pid": 6419
      },
      {
        "service_pid": 3603
      },
      {
        "service_pid": 6649
      },
      {
        "service_pid": 1055
      },
      {
        "service_pid": 29
      },
      {
        "service_pid": 1804
      },
      {
        "service_pid": 6668
      },
      {
        "service_pid": 8929
      },
      {
        "service_pid": 1424
      },
      {
        "service_pid": 3436
      },
      {
        "service_pid": 2754
      },
      {
        "service_pid": 9056
      },
      {
        "service_pid": 9241
      },
      {
        "service_pid": 8806
      },
      {
        "service_pid": 2454
      },
      {
        "service_pid": 7051
      },
      {
        "service_pid": 483
      },
      {
        "service_pid": 5240
      },
      {
        "service_pid": 7589
      },
      {
        "service_pid": 1521
      },
      {
        "service_pid": 9182
      },
      {
        "service_pid": 8944
      },
      {
        "service_pid": 7069
      },
      {
        "service_pid": 5787
      },
      {
        "service_pid": 665
      },
      {
        "service_pid": 4578
      },
      {
        "service_pid": 4891
      },
      {
        "service_pid": 9748
      },
      {
        "service_pid": 4606
      },
      {
        "service_pid": 1927
      },
      {
        "service_pid": 7912
      },
      {
        "service_pid": 6293
      },
      {
        "service_pid": 4662
      },
      {
        "service_pid": 620
      },
      {
        "service_pid": 9437
      },
      {
        "service_pid": 6271
      },
      {
        "service_pid": 7531
      },
      {
        "service_pid": 5836
      },
      {
        "service_pid": 1211
      },
      {
        "service_pid": 1432
      },
      {
        "service_pid": 6443
      },
      {
        "service_pid": 3254
      },
      {
        "service_pid": 4650
      },
      {
        "service_pid": 8097
      },
      {
        "service_pid": 8849
      },
      {
        "service_pid": 2061
      },
      {
        "service_pid": 1675
      },
      {
        "service_pid": 5454
      },
      {
        "service_pid": 2761
      },
      {
        "service_pid": 330
      },
      {
        "service_pid": 1042
      },
      {
        "service_pid": 5983
      },
      {
        "service_pid": 5578
      },
      {
        "service_pid": 6654
      },
      {
        "service_pid": 8118
      },
      {
        "service_pid": 5853
      },
      {
        "service_pid": 422
      },
      {
        "service_pid": 559
      },
      {
        "service_pid": 7434
      },
      {
        "service_pid": 9061
      },
      {
        "service_pid": 9623
      },
      {
        "service_pid": 3969
      },
      {
        "service_pid": 3172
      },
      {
        "service_pid": 7908
      },
      {
        "service_pid": 4824
      },
      {
        "service_pid": 9091
      },
      {
        "service_pid": 1845
      },
      {
        "service_pid": 5007
      },
      {
        "service_pid": 1113
      },
      {
        "service_pid": 8063
      },
      {
        "service_pid": 7860
      },
      {
        "service_pid": 9923
      },
      {
        "service_pid": 8249
      },
      {
        "service_pid": 2957
      },
      {
        "service_pid": 8603
      },
      {
        "service_pid": 5944
      },
      {
        "service_pid": 1675
      },
      {
        "service_pid": 5452
      },
      {
        "service_pid": 6562
      },
      {
        "service_pid": 3821
      },
      {
        "service_pid": 5010
      },
      {
        "service_pid": 8057
      },
      {
        "service_pid": 3239
      },
      {
        "service_pid": 4248
      },
      {
        "service_pid": 7096
      },
      {
        "service_pid": 2779
      },
      {
        "service_pid": 4640
      },
      {
        "service_pid": 3269
      },
      {
        "service_pid": 66
      },
      {
        "service_pid": 8150
      },
      {
        "service_pid": 7143
      },
      {
        "service_pid": 135
      },
      {
        "service_pid": 994
      },
      {
        "service_pid": 3943
      },
      {
        "service_pid": 1395
      },
      {
        "service_pid": 1971
      },
      {
        "service_pid": 3731
      },
      {
        "service_pid": 709
      },
      {
        "service_pid": 9953
      },
      {
        "service_pid": 5819
      },
      {
        "service_pid": 1647
      },
      {
        "service_pid": 986
      },
      {
        "service_pid": 814
      },
      {
        "service_pid": 8899
      },
      {
        "service_pid": 8579
      },
      {
        "service_pid": 5634
      },
      {
        "service_pid": 9299
      },
      {
        "service_pid": 1961
      },
      {
        "service_pid": 2533
      },
      {
        "service_pid": 8643
      },
      {
        "service_pid": 9838
      },
      {
        "service_pid": 3055
      },
      {
        "service_pid": 8577
      },
      {
        "service_pid": 1844
      },
      {
        "service_pid": 6453
      },
      {
        "service_pid": 1276
      },
      {
        "service_pid": 9170
      },
      {
        "service_pid": 3305
      },
      {
        "service_pid": 6479
      },
      {
        "service_pid": 2041
      },
      {
        "service_pid": 4348
      },
      {
        "service_pid": 7035
      },
      {
        "service_pid": 9646
      },
      {
        "service_pid": 605
      },
      {
        "service_pid": 1140
      },
      {
        "service_pid": 985
      },
      {
        "service_pid": 8433
      },
      {
        "service_pid": 1827
      },
      {
        "service_pid": 1042
      },
      {
        "service_pid": 3323
      },
      {
        "service_pid": 6031
      },
      {
        "service_pid": 8704
      },
      {
        "service_pid": 7118
      },
      {
        "service_pid": 6879
      },
      {
        "service_pid": 5072
      },
      {
        "service_pid": 7984
      },
      {
        "service_pid": 2884
      },
      {
        "service_pid": 753
      },
      {
        "service_pid": 8718
      },
      {
        "service_pid": 6902
      },
      {
        "service_pid": 6121
      },
      {
        "service_pid": 1158
      },
      {
        "service_pid": 8293
      },
      {
        "service_pid": 6305
      },
      {
        "service_pid": 186
      },
      {
        "service_pid": 9921
      },
      {
        "service_pid": 5630
      },
      {
        "service_pid": 2937
      },
      {
        "service_pid": 946
      },
      {
        "service_pid": 6072
      },
      {
        "service_pid": 8691
      },
      {
        "service_pid": 8616
      },
      {
        "service_pid": 3651
      },
      {
        "service_pid": 1905
      },
      {
        "service_pid": 4793
      },
      {
        "service_pid": 4699
      },
      {
        "service_pid": 297
      },
      {
        "service_pid": 3588
      },
      {
        "service_pid": 4018
      },
      {
        "service_pid": 4532
      },
      {
        "service_pid": 8500
      },
      {
        "service_pid": 9523
      },
      {
        "service_pid": 2283
      },
      {
        "service_pid": 97
      },
      {
        "service_pid": 5706
      },
      {
        "service_pid": 4862
      },
      {
        "service_pid": 7076
      },
      {
        "service_pid": 7658
      },
      {
        "service_pid": 2654
      },
      {
        "service_pid": 5161
      },
      {
        "service_pid": 9384
      },
      {
        "service_pid": 9243
      },
      {
        "service_pid": 8438
      },
      {
        "service_pid": 2935
      },
      {
        "service_pid": 2313
      },
      {
        "service_pid": 3723
      },
      {
        "service_pid": 8484
      },
      {
        "service_pid": 2012
      },
      {
        "service_pid": 1925
      },
      {
        "service_pid": 5412
      },
      {
        "service_pid": 8189
      },
      {
        "service_pid": 3157
      },
      {
        "service_pid": 6593
      },
      {
        "service_pid": 193
      },
      {
        "service_pid": 7661
      },
      {
        "service_pid": 1658
      },
      {
        "service_pid": 3376
      },
      {
        "service_pid": 5761
      },
      {
        "service_pid": 7948
      },
      {
        "service_pid": 4003
      },
      {
        "service_pid": 8032
      },
      {
        "service_pid": 7737
      },
      {
        "service_pid": 400
      },
      {
        "service_pid": 2370
      },
      {
        "service_pid": 5351
      },
      {
        "service_pid": 1074
      },
      {
        "service_pid": 5092
      },
      {
        "service_pid": 4173
      },
      {
        "service_pid": 188
      },
      {
        "service_pid": 4549
      },
      {
        "service_pid": 4001
      },
      {
        "service_pid": 2756
      },
      {
        "service_pid": 8649
      },
      {
        "service_pid": 7666
      },
      {
        "service_pid": 6758
      },
      {
        "service_pid": 6186
      },
      {
        "service_pid": 9074
      },
      {
        "service_pid": 3536
      },
      {
        "service_pid": 2585
      },
      {
        "service_pid": 3740
      },
      {
        "service_pid": 5620
      },
      {
        "service_pid": 4689
      },
      {
        "service_pid": 3854
      },
      {
        "service_pid": 2373
      },
      {
        "service_pid": 8158
      },
      {
        "service_pid": 252
      },
      {
        "service_pid": 5972
      },
      {
        "service_pid": 6901
      },
      {
        "service_pid": 4216
      },
      {
        "service_pid": 9158
      },
      {
        "service_pid": 3380
      },
      {
        "service_pid": 6208
      },
      {
        "service_pid": 9998
      },
      {
        "service_pid": 2601
      },
      {
        "service_pid": 9967
      },
      {
        "service_pid": 6454
      },
      {
        "service_pid": 3079
      },
      {
        "service_pid": 5784
      },
      {
        "service_pid": 9068
      },
      {
        "service_pid": 990
      },
      {
        "service_pid": 1838
      },
      {
        "service_pid": 8947
      },
      {
        "service_pid": 9149
      },
      {
        "service_pid": 7301
      },
      {
        "service_pid": 9744
      },
      {
        "service_pid": 3780
      },
      {
        "service_pid": 1156
      },
      {
        "service_pid": 5736
      },
      {
        "service_pid": 5910
      },
      {
        "service_pid": 1924
      },
      {
        "service_pid": 4524
      },
      {
        "service_pid": 688
      },
      {
        "service_pid": 3992
      },
      {
        "service_pid": 9733
      },
      {
        "service_pid": 6819
      },
      {
        "service_pid": 8008
      },
      {
        "service_pid": 3149
      },
      {
        "service_pid": 9261
      },
      {
        "service_pid": 7213
      },
      {
        "service_pid": 7716
      },
      {
        "service_pid": 4948
      },
      {
        "service_pid": 1270
      },
      {
        "service_pid": 7583
      },
      {
        "service_pid": 3709
      },
      {
        "service_pid": 5100
      },
      {
        "service_pid": 758
      },
      {
        "service_pid": 5207
      },
      {
        "service_pid": 5499
      },
      {
        "service_pid": 1718
      },
      {
        "service_pid": 9224
      },
      {
        "service_pid": 1025
      },
      {
        "service_pid": 1612
      },
      {
        "service_pid": 798
      },
      {
        "service_pid": 3679
      },
      {
        "service_pid": 6842
      },
      {
        "service_pid": 1566
      },
      {
        "service_pid": 1705
      },
      {
        "service_pid": 9610
      },
      {
        "service_pid": 9110
      },
      {
        "service_pid": 8517
      },
      {
        "service_pid": 6206
      },
      {
        "service_pid": 1835
      },
      {
        "service_pid": 8777
      },
      {
        "service_pid": 564
      },
      {
        "service_pid": 3852
      },
      {
        "service_pid": 2387
      },
      {
        "service_pid": 6929
      },
      {
        "service_pid": 7065
      },
      {
        "service_pid": 1055
      },
      {
        "service_pid": 7919
      },
      {
        "service_pid": 6735
      },
      {
        "service_pid": 737
      },
      {
        "service_pid": 5880
      },
      {
        "service_pid": 9147
      },
      {
        "service_pid": 9694
      },
      {
        "service_pid": 2172
      },
      {
        "service_pid": 5040
      },
      {
        "service_pid": 7899
      },
      {
        "service_pid": 1713
      },
      {
        "service_pid": 2666
      },
      {
        "service_pid": 3919
      },
      {
        "service_pid": 1342
      },
      {
        "service_pid": 1815
      },
      {
        "service_pid": 6991
      },
      {
        "service_pid": 1632
      },
      {
        "service_pid": 7425
      },
      {
        "service_pid": 146
      },
      {
        "service_pid": 3424
      },
      {
        "service_pid": 3756
      },
      {
        "service_pid": 9284
      },
      {
        "service_pid": 4405
      },
      {
        "service_pid": 8451
      },
      {
        "service_pid": 430
      },
      {
        "service_pid": 9425
      },
      {
        "service_pid": 8478
      },
      {
        "service_pid": 2242
      },
      {
        "service_pid": 8814
      },
      {
        "service_pid": 959
      },
      {
        "service_pid": 5077
      },
      {
        "service_pid": 3459
      },
      {
        "service_pid": 8025
      },
      {
        "service_pid": 7287
      },
      {
        "service_pid": 7494
      },
      {
        "service_pid": 1187
      },
      {
        "service_pid": 2440
      },
      {
        "service_pid": 7903
      },
      {
        "service_pid": 3102
      },
      {
        "service_pid": 5956
      },
      {
        "service_pid": 3110
      },
      {
        "service_pid": 2238
      },
      {
        "service_pid": 8311
      },
      {
        "service_pid": 9350
      },
      {
        "service_pid": 2969
      },
      {
        "service_pid": 5124
      },
      {
        "service_pid": 2021
      },
      {
        "service_pid": 410
      },
      {
        "service_pid": 1221
      },
      {
        "service_pid": 7287
      },
      {
        "service_pid": 6420
      },
      {
        "service_pid": 3649
      },
      {
        "service_pid": 2245
      },
      {
        "service_pid": 343
      },
      {
        "service_pid": 9728
      },
      {
        "service_pid": 1667
      },
      {
        "service_pid": 7964
      },
      {
        "service_pid": 4319
      },
      {
        "service_pid": 1524
      },
      {
        "service_pid": 6732
      },
      {
        "service_pid": 4627
      },
      {
        "service_pid": 8428
      },
      {
        "service_pid": 6465
      },
      {
        "service_pid": 2384
      },
      {
        "service_pid": 6465
      },
      {
        "service_pid": 6472
      },
      {
        "service_pid": 2512
      },
      {
        "service_pid": 8529
      },
      {
        "service_pid": 8581
      },
      {
        "service_pid": 2029
      },
      {
        "service_pid": 6479
      },
      {
        "service_pid": 6462
      },
      {
        "service_pid": 5690
      },
      {
        "service_pid": 4703
      },
      {
        "service_pid": 3635
      },
      {
        "service_pid": 9755
      },
      {
        "service_pid": 2101
      },
      {
        "service_pid": 1468
      },
      {
        "service_pid": 7395
      },
      {
        "service_pid": 8265
      },
      {
        "service_pid": 9562
      },
      {
        "service_pid": 5179
      },
      {
        "service_pid": 4044
      },
      {
        "service_pid": 8667
      },
      {
        "service_pid": 2159
      },
      {
        "service_pid": 3538
      },
      {
        "service_pid": 8216
      },
      {
        "service_pid": 2275
      },
      {
        "service_pid": 7291
      },
      {
        "service_pid": 5837
      },
      {
        "service_pid": 2793
      },
      {
        "service_pid": 3139
      },
      {
        "service_pid": 1600
      },
      {
        "service_pid": 7349
      },
      {
        "service_pid": 3841
      },
      {
        "service_pid": 592
      },
      {
        "service_pid": 7602
      },
      {
        "service_pid": 7640
      },
      {
        "service_pid": 8423
      },
      {
        "service_pid": 2968
      },
      {
        "service_pid": 6893
      },
      {
        "service_pid": 5358
      },
      {
        "service_pid": 8620
      },
      {
        "service_pid": 2788
      },
      {
        "service_pid": 852
      },
      {
        "service_pid": 1384
      },
      {
        "service_pid": 8426
      },
      {
        "service_pid": 4591
      },
      {
        "service_pid": 6607
      },
      {
        "service_pid": 2870
      },
      {
        "service_pid": 1518
      },
      {
        "service_pid": 529
      },
      {
        "service_pid": 1330
      },
      {
        "service_pid": 9331
      },
      {
        "service_pid": 438
      },
      {
        "service_pid": 5539
      },
      {
        "service_pid": 1587
      },
      {
        "service_pid": 1281
      },
      {
        "service_pid": 4352
      },
      {
        "service_pid": 8031
      },
      {
        "service_pid": 9607
      },
      {
        "service_pid": 5800
      },
      {
        "service_pid": 5773
      },
      {
        "service_pid": 1829
      },
      {
        "service_pid": 5762
      },
      {
        "service_pid": 2441
      },
      {
        "service_pid": 9660
      },
      {
        "service_pid": 1141
      },
      {
        "service_pid": 2247
      },
      {
        "service_pid": 6428
      },
      {
        "service_pid": 2554
      },
      {
        "service_pid": 4376
      },
      {
        "service_pid": 5662
      },
      {
        "service_pid": 7367
      },
      {
        "service_pid": 4558
      },
      {
        "service_pid": 8782
      },
      {
        "service_pid": 7151
      },
      {
        "service_pid": 3190
      },
      {
        "service_pid": 3090
      },
      {
        "service_pid": 7142
      },
      {
        "service_pid": 202
      },
      {
        "service_pid": 5468
      },
      {
        "service_pid": 9317
      },
      {
        "service_pid": 2586
      },
      {
        "service_pid": 3644
      },
      {
        "service_pid": 3392
      },
      {
        "service_pid": 2571
      },
      {
        "service_pid": 8518
      },
      {
        "service_pid": 5707
      },
      {
        "service_pid": 4059
      },
      {
        "service_pid": 3741
      },
      {
        "service_pid": 5898
      },
      {
        "service_pid": 1715
      },
      {
        "service_pid": 5476
      },
      {
        "service_pid": 2846
      },
      {
        "service_pid": 9253
      },
      {
        "service_pid": 2189
      },
      {
        "service_pid": 3137
      },
      {
        "service_pid": 5300
      },
      {
        "service_pid": 3032
      },
      {
        "service_pid": 528
      },
      {
        "service_pid": 3174
      },
      {
        "service_pid": 587
      },
      {
        "service_pid": 8914
      },
      {
        "service_pid": 287
      },
      {
        "service_pid": 451
      },
      {
        "service_pid": 7158
      },
      {
        "service_pid": 4930
      },
      {
        "service_pid": 6864
      },
      {
        "service_pid": 8203
      },
      {
        "service_pid": 5263
      },
      {
        "service_pid": 3518
      },
      {
        "service_pid": 1840
      },
      {
        "service_pid": 6850
      },
      {
        "service_pid": 1152
      },
      {
        "service_pid": 8558
      },
      {
        "service_pid": 6225
      },
      {
        "service_pid": 9167
      },
      {
        "service_pid": 7022
      },
      {
        "service_pid": 232
      },
      {
        "service_pid": 1858
      },
      {
        "service_pid": 6002
      },
      {
        "service_pid": 8493
      },
      {
        "service_pid": 1155
      },
      {
        "service_pid": 6200
      },
      {
        "service_pid": 7148
      },
      {
        "service_pid": 4099
      },
      {
        "service_pid": 3668
      },
      {
        "service_pid": 4791
      },
      {
        "service_pid": 3180
      },
      {
        "service_pid": 6471
      },
      {
        "service_pid": 8120
      },
      {
        "service_pid": 4148
      },
      {
        "service_pid": 476
      },
      {
        "service_pid": 8597
      },
      {
        "service_pid": 9609
      },
      {
        "service_pid": 5394
      },
      {
        "service_pid": 8015
      },
      {
        "service_pid": 6311
      },
      {
        "service_pid": 9569
      },
      {
        "service_pid": 3282
      },
      {
        "service_pid": 9916
      },
      {
        "service_pid": 9027
      },
      {
        "service_pid": 3887
      },
      {
        "service_pid": 2816
      },
      {
        "service_pid": 9194
      },
      {
        "service_pid": 2918
      },
      {
        "service_pid": 9069
      },
      {
        "service_pid": 5966
      },
      {
        "service_pid": 6019
      },
      {
        "service_pid": 1888
      },
      {
        "service_pid": 493
      },
      {
        "service_pid": 1163
      },
      {
        "service_pid": 6900
      },
      {
        "service_pid": 7368
      },
      {
        "service_pid": 9378
      },
      {
        "service_pid": 5409
      },
      {
        "service_pid": 6917
      },
      {
        "service_pid": 513
      },
      {
        "service_pid": 7321
      },
      {
        "service_pid": 8523
      },
      {
        "service_pid": 1148
      },
      {
        "service_pid": 3251
      },
      {
        "service_pid": 4705
      },
      {
        "service_pid": 5462
      },
      {
        "service_pid": 3173
      },
      {
        "service_pid": 5781
      },
      {
        "service_pid": 9141
      },
      {
        "service_pid": 3850
      },
      {
        "service_pid": 2829
      },
      {
        "service_pid": 92
      },
      {
        "service_pid": 7013
      },
      {
        "service_pid": 5846
      },
      {
        "service_pid": 3988
      },
      {
        "service_pid": 3690
      },
      {
        "service_pid": 4328
      },
      {
        "service_pid": 1149
      },
      {
        "service_pid": 5620
      },
      {
        "service_pid": 75
      },
      {
        "service_pid": 8555
      },
      {
        "service_pid": 7908
      },
      {
        "service_pid": 1194
      },
      {
        "service_pid": 5818
      },
      {
        "service_pid": 1271
      },
      {
        "service_pid": 4611
      },
      {
        "service_pid": 9875
      },
      {
        "service_pid": 1185
      },
      {
        "service_pid": 1367
      },
      {
        "service_pid": 5805
      },
      {
        "service_pid": 2580
      },
      {
        "service_pid": 8151
      },
      {
        "service_pid": 6468
      },
      {
        "service_pid": 8456
      },
      {
        "service_pid": 2176
      },
      {
        "service_pid": 9908
      },
      {
        "service_pid": 9437
      },
      {
        "service_pid": 5233
      },
      {
        "service_pid": 398
      },
      {
        "service_pid": 5587
      },
      {
        "service_pid": 752
      },
      {
        "service_pid": 8010
      },
      {
        "service_pid": 7185
      },
      {
        "service_pid": 6680
      },
      {
        "service_pid": 3188
      },
      {
        "service_pid": 5851
      },
      {
        "service_pid": 6772
      },
      {
        "service_pid": 5055
      },
      {
        "service_pid": 4109
      },
      {
        "service_pid": 3107
      },
      {
        "service_pid": 8546
      },
      {
        "service_pid": 879
      },
      {
        "service_pid": 8783
      },
      {
        "service_pid": 6409
      },
      {
        "service_pid": 4935
      },
      {
        "service_pid": 5427
      },
      {
        "service_pid": 4071
      },
      {
        "service_pid": 9337
      },
      {
        "service_pid": 5720
      },
      {
        "service_pid": 2593
      },
      {
        "service_pid": 5301
      },
      {
        "service_pid": 6228
      },
      {
        "service_pid": 3613
      },
      {
        "service_pid": 6370
      },
      {
        "service_pid": 9418
      },
      {
        "service_pid": 928
      },
      {
        "service_pid": 1844
      },
      {
        "service_pid": 2290
      },
      {
        "service_pid": 8924
      },
      {
        "service_pid": 5434
      },
      {
        "service_pid": 4255
      },
      {
        "service_pid": 5468
      },
      {
        "service_pid": 7450
      },
      {
        "service_pid": 6375
      },
      {
        "service_pid": 6530
      },
      {
        "service_pid": 564
      },
      {
        "service_pid": 5799
      },
      {
        "service_pid": 6388
      },
      {
        "service_pid": 6742
      },
      {
        "service_pid": 5805
      },
      {
        "service_pid": 2806
      },
      {
        "service_pid": 856
      },
      {
        "service_pid": 4700
      },
      {
        "service_pid": 9685
      },
      {
        "service_pid": 8673
      },
      {
        "service_pid": 8692
      },
      {
        "service_pid": 906
      },
      {
        "service_pid": 3045
      },
      {
        "service_pid": 1014
      },
      {
        "service_pid": 9298
      },
      {
        "service_pid": 4958
      },
      {
        "service_pid": 9294
      },
      {
        "service_pid": 862
      },
      {
        "service_pid": 6932
      },
      {
        "service_pid": 2630
      },
      {
        "service_pid": 4808
      },
      {
        "service_pid": 4378
      },
      {
        "service_pid": 7123
      },
      {
        "service_pid": 7761
      },
      {
        "service_pid": 2035
      },
      {
        "service_pid": 2933
      },
      {
        "service_pid": 9220
      },
      {
        "service_pid": 6802
      },
      {
        "service_pid": 8037
      },
      {
        "service_pid": 1805
      },
      {
        "service_pid": 6658
      },
      {
        "service_pid": 4768
      },
      {
        "service_pid": 65
      },
      {
        "service_pid": 1869
      },
      {
        "service_pid": 5317
      },
      {
        "service_pid": 3928
      },
      {
        "service_pid": 6559
      },
      {
        "service_pid": 19
      },
      {
        "service_pid": 9711
      },
      {
        "service_pid": 6042
      },
      {
        "service_pid": 6553
      },
      {
        "service_pid": 1377
      },
      {
        "service_pid": 8729
      },
      {
        "service_pid": 7692
      },
      {
        "service_pid": 1781
      },
      {
        "service_pid": 2941
      },
      {
        "service_pid": 8570
      },
      {
        "service_pid": 3517
      },
      {
        "service_pid": 114
      },
      {
        "service_pid": 182
      },
      {
        "service_pid": 1051
      },
      {
        "service_pid": 1716
      },
      {
        "service_pid": 2609
      },
      {
        "service_pid": 7846
      },
      {
        "service_pid": 5950
      },
      {
        "service_pid": 8060
      },
      {
        "service_pid": 4098
      },
      {
        "service_pid": 3426
      },
      {
        "service_pid": 3002
      },
      {
        "service_pid": 3363
      },
      {
        "service_pid": 5074
      },
      {
        "service_pid": 5288
      },
      {
        "service_pid": 6258
      },
      {
        "service_pid": 8085
      },
      {
        "service_pid": 6052
      },
      {
        "service_pid": 7292
      },
      {
        "service_pid": 5665
      },
      {
        "service_pid": 4977
      },
      {
        "service_pid": 1133
      },
      {
        "service_pid": 8487
      },
      {
        "service_pid": 1843
      },
      {
        "service_pid": 2141
      },
      {
        "service_pid": 5092
      },
      {
        "service_pid": 5466
      },
      {
        "service_pid": 4300
      },
      {
        "service_pid": 2827
      },
      {
        "service_pid": 6324
      },
      {
        "service_pid": 8398
      },
      {
        "service_pid": 1293
      },
      {
        "service_pid": 6716
      },
      {
        "service_pid": 7833
      },
      {
        "service_pid": 6672
      },
      {
        "service_pid": 7478
      },
      {
        "service_pid": 2984
      },
      {
        "service_pid": 988
      },
      {
        "service_pid": 8592
      },
      {
        "service_pid": 6618
      },
      {
        "service_pid": 5846
      },
      {
        "service_pid": 1371
      },
      {
        "service_pid": 593
      },
      {
        "service_pid": 2838
      },
      {
        "service_pid": 1019
      },
      {
        "service_pid": 9018
      },
      {
        "service_pid": 1087
      },
      {
        "service_pid": 3093
      },
      {
        "service_pid": 8860
      },
      {
        "service_pid": 6770
      },
      {
        "service_pid": 784
      },
      {
        "service_pid": 6090
      },
      {
        "service_pid": 951
      },
      {
        "service_pid": 1696
      },
      {
        "service_pid": 2984
      },
      {
        "service_pid": 1686
      },
      {
        "service_pid": 5827
      },
      {
        "service_pid": 8287
      },
      {
        "service_pid": 1617
      },
      {
        "service_pid": 3859
      },
      {
        "service_pid": 8669
      },
      {
        "service_pid": 7595
      },
      {
        "service_pid": 7606
      },
      {
        "service_pid": 4745
      },
      {
        "service_pid": 5915
      },
      {
        "service_pid": 7157
      },
      {
        "service_pid": 1745
      },
      {
        "service_pid": 5495
      },
      {
        "service_pid": 8695
      },
      {
        "service_pid": 4494
      },
      {
        "service_pid": 5218
      },
      {
        "service_pid": 3299
      },
      {
        "service_pid": 9301
      },
      {
        "service_pid": 952
      },
      {
        "service_pid": 1751
      },
      {
        "service_pid": 7944
      },
      {
        "service_pid": 7254
      },
      {
        "service_pid": 6855
      },
      {
        "service_pid": 319
      },
      {
        "service_pid": 6699
      },
      {
        "service_pid": 2898
      },
      {
        "service_pid": 1166
      },
      {
        "service_pid": 7934
      },
      {
        "service_pid": 7656
      },
      {
        "service_pid": 7824
      },
      {
        "service_pid": 7662
      },
      {
        "service_pid": 6864
      },
      {
        "service_pid": 7920
      },
      {
        "service_pid": 4993
      },
      {
        "service_pid": 5380
      },
      {
        "service_pid": 1954
      },
      {
        "service_pid": 4627
      },
      {
        "service_pid": 5085
      },
      {
        "service_pid": 9912
      },
      {
        "service_pid": 9374
      },
      {
        "service_pid": 8837
      },
      {
        "service_pid": 6633
      },
      {
        "service_pid": 2243
      },
      {
        "service_pid": 895
      },
      {
        "service_pid": 1548
      },
      {
        "service_pid": 5112
      },
      {
        "service_pid": 4455
      },
      {
        "service_pid": 5497
      },
      {
        "service_pid": 9854
      },
      {
        "service_pid": 8202
      },
      {
        "service_pid": 1428
      },
      {
        "service_pid": 3340
      },
      {
        "service_pid": 1435
      },
      {
        "service_pid": 6100
      },
      {
        "service_pid": 6967
      },
      {
        "service_pid": 4078
      },
      {
        "service_pid": 5095
      },
      {
        "service_pid": 9304
      },
      {
        "service_pid": 4503
      },
      {
        "service_pid": 6830
      },
      {
        "service_pid": 4528
      },
      {
        "service_pid": 7873
      },
      {
        "service_pid": 8682
      },
      {
        "service_pid": 4783
      },
      {
        "service_pid": 2047
      },
      {
        "service_pid": 1387
      },
      {
        "service_pid": 3329
      },
      {
        "service_pid": 5331
      },
      {
        "service_pid": 4117
      },
      {
        "service_pid": 4907
      },
      {
        "service_pid": 3409
      },
      {
        "service_pid": 6203
      },
      {
        "service_pid": 8433
      },
      {
        "service_pid": 248
      },
      {
        "service_pid": 8051
      },
      {
        "service_pid": 7205
      },
      {
        "service_pid": 1552
      },
      {
        "service_pid": 6586
      },
      {
        "service_pid": 7863
      },
      {
        "service_pid": 5153
      },
      {
        "service_pid": 808
      },
      {
        "service_pid": 1913
      },
      {
        "service_pid": 5543
      },
      {
        "service_pid": 2014
      },
      {
        "service_pid": 192
      },
      {
        "service_pid": 7618
      },
      {
        "service_pid": 3079
      },
      {
        "service_pid": 1139
      },
      {
        "service_pid": 2712
      },
      {
        "service_pid": 37
      },
      {
        "service_pid": 1514
      },
      {
        "service_pid": 1379
      },
      {
        "service_pid": 5531
      },
      {
        "service_pid": 9648
      },
      {
        "service_pid": 894
      },
      {
        "service_pid": 4543
      },
      {
        "service_pid": 8004
      },
      {
        "service_pid": 4823
      },
      {
        "service_pid": 3276
      },
      {
        "service_pid": 2968
      },
      {
        "service_pid": 4108
      },
      {
        "service_pid": 1703
      },
      {
        "service_pid": 1130
      },
      {
        "service_pid": 133
      },
      {
        "service_pid": 8322
      },
      {
        "service_pid": 3819
      },
      {
        "service_pid": 7166
      },
      {
        "service_pid": 9443
      },
      {
        "service_pid": 3192
      },
      {
        "service_pid": 9809
      },
      {
        "service_pid": 7034
      },
      {
        "service_pid": 749
      },
      {
        "service_pid": 3523
      },
      {
        "service_pid": 5561
      },
      {
        "service_pid": 3295
      },
      {
        "service_pid": 2541
      },
      {
        "service_pid": 4202
      },
      {
        "service_pid": 7814
      },
      {
        "service_pid": 1874
      },
      {
        "service_pid": 7235
      },
      {
        "service_pid": 5360
      },
      {
        "service_pid": 9368
      },
      {
        "service_pid": 3619
      },
      {
        "service_pid": 5759
      },
      {
        "service_pid": 900
      },
      {
        "service_pid": 6894
      },
      {
        "service_pid": 7755
      },
      {
        "service_pid": 9786
      },
      {
        "service_pid": 4073
      },
      {
        "service_pid": 6922
      },
      {
        "service_pid": 6132
      },
      {
        "service_pid": 9431
      },
      {
        "service_pid": 1174
      },
      {
        "service_pid": 6479
      },
      {
        "service_pid": 5257
      },
      {
        "service_pid": 3418
      },
      {
        "service_pid": 8944
      },
      {
        "service_pid": 1218
      },
      {
        "service_pid": 589
      },
      {
        "service_pid": 2410
      },
      {
        "service_pid": 3667
      },
      {
        "service_pid": 1656
      },
      {
        "service_pid": 6170
      },
      {
        "service_pid": 8799
      },
      {
        "service_pid": 2810
      },
      {
        "service_pid": 1533
      },
      {
        "service_pid": 7831
      },
      {
        "service_pid": 6832
      },
      {
        "service_pid": 566
      },
      {
        "service_pid": 3468
      },
      {
        "service_pid": 7055
      },
      {
        "service_pid": 6212
      },
      {
        "service_pid": 8827
      },
      {
        "service_pid": 8401
      },
      {
        "service_pid": 3153
      },
      {
        "service_pid": 4261
      },
      {
        "service_pid": 7826
      },
      {
        "service_pid": 5161
      },
      {
        "service_pid": 1316
      },
      {
        "service_pid": 455
      },
      {
        "service_pid": 9232
      },
      {
        "service_pid": 9944
      },
      {
        "service_pid": 6280
      },
      {
        "service_pid": 9005
      },
      {
        "service_pid": 1252
      },
      {
        "service_pid": 1105
      },
      {
        "service_pid": 6080
      },
      {
        "service_pid": 8064
      },
      {
        "service_pid": 3774
      },
      {
        "service_pid": 747
      },
      {
        "service_pid": 7227
      },
      {
        "service_pid": 9275
      },
      {
        "service_pid": 7608
      },
      {
        "service_pid": 2363
      },
      {
        "service_pid": 2139
      },
      {
        "service_pid": 4254
      },
      {
        "service_pid": 1278
      },
      {
        "service_pid": 474
      },
      {
        "service_pid": 8732
      },
      {
        "service_pid": 9764
      },
      {
        "service_pid": 9356
      },
      {
        "service_pid": 8586
      },
      {
        "service_pid": 597
      },
      {
        "service_pid": 1633
      },
      {
        "service_pid": 1265
      },
      {
        "service_pid": 1957
      },
      {
        "service_pid": 191
      },
      {
        "service_pid": 1556
      },
      {
        "service_pid": 5018
      },
      {
        "service_pid": 5496
      },
      {
        "service_pid": 2424
      },
      {
        "service_pid": 3954
      },
      {
        "service_pid": 3383
      },
      {
        "service_pid": 3059
      },
      {
        "service_pid": 2599
      },
      {
        "service_pid": 2824
      },
      {
        "service_pid": 9646
      },
      {
        "service_pid": 671
      },
      {
        "service_pid": 7423
      },
      {
        "service_pid": 1651
      },
      {
        "service_pid": 16
      },
      {
        "service_pid": 1814
      },
      {
        "service_pid": 4208
      },
      {
        "service_pid": 807
      },
      {
        "service_pid": 5695
      },
      {
        "service_pid": 5445
      },
      {
        "service_pid": 5998
      },
      {
        "service_pid": 4586
      },
      {
        "service_pid": 3992
      },
      {
        "service_pid": 6183
      },
      {
        "service_pid": 2929
      },
      {
        "service_pid": 396
      },
      {
        "service_pid": 8532
      },
      {
        "service_pid": 3261
      },
      {
        "service_pid": 5849
      },
      {
        "service_pid": 7846
      },
      {
        "service_pid": 4575
      },
      {
        "service_pid": 2676
      },
      {
        "service_pid": 2103
      },
      {
        "service_pid": 3927
      },
      {
        "service_pid": 6350
      },
      {
        "service_pid": 4839
      },
      {
        "service_pid": 3299
      },
      {
        "service_pid": 791
      },
      {
        "service_pid": 9278
      },
      {
        "service_pid": 30
      },
      {
        "service_pid": 1962
      },
      {
        "service_pid": 3109
      },
      {
        "service_pid": 6115
      },
      {
        "service_pid": 3598
      },
      {
        "service_pid": 9977
      },
      {
        "service_pid": 2732
      },
      {
        "service_pid": 1073
      },
      {
        "service_pid": 8324
      },
      {
        "service_pid": 5728
      },
      {
        "service_pid": 4017
      },
      {
        "service_pid": 494
      },
      {
        "service_pid": 1215
      },
      {
        "service_pid": 2564
      },
      {
        "service_pid": 1668
      },
      {
        "service_pid": 2482
      },
      {
        "service_pid": 9887
      },
      {
        "service_pid": 2066
      },
      {
        "service_pid": 4545
      },
      {
        "service_pid": 9039
      },
      {
        "service_pid": 197
      },
      {
        "service_pid": 9320
      },
      {
        "service_pid": 4714
      },
      {
        "service_pid": 4788
      },
      {
        "service_pid": 2946
      },
      {
        "service_pid": 8153
      },
      {
        "service_pid": 5349
      },
      {
        "service_pid": 9752
      },
      {
        "service_pid": 3469
      },
      {
        "service_pid": 7833
      },
      {
        "service_pid": 2510
      },
      {
        "service_pid": 2333
      },
      {
        "service_pid": 4764
      },
      {
        "service_pid": 9662
      },
      {
        "service_pid": 3634
      },
      {
        "service_pid": 4069
      },
      {
        "service_pid": 1939
      },
      {
        "service_pid": 331
      },
      {
        "service_pid": 1325
      },
      {
        "service_pid": 1816
      },
      {
        "service_pid": 633
      },
      {
        "service_pid": 9955
      },
      {
        "service_pid": 8781
      },
      {
        "service_pid": 8032
      },
      {
        "service_pid": 9761
      },
      {
        "service_pid": 4204
      },
      {
        "service_pid": 477
      },
      {
        "service_pid": 5486
      },
      {
        "service_pid": 5123
      },
      {
        "service_pid": 5379
      },
      {
        "service_pid": 5257
      },
      {
        "service_pid": 4733
      },
      {
        "service_pid": 951
      },
      {
        "service_pid": 9627
      },
      {
        "service_pid": 3797
      },
      {
        "service_pid": 6782
      },
      {
        "service_pid": 4457
      },
      {
        "service_pid": 327
      },
      {
        "service_pid": 9567
      },
      {
        "service_pid": 102
      },
      {
        "service_pid": 165
      },
      {
        "service_pid": 2903
      },
      {
        "service_pid": 1984
      },
      {
        "service_pid": 8551
      },
      {
        "service_pid": 5648
      },
      {
        "service_pid": 9535
      },
      {
        "service_pid": 2253
      },
      {
        "service_pid": 537
      },
      {
        "service_pid": 5160
      },
      {
        "service_pid": 6657
      },
      {
        "service_pid": 5995
      },
      {
        "service_pid": 1665
      },
      {
        "service_pid": 4088
      },
      {
        "service_pid": 4170
      },
      {
        "service_pid": 7068
      },
      {
        "service_pid": 7463
      },
      {
        "service_pid": 8256
      },
      {
        "service_pid": 8366
      },
      {
        "service_pid": 4461
      },
      {
        "service_pid": 293
      },
      {
        "service_pid": 6940
      },
      {
        "service_pid": 6806
      },
      {
        "service_pid": 1388
      },
      {
        "service_pid": 6687
      },
      {
        "service_pid": 1598
      },
      {
        "service_pid": 9776
      },
      {
        "service_pid": 6235
      },
      {
        "service_pid": 7353
      },
      {
        "service_pid": 3145
      },
      {
        "service_pid": 9302
      },
      {
        "service_pid": 8285
      },
      {
        "service_pid": 8178
      },
      {
        "service_pid": 2269
      },
      {
        "service_pid": 7792
      },
      {
        "service_pid": 9062
      },
      {
        "service_pid": 2877
      },
      {
        "service_pid": 3094
      },
      {
        "service_pid": 7657
      },
      {
        "service_pid": 4781
      },
      {
        "service_pid": 3541
      },
      {
        "service_pid": 6490
      },
      {
        "service_pid": 1842
      },
      {
        "service_pid": 214
      },
      {
        "service_pid": 1069
      },
      {
        "service_pid": 2727
      },
      {
        "service_pid": 416
      },
      {
        "service_pid": 5351
      },
      {
        "service_pid": 2977
      },
      {
        "service_pid": 6788
      },
      {
        "service_pid": 9412
      },
      {
        "service_pid": 5710
      },
      {
        "service_pid": 3654
      },
      {
        "service_pid": 5355
      },
      {
        "service_pid": 5419
      },
      {
        "service_pid": 9516
      },
      {
        "service_pid": 994
      },
      {
        "service_pid": 8550
      },
      {
        "service_pid": 9337
      },
      {
        "service_pid": 3787
      },
      {
        "service_pid": 5548
      },
      {
        "service_pid": 1940
      },
      {
        "service_pid": 9858
      },
      {
        "service_pid": 6008
      },
      {
        "service_pid": 9916
      },
      {
        "service_pid": 3627
      },
      {
        "service_pid": 8806
      },
      {
        "service_pid": 8404
      },
      {
        "service_pid": 867
      },
      {
        "service_pid": 7166
      },
      {
        "service_pid": 7209
      },
      {
        "service_pid": 5485
      },
      {
        "service_pid": 5456
      },
      {
        "service_pid": 3394
      },
      {
        "service_pid": 5374
      },
      {
        "service_pid": 2518
      },
      {
        "service_pid": 8797
      },
      {
        "service_pid": 5107
      },
      {
        "service_pid": 4730
      },
      {
        "service_pid": 7460
      },
      {
        "service_pid": 7384
      },
      {
        "service_pid": 4822
      },
      {
        "service_pid": 8799
      },
      {
        "service_pid": 468
      },
      {
        "service_pid": 3478
      },
      {
        "service_pid": 528
      },
      {
        "service_pid": 4609
      },
      {
        "service_pid": 3333
      },
      {
        "service_pid": 5906
      },
      {
        "service_pid": 4612
      },
      {
        "service_pid": 9714
      },
      {
        "service_pid": 5527
      },
      {
        "service_pid": 8127
      },
      {
        "service_pid": 1331
      },
      {
        "service_pid": 6168
      },
      {
        "service_pid": 5673
      },
      {
        "service_pid": 7608
      },
      {
        "service_pid": 3339
      },
      {
        "service_pid": 3205
      },
      {
        "service_pid": 5886
      },
      {
        "service_pid": 9673
      },
      {
        "service_pid": 9835
      },
      {
        "service_pid": 4110
      },
      {
        "service_pid": 460
      },
      {
        "service_pid": 1001
      },
      {
        "service_pid": 2133
      },
      {
        "service_pid": 5626
      },
      {
        "service_pid": 3384
      },
      {
        "service_pid": 3038
      },
      {
        "service_pid": 9967
      },
      {
        "service_pid": 7956
      },
      {
        "service_pid": 8913
      },
      {
        "service_pid": 1277
      },
      {
        "service_pid": 7781
      },
      {
        "service_pid": 7486
      },
      {
        "service_pid": 6800
      },
      {
        "service_pid": 6523
      },
      {
        "service_pid": 6844
      },
      {
        "service_pid": 1692
      },
      {
        "service_pid": 8242
      },
      {
        "service_pid": 770
      },
      {
        "service_pid": 498
      },
      {
        "service_pid": 9801
      },
      {
        "service_pid": 7553
      },
      {
        "service_pid": 6130
      },
      {
        "service_pid": 7855
      },
      {
        "service_pid": 1428
      },
      {
        "service_pid": 4477
      },
      {
        "service_pid": 515
      },
      {
        "service_pid": 3655
      },
      {
        "service_pid": 5590
      },
      {
        "service_pid": 9473
      },
      {
        "service_pid": 264
      },
      {
        "service_pid": 4228
      },
      {
        "service_pid": 3035
      },
      {
        "service_pid": 1859
      },
      {
        "service_pid": 4086
      },
      {
        "service_pid": 8146
      },
      {
        "service_pid": 325
      },
      {
        "service_pid": 276
      },
      {
        "service_pid": 1378
      },
      {
        "service_pid": 8781
      },
      {
        "service_pid": 6570
      },
      {
        "service_pid": 2539
      },
      {
        "service_pid": 7685
      },
      {
        "service_pid": 6020
      },
      {
        "service_pid": 8854
      },
      {
        "service_pid": 8523
      },
      {
        "service_pid": 7011
      },
      {
        "service_pid": 5197
      },
      {
        "service_pid": 7713
      },
      {
        "service_pid": 122
      },
      {
        "service_pid": 679
      },
      {
        "service_pid": 4863
      },
      {
        "service_pid": 4765
      },
      {
        "service_pid": 1772
      },
      {
        "service_pid": 798
      },
      {
        "service_pid": 9545
      },
      {
        "service_pid": 7981
      },
      {
        "service_pid": 8340
      },
      {
        "service_pid": 2249
      },
      {
        "service_pid": 5274
      },
      {
        "service_pid": 4246
      },
      {
        "service_pid": 5953
      },
      {
        "service_pid": 8248
      },
      {
        "service_pid": 7639
      },
      {
        "service_pid": 9667
      },
      {
        "service_pid": 6387
      },
      {
        "service_pid": 2310
      },
      {
        "service_pid": 1629
      },
      {
        "service_pid": 3158
      },
      {
        "service_pid": 8505
      },
      {
        "service_pid": 3392
      },
      {
        "service_pid": 1603
      },
      {
        "service_pid": 3572
      },
      {
        "service_pid": 1651
      },
      {
        "service_pid": 6153
      },
      {
        "service_pid": 3428
      },
      {
        "service_pid": 9985
      },
      {
        "service_pid": 9990
      },
      {
        "service_pid": 2339
      },
      {
        "service_pid": 6467
      },
      {
        "service_pid": 7019
      },
      {
        "service_pid": 666
      },
      {
        "service_pid": 8336
      },
      {
        "service_pid": 74
      },
      {
        "service_pid": 8600
      },
      {
        "service_pid": 9475
      },
      {
        "service_pid": 2747
      },
      {
        "service_pid": 8046
      },
      {
        "service_pid": 9912
      },
      {
        "service_pid": 3678
      },
      {
        "service_pid": 8117
      },
      {
        "service_pid": 8260
      },
      {
        "service_pid": 2367
      },
      {
        "service_pid": 3889
      },
      {
        "service_pid": 2927
      },
      {
        "service_pid": 4219
      },
      {
        "service_pid": 6715
      },
      {
        "service_pid": 4315
      },
      {
        "service_pid": 3253
      },
      {
        "service_pid": 1947
      },
      {
        "service_pid": 6327
      },
      {
        "service_pid": 7157
      },
      {
        "service_pid": 2686
      },
      {
        "service_pid": 6089
      },
      {
        "service_pid": 7324
      },
      {
        "service_pid": 1115
      },
      {
        "service_pid": 4327
      },
      {
        "service_pid": 2905
      },
      {
        "service_pid": 5122
      },
      {
        "service_pid": 8099
      },
      {
        "service_pid": 9095
      },
      {
        "service_pid": 1485
      },
      {
        "service_pid": 4959
      },
      {
        "service_pid": 990
      },
      {
        "service_pid": 5230
      },
      {
        "service_pid": 395
      },
      {
        "service_pid": 7836
      },
      {
        "service_pid": 917
      },
      {
        "service_pid": 2402
      },
      {
        "service_pid": 7848
      },
      {
        "service_pid": 2341
      },
      {
        "service_pid": 4778
      },
      {
        "service_pid": 3383
      },
      {
        "service_pid": 7284
      },
      {
        "service_pid": 8806
      },
      {
        "service_pid": 5052
      },
      {
        "service_pid": 8637
      },
      {
        "service_pid": 6053
      },
      {
        "service_pid": 8569
      },
      {
        "service_pid": 8490
      },
      {
        "service_pid": 7185
      },
      {
        "service_pid": 7063
      },
      {
        "service_pid": 5300
      },
      {
        "service_pid": 5536
      },
      {
        "service_pid": 3733
      },
      {
        "service_pid": 3672
      },
      {
        "service_pid": 1479
      },
      {
        "service_pid": 6887
      },
      {
        "service_pid": 4874
      },
      {
        "service_pid": 4152
      },
      {
        "service_pid": 4778
      },
      {
        "service_pid": 9433
      },
      {
        "service_pid": 758
      },
      {
        "service_pid": 2822
      },
      {
        "service_pid": 3567
      },
      {
        "service_pid": 5566
      },
      {
        "service_pid": 8058
      },
      {
        "service_pid": 5200
      },
      {
        "service_pid": 1521
      },
      {
        "service_pid": 9723
      },
      {
        "service_pid": 5787
      },
      {
        "service_pid": 494
      },
      {
        "service_pid": 2251
      },
      {
        "service_pid": 510
      },
      {
        "service_pid": 3555
      },
      {
        "service_pid": 4056
      },
      {
        "service_pid": 9708
      },
      {
        "service_pid": 5300
      },
      {
        "service_pid": 7421
      },
      {
        "service_pid": 5140
      },
      {
        "service_pid": 4771
      },
      {
        "service_pid": 5989
      },
      {
        "service_pid": 9546
      },
      {
        "service_pid": 3316
      },
      {
        "service_pid": 3303
      },
      {
        "service_pid": 7360
      },
      {
        "service_pid": 7336
      },
      {
        "service_pid": 3534
      },
      {
        "service_pid": 7810
      },
      {
        "service_pid": 7037
      },
      {
        "service_pid": 6286
      },
      {
        "service_pid": 7382
      },
      {
        "service_pid": 5329
      },
      {
        "service_pid": 1906
      },
      {
        "service_pid": 9782
      },
      {
        "service_pid": 8518
      },
      {
        "service_pid": 9626
      },
      {
        "service_pid": 2865
      },
      {
        "service_pid": 7890
      },
      {
        "service_pid": 915
      },
      {
        "service_pid": 7447
      },
      {
        "service_pid": 510
      },
      {
        "service_pid": 6343
      },
      {
        "service_pid": 8424
      },
      {
        "service_pid": 6149
      },
      {
        "service_pid": 7518
      },
      {
        "service_pid": 8899
      },
      {
        "service_pid": 1570
      },
      {
        "service_pid": 9123
      },
      {
        "service_pid": 7321
      },
      {
        "service_pid": 8827
      },
      {
        "service_pid": 2813
      },
      {
        "service_pid": 3547
      },
      {
        "service_pid": 8033
      },
      {
        "service_pid": 8853
      },
      {
        "service_pid": 8425
      },
      {
        "service_pid": 1410
      },
      {
        "service_pid": 2692
      },
      {
        "service_pid": 1698
      },
      {
        "service_pid": 8070
      },
      {
        "service_pid": 585
      },
      {
        "service_pid": 7284
      },
      {
        "service_pid": 4762
      },
      {
        "service_pid": 594
      },
      {
        "service_pid": 3619
      },
      {
        "service_pid": 6309
      },
      {
        "service_pid": 2920
      },
      {
        "service_pid": 2856
      },
      {
        "service_pid": 417
      },
      {
        "service_pid": 4486
      },
      {
        "service_pid": 3533
      },
      {
        "service_pid": 4553
      },
      {
        "service_pid": 4843
      },
      {
        "service_pid": 6978
      },
      {
        "service_pid": 3646
      },
      {
        "service_pid": 4418
      },
      {
        "service_pid": 9063
      },
      {
        "service_pid": 2550
      },
      {
        "service_pid": 2058
      },
      {
        "service_pid": 2260
      },
      {
        "service_pid": 5866
      },
      {
        "service_pid": 6795
      },
      {
        "service_pid": 8998
      },
      {
        "service_pid": 461
      },
      {
        "service_pid": 8097
      },
      {
        "service_pid": 6851
      },
      {
        "service_pid": 4752
      },
      {
        "service_pid": 8388
      },
      {
        "service_pid": 9490
      },
      {
        "service_pid": 2522
      },
      {
        "service_pid": 3658
      },
      {
        "service_pid": 5331
      },
      {
        "service_pid": 6569
      },
      {
        "service_pid": 3934
      },
      {
        "service_pid": 602
      },
      {
        "service_pid": 565
      },
      {
        "service_pid": 1024
      },
      {
        "service_pid": 3174
      },
      {
        "service_pid": 6333
      },
      {
        "service_pid": 1872
      },
      {
        "service_pid": 3063
      },
      {
        "service_pid": 7515
      },
      {
        "service_pid": 4113
      },
      {
        "service_pid": 172
      },
      {
        "service_pid": 9715
      },
      {
        "service_pid": 9522
      },
      {
        "service_pid": 2574
      },
      {
        "service_pid": 9490
      },
      {
        "service_pid": 2951
      },
      {
        "service_pid": 5519
      },
      {
        "service_pid": 5096
      },
      {
        "service_pid": 5080
      },
      {
        "service_pid": 19
      },
      {
        "service_pid": 6979
      },
      {
        "service_pid": 3775
      },
      {
        "service_pid": 6190
      },
      {
        "service_pid": 2517
      },
      {
        "service_pid": 6272
      },
      {
        "service_pid": 6791
      },
      {
        "service_pid": 6412
      },
      {
        "service_pid": 889
      },
      {
        "service_pid": 8042
      },
      {
        "service_pid": 9939
      },
      {
        "service_pid": 2039
      },
      {
        "service_pid": 3631
      },
      {
        "service_pid": 1341
      },
      {
        "service_pid": 4521
      },
      {
        "service_pid": 2384
      },
      {
        "service_pid": 6286
      },
      {
        "service_pid": 3101
      },
      {
        "service_pid": 1811
      },
      {
        "service_pid": 5946
      },
      {
        "service_pid": 3939
      },
      {
        "service_pid": 381
      },
      {
        "service_pid": 2603
      },
      {
        "service_pid": 5090
      },
      {
        "service_pid": 6249
      },
      {
        "service_pid": 9199
      },
      {
        "service_pid": 7002
      },
      {
        "service_pid": 8098
      },
      {
        "service_pid": 9979
      },
      {
        "service_pid": 492
      },
      {
        "service_pid": 5105
      },
      {
        "service_pid": 5603
      },
      {
        "service_pid": 6553
      },
      {
        "service_pid": 8572
      },
      {
        "service_pid": 7003
      },
      {
        "service_pid": 5697
      },
      {
        "service_pid": 2808
      },
      {
        "service_pid": 7939
      },
      {
        "service_pid": 3085
      },
      {
        "service_pid": 350
      },
      {
        "service_pid": 908
      },
      {
        "service_pid": 1711
      },
      {
        "service_pid": 5430
      },
      {
        "service_pid": 187
      },
      {
        "service_pid": 8210
      },
      {
        "service_pid": 8362
      },
      {
        "service_pid": 8800
      },
      {
        "service_pid": 3788
      },
      {
        "service_pid": 816
      },
      {
        "service_pid": 2604
      },
      {
        "service_pid": 3230
      },
      {
        "service_pid": 3539
      },
      {
        "service_pid": 3228
      },
      {
        "service_pid": 4665
      },
      {
        "service_pid": 2059
      },
      {
        "service_pid": 8376
      }
    ]
  },
  {
    "question": "How many total boxes are in the DC1 datacenter?",
    "cypher": "MATCH (d:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine) RETURN COUNT(DISTINCT m) AS total_machines",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_machines": 8000
      }
    ],
    "answer": "There are 8,000 total machines (boxes) in the DC1 datacenter."
  },
  {
    "question": "What software depends on postgres/9.4?",
    "cypher": "MATCH (s:Software)-[:DEPENDS_ON]->(v:Version {name: '9.4'}) RETURN s.name AS dependent_software",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dependent_software": "webserver"
      }
    ],
    "answer": "Based on the query result, the software that depends on postgres/9.4 is webserver."
  },
  {
    "question": "What zone contains the most racks in DC1?",
    "cypher": "MATCH (d:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack) WITH r.zone AS zone, COUNT(r) AS rack_count ORDER BY rack_count DESC LIMIT 1 RETURN zone AS zone_with_most_racks",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "zone_with_most_racks": 4
      }
    ],
    "answer": "Zone 4 contains the most racks in DC1."
  },
  {
    "question": "How many total applications are running across all boxes?",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(a:Application) RETURN COUNT(DISTINCT a) AS total_applications",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_applications": 8000
      }
    ],
    "answer": "There are 8,000 total applications running across all boxes."
  },
  {
    "question": "How many machines are running applications that depend on postgres in zone 4?",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(app:Application)-[:INSTANCE]->(s:Software)-[:DEPENDS_ON*]->(dep) WHERE (dep:Software OR dep:Version) AND dep.name CONTAINS 'postgres' AND EXISTS((m)<-[:HOLDS]-(:Rack {zone: 4})) RETURN COUNT(DISTINCT m) AS total_machines",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_machines": 0
      }
    ],
    "answer": "0 machines are running applications that depend on postgres in zone 4."
  },
  {
    "question": "What's the total number of services running on machines in rack DC1-RCK-1-1?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-1-1'})-[:HOLDS]->(m:Machine)-[:RUNS]->(s:Service) RETURN COUNT(s) AS total_services",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_services": 354
      }
    ],
    "answer": "There are 354 services running on machines in rack DC1-RCK-1-1."
  },
  {
    "question": "What's the location of the data center containing the machine running webapp?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine)-[:RUNS]->(app:Application {name: 'webapp'}) RETURN dc.location AS datacenter_location",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      },
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ]
  },
  {
    "question": "How many different software dependencies does the cms application have including transitive ones?",
    "cypher": "MATCH (app:Application {name: 'cms'})-[:INSTANCE]->(s:Software)-[:DEPENDS_ON*]->(dep) WHERE dep:Software OR dep:Version RETURN COUNT(DISTINCT dep) AS total_dependencies",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_dependencies": 4
      }
    ],
    "answer": "The cms application has 4 different software dependencies, including transitive ones."
  },
  {
    "question": "What's the highest port number exposed by services running on machines in zone 1?",
    "cypher": "MATCH (r:Rack {zone: 1})-[:HOLDS]->(m:Machine)-[:RUNS]->(s:Service)-[:LISTENS]->(p:Port) WHERE p.port IS NOT NULL RETURN MAX(p.port) AS highest_port",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_port": 18092
      }
    ],
    "answer": "The highest port number exposed by services running on machines in zone 1 is 18092."
  },
  {
    "question": "How many boxes in DC-1 are running RHEL operating system?",
    "cypher": "MATCH (dc:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine)-[:RUNS]->(os:OS)-[:INSTANCE]->(v:Version)<-[:VERSION]-(s:Software {name: 'RHEL'}) RETURN COUNT(DISTINCT m) AS total_machines",
    "query_type": "Aggregation",
    "complexity": "5-hop",
    "noise_applied": true,
    "noise_type": "typo_and_colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_machines": 2439
      }
    ],
    "answer": "There are 2,439 machines running RHEL operating system in DC-1."
  },
  {
    "question": "What's the IP address of the interface connected to the switch in rack 10 of zone 1?",
    "cypher": "MATCH (sw:Switch {rack: 10})<-[:HOLDS]-(r:Rack {zone: 1}) WITH sw MATCH (sw)-[:ROUTES]->(i:Interface) RETURN i.ip AS interface_ip LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interface_ip": "10.1.10.254"
      }
    ],
    "answer": "The IP address of the interface connected to the switch in rack 10 of zone 1 is 10.1.10.254."
  },
  {
    "question": "Count the total number of apps depending on java across all machines",
    "cypher": "MATCH (app:Application)-[:INSTANCE]->(s:Software)-[:DEPENDS_ON*]->(java:Software {name: 'java'}) RETURN COUNT(DISTINCT app) AS total_applications",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_applications": 1588
      }
    ],
    "answer": "Based on the query result, there are 1,588 distinct applications that depend on Java across all machines."
  },
  {
    "question": "What's the name of the rack with the most machines running services?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(m:Machine)-[:RUNS]->(s:Service) WITH r, COUNT(DISTINCT m) as machine_count WHERE machine_count > 0 RETURN r.name AS rack_name ORDER BY machine_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "rack_name": "DC1-RCK-1-1"
      }
    ],
    "answer": "DC1-RCK-1-1 is the name of the rack with the most machines running services."
  },
  {
    "question": "How many interfaces connect to networks in zone 4?",
    "cypher": "MATCH (n:Network {zone: 4})-[:ROUTES]->(i:Interface) RETURN COUNT(DISTINCT i) AS total_interfaces",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_interfaces": 10
      }
    ],
    "answer": "10 interfaces connect to networks in zone 4."
  },
  {
    "question": "What's the rack number of the rack holding machine DC1-RCK-4-2-M-174?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(m:Machine {name: 'DC1-RCK-4-2-M-174'}) RETURN r.rack AS rack_number",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "rack_number": 2
      }
    ],
    "answer": "The rack number is 2."
  },
  {
    "question": "Find the lowest start time among all processes running webserver application",
    "cypher": "MATCH (p:Process {name: 'webserver'}) WHERE p.startTime IS NOT NULL RETURN MIN(p.startTime) AS earliest_start_time",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_start_time": 1606165629748
      }
    ],
    "answer": "The lowest start time for processes running the webserver application is 1606165629748 (Unix timestamp)."
  },
  {
    "question": "How many machines are connected to interfaces that route to zone 1 networks?",
    "cypher": "MATCH (n:Network {zone: 1})-[:ROUTES]->(i1:Interface)<-[:CONNECTS]-(i2:Interface)<-[:ROUTES]-(m:Machine) RETURN COUNT(DISTINCT m) AS total_machines",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_machines": 2000
      }
    ],
    "answer": "2,000 machines are connected to interfaces that route to zone 1 networks."
  },
  {
    "question": "What's the CPU count of the machine type used by DC1-RCK-2-9-M-90?",
    "cypher": "MATCH (m:Machine {name: 'DC1-RCK-2-9-M-90'})-[:TYPE]->(t:Type) RETURN t.cpu AS cpu_count",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "cpu_count": 2
      }
    ],
    "answer": "The machine type for DC1-RCK-2-9-M-90 has 2 CPUs."
  },
  {
    "question": "Count how many routers are contained in datacenter DC1",
    "cypher": "MATCH (dc:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Router) RETURN COUNT(r) AS total_routers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_routers": 5
      }
    ],
    "answer": "There are 5 routers contained in datacenter DC1."
  },
  {
    "question": "What's the highest RAM amount among machine types used by boxes running couchbase?",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(s:Service {name: 'couchbase'}) WITH m MATCH (m)-[:TYPE]->(t:Type) WHERE t.ram IS NOT NULL RETURN MAX(t.ram) AS maximum_ram",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "maximum_ram": 1024
      }
    ],
    "answer": "The highest RAM amount among machine types used by boxes running Couchbase is 1024."
  },
  {
    "question": "How many different versions does postgres software support?",
    "cypher": "MATCH (s:Software {name: 'postgres'})-[:VERSION]->(v:Version) RETURN COUNT(DISTINCT v) AS total_versions",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_versions": 3
      }
    ],
    "answer": "Based on the query result, Postgres software supports 3 different versions."
  },
  {
    "question": "What's the zone number of the router named DC1-R-1?",
    "cypher": "MATCH (r:Router {name: 'DC1-R-1'}) RETURN r.zone AS zone_number",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "zone_number": 1
      }
    ],
    "answer": "The zone number of the router DC1-R-1 is 1."
  },
  {
    "question": "Find the latest version of RHEL available in the system",
    "cypher": "MATCH (s:Software {name: 'RHEL'})-[:VERSION]->(v:Version) RETURN v.name AS version_name ORDER BY v.name DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "version_name": "7.3"
      }
    ],
    "answer": "The latest version of RHEL available in the system is 7.3."
  },
  {
    "question": "How many machines in zone 3 are running applications that listen on port 8080?",
    "cypher": "MATCH (r:Rack {zone: 3})-[:HOLDS]->(m:Machine)-[:RUNS]->(app:Application)-[:LISTENS]->(p:Port {port: 8080}) RETURN COUNT(DISTINCT m) AS total_machines",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_machines": 801
      }
    ],
    "answer": "801 machines in zone 3 are running applications that listen on port 8080."
  },
  {
    "question": "What IP does the egress router DC1-RE route to?",
    "cypher": "MATCH (e:Egress {name: 'DC1-RE'})-[:ROUTES]->(i:Interface) RETURN i.ip AS interface_ip LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interface_ip": "10.0.0.254"
      }
    ],
    "answer": "The egress router DC1-RE routes to the IP address 10.0.0.254."
  },
  {
    "question": "Count the number of services that webap depends on",
    "cypher": "MATCH (a:Application {name: 'webapp'})-[:DEPENDS_ON]->(s:Service) RETURN COUNT(DISTINCT s) AS dependency_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dependency_count": 3178
      }
    ],
    "answer": "The web application depends on 3,178 distinct services."
  },
  {
    "question": "What's the smallest disk size among all machine types in the infrastructure?",
    "cypher": "MATCH (t:Type) WHERE t.disk IS NOT NULL RETURN MIN(t.disk) AS minimum_disk_size",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "minimum_disk_size": 1
      }
    ],
    "answer": "The smallest disk size among all machine types is 1."
  },
  {
    "question": "How many switches connect to interfaces that can reach network 10.1?",
    "cypher": "MATCH (n:Network {ip: '10.1'})-[:ROUTES]->(i1:Interface)<-[:CONNECTS]-(i2:Interface)<-[:ROUTES]-(s:Switch) RETURN COUNT(DISTINCT s) AS total_switches",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_switches": 0
      }
    ],
    "answer": "Based on the query result, 0 switches connect to interfaces that can reach network 10.1."
  },
  {
    "question": "What's the PID of the neo4j service running on any machine?",
    "cypher": "MATCH (s:Service)-[:INSTANCE]->(soft:Software {name: 'neo4j'}) RETURN s.pid AS process_id LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "process_id": 3263
      }
    ],
    "answer": "The PID of the neo4j service is 3263."
  },
  {
    "question": "Find the rack with the highest rack number in zone 4",
    "cypher": "MATCH (r:Rack {zone: 4}) WHERE r.rack IS NOT NULL RETURN r.name AS rack_name ORDER BY r.rack DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "rack_name": "DC1-RCK-4-10"
      }
    ],
    "answer": "The rack with the highest rack number in zone 4 is DC1-RCK-4-10."
  },
  {
    "question": "How many processes depend on services running on machines in rack DC1-RCK-4-4?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-4-4'})-[:HOLDS]->(m:Machine)-[:RUNS]->(s:Service)<-[:DEPENDS_ON]-(p:Process) RETURN COUNT(DISTINCT p) AS dependent_processes",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dependent_processes": 200
      }
    ],
    "answer": "200 processes depend on services running on machines in rack DC1-RCK-4-4."
  },
  {
    "question": "What port does the cms app listen on?",
    "cypher": "MATCH (a:Application {name: 'cms'})-[:LISTENS]->(p:Port) RETURN p.port AS port_number LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "port_number": 8080
      }
    ],
    "answer": "The cms app listens on port 8080."
  },
  {
    "question": "Count total interfaces exposed by machines in Iceland, Rekjavik datacenter",
    "cypher": "MATCH (dc:DataCenter {location: 'Iceland, Rekjavik'})-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine)-[:ROUTES]->(i:Interface) RETURN COUNT(DISTINCT i) AS total_interfaces",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_interfaces": 8000
      }
    ],
    "answer": "The Iceland, Reykjavik datacenter has 8,000 distinct interfaces exposed by its machines."
  },
  {
    "question": "What's the network size of zone 1?",
    "cypher": "MATCH (z:Zone {zone: 1}) RETURN z.size AS network_size LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "network_size": 16
      }
    ],
    "answer": "The network size of zone 1 is 16."
  },
  {
    "question": "Find the machine with the most recent OS start time",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(os:OS) WHERE os.startTime IS NOT NULL RETURN m.name AS machine_name ORDER BY os.startTime DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "machine_name": "DC1-RCK-2-5-M-138"
      }
    ],
    "answer": "The machine with the most recent OS start time is DC1-RCK-2-5-M-138."
  },
  {
    "question": "How many applications instance the webserver software?",
    "cypher": "MATCH (a:Application)-[:INSTANCE]->(s:Software {name: 'webserver'}) RETURN COUNT(DISTINCT a) AS total_applications",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_applications": 1658
      }
    ],
    "answer": "1,658 applications instance the webserver software."
  },
  {
    "question": "What's the type name of machines in rack number 9 of zone 2?",
    "cypher": "MATCH (r:Rack {rack: 9, zone: 2})-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type) RETURN t.name AS type_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "type_name": "xs-1/1/1"
      }
    ],
    "answer": "The type name of machines in rack number 9 of zone 2 is xs-1/1/1."
  },
  {
    "question": "Count how many ports are listened to by processes with PID greater than 5000",
    "cypher": "MATCH (p:Process)-[:LISTENS]->(port:Port) WHERE p.pid > 5000 RETURN COUNT(DISTINCT port) AS total_ports",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_ports": 18459
      }
    ],
    "answer": "There are 18,459 unique ports being listened to by processes with a PID greater than 5000."
  },
  {
    "question": "What's the lowest zone number that has routers?",
    "cypher": "MATCH (r:Router) WHERE r.zone IS NOT NULL RETURN MIN(r.zone) AS lowest_zone",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_zone": 1
      }
    ],
    "answer": "The lowest zone number with routers is 1."
  },
  {
    "question": "How many dependency paths exist between php and postgers through software dependencies?",
    "cypher": "MATCH path = (s1:Software {name: 'php'})-[:DEPENDS_ON*]-(s2:Software {name: 'postgres'}) RETURN COUNT(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connection_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 dependency paths between php and postgres through software dependencies."
  },
  {
    "question": "What's the IP of switches that can reach interfaces connected to routers in zone 1?",
    "cypher": "MATCH (r:Router {zone: 1})-[:ROUTES]->(i1:Interface)<-[:CONNECTS]-(i2:Interface)<-[:ROUTES]-(s:Switch) RETURN s.ip AS switch_ip LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the app with the highest PID running on any server",
    "cypher": "MATCH (a:Application) WHERE a.pid IS NOT NULL RETURN a.name AS application_name ORDER BY a.pid DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "application_name": "cms"
      }
    ],
    "answer": "Based on the query result, the app with the highest PID is 'cms'."
  },
  {
    "question": "How many software packages have java as a dependency in their chain?",
    "cypher": "MATCH (s:Software)-[:DEPENDS_ON*]->(java:Software {name: 'java'}) RETURN COUNT(DISTINCT s) AS dependent_software",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dependent_software": 1
      }
    ],
    "answer": "Based on the query result, 1 software package has java as a dependency in its dependency chain."
  },
  {
    "question": "What's the location of the datacenter containing router DC1-R-1?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(r:Router {name: 'DC1-R-1'}) RETURN dc.location AS datacenter_location",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The datacenter containing router DC1-R-1 is located in Reykjavik, Iceland."
  },
  {
    "question": "Count machines that have both applications and services running on them",
    "cypher": "MATCH (m:Machine) WHERE EXISTS((m)-[:RUNS]->(:Application)) AND EXISTS((m)-[:RUNS]->(:Service)) RETURN COUNT(DISTINCT m) AS dual_purpose_machines",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dual_purpose_machines": 8000
      }
    ],
    "answer": "8,000 machines have both applications and services running on them."
  },
  {
    "question": "What's the shortest path length between any machine running webapp and machines running couchbase?",
    "cypher": "MATCH (m1:Machine)-[:RUNS]->(:Application {name: 'webapp'}), (m2:Machine)-[:RUNS]->(:Service {name: 'couchbase'}) WITH m1, m2 MATCH path = shortestPath((m1)-[*]-(m2)) RETURN LENGTH(path) AS path_length ORDER BY LENGTH(path) LIMIT 1",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "How many versions does neo4j software have available?",
    "cypher": "MATCH (s:Software {name: 'neo4j'})-[:VERSION]->(v:Version) RETURN COUNT(v) AS version_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "version_count": 2
      }
    ],
    "answer": "Based on the query result, Neo4j software has 2 versions available."
  },
  {
    "question": "What rack holds the most servers of type xs-1/1/1?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type {name: 'xs-1/1/1'}) WITH r, COUNT(m) as machine_count RETURN r.name AS rack_name ORDER BY machine_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "rack_name": "DC1-RCK-4-4"
      }
    ],
    "answer": "The rack that holds the most servers of type xs-1/1/1 is DC1-RCK-4-4."
  },
  {
    "question": "How many interfaces connect between different zones through switches?",
    "cypher": "MATCH (z1:Zone)-[:ROUTES]->(i1:Interface)<-[:CONNECTS]-(i2:Interface)<-[:ROUTES]-(z2:Zone) WHERE z1.zone <> z2.zone RETURN COUNT(DISTINCT i1) + COUNT(DISTINCT i2) AS cross_zone_interfaces",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "cross_zone_interfaces": 0
      }
    ],
    "answer": "Based on the query result, there are 0 interfaces connecting between different zones through switches."
  },
  {
    "question": "What's the start time of RHEL OS on machine DC1-RCK-1-1-M-1?",
    "cypher": "MATCH (m:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(os:OS) RETURN os.startTime AS os_start_time",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "os_start_time": 1605946409388
      }
    ],
    "answer": "The start time of RHEL OS on machine DC1-RCK-1-1-M-1 is 1605946409388 (Unix timestamp)."
  },
  {
    "question": "Count the number of racks that contain both machines and switches",
    "cypher": "MATCH (r:Rack) WHERE EXISTS((r)-[:HOLDS]->(:Machine)) AND EXISTS((r)-[:HOLDS]->(:Switch)) RETURN COUNT(r) AS dual_purpose_racks",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dual_purpose_racks": 40
      }
    ],
    "answer": "There are 40 racks that contain both machines and switches."
  },
  {
    "question": "What's the average number of CPU cores across all machine types?",
    "cypher": "MATCH (t:Type) WHERE t.cpu IS NOT NULL RETURN AVG(t.cpu) AS average_cpu_cores",
    "query_type": "Aggregation",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_cpu_cores": 10.5
      }
    ],
    "answer": "The average number of CPU cores across all machine types is 10.5 cores."
  },
  {
    "question": "Find machines running services that connect to apps depending on php",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(s:Service)<-[:DEPENDS_ON]-(a:Application)-[:INSTANCE]->(soft:Software)-[:DEPENDS_ON*]->(php:Software {name: 'php'}) RETURN m.name AS machine_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "5-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "machine_name": "DC1-RCK-4-2-M-174"
      }
    ],
    "answer": "Based on the query result, the machine running a service that connects to an app depending on PHP is DC1-RCK-4-2-M-174."
  },
  {
    "question": "How many distinct port numbers are exposed across all services and applications?",
    "cypher": "MATCH (entity)-[:LISTENS]->(p:Port) WHERE entity:Service OR entity:Application RETURN COUNT(DISTINCT p.port) AS unique_ports",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "unique_ports": 18
      }
    ],
    "answer": "There are 18 distinct port numbers exposed across all services and applications."
  },
  {
    "question": "How many machines are running applications that depend on services hosted in rack DC1-RCK-1-1?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-1-1'})-[:HOLDS]->(m1:Machine)-[:RUNS]->(s:Service)<-[:DEPENDS_ON]-(a:Application)<-[:RUNS]-(m2:Machine) RETURN COUNT(DISTINCT m2) AS total_machines",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_machines": 200
      }
    ],
    "answer": "200 machines are running applications that depend on services hosted in rack DC1-RCK-1-1."
  },
  {
    "question": "What's the IP address of the interface connected to the switch in rack 10 of zone 1?",
    "cypher": "MATCH (s:Switch {rack: 10})-[:ROUTES]->(i:Interface) WHERE s.ip STARTS WITH '10.1' RETURN i.ip AS interface_ip LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interface_ip": "10.1.10.254"
      }
    ],
    "answer": "The IP address of the interface connected to the switch in rack 10 of zone 1 is 10.1.10.254."
  },
  {
    "question": "What's the highest PID among processes running on machines that host the webserver application?",
    "cypher": "MATCH (a:Application {name: 'webserver'})<-[:RUNS]-(m:Machine)-[:RUNS]->(p:Process) WHERE p.pid IS NOT NULL RETURN MAX(p.pid) AS highest_pid",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_pid": 9992
      }
    ],
    "answer": "The highest PID among processes running on machines hosting the webserver application is 9992."
  },
  {
    "question": "How many distinct ports are exposed by interfaces routing to machines in DC-1?",
    "cypher": "MATCH (dc:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine)-[:ROUTES]->(i:Interface)-[:EXPOSES]->(p:Port) RETURN COUNT(DISTINCT p.port) AS total_ports",
    "query_type": "Aggregation",
    "complexity": "5-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_ports": 18
      }
    ],
    "answer": "18 distinct ports are exposed by interfaces routing to machines in DC-1."
  },
  {
    "question": "What's the location of the datacenter containing the rack that holds machine DC1-RCK-3-8-M-49?",
    "cypher": "MATCH (m:Machine {name: 'DC1-RCK-3-8-M-49'})<-[:HOLDS]-(r:Rack)<-[:CONTAINS]-(dc:DataCenter) RETURN dc.location AS datacenter_location",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The datacenter containing the rack with machine DC1-RCK-3-8-M-49 is located in Rekjavik, Iceland."
  },
  {
    "question": "Tell me the total number of apps listening on port 8080 across all machines?",
    "cypher": "MATCH (a:Application)-[:LISTENS]->(p:Port {port: 8080}) RETURN COUNT(DISTINCT a) AS total_applications",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_applications": 3222
      }
    ],
    "answer": "There are 3,222 distinct applications listening on port 8080 across all machines."
  },
  {
    "question": "What's the newest process start time for services depending on postgres in any version?",
    "cypher": "MATCH (s:Software {name: 'postgres'})<-[:DEPENDS_ON]-(svc:Service) WHERE svc.startTime IS NOT NULL RETURN MAX(svc.startTime) AS latest_start_time",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "How many interfaces connect zone 1 networks to zone 4 networks through routers?",
    "cypher": "MATCH (n1:Network {zone: 1})-[:ROUTES]->(i1:Interface)<-[:ROUTES]-(r:Router)-[:ROUTES]->(i2:Interface)<-[:ROUTES]-(n2:Network {zone: 4}) RETURN COUNT(DISTINCT i1) + COUNT(DISTINCT i2) AS total_interfaces",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_interfaces": 0
      }
    ],
    "answer": "Based on the query result, there are 0 interfaces connecting zone 1 networks to zone 4 networks through routers."
  },
  {
    "question": "What's the name of the OS running on machines that host both webapp and webserver applications?",
    "cypher": "MATCH (a1:Application {name: 'webapp'})<-[:RUNS]-(m:Machine)-[:RUNS]->(a2:Application {name: 'webserver'}), (m)-[:RUNS]->(os:OS) RETURN os.name AS os_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the total RAM across all machine types used by boxes running the cms application?",
    "cypher": "MATCH (a:Application {name: 'cms'})<-[:RUNS]-(m:Machine)-[:TYPE]->(t:Type) RETURN SUM(t.ram) AS total_ram",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_ram": 38699
      }
    ],
    "answer": "The total RAM across all machine types used by boxes running the cms application is 38,699 units."
  },
  {
    "question": "What's the smallest rack number in zone 2 that contains switches routing to interfaces?",
    "cypher": "MATCH (r:Rack {zone: 2})-[:HOLDS]->(s:Switch)-[:ROUTES]->(i:Interface) WHERE r.rack IS NOT NULL RETURN MIN(r.rack) AS lowest_rack_number",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_rack_number": 1
      }
    ],
    "answer": "The smallest rack number in zone 2 that contains switches routing to interfaces is 1."
  },
  {
    "question": "How many different software packages are dependencies of applications running on machines in rack DC1-RCK-4-2?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-4-2'})-[:HOLDS]->(m:Machine)-[:RUNS]->(a:Application)-[:INSTANCE]->(s1:Software)-[:DEPENDS_ON]->(s2:Software) RETURN COUNT(DISTINCT s2) AS total_dependencies",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_dependencies": 5
      }
    ],
    "answer": "There are 5 different software packages that are dependencies of applications running on machines in rack DC1-RCK-4-2."
  },
  {
    "question": "What port does the couchbase service listen on?",
    "cypher": "MATCH (s:Service {name: 'couchbase'})-[:LISTENS]->(p:Port) RETURN p.port AS service_port LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "service_port": 11207
      }
    ],
    "answer": "The couchbase service listens on port 11207."
  },
  {
    "question": "What's the highest zone number among networks connected to the egress router?",
    "cypher": "MATCH (e:Egress)-[:ROUTES]->(i:Interface)-[:CONNECTS]->(n:Network) WHERE n.zone IS NOT NULL RETURN MAX(n.zone) AS highest_zone",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_zone": 4
      }
    ],
    "answer": "The highest zone number among networks connected to the egress router is 4."
  },
  {
    "question": "Count the processes that are instances of software with more than 2 versions available?",
    "cypher": "MATCH (p:Process)-[:INSTANCE]->(s:Software)-[:VERSION]->(v:Version) WITH s, COUNT(DISTINCT v) AS version_count WHERE version_count > 2 MATCH (p2:Process)-[:INSTANCE]->(s) RETURN COUNT(DISTINCT p2) AS total_processes",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_processes": 1634
      }
    ],
    "answer": "There are 1,634 processes that are instances of software with more than 2 versions available."
  },
  {
    "question": "What's the IP of the iface that exposes port 443 and connects to machine DC1-RCK-1-1-M-1?",
    "cypher": "MATCH (m:Machine {name: 'DC1-RCK-1-1-M-1'})-[:ROUTES]->(i:Interface)-[:EXPOSES]->(p:Port {port: 443}) RETURN i.ip AS interface_ip",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interface_ip": "10.1.1.1"
      }
    ],
    "answer": "The IP of the interface exposing port 443 and connecting to DC1-RCK-1-1-M-1 is 10.1.1.1."
  },
  {
    "question": "What's the oldest startTime among all processes running web server applications?",
    "cypher": "MATCH (a:Application {name: 'webserver'}) WHERE a.startTime IS NOT NULL RETURN MIN(a.startTime) AS earliest_start_time",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_start_time": 1606165629748
      }
    ],
    "answer": "The earliest start time for web server applications is 1606165629748 milliseconds since the epoch."
  },
  {
    "question": "How many switches can reach interfaces in the 10.4 network through routing paths?",
    "cypher": "MATCH (n:Network {ip: '10.4'})-[:ROUTES]->(i:Interface)<-[:ROUTES]-(s:Switch) RETURN COUNT(DISTINCT s) AS switch_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "switch_count": 10
      }
    ],
    "answer": "10 switches can reach interfaces in the 10.4 network through routing paths."
  },
  {
    "question": "What's the average CPU count for machine types running applications that depend on java?",
    "cypher": "MATCH (s:Software {name: 'java'})<-[:DEPENDS_ON]-(a:Application)<-[:RUNS]-(m:Machine)-[:TYPE]->(t:Type) RETURN AVG(t.cpu) AS average_cpu",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_cpu": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Tell me the rack name that holds the machine running OS version 7.1?",
    "cypher": "MATCH (os:OS {name: '7.1'})<-[:RUNS]-(m:Machine)<-[:HOLDS]-(r:Rack) RETURN r.name AS rack_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "rack_name": "DC1-RCK-1-1"
      }
    ],
    "answer": "The rack that holds the machine running OS version 7.1 is DC1-RCK-1-1."
  },
  {
    "question": "What's the max disk capacity among xs type machines in zone 4 racks?",
    "cypher": "MATCH (r:Rack {zone: 4})-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type {type: 'xs'}) WHERE t.disk IS NOT NULL RETURN MAX(t.disk) AS maximum_disk",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "maximum_disk": 1
      }
    ],
    "answer": "The maximum disk capacity among xs type machines in zone 4 racks is 1."
  },
  {
    "question": "How many versions of REHL are reachable from processes running on DC1 machines?",
    "cypher": "MATCH (dc:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine)-[:RUNS]->(p:Process)-[:INSTANCE]->(v:Version)<-[:VERSION]-(s:Software {name: 'RHEL'}) RETURN COUNT(DISTINCT v) AS version_count",
    "query_type": "Aggregation",
    "complexity": "5-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "version_count": 3
      }
    ],
    "answer": "Based on the query result, there are 3 distinct versions of RHEL that are reachable from processes running on DC1 machines."
  },
  {
    "question": "What's the network size of the zone routing to interface 10.1.10.254?",
    "cypher": "MATCH (i:Interface {ip: '10.1.10.254'})<-[:ROUTES]-(n:Network) RETURN n.size AS network_size",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "network_size": 16
      }
    ],
    "answer": "The network size of the zone routing to interface 10.1.10.254 is 16."
  },
  {
    "question": "Find the lowest port number exposed by interfaces connected to apps in rack 1 machines?",
    "cypher": "MATCH (r:Rack {rack: 1})-[:HOLDS]->(m:Machine)-[:RUNS]->(a:Application)-[:LISTENS]->(p1:Port), (m)-[:ROUTES]->(i:Interface)-[:EXPOSES]->(p2:Port) WHERE p2.port IS NOT NULL RETURN MIN(p2.port) AS lowest_port",
    "query_type": "Sorting",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_port": 80
      }
    ],
    "answer": "The lowest port number exposed by interfaces connected to apps in rack 1 machines is 80."
  },
  {
    "question": "How many paths exist between postgres service and port 5432 through listening relationships?",
    "cypher": "MATCH path = (s:Service)-[:INSTANCE]->(sw:Software {name: 'postgres'}), (s)-[:LISTENS]->(p:Port {port: 5432}) RETURN COUNT(path) AS path_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "path_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 paths between the postgres service and port 5432 through listening relationships."
  },
  {
    "question": "What's the total number of machines connected to interfaces in the 10.1.1.x subnet?",
    "cypher": "MATCH (m:Machine)-[:ROUTES]->(i:Interface) WHERE i.ip STARTS WITH '10.1.1' RETURN COUNT(DISTINCT m) AS machine_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "machine_count": 400
      }
    ],
    "answer": "400 machines are connected to interfaces in the 10.1.1.x subnet."
  },
  {
    "question": "Which version of postgres is marked as previous to version 9.6?",
    "cypher": "MATCH (v1:Version {name: '9.6'})-[:PREVIOUS]->(v2:Version)<-[:VERSION]-(s:Software {name: 'postgres'}) RETURN v2.name AS previous_version",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "previous_version": "9.5"
      }
    ],
    "answer": "PostgreSQL version 9.5 is marked as the previous version to PostgreSQL 9.6."
  },
  {
    "question": "What's the highest startTime for services that other services depend on?",
    "cypher": "MATCH (s1:Service)-[:DEPENDS_ON]->(s2:Service) WHERE s2.startTime IS NOT NULL RETURN MAX(s2.startTime) AS latest_start",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "Count how many different machine connect to webserver instances through dependency chains?",
    "cypher": "MATCH (s:Software {name: 'webserver'})<-[:INSTANCE]-(a:Application)<-[:DEPENDS_ON]-(a2:Application)<-[:RUNS]-(m:Machine) RETURN COUNT(DISTINCT m) AS machine_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "machine_count": 0
      }
    ],
    "answer": "Based on the query result, 0 different machines connect to webserver instances through dependency chains."
  },
  {
    "question": "What's the ip address of the switch in rack DC1-RCK-1-1?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-1-1'})-[:HOLDS]->(s:Switch) RETURN s.ip AS switch_ip",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "switch_ip": "10.1.1"
      }
    ],
    "answer": "The IP address of the switch in rack DC1-RCK-1-1 is 10.1.1."
  },
  {
    "question": "Find the shortest path length between machines running webapp and machines running cms applications?",
    "cypher": "MATCH (m1:Machine)-[:RUNS]->(a1:Application {name: 'webapp'}), (m2:Machine)-[:RUNS]->(a2:Application {name: 'cms'}), path = shortestPath((m1)-[*]-(m2)) RETURN LENGTH(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the sum of all port numbers listened to by processes with PIDs greater than 5000?",
    "cypher": "MATCH (p:Process)-[:LISTENS]->(port:Port) WHERE p.pid > 5000 RETURN SUM(port.port) AS total_port_sum",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_port_sum": 134865675
      }
    ],
    "answer": "The sum of all port numbers listened to by processes with PIDs greater than 5000 is 134,865,675."
  },
  {
    "question": "Tell me the name of the DC containing routers that route to zone 1 networks?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(r:Router)-[:ROUTES]->(i:Interface)-[:CONNECTS]->(n:Network {zone: 1}) RETURN dc.name AS datacenter_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "datacenter_name": "DC1"
      }
    ],
    "answer": "Based on the query result, the name of the DC containing routers that route to zone 1 networks is DC1."
  },
  {
    "question": "What's the minimum RAM among machine types used by boxes hosting both OS and application processes?",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(os:OS), (m)-[:RUNS]->(a:Application), (m)-[:TYPE]->(t:Type) WHERE t.ram IS NOT NULL RETURN MIN(t.ram) AS minimum_ram",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "minimum_ram": 1
      }
    ],
    "answer": "The minimum RAM among machine types used by boxes hosting both OS and application processes is 1 GB."
  },
  {
    "question": "How many interfaces connect to each other in the infrastructure?",
    "cypher": "MATCH (i1:Interface)-[:CONNECTS]->(i2:Interface) RETURN COUNT(DISTINCT i1) + COUNT(DISTINCT i2) AS total_connected_interfaces",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_connected_interfaces": 8040
      }
    ],
    "answer": "Based on the query result, there are 8,040 total connected interfaces in the infrastructure."
  },
  {
    "question": "What's the averge number of dependencies for software packages used by applications?",
    "cypher": "MATCH (a:Application)-[:INSTANCE]->(s:Software) WITH s, SIZE(s.dependencies) AS dep_count WHERE dep_count > 0 RETURN AVG(dep_count) AS average_dependencies",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_dependencies": 1.8037499999999962
      }
    ],
    "answer": "Based on the query result, the average number of dependencies for software packages used by applications is approximately 1.8 dependencies per package."
  },
  {
    "question": "Which rack number holds switches routing to the 10.4.8 network segment?",
    "cypher": "MATCH (s:Switch {ip: '10.4.8'})<-[:HOLDS]-(r:Rack) RETURN r.rack AS rack_number",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "rack_number": 8
      }
    ],
    "answer": "Rack 8 holds the switches routing to the 10.4.8 network segment."
  },
  {
    "question": "What's the latest version of RHEL based on the PREVIOUS relationship chain?",
    "cypher": "MATCH (s:Software {name: 'RHEL'})-[:VERSION]->(v:Version) WHERE NOT (v)-[:PREVIOUS]->() RETURN v.name AS latest_version LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "latest_version": "7.1"
      }
    ],
    "answer": "Based on the query result, the latest version of RHEL is 7.1."
  },
  {
    "question": "Count machines that can reach port 80 through their network interfaces?",
    "cypher": "MATCH (m:Machine)-[:ROUTES]->(i:Interface)-[:EXPOSES]->(p:Port {port: 80}) RETURN COUNT(DISTINCT m) AS machine_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "machine_count": 4866
      }
    ],
    "answer": "4,866 machines can reach port 80 through their network interfaces."
  },
  {
    "question": "What's the total disk space across all machine types in the DC?",
    "cypher": "MATCH (t:Type) RETURN SUM(t.disk) AS total_disk_space",
    "query_type": "Aggregation",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_disk_space": 3906
      }
    ],
    "answer": "The total disk space across all machine types in the data center is 3,906 units."
  },
  {
    "question": "Tell me the PID of the process running web-server application on machine DC1-RCK-1-1-M-1?",
    "cypher": "MATCH (m:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(a:Application {name: 'webserver'}) RETURN a.pid AS process_id",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "process_id": 8966
      }
    ],
    "answer": "The PID of the web-server application running on machine DC1-RCK-1-1-M-1 is 8966."
  },
  {
    "question": "What's the max zone number among racks containing machines with type xs-1/1/1?",
    "cypher": "MATCH (t:Type {name: 'xs-1/1/1'})<-[:TYPE]-(m:Machine)<-[:HOLDS]-(r:Rack) WHERE r.zone IS NOT NULL RETURN MAX(r.zone) AS highest_zone",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_zone": 4
      }
    ],
    "answer": "The maximum zone number among racks containing machines with type xs-1/1/1 is 4."
  },
  {
    "question": "How many distinct software packages serve as bridges between applications through dependency relationships?",
    "cypher": "MATCH (a1:Application)-[:INSTANCE]->(s1:Software)-[:DEPENDS_ON]->(s2:Software)<-[:INSTANCE]-(a2:Application) WHERE a1 <> a2 RETURN COUNT(DISTINCT s2) AS bridge_software_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "bridge_software_count": 1
      }
    ],
    "answer": "Based on the query result, there is 1 distinct software package that serves as a bridge between different applications through dependency relationships."
  },
  {
    "question": "What's the count of unique CPU configurations among all machine types?",
    "cypher": "MATCH (t:Type) RETURN COUNT(DISTINCT t.cpu) AS unique_cpu_configs",
    "query_type": "Aggregation",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "unique_cpu_configs": 6
      }
    ],
    "answer": "There are 6 unique CPU configurations among all machine types."
  },
  {
    "question": "Which softwere name has a version labeled 9.4 in the system?",
    "cypher": "MATCH (s:Software)-[:VERSION]->(v:Version {name: '9.4'}) RETURN s.name AS software_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "software_name": "postgres"
      }
    ],
    "answer": "The software with version 9.4 is postgres."
  },
  {
    "question": "Find the earliest startTime among OS processes running on machines in zone 1 racks?",
    "cypher": "MATCH (r:Rack {zone: 1})-[:HOLDS]->(m:Machine)-[:RUNS]->(os:OS) WHERE os.startTime IS NOT NULL RETURN MIN(os.startTime) AS earliest_start",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_start": 1605734535506
      }
    ],
    "answer": "The earliest startTime for OS processes running on machines in zone 1 racks is 1605734535506."
  },
  {
    "question": "How many routers in the datacenter route to interfaces that connect between different zones?",
    "cypher": "MATCH (r:Router)-[:ROUTES]->(i1:Interface)-[:CONNECTS]->(i2:Interface)<-[:ROUTES]-(n1:Network), (i1)<-[:ROUTES]-(n2:Network) WHERE n1.zone <> n2.zone RETURN COUNT(DISTINCT r) AS router_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "router_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 routers in the datacenter that route to interfaces connecting between different zones."
  },
  {
    "question": "What's the average size of networks in zone 4?",
    "cypher": "MATCH (n:Network {zone: 4}) RETURN AVG(n.size) AS average_network_size",
    "query_type": "Aggregation",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_network_size": 16.0
      }
    ],
    "answer": "The average size of networks in zone 4 is 16.0."
  },
  {
    "question": "Tell me what type of machine (by name) is running the process with PID 5521?",
    "cypher": "MATCH (p:Process {pid: 5521})<-[:RUNS]-(m:Machine)-[:TYPE]->(t:Type) RETURN t.name AS machine_type",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "machine_type": "s-2/4/5"
      },
      {
        "machine_type": "m-4/16/25"
      },
      {
        "machine_type": "xs-1/1/1"
      },
      {
        "machine_type": "l-8/64/125"
      }
    ]
  },
  {
    "question": "How many machines are running applications that depend on java version 8?",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(app:Application)-[:INSTANCE]->(s:Software)-[:DEPENDS_ON]->(java:Software {name: 'java'})-[:VERSION]->(v:Version {name: '8'}) RETURN COUNT(DISTINCT m) AS total_machines",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_machines": 1588
      }
    ],
    "answer": "1,588 machines are running applications that depend on Java version 8."
  },
  {
    "question": "What's the IP address of the interface that connects to zone 4's network?",
    "cypher": "MATCH (n:Network {zone: 4})-[:ROUTES]->(i:Interface) RETURN i.ip AS interface_ip LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interface_ip": "10.4.8.254"
      }
    ],
    "answer": "The IP address of the interface connecting to zone 4's network is 10.4.8.254."
  },
  {
    "question": "What's the highest amount of RAM among machine types in rack DC1-RCK-4-4?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-4-4'})-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type) WHERE t.ram IS NOT NULL RETURN MAX(t.ram) AS max_ram",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_ram": 1024
      }
    ],
    "answer": "The highest amount of RAM among machine types in rack DC1-RCK-4-4 is 1024 GB."
  },
  {
    "question": "How many applications connect to the webserver through dependency chains?",
    "cypher": "MATCH (app:Application)-[:DEPENDS_ON*1..3]->(webserver:Software {name: 'webserver'}) RETURN COUNT(DISTINCT app) AS dependent_apps",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dependent_apps": 1
      }
    ],
    "answer": "1 application connects to the webserver through dependency chains."
  },
  {
    "question": "Count all the boxes in datacenter DC-1 that are running RHEL version 7.3",
    "cypher": "MATCH (dc:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine)-[:RUNS]->(os:OS)-[:INSTANCE]->(v:Version {name: '7.3'}) RETURN COUNT(DISTINCT m) AS machine_count",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo_and_colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "machine_count": 801
      }
    ],
    "answer": "There are 801 boxes (machines) running RHEL version 7.3 in datacenter DC-1."
  },
  {
    "question": "What's the location of the datacenter containing rack DC1-RCK-2-9?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(r:Rack {name: 'DC1-RCK-2-9'}) RETURN dc.location AS datacenter_location",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The datacenter containing rack DC1-RCK-2-9 is located in Rekjavik, Iceland."
  },
  {
    "question": "Find the earliest start time among services running on machine DC1-RCK-1-1-M-1",
    "cypher": "MATCH (m:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(s:Service) WHERE s.startTime IS NOT NULL RETURN MIN(s.startTime) AS earliest_start",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_start": 1606677429918
      }
    ],
    "answer": "The earliest start time for services running on machine DC1-RCK-1-1-M-1 is 1606677429918 (Unix timestamp in milliseconds)."
  },
  {
    "question": "What's the total number of ports exposed by interfaces connected to switch 10.1.1?",
    "cypher": "MATCH (s:Switch {ip: '10.1.1'})-[:ROUTES]->(i:Interface)-[:EXPOSES]->(p:Port) RETURN COUNT(DISTINCT p) AS total_ports",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_ports": 0
      }
    ],
    "answer": "Based on the query result, the switch with IP 10.1.1 has 0 exposed ports."
  },
  {
    "question": "Which port does the cms application listen on?",
    "cypher": "MATCH (app:Application {name: 'cms'})-[:LISTENS]->(p:Port) RETURN p.port AS listening_port LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "listening_port": 8080
      }
    ],
    "answer": "The cms application listens on port 8080."
  },
  {
    "question": "How many different software dependencies does the webapp have including transitive ones?",
    "cypher": "MATCH (webapp:Software {name: 'webapp'})-[:DEPENDS_ON*1..3]->(dep:Software) RETURN COUNT(DISTINCT dep) AS total_dependencies",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_dependencies": 2
      }
    ],
    "answer": "The webapp has 2 different software dependencies, including transitive dependencies."
  },
  {
    "question": "What's the maximum disk capacity among all machine types in zone 4 racks?",
    "cypher": "MATCH (r:Rack {zone: 4})-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type) WHERE t.disk IS NOT NULL RETURN MAX(t.disk) AS max_disk",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_disk": 3125
      }
    ],
    "answer": "The maximum disk capacity among machine types in zone 4 racks is 3,125 units."
  },
  {
    "question": "How many interfaces can router DC1-RE reach through its routing connections?",
    "cypher": "MATCH (router:Router {name: 'DC1-RE'})-[:ROUTES]->(i1:Interface)-[:CONNECTS]->(i2:Interface) RETURN COUNT(DISTINCT i2) AS reachable_interfaces",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "reachable_interfaces": 0
      }
    ],
    "answer": "Based on the query result, DC1-RE can reach 0 interfaces through its routing connections."
  },
  {
    "question": "Tell me the PID of the process running webserver on DC1-RCK-1-1-M-1",
    "cypher": "MATCH (m:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(p:Process {name: 'webserver'}) RETURN p.pid AS process_id",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "process_id": 8966
      }
    ],
    "answer": "The PID of the webserver process running on DC1-RCK-1-1-M-1 is 8966."
  },
  {
    "question": "What's the total CPU capacity of all machine types used in rack DC1-RCK-4-2?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-4-2'})-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type) RETURN SUM(t.cpu) AS total_cpu",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_cpu": 624
      }
    ],
    "answer": "The total CPU capacity of all machine types in rack DC1-RCK-4-2 is 624 (presumably CPU cores or units)."
  },
  {
    "question": "Find the lowest zone number among networks connected to egress routers",
    "cypher": "MATCH (e:Egress)-[:ROUTES]->(i:Interface)-[:CONNECTS]->(n:Network) WHERE n.zone IS NOT NULL RETURN MIN(n.zone) AS lowest_zone",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_zone": 1
      }
    ],
    "answer": "The lowest zone number among networks connected to egress routers is 1."
  },
  {
    "question": "How many apps are running on servers in racks held by datacenter DC1?",
    "cypher": "MATCH (dc:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine)-[:RUNS]->(app:Application) RETURN COUNT(DISTINCT app) AS running_apps",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "running_apps": 8000
      }
    ],
    "answer": "8,000 apps are running on servers in racks within the DC1 datacenter."
  },
  {
    "question": "What rack number holds the machine running process with PID 5521?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(m:Machine)-[:RUNS]->(p:Process {pid: 5521}) RETURN r.rack AS rack_number",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "rack_number": 7
      },
      {
        "rack_number": 2
      },
      {
        "rack_number": 7
      },
      {
        "rack_number": 6
      }
    ]
  },
  {
    "question": "Count the versions available for REHL operating system",
    "cypher": "MATCH (s:Software {name: 'RHEL'})-[:VERSION]->(v:Version) RETURN COUNT(DISTINCT v) AS version_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "version_count": 3
      }
    ],
    "answer": "Based on the query result, there are 3 distinct versions available for the Red Hat Enterprise Linux (RHEL) operating system."
  },
  {
    "question": "What's the highest start time among all services listening on port 80?",
    "cypher": "MATCH (s:Service)-[:LISTENS]->(p:Port {port: 80}) WHERE s.startTime IS NOT NULL RETURN MAX(s.startTime) AS latest_start",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "latest_start": 1607028972087
      }
    ],
    "answer": "The highest start time among services listening on port 80 is 1607028972087 milliseconds since the epoch."
  },
  {
    "question": "How many dependency paths exist between cms and postgres through intermediate software?",
    "cypher": "MATCH path = (cms:Software {name: 'cms'})-[:DEPENDS_ON*2..4]->(:Software {name: 'postgres'}) RETURN COUNT(path) AS dependency_paths",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "Which IP belongs to the interface routing traffic from switch in rack 1?",
    "cypher": "MATCH (s:Switch {rack: 1})-[:ROUTES]->(i:Interface) RETURN i.ip AS interface_ip LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interface_ip": "10.1.1.254"
      }
    ],
    "answer": "The IP 10.1.1.254 belongs to the interface routing traffic from the switch in rack 1."
  },
  {
    "question": "How many processes depend on services running on machines in zone 2?",
    "cypher": "MATCH (r:Rack {zone: 2})-[:HOLDS]->(m:Machine)-[:RUNS]->(s:Service)<-[:DEPENDS_ON]-(p:Process) RETURN COUNT(DISTINCT p) AS dependent_processes",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dependent_processes": 2000
      }
    ],
    "answer": "2,000 processes depend on services running on machines in zone 2."
  },
  {
    "question": "What's the minimum network size among zones connected to router interfaces?",
    "cypher": "MATCH (router:Router)-[:ROUTES]->(i:Interface)<-[:ROUTES]-(z:Zone) WHERE z.size IS NOT NULL RETURN MIN(z.size) AS smallest_network",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "smallest_network": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Find the name of the software that both webapp and cms depend on",
    "cypher": "MATCH (webapp:Software {name: 'webapp'})-[:DEPENDS_ON]->(common:Software)<-[:DEPENDS_ON]-(cms:Software {name: 'cms'}) RETURN common.name AS shared_dependency LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "How many different machine types are used across all boxes in DC1?",
    "cypher": "MATCH (dc:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type) RETURN COUNT(DISTINCT t) AS type_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "type_count": 6
      }
    ],
    "answer": "There are 6 different machine types used across all boxes in DC1."
  },
  {
    "question": "What's the latest version of software that java version 8 depends on?",
    "cypher": "MATCH (v:Version {name: '8'})<-[:VERSION]-(java:Software {name: 'java'}), (v)-[:DEPENDS_ON]->(s:Software)-[:VERSION]->(sv:Version) WHERE sv.name IS NOT NULL RETURN sv.name AS latest_version ORDER BY sv.name DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "Count the number of interfaces that can reach each other through connections in zone 1",
    "cypher": "MATCH (z:Zone {zone: 1})-[:ROUTES]->(i1:Interface)-[:CONNECTS]->(i2:Interface) RETURN COUNT(DISTINCT i2) AS connected_interfaces",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connected_interfaces": 0
      }
    ],
    "answer": "Based on the query result, there are 0 interfaces that can reach each other through connections in zone 1."
  },
  {
    "question": "What's the zone of the rack containing machine DC1-RCK-4-2-M-174?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(m:Machine {name: 'DC1-RCK-4-2-M-174'}) RETURN r.zone AS rack_zone",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "rack_zone": 4
      }
    ],
    "answer": "The zone of the rack containing machine DC1-RCK-4-2-M-174 is zone 4."
  },
  {
    "question": "How many services are instances of softwares that have multiple versions?",
    "cypher": "MATCH (s:Service)-[:INSTANCE]->(soft:Software)-[:VERSION]->(v1:Version), (soft)-[:VERSION]->(v2:Version) WHERE v1.name <> v2.name RETURN COUNT(DISTINCT s) AS service_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "service_count": 3222
      }
    ],
    "answer": "Based on the query result, there are 3,222 services that are instances of software with multiple different versions."
  },
  {
    "question": "Find the highest PID among procesess listening on ports exposed by interfaces",
    "cypher": "MATCH (p:Process)-[:LISTENS]->(port:Port)<-[:EXPOSES]-(i:Interface) WHERE p.pid IS NOT NULL RETURN MAX(p.pid) AS highest_pid",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_pid": 9999
      }
    ],
    "answer": "The highest PID among processes listening on ports exposed by interfaces is 9999."
  },
  {
    "question": "How many racks in different zones can be reached from DC1 datacenter?",
    "cypher": "MATCH (dc:DataCenter {name: 'DC1'})-[:CONTAINS]->(r1:Rack), (dc)-[:CONTAINS]->(r2:Rack) WHERE r1.zone <> r2.zone RETURN COUNT(DISTINCT r2) AS cross_zone_racks",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "cross_zone_racks": 40
      }
    ],
    "answer": "From the DC1 datacenter, there are 40 racks that can be reached across different zones."
  },
  {
    "question": "What port does the service with PID 7211 listen on?",
    "cypher": "MATCH (s:Service {pid: 7211})-[:LISTENS]->(p:Port) RETURN p.port AS service_port LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Sum up all the RAM across different machine types in datacenter DC1's racks",
    "cypher": "MATCH (dc:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type) WHERE t.ram IS NOT NULL RETURN SUM(t.ram) AS total_ram",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_ram": 205280
      }
    ],
    "answer": "The total RAM across different machine types in datacenter DC1's racks is 205,280 (presumably in GB)."
  },
  {
    "question": "What's the smallest CPU count among boxes running neo4j dependent applications?",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(app:Application)-[:INSTANCE]->(s:Software)-[:DEPENDS_ON]->(neo4j:Software {name: 'neo4j'}), (m)-[:TYPE]->(t:Type) WHERE t.cpu IS NOT NULL RETURN MIN(t.cpu) AS min_cpu",
    "query_type": "Sorting",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "min_cpu": 1
      }
    ],
    "answer": "The smallest CPU count among boxes running Neo4j dependent applications is 1 CPU."
  },
  {
    "question": "How many previous versions can be traced back from RHEL version 7.3?",
    "cypher": "MATCH path = (v:Version {name: '7.3'})-[:PREVIOUS*]->(prev:Version) RETURN COUNT(DISTINCT prev) AS previous_versions",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "previous_versions": 2
      }
    ],
    "answer": "2 previous versions can be traced back from RHEL version 7.3."
  },
  {
    "question": "Which network IP can interface 10.4.8.254 connect to?",
    "cypher": "MATCH (i:Interface {ip: '10.4.8.254'})-[:CONNECTS]->(n:Network) RETURN n.ip AS network_ip LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Count all apps that are instances of software with dependencies on postgres",
    "cypher": "MATCH (app:Application)-[:INSTANCE]->(s:Software)-[:DEPENDS_ON*1..2]->(postgres:Software {name: 'postgres'}) RETURN COUNT(DISTINCT app) AS postgres_dependent_apps",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "postgres_dependent_apps": 0
      }
    ],
    "answer": "Based on the query result, there are 0 apps that are instances of software with dependencies on postgres."
  },
  {
    "question": "What's the highest rack number in zone 4 of the datacenter?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(r:Rack {zone: 4}) WHERE r.rack IS NOT NULL RETURN MAX(r.rack) AS highest_rack",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_rack": 10
      }
    ],
    "answer": "The highest rack number in zone 4 of the datacenter is 10."
  },
  {
    "question": "How many software packages serve as bridges between php and couchbase dependencies?",
    "cypher": "MATCH (php:Software {name: 'php'})<-[:DEPENDS_ON]-(bridge:Software)-[:DEPENDS_ON]->(cb:Software {name: 'couchbase'}) RETURN COUNT(DISTINCT bridge) AS bridge_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "bridge_count": 1
      }
    ],
    "answer": "1 software package serves as a bridge between PHP and Couchbase dependencies."
  },
  {
    "question": "Tell me the name of the OS running on machine DC1-RCK-1-1-M-1",
    "cypher": "MATCH (m:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(os:OS) RETURN os.name AS os_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "os_name": "7.1"
      }
    ],
    "answer": "The operating system running on machine DC1-RCK-1-1-M-1 is version 7.1."
  },
  {
    "question": "How many distinct ports are being listened to by processes in rack DC1-RCK-2-9?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-2-9'})-[:HOLDS]->(m:Machine)-[:RUNS]->(p:Process)-[:LISTENS]->(port:Port) RETURN COUNT(DISTINCT port) AS listening_ports",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "listening_ports": 913
      }
    ],
    "answer": "There are 913 distinct ports being listened to by processes in rack DC1-RCK-2-9."
  },
  {
    "question": "Find the earliest startTime among OS instances running RHEL versions",
    "cypher": "MATCH (os:OS)-[:INSTANCE]->(v:Version)<-[:VERSION]-(s:Software {name: 'RHEL'}) WHERE os.startTime IS NOT NULL RETURN MIN(os.startTime) AS earliest_boot",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_boot": 1605733619064
      }
    ],
    "answer": "The earliest startTime for an OS instance running a RHEL version is 1605733619064 milliseconds since the Unix epoch (which translates to November 18, 2020, at approximately 20:20:19 UTC)."
  },
  {
    "question": "How many paths connect webserver applications to port 443 through listening relationships?",
    "cypher": "MATCH path = (app:Application {name: 'webserver'})-[:LISTENS]->(p:Port {port: 443}) RETURN COUNT(path) AS connection_paths",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connection_paths": 1658
      }
    ],
    "answer": "There are 1,658 paths connecting webserver applications to port 443 through listening relationships."
  },
  {
    "question": "What's the rack name that holds the switch with IP 10.1.1?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(s:Switch {ip: '10.1.1'}) RETURN r.name AS rack_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "rack_name": "DC1-RCK-1-1"
      }
    ],
    "answer": "The rack name that holds the switch with IP 10.1.1 is DC1-RCK-1-1."
  },
  {
    "question": "Count machines runing applications that transitively depend on version 9.4",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(app:Application)-[:DEPENDS_ON*1..3]->(v:Version {name: '9.4'}) RETURN COUNT(DISTINCT m) AS machine_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "machine_count": 0
      }
    ],
    "answer": "There are 0 machines running applications that transitively depend on version 9.4."
  },
  {
    "question": "What's the maximum zone number among networks routing through egress interfaces?",
    "cypher": "MATCH (e:Egress)-[:ROUTES]->(i:Interface)<-[:ROUTES]-(n:Network) WHERE n.zone IS NOT NULL RETURN MAX(n.zone) AS highest_zone",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_zone": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many interconnected interface pairs exist in the entire infrastructure?",
    "cypher": "MATCH (i1:Interface)-[:CONNECTS]->(i2:Interface) RETURN COUNT(DISTINCT i1) AS interface_pairs",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interface_pairs": 8000
      }
    ],
    "answer": "Based on the query result, there are 8,000 distinct interconnected interface pairs in the infrastructure."
  },
  {
    "question": "Which datacenter location contains machines running java dependent webapps?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine)-[:RUNS]->(app:Application {name: 'webapp'})-[:INSTANCE]->(s:Software)-[:DEPENDS_ON]->(java:Software {name: 'java'}) RETURN dc.location AS datacenter_location LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The datacenter location containing machines running Java-dependent webapps is Iceland, Reykjavik."
  },
  {
    "question": "What's the average disk size across all machine types used in zone 1 kit?",
    "cypher": "MATCH (r:Rack {zone: 1})-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type) WHERE t.disk IS NOT NULL RETURN AVG(t.disk) AS average_disk",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_disk": 61.86
      }
    ],
    "answer": "The average disk size across all machine types used in zone 1 is 61.86 GB."
  },
  {
    "question": "What's the unit price of Chai?",
    "cypher": "MATCH (p:Product {productName: 'Chai'}) RETURN p.unitPrice AS product_price",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "product_price": 18.0
      }
    ],
    "answer": "The unit price of Chai is $18.00."
  },
  {
    "question": "How many units of Sasquatch Ale are in stock?",
    "cypher": "MATCH (p:Product {productName: 'Sasquatch Ale'}) RETURN p.unitsInStock AS units_in_stock",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "units_in_stock": 111
      }
    ],
    "answer": "There are 111 units of Sasquatch Ale in stock."
  },
  {
    "question": "What's the contact name for Exotic Liquids?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'}) RETURN s.contactName AS contact_name",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "contact_name": "Charlotte Cooper"
      }
    ],
    "answer": "The contact name for Exotic Liquids is Charlotte Cooper."
  },
  {
    "question": "Tell me the freight cost for order 10317",
    "cypher": "MATCH (o:Order {orderID: '10317'}) RETURN o.freight AS freight_cost",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "freight_cost": "12.69"
      }
    ],
    "answer": "The freight cost for order 10317 is $12.69."
  },
  {
    "question": "What city is Lonsome Pine Restaurant located in?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'}) RETURN c.city AS customer_city",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_city": "Portland"
      }
    ],
    "answer": "Lonesome Pine Restaurant is located in Portland."
  },
  {
    "question": "What's the quantity per unit for Mozzarella di Giovanni?",
    "cypher": "MATCH (p:Product {productName: 'Mozzarella di Giovanni'}) RETURN p.quantityPerUnit AS quantity_per_unit",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "quantity_per_unit": "24 - 200 g pkgs."
      }
    ],
    "answer": "The quantity per unit for Mozzarella di Giovanni is 24 - 200 g pkgs."
  },
  {
    "question": "Is R\u00f6ssle Sauerkraut discontinued?",
    "cypher": "MATCH (p:Product {productName: 'R\u00f6ssle Sauerkraut'}) RETURN p.discontinued AS is_discontinued",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "is_discontinued": true
      }
    ],
    "answer": "Yes, R\u00f6ssle Sauerkraut is discontinued."
  },
  {
    "question": "What's the phone number of White Clover Markets?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'}) RETURN c.phone AS phone_number",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "phone_number": "(206) 555-4112"
      }
    ],
    "answer": "The phone number for White Clover Markets is (206) 555-4112."
  },
  {
    "question": "Tell me the description of the Beverages category",
    "cypher": "MATCH (c:Category {categoryName: 'Beverages'}) RETURN c.description AS category_description",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_description": "Soft drinks, coffees, teas, beers, and ales"
      }
    ],
    "answer": "The Beverages category includes soft drinks, coffees, teas, beers, and ales."
  },
  {
    "question": "What's Ernst Handel's country?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'}) RETURN c.country AS customer_country",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_country": "Austria"
      }
    ],
    "answer": "Ernst Handel's country is Austria."
  },
  {
    "question": "How many products does Exotic Liquids supply?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product) RETURN COUNT(p) AS total_products",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_products": 3
      }
    ],
    "answer": "Exotic Liquids supplies 3 products."
  },
  {
    "question": "What's the category of Chai?",
    "cypher": "MATCH (p:Product {productName: 'Chai'})-[:PART_OF]->(c:Category) RETURN c.categoryName AS category_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_name": "Beverages"
      }
    ],
    "answer": "Chai belongs to the 'Beverages' category."
  },
  {
    "question": "How many orders has Lonesome Pine Restaurant made?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order) RETURN COUNT(o) AS total_orders",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_orders": 8
      }
    ],
    "answer": "Lonesome Pine Restaurant has made 8 orders."
  },
  {
    "question": "What company supplies Sasquatch Ale?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Sasquatch Ale'}) RETURN s.companyName AS supplier_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_name": "Bigfoot Breweries"
      }
    ],
    "answer": "Bigfoot Breweries supplies Sasquatch Ale."
  },
  {
    "question": "How many products are in order 11066?",
    "cypher": "MATCH (o:Order {orderID: '11066'})-[:ORDERS]->(p:Product) RETURN COUNT(p) AS product_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "product_count": 3
      }
    ],
    "answer": "There are 3 products in order 11066."
  },
  {
    "question": "What's the highest priced product in the Beverages category?",
    "cypher": "MATCH (c:Category {categoryName: 'Beverages'})<-[:PART_OF]-(p:Product) WHERE p.unitPrice IS NOT NULL RETURN MAX(p.unitPrice) AS highest_price",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_price": 263.5
      }
    ],
    "answer": "The highest priced product in the Beverages category is $263.50."
  },
  {
    "question": "How many different customers ordered Mozzarella di Giovani?",
    "cypher": "MATCH (p:Product {productName: 'Mozzarella di Giovanni'})<-[:ORDERS]-(o:Order)<-[:PURCHASED]-(c:Customer) RETURN COUNT(DISTINCT c) AS unique_customers",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "unique_customers": 33
      }
    ],
    "answer": "33 different customers ordered Mozzarella di Giovani."
  },
  {
    "question": "What's the reorder level of Teatime Chocolate Biscuits?",
    "cypher": "MATCH (p:Product {productName: 'Teatime Chocolate Biscuits'}) RETURN p.reorderLevel AS reorder_level",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "reorder_level": 5
      }
    ],
    "answer": "The reorder level of Teatime Chocolate Biscuits is 5."
  },
  {
    "question": "What's the ship city for order 10248?",
    "cypher": "MATCH (o:Order {orderID: '10248'}) RETURN o.shipCity AS ship_city",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ship_city": "Reims"
      }
    ],
    "answer": "The ship city for order 10248 is Reims."
  },
  {
    "question": "How many orders shipped to Germany?",
    "cypher": "MATCH (o:Order {shipCountry: 'Germany'}) RETURN COUNT(o) AS total_orders",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_orders": 122
      }
    ],
    "answer": "122 orders were shipped to Germany."
  },
  {
    "question": "What's the total quantity of Chai ordered in order 10317?",
    "cypher": "MATCH (o:Order {orderID: '10317'})-[r:ORDERS]->(p:Product {productName: 'Chai'}) RETURN r.quantity AS order_quantity",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "order_quantity": 20
      }
    ],
    "answer": "The total quantity of Chai ordered in order 10317 is 20."
  },
  {
    "question": "Tell me Alfreds Futerkiste's contact title",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'}) RETURN c.contactTitle AS contact_title",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "contact_title": "Sales Representative"
      }
    ],
    "answer": "The contact title for Alfreds Futterkiste is Sales Representative."
  },
  {
    "question": "What's the average unit price of products supplied by Exotic Liquids?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product) WHERE p.unitPrice IS NOT NULL RETURN AVG(p.unitPrice) AS average_price",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_price": 15.666666666666666
      }
    ],
    "answer": "The average unit price of products supplied by Exotic Liquids is $15.67."
  },
  {
    "question": "How many units on order for Chai?",
    "cypher": "MATCH (p:Product {productName: 'Chai'}) RETURN p.unitsOnOrder AS units_on_order",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "units_on_order": 0
      }
    ],
    "answer": "There are 0 units of Chai currently on order."
  },
  {
    "question": "What's the postal code of Simons bistro?",
    "cypher": "MATCH (c:Customer {companyName: 'Simons bistro'}) RETURN c.postalCode AS postal_code",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "postal_code": "1734"
      }
    ],
    "answer": "The postal code of Simons bistro is 1734."
  },
  {
    "question": "How many stuff are in the Beverages category?",
    "cypher": "MATCH (c:Category {categoryName: 'Beverages'})<-[:PART_OF]-(p:Product) RETURN COUNT(p) AS total_products",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_products": 12
      }
    ],
    "answer": "There are 12 products in the Beverages category."
  },
  {
    "question": "What's the customer ID of Ernst Handel?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'}) RETURN c.customerID AS customer_id",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_id": "ERNSH"
      }
    ],
    "answer": "The customer ID of Ernst Handel is ERNSH."
  },
  {
    "question": "Which city does Exotic Liquids operate from?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'}) RETURN s.city AS supplier_city",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_city": "London"
      }
    ],
    "answer": "Exotic Liquids operates from London."
  },
  {
    "question": "How many orders contain Sasquatch Ale?",
    "cypher": "MATCH (p:Product {productName: 'Sasquatch Ale'})<-[:ORDERS]-(o:Order) RETURN COUNT(DISTINCT o) AS order_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "order_count": 19
      }
    ],
    "answer": "19 orders contain Sasquatch Ale."
  },
  {
    "question": "What's the category ID for beverages?",
    "cypher": "MATCH (c:Category {categoryName: 'Beverages'}) RETURN c.categoryID AS category_id",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "grammar",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_id": "1"
      }
    ],
    "answer": "The category ID for Beverages is 1."
  },
  {
    "question": "Find the supplier ID for Chai",
    "cypher": "MATCH (p:Product {productName: 'Chai'}) RETURN p.supplierID AS supplier_id",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_id": "1"
      }
    ],
    "answer": "The supplier ID for Chai is 1."
  },
  {
    "question": "What companys ordered products from Exotic Liquids?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(o:Order)<-[:PURCHASED]-(c:Customer) RETURN COUNT(DISTINCT c) AS customer_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "grammar",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_count": 49
      }
    ],
    "answer": "49 different companies ordered products from Exotic Liquids."
  },
  {
    "question": "How many categories exist in total?",
    "cypher": "MATCH (c:Category) RETURN COUNT(c) AS total_categories",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_categories": 8
      }
    ],
    "answer": "There are 8 categories in total."
  },
  {
    "question": "What's the ship name for order 10990?",
    "cypher": "MATCH (o:Order {orderID: '10990'}) RETURN o.shipName AS ship_name",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ship_name": "Ernst Handel"
      }
    ],
    "answer": "The ship name for order 10990 is Ernst Handel."
  },
  {
    "question": "Tell me which category Mozzarella di Giovanni belongs to",
    "cypher": "MATCH (p:Product {productName: 'Mozzarella di Giovanni'})-[:PART_OF]->(c:Category) RETURN c.categoryName AS category_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_name": "Dairy Products"
      }
    ],
    "answer": "Mozzarella di Giovanni belongs to the Dairy Products category."
  },
  {
    "question": "How many orders did White Clover Markets place?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order) RETURN COUNT(o) AS total_orders",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_orders": 14
      }
    ],
    "answer": "White Clover Markets placed 14 orders."
  },
  {
    "question": "What's the total number of products ordered by Vins et alcools Chevalier?",
    "cypher": "MATCH (c:Customer {companyName: 'Vins et alcools Chevalier'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) RETURN COUNT(p) AS total_products",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_products": 10
      }
    ],
    "answer": "Vins et alcools Chevalier has ordered a total of 10 products."
  },
  {
    "question": "Find the maximum freight cost among orders shipped to USA",
    "cypher": "MATCH (o:Order {shipCountry: 'USA'}) WHERE o.freight IS NOT NULL RETURN MAX(o.freight) AS highest_freight",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_freight": "98.03"
      }
    ],
    "answer": "The maximum freight cost for orders shipped to the USA is $98.03."
  },
  {
    "question": "What's the contact person's name at White Clover Markets?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'}) RETURN c.contactName AS contact_name",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "contact_name": "Karl Jablonski"
      }
    ],
    "answer": "The contact person at White Clover Markets is Karl Jablonski."
  },
  {
    "question": "How many orders shipped via shipVia 3?",
    "cypher": "MATCH (o:Order {shipVia: '3'}) RETURN COUNT(o) AS total_orders",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_orders": 255
      }
    ],
    "answer": "255 orders were shipped via shipVia 3."
  },
  {
    "question": "What folks work at Exotic Liquids as contacts?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'}) RETURN s.contactName AS contact_name",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "contact_name": "Charlotte Cooper"
      }
    ],
    "answer": "Charlotte Cooper works as a contact at Exotic Liquids."
  },
  {
    "question": "How many different products has Ernst Handel ordered?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) RETURN COUNT(DISTINCT p) AS unique_products",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "unique_products": 56
      }
    ],
    "answer": "Ernst Handel has ordered 56 different products."
  },
  {
    "question": "What's the discount on Sasquach Ale in order 10990?",
    "cypher": "MATCH (o:Order {orderID: '10990'})-[r:ORDERS]->(p:Product {productName: 'Sasquatch Ale'}) RETURN r.discount AS order_discount",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "order_discount": "0.15"
      }
    ],
    "answer": "The discount on Sasquatch Ale in order 10990 is 0.15 or 15%."
  },
  {
    "question": "Which categories do products supplied by Exotic Liquids belong to?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)-[:PART_OF]->(c:Category) RETURN COUNT(DISTINCT c) AS unique_categories",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "unique_categories": 2
      }
    ],
    "answer": "Products supplied by Exotic Liquids belong to 2 unique categories."
  },
  {
    "question": "Tell me how many suppliers provide beverages stuff",
    "cypher": "MATCH (c:Category {categoryName: 'Beverages'})<-[:PART_OF]-(p:Product)<-[:SUPPLIES]-(s:Supplier) RETURN COUNT(DISTINCT s) AS supplier_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_count": 8
      }
    ],
    "answer": "8 suppliers provide beverages products."
  },
  {
    "question": "What's the sum of all quantities ordered for Chai?",
    "cypher": "MATCH (p:Product {productName: 'Chai'})<-[r:ORDERS]-(o:Order) RETURN SUM(r.quantity) AS total_quantity",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_quantity": 828
      }
    ],
    "answer": "The total quantity of Chai ordered is 828."
  },
  {
    "question": "How many orders were placed by customerss from USA?",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(o:Order) RETURN COUNT(o) AS total_orders",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "grammar",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_orders": 122
      }
    ],
    "answer": "122 orders were placed by customers from the USA."
  },
  {
    "question": "What city is order 10643 being shipped to?",
    "cypher": "MATCH (o:Order {orderID: '10643'}) RETURN o.shipCity AS ship_city",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ship_city": "Berlin"
      }
    ],
    "answer": "Order 10643 is being shipped to Berlin."
  },
  {
    "question": "Find out how many beverage products Lonesome Pine Resturant has ordered",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN COUNT(p) AS beverage_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "beverage_count": 4
      }
    ],
    "answer": "Lonesome Pine Restaurant has ordered 4 beverage products."
  },
  {
    "question": "What's the minimum unit price among all products?",
    "cypher": "MATCH (p:Product) WHERE p.unitPrice IS NOT NULL RETURN MIN(p.unitPrice) AS lowest_price",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_price": 2.5
      }
    ],
    "answer": "The minimum unit price among all products is $2.50."
  },
  {
    "question": "How many different products has White Clover Markets ordered through all their purchases?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) RETURN COUNT(DISTINCT p) AS total_products",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_products": 32
      }
    ],
    "answer": "White Clover Markets has ordered 32 different products through all their purchases."
  },
  {
    "question": "What's the total quantity of Chai ordered by customers in the USA?",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(o:Order)-[r:ORDERS]->(p:Product {productName: 'Chai'}) RETURN SUM(r.quantity) AS total_quantity",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_quantity": 180
      }
    ],
    "answer": "Customers in the USA have ordered a total of 180 units of Chai."
  },
  {
    "question": "What's the highest unit price among products supplied by companies in the UK?",
    "cypher": "MATCH (s:Supplier {country: 'UK'})-[:SUPPLIES]->(p:Product) WHERE p.unitPrice IS NOT NULL RETURN MAX(p.unitPrice) AS highest_price",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_price": 19.0
      }
    ],
    "answer": "The highest unit price among products supplied by companies in the UK is \u00a319.00."
  },
  {
    "question": "Tell me the category name of Sasquatch Ale",
    "cypher": "MATCH (p:Product {productName: 'Sasquatch Ale'})-[:PART_OF]->(c:Category) RETURN c.categoryName AS category_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_name": "Beverages"
      }
    ],
    "answer": "The category of Sasquatch Ale is Beverages."
  },
  {
    "question": "How many orders contain products from the same category as Teatime Chocolate Biscuits?",
    "cypher": "MATCH (p1:Product {productName: 'Teatime Chocolate Biscuits'})-[:PART_OF]->(c:Category)<-[:PART_OF]-(p2:Product)<-[:ORDERS]-(o:Order) RETURN COUNT(DISTINCT o) AS order_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "order_count": 269
      }
    ],
    "answer": "269 orders contain products from the same category as Teatime Chocolate Biscuits."
  },
  {
    "question": "What's the company name of the supplier that provides Chai?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Chai'}) RETURN s.companyName AS supplier_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_name": "Exotic Liquids"
      }
    ],
    "answer": "The supplier that provides Chai is Exotic Liquids."
  },
  {
    "question": "How many products connect Exotic Liquids to orders shipped to the USA?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(o:Order {shipCountry: 'USA'}) RETURN COUNT(DISTINCT p) AS connecting_products",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_products": 3
      }
    ],
    "answer": "3 products from Exotic Liquids connect to orders shipped to the USA."
  },
  {
    "question": "What's the average freight cost for orders containing beverages?",
    "cypher": "MATCH (c:Category {categoryName: 'Beverages'})<-[:PART_OF]-(p:Product)<-[:ORDERS]-(o:Order) WHERE o.freight IS NOT NULL RETURN AVG(TOFLOAT(o.freight)) AS average_freight",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_freight": 98.72952970297017
      }
    ],
    "answer": "The average freight cost for orders containing beverages is $98.73."
  },
  {
    "question": "What city is Lonesome Pine Resturant located in?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'}) RETURN c.city AS customer_city",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_city": "Portland"
      }
    ],
    "answer": "Lonesome Pine Restaurant is located in Portland."
  },
  {
    "question": "How many suppliers provide products that Ernst Handel has ordered?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier) RETURN COUNT(DISTINCT s) AS supplier_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_count": 27
      }
    ],
    "answer": "Ernst Handel has ordered products from 27 distinct suppliers."
  },
  {
    "question": "What's the lowest reorder level among stuff in the Beverages category?",
    "cypher": "MATCH (c:Category {categoryName: 'Beverages'})<-[:PART_OF]-(p:Product) WHERE p.reorderLevel IS NOT NULL RETURN MIN(p.reorderLevel) AS lowest_reorder",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_reorder": 0
      }
    ],
    "answer": "The lowest reorder level for products in the Beverages category is 0."
  },
  {
    "question": "Find the contact title of the person at White Clover Markets",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'}) RETURN c.contactTitle AS contact_title",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "contact_title": "Owner"
      }
    ],
    "answer": "The contact title for the person at White Clover Markets is Owner."
  },
  {
    "question": "How many different categorys have products ordered by Alfreds Futterkiste?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category) RETURN COUNT(DISTINCT cat) AS category_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_count": 5
      }
    ],
    "answer": "Alfreds Futterkiste has ordered products from 5 different categories."
  },
  {
    "question": "What's the highest quantity ordered in a single order for products from Exotic Liquids?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[r:ORDERS]-(o:Order) WHERE r.quantity IS NOT NULL RETURN MAX(r.quantity) AS max_quantity",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_quantity": 100
      }
    ],
    "answer": "The highest quantity ordered in a single order for products from Exotic Liquids is 100 units."
  },
  {
    "question": "Tell me the ship country for order 10248",
    "cypher": "MATCH (o:Order {orderID: '10248'}) RETURN o.shipCountry AS ship_country",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ship_country": "France"
      }
    ],
    "answer": "The ship country for order 10248 is France."
  },
  {
    "question": "How many orders connect customers in Germany to products in the Beverages category?",
    "cypher": "MATCH (c:Customer {country: 'Germany'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN COUNT(DISTINCT o) AS connecting_orders",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_orders": 51
      }
    ],
    "answer": "There are 51 distinct orders connecting German customers to Beverages category products."
  },
  {
    "question": "What's the total number of units in stock for all products supplied by companys in the UK?",
    "cypher": "MATCH (s:Supplier {country: 'UK'})-[:SUPPLIES]->(p:Product) RETURN SUM(p.unitsInStock) AS total_units",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_units": 69
      }
    ],
    "answer": "The total number of units in stock for products supplied by companies in the UK is 69 units."
  },
  {
    "question": "Which product name has the highest unit price among items ordered by Simons bistro?",
    "cypher": "MATCH (c:Customer {companyName: 'Simons bistro'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS product_name ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "product_name": "C\u00f4te de Blaye"
      }
    ],
    "answer": "The product with the highest unit price ordered by Simons bistro is C\u00f4te de Blaye."
  },
  {
    "question": "What's the phone number of the supplier for Mozzarella di Giovanni?",
    "cypher": "MATCH (p:Product {productName: 'Mozzarella di Giovanni'})<-[:SUPPLIES]-(s:Supplier) RETURN s.phone AS supplier_phone",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_phone": "Italy"
      }
    ],
    "answer": "The supplier's phone number is Italy."
  },
  {
    "question": "How many products link order 10317 to the Beverages category?",
    "cypher": "MATCH (o:Order {orderID: '10317'})-[:ORDERS]->(p:Product)-[:PART_OF]->(c:Category {categoryName: 'Beverages'}) RETURN COUNT(DISTINCT p) AS product_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "product_count": 1
      }
    ],
    "answer": "1 product links order 10317 to the Beverages category."
  },
  {
    "question": "What's the average unit price of discontinued products ordered by firms in the USA?",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product {discontinued: true}) WHERE p.unitPrice IS NOT NULL RETURN AVG(p.unitPrice) AS avg_price",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "avg_price": 47.88410256410257
      }
    ],
    "answer": "The average unit price of discontinued products ordered by firms in the USA is $47.88."
  },
  {
    "question": "Find the earliest order date among orders containing R\u00f6ssle Sauerkraut",
    "cypher": "MATCH (o:Order)-[:ORDERS]->(p:Product {productName: 'R\u00f6ssle Sauerkraut'}) WHERE o.orderDate IS NOT NULL RETURN o.orderDate AS earliest_date ORDER BY o.orderDate ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_date": "1996-08-09 00:00:00.000"
      }
    ],
    "answer": "The earliest order date for R\u00f6ssle Sauerkraut is August 9, 1996."
  },
  {
    "question": "What category does Chai belong to?",
    "cypher": "MATCH (p:Product {productName: 'Chai'})-[:PART_OF]->(c:Category) RETURN c.categoryName AS category_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_name": "Beverages"
      }
    ],
    "answer": "Chai belongs to the Beverages category."
  },
  {
    "question": "How many suppliers are connected to Ernst Handel through product orders?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier) RETURN COUNT(DISTINCT s) AS supplier_connections",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_connections": 27
      }
    ],
    "answer": "Ernst Handel is connected to 27 distinct suppliers through product orders."
  },
  {
    "question": "What's the sum of all quantities ordered for Sasquatch Ale across all orders?",
    "cypher": "MATCH (o:Order)-[r:ORDERS]->(p:Product {productName: 'Sasquatch Ale'}) RETURN SUM(r.quantity) AS total_quantity",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_quantity": 506
      }
    ],
    "answer": "The total quantity of Sasquatch Ale ordered across all orders is 506."
  },
  {
    "question": "Tell me the ship via method with the lowest freight cost for orders to Germany",
    "cypher": "MATCH (o:Order {shipCountry: 'Germany'}) WHERE o.freight IS NOT NULL AND o.shipVia IS NOT NULL RETURN o.shipVia AS shipping_method ORDER BY TOFLOAT(o.freight) ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shipping_method": "1"
      }
    ],
    "answer": "Based on the query result, the ship via method with the lowest freight cost for orders to Germany is shipping method '1'."
  },
  {
    "question": "What's the address of the customer who ordered product ID 72?",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product {productID: '72'}) RETURN c.address AS customer_address LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_address": "Vinb\u00e6ltet 34"
      }
    ],
    "answer": "The address of the customer who ordered product ID 72 is Vinb\u00e6ltet 34."
  },
  {
    "question": "How many different products connect Exoctic Liquids to customers in Germany?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(o:Order)<-[:PURCHASED]-(c:Customer {country: 'Germany'}) RETURN COUNT(DISTINCT p) AS connecting_products",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_products": 3
      }
    ],
    "answer": "3 different products from Exotic Liquids connect to customers in Germany."
  },
  {
    "question": "What's the total number of orders that contain at least one beverage product?",
    "cypher": "MATCH (c:Category {categoryName: 'Beverages'})<-[:PART_OF]-(p:Product)<-[:ORDERS]-(o:Order) RETURN COUNT(DISTINCT o) AS order_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "order_count": 354
      }
    ],
    "answer": "There are 354 orders that contain at least one beverage product."
  },
  {
    "question": "Find the maximum units on order for products supplied by UK-based suppliers",
    "cypher": "MATCH (s:Supplier {country: 'UK'})-[:SUPPLIES]->(p:Product) WHERE p.unitsOnOrder IS NOT NULL RETURN MAX(p.unitsOnOrder) AS max_units_ordered",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_units_ordered": 70
      }
    ],
    "answer": "The maximum number of units on order for products supplied by UK-based suppliers is 70."
  },
  {
    "question": "What's the contact name at Simons bistro?",
    "cypher": "MATCH (c:Customer {companyName: 'Simons bistro'}) RETURN c.contactName AS contact_name",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "contact_name": "Jytte Petersen"
      }
    ],
    "answer": "The contact name at Simons bistro is Jytte Petersen."
  },
  {
    "question": "How many orders shipped to Seattle contain products from multiple categories?",
    "cypher": "MATCH (o:Order {shipCity: 'Seattle'})-[:ORDERS]->(p:Product)-[:PART_OF]->(c:Category) WITH o, COUNT(DISTINCT c) AS category_count WHERE category_count > 1 RETURN COUNT(o) AS multi_category_orders",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "multi_category_orders": 11
      }
    ],
    "answer": "11 orders shipped to Seattle contain products from multiple categories."
  },
  {
    "question": "What's the average discount applied to orders from folks in Austria?",
    "cypher": "MATCH (c:Customer {country: 'Austria'})-[:PURCHASED]->(o:Order)-[r:ORDERS]->(p:Product) WHERE r.discount IS NOT NULL RETURN AVG(TOFLOAT(r.discount)) AS avg_discount",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "avg_discount": 0.06880000000000004
      }
    ],
    "answer": "The average discount applied to orders from customers in Austria is approximately 6.88%."
  },
  {
    "question": "Which employee ID processed the most recent order for Lonesome Pine Restaurant?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order) WHERE o.orderDate IS NOT NULL RETURN o.employeeID AS employee_id ORDER BY o.orderDate DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "employee_id": "4"
      }
    ],
    "answer": "Employee ID 4 processed the most recent order for Lonesome Pine Restaurant."
  },
  {
    "question": "Tell me the quantity per unit for Teatime Choclate Biscuits",
    "cypher": "MATCH (p:Product {productName: 'Teatime Chocolate Biscuits'}) RETURN p.quantityPerUnit AS quantity_per_unit",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "quantity_per_unit": "10 boxes x 12 pieces"
      }
    ],
    "answer": "The quantity per unit for Teatime Chocolate Biscuits is 10 boxes x 12 pieces."
  },
  {
    "question": "How many categories have products that were ordered by both White Clover Markets and Ernst Handel?",
    "cypher": "MATCH (c1:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o1:Order)-[:ORDERS]->(p1:Product)-[:PART_OF]->(cat:Category)<-[:PART_OF]-(p2:Product)<-[:ORDERS]-(o2:Order)<-[:PURCHASED]-(c2:Customer {companyName: 'Ernst Handel'}) RETURN COUNT(DISTINCT cat) AS shared_categories",
    "query_type": "Existence Verification",
    "complexity": "5-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_categories": 8
      }
    ],
    "answer": "8 categories have products that were ordered by both White Clover Markets and Ernst Handel."
  },
  {
    "question": "What's the total value of all Chai orders (quantity times unit price)?",
    "cypher": "MATCH (o:Order)-[r:ORDERS]->(p:Product {productName: 'Chai'}) RETURN SUM(r.quantity * TOFLOAT(r.unitPrice)) AS total_value",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_value": 14277.6
      }
    ],
    "answer": "The total value of all Chai orders is $14,277.60."
  },
  {
    "question": "Find the ship postal code with the highest freight cost",
    "cypher": "MATCH (o:Order) WHERE o.freight IS NOT NULL AND o.shipPostalCode IS NOT NULL RETURN o.shipPostalCode AS postal_code ORDER BY TOFLOAT(o.freight) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "postal_code": "01307"
      }
    ],
    "answer": "The ship postal code with the highest freight cost is 01307."
  },
  {
    "question": "What's the fax number of the firm that supplies Sasquatch Ale?",
    "cypher": "MATCH (p:Product {productName: 'Sasquatch Ale'})<-[:SUPPLIES]-(s:Supplier) RETURN s.fax AS supplier_fax",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_fax": "NULL"
      }
    ],
    "answer": "The fax number for the supplier of Sasquatch Ale is not available (NULL)."
  },
  {
    "question": "How many products connect customers in France to suppliers in the UK?",
    "cypher": "MATCH (c:Customer {country: 'France'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier {country: 'UK'}) RETURN COUNT(DISTINCT p) AS connecting_products",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_products": 2
      }
    ],
    "answer": "2 products connect customers in France to suppliers in the UK."
  },
  {
    "question": "What's the count of non-discontinued products in orders shipped via method 1?",
    "cypher": "MATCH (o:Order {shipVia: '1'})-[:ORDERS]->(p:Product {discontinued: false}) RETURN COUNT(DISTINCT p) AS active_products",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "active_products": 69
      }
    ],
    "answer": "There are 69 non-discontinued products that were shipped via shipping method 1."
  },
  {
    "question": "Which product has the minimum reorder level among items supplied by Exotic Liqiuds?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product) WHERE p.reorderLevel IS NOT NULL RETURN p.productName AS product_name ORDER BY p.reorderLevel ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "product_name": "Chai"
      }
    ],
    "answer": "Chai is the product with the minimum reorder level among items supplied by Exotic Liquids."
  },
  {
    "question": "What region is associated with customer ID ALFKI?",
    "cypher": "MATCH (c:Customer {customerID: 'ALFKI'}) RETURN c.region AS customer_region",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_region": "NULL"
      }
    ],
    "answer": "The customer with ID ALFKI does not have a specified region (NULL)."
  },
  {
    "question": "How many suppliers connect to Alfreds Futerkiste through the products they've ordered?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier) RETURN COUNT(DISTINCT s) AS supplier_connections",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_connections": 10
      }
    ],
    "answer": "10 suppliers connect to Alfreds Futerkiste through the products they've ordered."
  },
  {
    "question": "What's the sum of freight costs for all orders containing products from category ID 1?",
    "cypher": "MATCH (c:Category {categoryID: '1'})<-[:PART_OF]-(p:Product)<-[:ORDERS]-(o:Order) WHERE o.freight IS NOT NULL RETURN SUM(TOFLOAT(o.freight)) AS total_freight",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_freight": 39886.73000000001
      }
    ],
    "answer": "The total freight cost for all orders containing products from category ID 1 is $39,886.73."
  },
  {
    "question": "Find the latest required date for orders that include Mozzarella di Giovanni",
    "cypher": "MATCH (o:Order)-[:ORDERS]->(p:Product {productName: 'Mozzarella di Giovanni'}) WHERE o.requiredDate IS NOT NULL RETURN o.requiredDate AS latest_date ORDER BY o.requiredDate DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "latest_date": "1998-05-12 00:00:00.000"
      }
    ],
    "answer": "The latest required date for orders that include Mozzarella di Giovanni is May 12, 1998."
  },
  {
    "question": "What's the description of the category that R\u00f6ssle Sauerkraut belongs to?",
    "cypher": "MATCH (p:Product {productName: 'R\u00f6ssle Sauerkraut'})-[:PART_OF]->(c:Category) RETURN c.description AS category_description",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_description": "Dried fruit and bean curd"
      }
    ],
    "answer": "The category description for R\u00f6ssle Sauerkraut is \"Dried fruit and bean curd\"."
  },
  {
    "question": "How many distinct shipping cities receive orders containing stuff from UK suppliers?",
    "cypher": "MATCH (s:Supplier {country: 'UK'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(o:Order) WHERE o.shipCity IS NOT NULL RETURN COUNT(DISTINCT o.shipCity) AS city_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "city_count": 43
      }
    ],
    "answer": "Based on the query result, 43 distinct shipping cities receive orders containing products from UK suppliers."
  },
  {
    "question": "What's the mean quantity ordered per order line for products in the Beverages category?",
    "cypher": "MATCH (c:Category {categoryName: 'Beverages'})<-[:PART_OF]-(p:Product)<-[r:ORDERS]-(o:Order) WHERE r.quantity IS NOT NULL RETURN AVG(r.quantity) AS average_quantity",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_quantity": 23.59405940594058
      }
    ],
    "answer": "The mean quantity ordered per order line for products in the Beverages category is approximately 23.6 units."
  },
  {
    "question": "How many different products has White Clover Markets ordered through all their purchases?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) RETURN COUNT(DISTINCT p) AS total_products",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_products": 32
      }
    ],
    "answer": "White Clover Markets has ordered 32 different products."
  },
  {
    "question": "What's the total quantity of Sasquatch Ale ordered by customers in the USA?",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(o:Order)-[:ORDERS {productID: '34'}]->(p:Product {productName: 'Sasquatch Ale'}) RETURN SUM(o.quantity) AS total_quantity",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_quantity": 0
      }
    ],
    "answer": "Based on the query result, the total quantity of Sasquatch Ale ordered by customers in the USA is 0."
  },
  {
    "question": "What's the company name of the supplier that provides Chai?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Chai'}) RETURN s.companyName AS supplier_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_name": "Exotic Liquids"
      }
    ],
    "answer": "The supplier of Chai is Exotic Liquids."
  },
  {
    "question": "How many customers have ordered products from the Beverages category?",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN COUNT(DISTINCT c) AS customer_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_count": 83
      }
    ],
    "answer": "83 customers have ordered products from the Beverages category."
  },
  {
    "question": "What's the highest unit price among products supplied by Exotic Liquids?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product) WHERE p.unitPrice IS NOT NULL RETURN MAX(p.unitPrice) AS highest_price",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_price": 19.0
      }
    ],
    "answer": "The highest unit price among products supplied by Exotic Liquids is $19.00."
  },
  {
    "question": "Tell me the city where Ernst Handel is located?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'}) RETURN c.city AS customer_city",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_city": "Graz"
      }
    ],
    "answer": "Ernst Handel is located in the city of Graz."
  },
  {
    "question": "How many orders shipped to Germany contain products from suppliers based in the UK?",
    "cypher": "MATCH (s:Supplier {country: 'UK'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(o:Order {shipCountry: 'Germany'}) RETURN COUNT(DISTINCT o) AS order_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "order_count": 14
      }
    ],
    "answer": "14 orders shipped to Germany contain products from suppliers based in the UK."
  },
  {
    "question": "What's the average freight cost for orders containing Beverages products?",
    "cypher": "MATCH (o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN AVG(toFloat(o.freight)) AS average_freight",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_freight": 98.72952970297017
      }
    ],
    "answer": "The average freight cost for orders containing Beverages products is $98.73."
  },
  {
    "question": "Which category does Mozzarella di Giovanni belong to?",
    "cypher": "MATCH (p:Product {productName: 'Mozzarella di Giovanni'})-[:PART_OF]->(cat:Category) RETURN cat.categoryName AS category_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_name": "Dairy Products"
      }
    ],
    "answer": "Mozzarella di Giovanni belongs to the Dairy Products category."
  },
  {
    "question": "How many different suppliers provide products that Lonesome Pine Restaurant has ordered?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier) RETURN COUNT(DISTINCT s) AS supplier_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_count": 12
      }
    ],
    "answer": "12 different suppliers provide products that Lonesome Pine Restaurant has ordered."
  },
  {
    "question": "What's the minimum reorder level among products in the same category as Chai?",
    "cypher": "MATCH (p1:Product {productName: 'Chai'})-[:PART_OF]->(cat:Category)<-[:PART_OF]-(p2:Product) WHERE p2.reorderLevel IS NOT NULL RETURN MIN(p2.reorderLevel) AS lowest_reorder_level",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_reorder_level": 0
      }
    ],
    "answer": "The minimum reorder level among products in the same category as Chai is 0."
  },
  {
    "question": "Find the contact title of the person at Alfreds Futterkiste",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'}) RETURN c.contactTitle AS contact_title",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "contact_title": "Sales Representative"
      }
    ],
    "answer": "The contact title at Alfreds Futterkiste is Sales Representative."
  },
  {
    "question": "How many products connect White Clover Markets to Simons bistro through shared orders?",
    "cypher": "MATCH (c1:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o1:Order)-[:ORDERS]->(p:Product)<-[:ORDERS]-(o2:Order)<-[:PURCHASED]-(c2:Customer {companyName: 'Simons bistro'}) RETURN COUNT(DISTINCT p) AS connecting_products",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_products": 11
      }
    ],
    "answer": "Based on the query result, there are 11 distinct products that connect White Clover Markets to Simons bistro through shared orders."
  },
  {
    "question": "What's the total value of all Sasquatch Ale orders?",
    "cypher": "MATCH (o:Order)-[r:ORDERS]->(p:Product {productName: 'Sasquatch Ale'}) RETURN SUM(toFloat(r.unitPrice) * r.quantity) AS total_revenue",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_revenue": 6678.0
      }
    ],
    "answer": "The total value of all Sasquatch Ale orders is $6,678.00."
  },
  {
    "question": "Which country is the supplier of Teatime Chocolate Biscuits located in?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Teatime Chocolate Biscuits'}) RETURN s.country AS supplier_country",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_country": "M14 GSD"
      }
    ],
    "answer": "UNKNOWN\n\n(Note: The query result 'M14 GSD' appears to be a postal code or address fragment, not a country name, so I cannot confidently identify the country of the supplier.)"
  },
  {
    "question": "What's the highest quantity ordered in a single order for products from Exotic Liquids?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[r:ORDERS]-(o:Order) WHERE r.quantity IS NOT NULL RETURN MAX(r.quantity) AS max_quantity",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_quantity": 100
      }
    ],
    "answer": "The highest quantity ordered in a single order for products from Exotic Liquids is 100 units."
  },
  {
    "question": "How many firms from Germany have placed orders?",
    "cypher": "MATCH (c:Customer {country: 'Germany'})-[:PURCHASED]->(o:Order) RETURN COUNT(DISTINCT c) AS german_customers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "german_customers": 11
      }
    ],
    "answer": "11 firms from Germany have placed orders."
  },
  {
    "question": "Tell me the ship address for order 10248",
    "cypher": "MATCH (o:Order {orderID: '10248'}) RETURN o.shipAddress AS shipping_address",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shipping_address": "59 rue de l'Abbaye"
      }
    ],
    "answer": "The shipping address for order 10248 is 59 rue de l'Abbaye."
  },
  {
    "question": "What's the shortest path length between Ernst Handel and any supplier in the UK?",
    "cypher": "MATCH path = shortestPath((c:Customer {companyName: 'Ernst Handel'})-[*]-(s:Supplier {country: 'UK'})) RETURN LENGTH(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "path_length": 3
      }
    ],
    "answer": "The shortest path length between Ernst Handel and a supplier in the UK is 3 hops."
  },
  {
    "question": "How many orders have been shipped to Seattle?",
    "cypher": "MATCH (o:Order {shipCity: 'Seattle'}) RETURN COUNT(o) AS seattle_orders",
    "query_type": "Aggregation",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "seattle_orders": 14
      }
    ],
    "answer": "14 orders have been shipped to Seattle."
  },
  {
    "question": "What's the lowest unit price among discontinued products?",
    "cypher": "MATCH (p:Product {discontinued: true}) WHERE p.unitPrice IS NOT NULL RETURN MIN(p.unitPrice) AS lowest_price",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_price": 4.5
      }
    ],
    "answer": "The lowest unit price among discontinued products is $4.50."
  },
  {
    "question": "Which city does Simons bistro operate from?",
    "cypher": "MATCH (c:Customer {companyName: 'Simons bistro'}) RETURN c.city AS company_city",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "company_city": "Kobenhavn"
      }
    ],
    "answer": "Simons bistro operates from Kobenhavn."
  },
  {
    "question": "How many categories have products that White Clover Marktes has ordered?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category) RETURN COUNT(DISTINCT cat) AS category_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_count": 8
      }
    ],
    "answer": "White Clover Markets has ordered products from 8 distinct categories."
  },
  {
    "question": "What's the description of the category that Sasquatch Ale belongs to?",
    "cypher": "MATCH (p:Product {productName: 'Sasquatch Ale'})-[:PART_OF]->(cat:Category) RETURN cat.description AS category_description",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_description": "Soft drinks, coffees, teas, beers, and ales"
      }
    ],
    "answer": "The category description for Sasquatch Ale is \"Soft drinks, coffees, teas, beers, and ales\"."
  },
  {
    "question": "Find the maximum freight cost among orders containing stuff from the Beverages category",
    "cypher": "MATCH (o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) WHERE o.freight IS NOT NULL RETURN MAX(toFloat(o.freight)) AS highest_freight",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_freight": 1007.64
      }
    ],
    "answer": "The maximum freight cost for orders containing Beverages is $1,007.64."
  },
  {
    "question": "How many suppliers are there for products ordered by customers in the USA?",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier) RETURN COUNT(DISTINCT s) AS supplier_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_count": 29
      }
    ],
    "answer": "There are 29 unique suppliers for products ordered by customers in the USA."
  },
  {
    "question": "What's the phone number of Exotic Liqiuds?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'}) RETURN s.phone AS phone_number",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "phone_number": "(171) 555-2222"
      }
    ],
    "answer": "The phone number for Exotic Liquids is (171) 555-2222."
  },
  {
    "question": "How many products have been ordered by both Alfreds Futterkiste and Ernst Handel?",
    "cypher": "MATCH (c1:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o1:Order)-[:ORDERS]->(p:Product)<-[:ORDERS]-(o2:Order)<-[:PURCHASED]-(c2:Customer {companyName: 'Ernst Handel'}) RETURN COUNT(DISTINCT p) AS shared_products",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_products": 7
      }
    ],
    "answer": "Alfreds Futterkiste and Ernst Handel have ordered 7 products in common."
  },
  {
    "question": "What's the average discount given on orders for Chai?",
    "cypher": "MATCH (o:Order)-[r:ORDERS]->(p:Product {productName: 'Chai'}) RETURN AVG(toFloat(r.discount)) AS average_discount",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_discount": 0.07763157894736841
      }
    ],
    "answer": "The average discount given on orders for Chai is approximately 7.76%."
  },
  {
    "question": "Which employee ID processed the most recent order to Berlin?",
    "cypher": "MATCH (o:Order {shipCity: 'Berlin'}) WHERE o.orderDate IS NOT NULL RETURN o.employeeID AS employee_id ORDER BY o.orderDate DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "employee_id": "3"
      }
    ],
    "answer": "Employee ID 3 processed the most recent order to Berlin."
  },
  {
    "question": "What quantity per unit does Teatime Chocolat Biscuits have?",
    "cypher": "MATCH (p:Product {productName: 'Teatime Chocolate Biscuits'}) RETURN p.quantityPerUnit AS quantity_per_unit",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "quantity_per_unit": "10 boxes x 12 pieces"
      }
    ],
    "answer": "Teatime Chocolate Biscuits come in packaging of 10 boxes, with each box containing 12 pieces."
  },
  {
    "question": "How many orders contain products from multiple categories?",
    "cypher": "MATCH (o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category) WITH o, COUNT(DISTINCT cat) AS category_count WHERE category_count > 1 RETURN COUNT(DISTINCT o) AS multi_category_orders",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "multi_category_orders": 651
      }
    ],
    "answer": "651 orders contain products from multiple categories."
  },
  {
    "question": "What's the sum of units in stock for all products supplied by companys in the UK?",
    "cypher": "MATCH (s:Supplier {country: 'UK'})-[:SUPPLIES]->(p:Product) RETURN SUM(p.unitsInStock) AS total_stock",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "grammar",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_stock": 69
      }
    ],
    "answer": "The total number of units in stock for products supplied by companies in the UK is 69 units."
  },
  {
    "question": "Find the postal code of Lonesome Pine Restaurant",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'}) RETURN c.postalCode AS postal_code",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "postal_code": "97219"
      }
    ],
    "answer": "The postal code of Lonesome Pine Restaurant is 97219."
  },
  {
    "question": "What's the earliest order date for products in the Beverages category?",
    "cypher": "MATCH (o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) WHERE o.orderDate IS NOT NULL RETURN MIN(o.orderDate) AS earliest_date",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_date": "1996-07-10 00:00:00.000"
      }
    ],
    "answer": "The earliest order date for products in the Beverages category is July 10, 1996."
  },
  {
    "question": "How many different cities have received shipments of Sasquatch Ale?",
    "cypher": "MATCH (o:Order)-[:ORDERS]->(p:Product {productName: 'Sasquatch Ale'}) RETURN COUNT(DISTINCT o.shipCity) AS city_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "city_count": 14
      }
    ],
    "answer": "14 different cities have received shipments of Sasquatch Ale."
  },
  {
    "question": "Tell me the region where White Clover Markets is based",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'}) RETURN c.region AS customer_region",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_region": "WA"
      }
    ],
    "answer": "White Clover Markets is based in the region of WA (Washington)."
  },
  {
    "question": "How many paths connect Alfreds Futterkiste to products from UK suppliers?",
    "cypher": "MATCH path = (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier {country: 'UK'}) RETURN COUNT(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connection_count": 1
      }
    ],
    "answer": "There is 1 path connecting Alfreds Futterkiste to products from UK suppliers."
  },
  {
    "question": "What's the highest reorder level among beverages supplied by folks in London?",
    "cypher": "MATCH (s:Supplier {city: 'London'})-[:SUPPLIES]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) WHERE p.reorderLevel IS NOT NULL RETURN MAX(p.reorderLevel) AS max_reorder_level",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_reorder_level": 25
      }
    ],
    "answer": "The highest reorder level among beverages supplied by London-based suppliers is 25."
  },
  {
    "question": "Which supplier provides Rossle Sauerkraut?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'R\u00f6ssle Sauerkraut'}) RETURN s.companyName AS supplier_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_name": "Plutzer Lebensmittelgro\u00dfm\u00e4rkte AG"
      }
    ],
    "answer": "Plutzer Lebensmittelgro\u00dfm\u00e4rkte AG provides R\u00f6ssle Sauerkraut."
  },
  {
    "question": "How many products ordered by Ernst Handel have unit prices above 30?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) WHERE p.unitPrice > 30 RETURN COUNT(DISTINCT p) AS expensive_products",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "expensive_products": 20
      }
    ],
    "answer": "Ernst Handel has ordered 20 distinct products with a unit price above 30."
  },
  {
    "question": "What's the minimum units in stock for products that have been ordered to France?",
    "cypher": "MATCH (o:Order {shipCountry: 'France'})-[:ORDERS]->(p:Product) WHERE p.unitsInStock IS NOT NULL RETURN MIN(p.unitsInStock) AS min_stock",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "min_stock": 0
      }
    ],
    "answer": "The minimum number of units in stock for products ordered to France is 0."
  },
  {
    "question": "Find the fax number of the firm that ordered Chai",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product {productName: 'Chai'}) RETURN c.fax AS fax_number LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "fax_number": "(503) 555-9646"
      }
    ],
    "answer": "The fax number of the firm that ordered Chai is (503) 555-9646."
  },
  {
    "question": "How many orders connect Simon's bistro to suppliers based outside Denmark?",
    "cypher": "MATCH (c:Customer {companyName: 'Simons bistro'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier) WHERE s.country <> 'Denmark' RETURN COUNT(DISTINCT o) AS order_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "order_count": 7
      }
    ],
    "answer": "Simon's bistro has 7 orders connecting to suppliers based outside Denmark."
  },
  {
    "question": "What's the total freight cost for all orders shipped to Portland?",
    "cypher": "MATCH (o:Order {shipCity: 'Portland'}) RETURN SUM(toFloat(o.freight)) AS total_freight",
    "query_type": "Aggregation",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_freight": 341.94999999999993
      }
    ],
    "answer": "The total freight cost for all orders shipped to Portland is $341.95."
  },
  {
    "question": "Which product has the highest unit price among those ordered by Lonesome Pine Restarant?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS product_name ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "product_name": "Carnarvon Tigers"
      }
    ],
    "answer": "The product with the highest unit price ordered by Lonesome Pine Restaurant is Carnarvon Tigers."
  },
  {
    "question": "How many categories contain discontinued products?",
    "cypher": "MATCH (p:Product {discontinued: true})-[:PART_OF]->(cat:Category) RETURN COUNT(DISTINCT cat) AS category_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_count": 5
      }
    ],
    "answer": "5 categories contain discontinued products."
  },
  {
    "question": "What's the contact name at the company that supplies Mozzarela di Giovanni?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Mozzarella di Giovanni'}) RETURN s.contactName AS contact_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "contact_name": "Elio Rossi"
      }
    ],
    "answer": "The contact name at the company that supplies Mozzarella di Giovanni is Elio Rossi."
  },
  {
    "question": "How many suppliers connect to customers in Austria through product orders?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(o:Order)<-[:PURCHASED]-(c:Customer {country: 'Austria'}) RETURN COUNT(DISTINCT s) AS supplier_connections",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_connections": 27
      }
    ],
    "answer": "27 suppliers connect to customers in Austria through product orders."
  },
  {
    "question": "How many products has Exotic Liquids supplied that have been ordered by customers in the USA?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(o:Order)<-[:PURCHASED]-(c:Customer {country: 'USA'}) RETURN COUNT(DISTINCT p) AS total_products",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_products": 3
      }
    ],
    "answer": "Exotic Liquids has supplied 3 distinct products that have been ordered by customers in the USA."
  },
  {
    "question": "What's the average unit price of products in the Beverages category that have been ordered by White Clover Markets?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN AVG(p.unitPrice) AS average_price",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_price": 50.75000000000001
      }
    ],
    "answer": "The average unit price of Beverages products ordered by White Clover Markets is $50.75."
  },
  {
    "question": "Tell me the company name of the supplier who provides Chai?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Chai'}) RETURN s.companyName AS supplier_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_name": "Exotic Liquids"
      }
    ],
    "answer": "The supplier of Chai is Exotic Liquids."
  },
  {
    "question": "What's the highest quantity ordered of any product supplied by Exotic Liqiuds?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[r:ORDERS]-(o:Order) WHERE r.quantity IS NOT NULL RETURN MAX(r.quantity) AS highest_quantity",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_quantity": 100
      }
    ],
    "answer": "The highest quantity ordered of a product supplied by Exotic Liquids is 100."
  },
  {
    "question": "How many different customers have ordered products from the same category as Sasquatch Ale?",
    "cypher": "MATCH (p1:Product {productName: 'Sasquatch Ale'})-[:PART_OF]->(cat:Category)<-[:PART_OF]-(p2:Product)<-[:ORDERS]-(o:Order)<-[:PURCHASED]-(c:Customer) RETURN COUNT(DISTINCT c) AS customer_count",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_count": 83
      }
    ],
    "answer": "83 different customers have ordered products from the same category as Sasquatch Ale."
  },
  {
    "question": "What's the city of the customer who placed order 10248?",
    "cypher": "MATCH (o:Order {orderID: '10248'})<-[:PURCHASED]-(c:Customer) RETURN c.city AS customer_city",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_city": "Reims"
      }
    ],
    "answer": "The city of the customer who placed order 10248 is Reims."
  },
  {
    "question": "Count the total number of orders that include products from suppliers based in the UK?",
    "cypher": "MATCH (s:Supplier {country: 'UK'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(o:Order) RETURN COUNT(DISTINCT o) AS total_orders",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_orders": 90
      }
    ],
    "answer": "Based on the query result, there are 90 unique orders that include products from UK-based suppliers."
  },
  {
    "question": "What's the lowest unit price among products ordered by Lonesome Pine Restaraunt?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) WHERE p.unitPrice IS NOT NULL RETURN MIN(p.unitPrice) AS lowest_price",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_price": 4.5
      }
    ],
    "answer": "The lowest unit price among products ordered by Lonesome Pine Restaurant is $4.50."
  },
  {
    "question": "How many different products connect White Clover Markets to the Beverages category through their orders?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN COUNT(DISTINCT p) AS connecting_products",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_products": 5
      }
    ],
    "answer": "White Clover Markets has 5 distinct products that connect to the Beverages category through their orders."
  },
  {
    "question": "What's the total sum of quantities ordered for Chai across all orders?",
    "cypher": "MATCH (p:Product {productName: 'Chai'})<-[r:ORDERS]-(o:Order) RETURN SUM(r.quantity) AS total_quantity",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_quantity": 828
      }
    ],
    "answer": "The total sum of quantities ordered for Chai is 828."
  },
  {
    "question": "Find the category name of the most expensive product ordered by Ernst Handel?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category) WHERE p.unitPrice IS NOT NULL RETURN cat.categoryName AS category_name ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_name": "Beverages"
      }
    ],
    "answer": "The most expensive product ordered by Ernst Handel belongs to the 'Beverages' category."
  },
  {
    "question": "What country is the supplier located in who provides products ordered by Alfreds Futterkiste?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier) RETURN s.country AS supplier_country LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_country": "Germany"
      }
    ],
    "answer": "The supplier is located in Germany."
  },
  {
    "question": "How many orders from German customers include stuff from the Beverages category?",
    "cypher": "MATCH (c:Customer {country: 'Germany'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN COUNT(DISTINCT o) AS order_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "order_count": 51
      }
    ],
    "answer": "51 orders from German customers include products from the Beverages category."
  },
  {
    "question": "What's the highest freight cost among orders containing Sasquatch Ale?",
    "cypher": "MATCH (p:Product {productName: 'Sasquatch Ale'})<-[:ORDERS]-(o:Order) WHERE o.freight IS NOT NULL RETURN MAX(TOFLOAT(o.freight)) AS max_freight",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_freight": 299.09
      }
    ],
    "answer": "The highest freight cost for orders containing Sasquatch Ale is $299.09."
  },
  {
    "question": "Count how many suppliers provide products to customers in Portland through their orders?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(o:Order)<-[:PURCHASED]-(c:Customer {city: 'Portland'}) RETURN COUNT(DISTINCT s) AS supplier_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_count": 16
      }
    ],
    "answer": "16 suppliers provide products to customers in Portland through their orders."
  },
  {
    "question": "What's the contact title of the person at White Clover Markets?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'}) RETURN c.contactTitle AS contact_title",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "contact_title": "Owner"
      }
    ],
    "answer": "The contact title of the person at White Clover Markets is Owner."
  },
  {
    "question": "Find the average discount applied to orders for Mozzarella di Giovanni?",
    "cypher": "MATCH (p:Product {productName: 'Mozzarella di Giovanni'})<-[r:ORDERS]-(o:Order) RETURN AVG(TOFLOAT(r.discount)) AS average_discount",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_discount": 0.023684210526315787
      }
    ],
    "answer": "The average discount for orders of Mozzarella di Giovanni is approximately 2.37%."
  },
  {
    "question": "What's the ship city of the order with the smallest quantity of Teatime Chocolate Biscuts?",
    "cypher": "MATCH (p:Product {productName: 'Teatime Chocolate Biscuits'})<-[r:ORDERS]-(o:Order) WHERE r.quantity IS NOT NULL RETURN o.shipCity AS ship_city ORDER BY r.quantity ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ship_city": " 1"
      }
    ],
    "answer": "The ship city for the order with the smallest quantity of Teatime Chocolate Biscuits is \" 1\". However, this result seems unusual, as a city name is typically not a number. Without further context, the precise answer is unclear."
  },
  {
    "question": "How many distinct categories are represented in orders placed by Simons bistro?",
    "cypher": "MATCH (c:Customer {companyName: 'Simons bistro'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category) RETURN COUNT(DISTINCT cat) AS category_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_count": 7
      }
    ],
    "answer": "Simons bistro has placed orders across 7 distinct product categories."
  },
  {
    "question": "Tell me the product name that connects order 10248 to order 10556?",
    "cypher": "MATCH (o1:Order {orderID: '10248'})-[:ORDERS]->(p:Product)<-[:ORDERS]-(o2:Order {orderID: '10556'}) RETURN p.productName AS connecting_product",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_product": "Mozzarella di Giovanni"
      }
    ],
    "answer": "The product that connects order 10248 to order 10556 is Mozzarella di Giovanni."
  },
  {
    "question": "How many products supplied by folks in London have been discontinued?",
    "cypher": "MATCH (s:Supplier {city: 'London'})-[:SUPPLIES]->(p:Product) WHERE p.discontinued = true RETURN COUNT(p) AS discontinued_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "discontinued_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 products supplied by suppliers in London that have been discontinued."
  },
  {
    "question": "What's the maximum units in stock for products in the same category as Chai?",
    "cypher": "MATCH (p1:Product {productName: 'Chai'})-[:PART_OF]->(cat:Category)<-[:PART_OF]-(p2:Product) WHERE p2.unitsInStock IS NOT NULL RETURN MAX(p2.unitsInStock) AS max_stock",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_stock": 125
      }
    ],
    "answer": "The maximum units in stock for products in the same category as Chai is 125."
  },
  {
    "question": "Count the number of orders that connect Ernst Handel to products from UK suppliers?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier {country: 'UK'}) RETURN COUNT(DISTINCT o) AS connecting_orders",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_orders": 4
      }
    ],
    "answer": "Ernst Handel has 4 distinct orders that connect to products from UK suppliers."
  },
  {
    "question": "What's the phone number of the supplier who supplies Sasquatch Ale?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Sasquatch Ale'}) RETURN s.phone AS supplier_phone",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_phone": "(503) 555-9931"
      }
    ],
    "answer": "The phone number of the supplier who supplies Sasquatch Ale is (503) 555-9931."
  },
  {
    "question": "Find the total value (quantity * unit price) of all Chai orders?",
    "cypher": "MATCH (p:Product {productName: 'Chai'})<-[r:ORDERS]-(o:Order) RETURN SUM(r.quantity * TOFLOAT(r.unitPrice)) AS total_value",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_value": 14277.6
      }
    ],
    "answer": "The total value of all Chai orders is $14,277.60."
  },
  {
    "question": "What's the earliest order date for orders containing products from Exotic Liquds?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(o:Order) WHERE o.orderDate IS NOT NULL RETURN o.orderDate AS earliest_date ORDER BY o.orderDate ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_date": "1996-07-12 00:00:00.000"
      }
    ],
    "answer": "The earliest order date for products from Exotic Liquids is July 12, 1996."
  },
  {
    "question": "How many different companys have ordered products that are also ordered by White Clover Markets?",
    "cypher": "MATCH (c1:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o1:Order)-[:ORDERS]->(p:Product)<-[:ORDERS]-(o2:Order)<-[:PURCHASED]-(c2:Customer) WHERE c1 <> c2 RETURN COUNT(DISTINCT c2) AS company_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "company_count": 87
      }
    ],
    "answer": "87 different companies have ordered products that are also ordered by White Clover Markets."
  },
  {
    "question": "What category does R\u00f6ssle Sauerkraut belong to?",
    "cypher": "MATCH (p:Product {productName: 'R\u00f6ssle Sauerkraut'})-[:PART_OF]->(cat:Category) RETURN cat.categoryName AS category_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_name": "Produce"
      }
    ],
    "answer": "R\u00f6ssle Sauerkraut belongs to the Produce category."
  },
  {
    "question": "Count how many unique products Ernst Handel has ordered that cost more than 20?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) WHERE p.unitPrice > 20 RETURN COUNT(DISTINCT p) AS product_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "product_count": 30
      }
    ],
    "answer": "Ernst Handel has ordered 30 unique products that cost more than $20."
  },
  {
    "question": "Find the supplier with the most products ordered by customers in Germany?",
    "cypher": "MATCH (c:Customer {country: 'Germany'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier) RETURN s.companyName AS supplier_name, COUNT(DISTINCT p) AS product_count ORDER BY product_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_name": "Plutzer Lebensmittelgro\u00dfm\u00e4rkte AG",
        "product_count": 5
      }
    ],
    "answer": "The supplier with the most products ordered by customers in Germany is Plutzer Lebensmittelgro\u00dfm\u00e4rkte AG, with 5 distinct products ordered."
  },
  {
    "question": "What's the ship region for the order that contains the highest quantity of Sasquatch Ale?",
    "cypher": "MATCH (p:Product {productName: 'Sasquatch Ale'})<-[r:ORDERS]-(o:Order) WHERE r.quantity IS NOT NULL RETURN o.shipRegion AS ship_region ORDER BY r.quantity DESC LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "ship_region": "NULL"
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many products connect Lonesome Pine Restaurant to Simons bistro through shared orders?",
    "cypher": "MATCH (c1:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o1:Order)-[:ORDERS]->(p:Product)<-[:ORDERS]-(o2:Order)<-[:PURCHASED]-(c2:Customer {companyName: 'Simons bistro'}) RETURN COUNT(DISTINCT p) AS shared_products",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "shared_products": 4
      }
    ],
    "answer": "4 products connect Lonesome Pine Restaurant to Simons bistro through shared orders."
  },
  {
    "question": "What's the average freight cost for orders shipped to Seattle?",
    "cypher": "MATCH (o:Order {shipCity: 'Seattle'}) WHERE o.freight IS NOT NULL RETURN AVG(TOFLOAT(o.freight)) AS average_freight",
    "query_type": "Aggregation",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_freight": 96.64714285714285
      }
    ],
    "answer": "The average freight cost for orders shipped to Seattle is $96.65."
  },
  {
    "question": "Tell me the contact name at Alfreds Futkiste?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'}) RETURN c.contactName AS contact_name",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "contact_name": "Maria Anders"
      }
    ],
    "answer": "The contact name at Alfreds Futterkiste is Maria Anders."
  },
  {
    "question": "What's the minimum reorder level among products in the Beverages category?",
    "cypher": "MATCH (cat:Category {categoryName: 'Beverages'})<-[:PART_OF]-(p:Product) WHERE p.reorderLevel IS NOT NULL RETURN MIN(p.reorderLevel) AS min_reorder_level",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "min_reorder_level": 0
      }
    ],
    "answer": "The minimum reorder level for products in the Beverages category is 0."
  },
  {
    "question": "Count how many orders connect customers in the USA to suppliers in the UK?",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier {country: 'UK'}) RETURN COUNT(DISTINCT o) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connection_count": 16
      }
    ],
    "answer": "Based on the query result, there are 16 distinct orders that connect customers in the USA to suppliers in the UK."
  },
  {
    "question": "What's the description of the category that contains Teatime Chocolate Biscuits?",
    "cypher": "MATCH (p:Product {productName: 'Teatime Chocolate Biscuits'})-[:PART_OF]->(cat:Category) RETURN cat.description AS category_description",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "category_description": "Desserts, candies, and sweet breads"
      }
    ],
    "answer": "The category containing Teatime Chocolate Biscuits has the description: \"Desserts, candies, and sweet breads\""
  },
  {
    "question": "How many different cities are represented among customers who've ordered stuff from Exotic Liquids?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(o:Order)<-[:PURCHASED]-(c:Customer) RETURN COUNT(DISTINCT c.city) AS city_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "city_count": 42
      }
    ],
    "answer": "42 different cities have customers who have ordered products from Exotic Liquids."
  },
  {
    "question": "Find the customer with the highest total freight costs across all their orders?",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(o:Order) WHERE o.freight IS NOT NULL RETURN c.companyName AS customer_name, SUM(TOFLOAT(o.freight)) AS total_freight ORDER BY total_freight DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "customer_name": "Save-a-lot Markets",
        "total_freight": 6683.699999999999
      }
    ],
    "answer": "Based on the query result, Save-a-lot Markets is the customer with the highest total freight costs, with a total of $6,683.70 across their orders."
  },
  {
    "question": "How many suppliers are connected to Ernst Handel through product orders?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier) RETURN COUNT(DISTINCT s) AS supplier_connections",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "supplier_connections": 27
      }
    ],
    "answer": "27 suppliers are connected to Ernst Handel through product orders."
  },
  {
    "question": "What's the quantity per unit specification for Mozzarella di Giovani?",
    "cypher": "MATCH (p:Product {productName: 'Mozzarella di Giovanni'}) RETURN p.quantityPerUnit AS quantity_per_unit",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "quantity_per_unit": "24 - 200 g pkgs."
      }
    ],
    "answer": "The quantity per unit specification for Mozzarella di Giovani is 24 - 200 g pkgs."
  },
  {
    "question": "Calculate the total number of units ordered for products supplied by UK-based suppliers?",
    "cypher": "MATCH (s:Supplier {country: 'UK'})-[:SUPPLIES]->(p:Product)<-[r:ORDERS]-(o:Order) RETURN SUM(r.quantity) AS total_units",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_units": 2213
      }
    ],
    "answer": "The total number of units ordered for products supplied by UK-based suppliers is 2,213 units."
  },
  {
    "question": "Which product has the highest unit price among those ordered by White Clover Markets?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS product_name ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "product_name": "C\u00f4te de Blaye"
      }
    ],
    "answer": "The product with the highest unit price ordered by White Clover Markets is C\u00f4te de Blaye."
  },
  {
    "question": "How many categories can be reached from Lonesome Pine Restaurant through their product orders?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category) RETURN COUNT(DISTINCT cat) AS reachable_categories",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "reachable_categories": 7
      }
    ],
    "answer": "Lonesome Pine Restaurant can reach 7 distinct product categories through their product orders."
  },
  {
    "question": "What's the fax number of Simon's bistro?",
    "cypher": "MATCH (c:Customer {companyName: 'Simons bistro'}) RETURN c.fax AS fax_number",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "fax_number": "31 13 35 57"
      }
    ],
    "answer": "The fax number for Simon's bistro is 31 13 35 57."
  },
  {
    "question": "Find the average units in stock for products that have been ordered by German customers?",
    "cypher": "MATCH (c:Customer {country: 'Germany'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) WHERE p.unitsInStock IS NOT NULL RETURN AVG(p.unitsInStock) AS average_stock",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_stock": 40.722560975609746
      }
    ],
    "answer": "Based on the query result, the average number of units in stock for products ordered by German customers is approximately 41 units."
  },
  {
    "question": "What's the longest quantity per unit description among beverages ordered by folks in the USA?",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) WHERE p.quantityPerUnit IS NOT NULL RETURN p.quantityPerUnit AS quantity_description ORDER BY SIZE(p.quantityPerUnit) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "quantity_description": "24 - 355 ml bottles"
      }
    ],
    "answer": "The longest quantity per unit description for beverages ordered by customers in the USA is \"24 - 355 ml bottles\"."
  },
  {
    "question": "Count how many products connect White Clover Markets to Exotic Liquids through orders?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier {companyName: 'Exotic Liquids'}) RETURN COUNT(DISTINCT p) AS connecting_products",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_products": 1
      }
    ],
    "answer": "Based on the query result, 1 product connects White Clover Markets to Exotic Liquids through orders."
  },
  {
    "question": "What's the employee ID who handled the most recent order for Sasquatch Ale?",
    "cypher": "MATCH (p:Product {productName: 'Sasquatch Ale'})<-[:ORDERS]-(o:Order) WHERE o.orderDate IS NOT NULL RETURN o.employeeID AS employee_id ORDER BY o.orderDate DESC LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "employee_id": "7"
      }
    ],
    "answer": "Employee ID 7 handled the most recent order for Sasquatch Ale."
  },
  {
    "question": "What's the name of protein P10645?",
    "cypher": "MATCH (p:Protein {id: 'P10645'}) RETURN p.name AS protein_name",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "protein_name": "CHGA"
      }
    ],
    "answer": "The name of protein P10645 is CHGA."
  },
  {
    "question": "What's the accession number for protein P28906?",
    "cypher": "MATCH (p:Protein {id: 'P28906'}) RETURN p.accession AS protein_accession",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "protein_accession": "CD34_HUMAN"
      }
    ],
    "answer": "The accession number for protein P28906 is CD34_HUMAN."
  },
  {
    "question": "Tell me the description of disease DOID:0001816",
    "cypher": "MATCH (d:Disease {id: 'DOID:0001816'}) RETURN d.description AS disease_description",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "disease_description": "A vascular cancer that derives_from the cells that line the walls of blood vessels or lymphatic vessels. [url:http\\://emedicine.medscape.com/article/276512-overview, url:http\\://en.wikipedia.org/wiki/Hemangiosarcoma, url:https\\://en.wikipedia.org/wiki/Angiosarcoma, url:https\\://ncit.nci.nih.gov/ncitbrowser/ConceptReport.jsp?dictionary=NCI_Thesaurus&ns=ncit&code=C3088, url:https\\://www.ncbi.nlm.nih.gov/pubmed/23327728]"
      }
    ],
    "answer": "Hemangiosarcoma is a vascular cancer that originates from the cells lining the walls of blood vessels or lymphatic vessels."
  },
  {
    "question": "What's the name of gene CHGA?",
    "cypher": "MATCH (g:Gene {id: 'CHGA'}) RETURN g.name AS gene_name",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "gene_name": "chromogranin A"
      }
    ],
    "answer": "The name of gene CHGA is chromogranin A."
  },
  {
    "question": "What email does user Alberto Santos have?",
    "cypher": "MATCH (u:User {name: 'Alberto Santos'}) RETURN u.email AS user_email",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "user_email": "alberto.santos@cpr.ku.dk"
      }
    ],
    "answer": "The email for Alberto Santos is alberto.santos@cpr.ku.dk."
  },
  {
    "question": "What's the chemical formula of metabolite HMDB0094081?",
    "cypher": "MATCH (m:Metabolite {id: 'HMDB0094081'}) RETURN m.chemical_formula AS metabolite_formula",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "metabolite_formula": "C42H82O5"
      }
    ],
    "answer": "The chemical formula of metabolite HMDB0094081 is C42H82O5."
  },
  {
    "question": "What's the taxid for protien P20783?",
    "cypher": "MATCH (p:Protein {id: 'P20783'}) RETURN p.taxid AS protein_taxid",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "protein_taxid": "9606"
      }
    ],
    "answer": "The taxid for protein P20783 is 9606, which corresponds to the human species."
  },
  {
    "question": "Tell me the journal of publication 24383023",
    "cypher": "MATCH (pub:Publication {id: '24383023'}) RETURN pub.journal AS publication_journal",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "publication_journal": "Case Rep Oncol Med"
      }
    ],
    "answer": "The journal of publication 24383023 is Case Rep Oncol Med."
  },
  {
    "question": "What's the effect of variant chr14:g.92932742G>A?",
    "cypher": "MATCH (v:Known_variant {id: 'chr14:g.92932742G>A'}) RETURN v.effect AS variant_effect",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "variant_effect": "stop gained"
      }
    ],
    "answer": "The variant chr14:g.92932742G>A results in a stop gained effect, which typically means the mutation introduces a premature stop codon that can lead to a truncated protein."
  },
  {
    "question": "What year was publication 28232668 published?",
    "cypher": "MATCH (pub:Publication {id: '28232668'}) RETURN pub.year AS publication_year",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "publication_year": 2017
      }
    ],
    "answer": "The publication with ID 28232668 was published in 2017."
  },
  {
    "question": "What's the acronym of project P0000006?",
    "cypher": "MATCH (proj:Project {id: 'P0000006'}) RETURN proj.acronym AS project_acronym",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "project_acronym": "P-CT45"
      }
    ],
    "answer": "P-CT45"
  },
  {
    "question": "What is the organism for complex 5408?",
    "cypher": "MATCH (c:Complex {id: '5408'}) RETURN c.organism AS complex_organism",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "complex_organism": "9606"
      }
    ],
    "answer": "The organism for complex 5408 is 9606, which corresponds to the taxonomic identifier for Homo sapiens (human)."
  },
  {
    "question": "Tell me the sequence of amino acid sequence A0A024R1R8",
    "cypher": "MATCH (a:Amino_acid_sequence {id: 'A0A024R1R8'}) RETURN a.sequence AS amino_acid_sequence",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "amino_acid_sequence": "MSSHEGGKKKALKQPKKQAKEMDEEEKAFKQKQKEEQKKLEVLKAKVVGKGPLATGGIKKSGKK"
      }
    ],
    "answer": "The amino acid sequence for A0A024R1R8 is:\nMSSHEGGKKKALKQPKKQAKEMDEEEKAFKQKQKEEQKKLEVLKAKVVGKGPLATGGIKKSGKK"
  },
  {
    "question": "What's the super class of metabolite HMDB0059597?",
    "cypher": "MATCH (m:Metabolite {id: 'HMDB0059597'}) RETURN m.super_class AS metabolite_super_class",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "metabolite_super_class": "Homogeneous non-metal compounds"
      }
    ],
    "answer": "The super class of metabolite HMDB0059597 is \"Homogeneous non-metal compounds\"."
  },
  {
    "question": "What is the description of biological proces GO:0000001?",
    "cypher": "MATCH (b:Biological_process {id: 'GO:0000001'}) RETURN b.description AS process_description",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "process_description": "The distribution of mitochondria, including the mitochondrial genome, into daughter cells after mitosis or meiosis, mediated by interactions between mitochondria and the cytoskeleton. [GOC:mcc, PMID:10873824, PMID:11389764]"
      }
    ],
    "answer": "The description of biological process GO:0000001 is: \"The distribution of mitochondria, including the mitochondrial genome, into daughter cells after mitosis or meiosis, mediated by interactions between mitochondria and the cytoskeleton.\""
  },
  {
    "question": "What's the position of somatic mutation chr12:g.5494792C>T?",
    "cypher": "MATCH (s:Somatic_mutation {id: 'chr12:g.5494792C>T'}) RETURN s.position AS mutation_position",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Tell me the source of functional region data",
    "cypher": "MATCH (f:Functional_region) WHERE f.source IS NOT NULL RETURN f.source AS functional_region_source LIMIT 1",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "functional_region_source": "PFam"
      }
    ],
    "answer": "The source of functional region data is PFam."
  },
  {
    "question": "How many diseases is protein P28906 associated with?",
    "cypher": "MATCH (p:Protein {id: 'P28906'})-[:ASSOCIATED_WITH]->(d:Disease) RETURN COUNT(d) AS disease_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "disease_count": 1435
      }
    ],
    "answer": "The protein P28906 is associated with 1,435 diseases."
  },
  {
    "question": "What protein does gene CHGA translate into?",
    "cypher": "MATCH (g:Gene {id: 'CHGA'})-[:TRANSLATED_INTO]->(p:Protein) RETURN p.id AS protein_id",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "protein_id": "P10645"
      },
      {
        "protein_id": "G5E968"
      },
      {
        "protein_id": "G3V2Q7"
      }
    ]
  },
  {
    "question": "How many transcripts does gene AFAP1 have?",
    "cypher": "MATCH (g:Gene {id: 'AFAP1'})-[:TRANSCRIBED_INTO]->(t:Transcript) RETURN COUNT(t) AS transcript_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "transcript_count": 16
      }
    ],
    "answer": "The gene AFAP1 has 16 transcripts."
  },
  {
    "question": "What disease is variant chr20:g.6009862G>A mentioned in?",
    "cypher": "MATCH (v:Known_variant {id: 'chr20:g.6009862G>A'}) RETURN v.disease AS variant_disease",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "variant_disease": "-"
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many projects does Ana Rita Colaco participate in?",
    "cypher": "MATCH (u:User {name: 'Ana Rita Cola\u00e7o'})-[:PARTICIPATES_IN]->(p:Project) RETURN COUNT(p) AS project_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "project_count": 4
      }
    ],
    "answer": "Ana Rita Colaco participates in 4 projects."
  },
  {
    "question": "What cellular components is protein P10645 associated with?",
    "cypher": "MATCH (p:Protein {id: 'P10645'})-[:ASSOCIATED_WITH]->(c:Cellular_component) RETURN COUNT(c) AS component_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "component_count": 204
      }
    ],
    "answer": "Protein P10645 is associated with 204 different cellular components."
  },
  {
    "question": "How many peptides belong to protein P28906?",
    "cypher": "MATCH (pep:Peptide)-[:BELONGS_TO_PROTEIN]->(p:Protein {id: 'P28906'}) RETURN COUNT(pep) AS peptide_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "peptide_count": 29
      }
    ],
    "answer": "There are 29 peptides that belong to protein P28906."
  },
  {
    "question": "What complex is protein P20783 a subunit of?",
    "cypher": "MATCH (p:Protein {id: 'P20783'})-[:IS_SUBUNIT_OF]->(c:Complex) RETURN c.name AS complex_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "complex_name": "Neurotrophin-3-p75 complex"
      }
    ],
    "answer": "Protein P20783 is a subunit of the Neurotrophin-3-p75 complex."
  },
  {
    "question": "How many folks are responsible for projects?",
    "cypher": "MATCH (u:User)-[:IS_RESPONSIBLE]->(p:Project) RETURN COUNT(DISTINCT u) AS responsible_user_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "responsible_user_count": 3
      }
    ],
    "answer": "3 users are responsible for projects."
  },
  {
    "question": "What's the highest score for protein P28906's disease associations?",
    "cypher": "MATCH (p:Protein {id: 'P28906'})-[r:ASSOCIATED_WITH]->(d:Disease) WHERE r.score IS NOT NULL RETURN MAX(r.score) AS highest_association_score",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_association_score": 4.469
      }
    ],
    "answer": "The highest association score for protein P28906 with a disease is 4.469."
  },
  {
    "question": "How many pathways is metabolite HMDB0094081 annotated in?",
    "cypher": "MATCH (m:Metabolite {id: 'HMDB0094081'})-[:ANNOTATED_IN_PATHWAY]->(p:Pathway) RETURN COUNT(p) AS pathway_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "pathway_count": 10
      }
    ],
    "answer": "Metabolite HMDB0094081 is annotated in 10 pathways."
  },
  {
    "question": "What's the parent disease of ovarian angiosarcoma?",
    "cypher": "MATCH (d:Disease {name: 'ovarian angiosarcoma'})-[:HAS_PARENT]->(parent:Disease) RETURN parent.name AS parent_disease_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "parent_disease_name": "sarcoma"
      },
      {
        "parent_disease_name": "ovarian cancer"
      },
      {
        "parent_disease_name": "angiosarcoma"
      }
    ]
  },
  {
    "question": "How many proteins interact with protien P10645?",
    "cypher": "MATCH (p:Protein {id: 'P10645'})-[:COMPILED_INTERACTS_WITH|CURATED_INTERACTS_WITH]-(other:Protein) RETURN COUNT(DISTINCT other) AS interacting_protein_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interacting_protein_count": 195
      }
    ],
    "answer": "Based on the query result, protein P10645 interacts with 195 distinct proteins."
  },
  {
    "question": "What disease does project P0000006 study?",
    "cypher": "MATCH (p:Project {id: 'P0000006'})-[:STUDIES_DISEASE]->(d:Disease) RETURN d.name AS disease_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "disease_name": "ovarian serous carcinoma"
      }
    ],
    "answer": "Project P0000006 studies ovarian serous carcinoma."
  },
  {
    "question": "How many publications mention angiosarcoma?",
    "cypher": "MATCH (d:Disease {name: 'angiosarcoma'})-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) RETURN COUNT(pub) AS publication_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "publication_count": 3783
      }
    ],
    "answer": "3,783 publications mention angiosarcoma."
  },
  {
    "question": "What tissue does project P0000003 study?",
    "cypher": "MATCH (p:Project {id: 'P0000003'})-[:STUDIES_TISSUE]->(t:Tissue) RETURN t.name AS tissue_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "tissue_name": "abdominal adipose tissue"
      }
    ],
    "answer": "Project P0000003 studies abdominal adipose tissue."
  },
  {
    "question": "How many modification sites does any protein have on average?",
    "cypher": "MATCH (p:Protein)-[:HAS_MODIFIED_SITE]->(m:Modified_protein) WITH p, COUNT(m) AS mod_count RETURN AVG(mod_count) AS average_modifications",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_modifications": 2.5945551465921883
      }
    ],
    "answer": "Based on the query result, on average, a protein has approximately 2.6 modification sites."
  },
  {
    "question": "What chromosome is transcript NM_001371091.1 located on?",
    "cypher": "MATCH (t:Transcript {id: 'NM_001371091.1'})-[:LOCATED_IN]->(c:Chromosome) RETURN c.name AS chromosome_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "chromosome_name": "4"
      }
    ],
    "answer": "Transcript NM_001371091.1 is located on chromosome 4."
  },
  {
    "question": "What cellular component is protein P10645 associated with through gene CHGA?",
    "cypher": "MATCH (g:Gene {id: 'CHGA'})-[:TRANSLATED_INTO]->(p:Protein {id: 'P10645'})-[:ASSOCIATED_WITH]->(c:Cellular_component) RETURN c.name AS component_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "component_name": "neuronal dense core vesicle"
      }
    ],
    "answer": "The protein P10645 is associated with the neuronal dense core vesicle cellular component through the gene CHGA."
  },
  {
    "question": "What chromosome is gene AFAP1's transcript located on?",
    "cypher": "MATCH (g:Gene {id: 'AFAP1'})-[:TRANSCRIBED_INTO]->(t:Transcript)-[:LOCATED_IN]->(c:Chromosome) RETURN c.name AS chromosome_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "chromosome_name": "4"
      }
    ],
    "answer": "Gene AFAP1's transcript is located on chromosome 4."
  },
  {
    "question": "What pathways contain metabolites associated with protein P49914?",
    "cypher": "MATCH (p:Protein {id: 'P49914'})<-[:ASSOCIATED_WITH]-(m:Metabolite)-[:ANNOTATED_IN_PATHWAY]->(path:Pathway) RETURN COUNT(DISTINCT path) AS pathway_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "pathway_count": 49309
      }
    ],
    "answer": "The protein P49914 is associated with 49,309 distinct pathways containing metabolites."
  },
  {
    "question": "How many proteins are translated from genes that have variants on chromosome 4?",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_GENE]->(g:Gene)-[:TRANSLATED_INTO]->(p:Protein) WHERE v.id STARTS WITH 'chr4:' RETURN COUNT(DISTINCT p) AS protein_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "protein_count": 4981
      }
    ],
    "answer": "Based on the query result, there are 4,981 distinct proteins that are translated from genes with variants on chromosome 4."
  },
  {
    "question": "What complex contains proteins translated from gene NTF3?",
    "cypher": "MATCH (g:Gene {id: 'NTF3'})-[:TRANSLATED_INTO]->(p:Protein)-[:IS_SUBUNIT_OF]->(c:Complex) RETURN c.name AS complex_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "complex_name": "Neurotrophin-3-p75 complex"
      }
    ],
    "answer": "The Neurotrophin-3-p75 complex contains proteins translated from the NTF3 gene."
  },
  {
    "question": "How many diseases are associated with proteins from peptide LTQGICLEQNKTSSCAEFK?",
    "cypher": "MATCH (pep:Peptide {id: 'LTQGICLEQNKTSSCAEFK'})-[:BELONGS_TO_PROTEIN]->(p:Protein)-[:ASSOCIATED_WITH]->(d:Disease) RETURN COUNT(DISTINCT d) AS disease_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "disease_count": 1128
      }
    ],
    "answer": "1,128 diseases are associated with proteins containing the peptide LTQGICLEQNKTSSCAEFK."
  },
  {
    "question": "What biological processes are associated with complexs that contain protein P20783?",
    "cypher": "MATCH (p:Protein {id: 'P20783'})-[:IS_SUBUNIT_OF]->(c:Complex)-[:ASSOCIATED_WITH]->(b:Biological_process) RETURN COUNT(DISTINCT b) AS process_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "process_count": 4
      }
    ],
    "answer": "The query result indicates that there are 4 distinct biological processes associated with complexes containing the protein P20783."
  },
  {
    "question": "How many publications mention diseases associated with protein P28906?",
    "cypher": "MATCH (p:Protein {id: 'P28906'})-[:ASSOCIATED_WITH]->(d:Disease)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) RETURN COUNT(DISTINCT pub) AS publication_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "publication_count": 3408763
      }
    ],
    "answer": "Based on the query result, there are 3,408,763 publications that mention diseases associated with protein P28906."
  },
  {
    "question": "What projects follow up the work that Alberto Santos is responsible for?",
    "cypher": "MATCH (u:User {name: 'Alberto Santos'})-[:IS_RESPONSIBLE]->(p1:Project)<-[:FOLLOWS_UP_PROJECT]-(p2:Project) RETURN COUNT(p2) AS followup_project_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "followup_project_count": 3
      }
    ],
    "answer": "Based on the query result, there are 3 projects that follow up the work Alberto Santos is responsible for."
  },
  {
    "question": "How many transcripts are located on the same chromosome as gene KANK3's stuff?",
    "cypher": "MATCH (g:Gene {id: 'KANK3'})-[:TRANSCRIBED_INTO]->(t1:Transcript)-[:LOCATED_IN]->(c:Chromosome)<-[:LOCATED_IN]-(t2:Transcript) RETURN COUNT(DISTINCT t2) AS transcript_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "transcript_count": 15544
      }
    ],
    "answer": "There are 15,544 transcripts located on the same chromosome as the KANK3 gene's transcripts."
  },
  {
    "question": "What pathways include metabolites from food sources?",
    "cypher": "MATCH (f:Food)-[:HAS_CONTENT]->(m:Metabolite)-[:ANNOTATED_IN_PATHWAY]->(p:Pathway) RETURN COUNT(DISTINCT p) AS pathway_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "pathway_count": 25740
      }
    ],
    "answer": "Based on the query result, there are 25,740 distinct pathways that include metabolites from food sources."
  },
  {
    "question": "How many projects are there studying diseases mentioned in publications?",
    "cypher": "MATCH (p:Project)-[:STUDIES_DISEASE]->(d:Disease)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) RETURN COUNT(DISTINCT p) AS project_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "project_count": 6
      }
    ],
    "answer": "There are 6 distinct projects studying diseases that have been mentioned in publications."
  },
  {
    "question": "What's the organism of pathways that metabolite HMDB0094081 is annotated in?",
    "cypher": "MATCH (m:Metabolite {id: 'HMDB0094081'})-[:ANNOTATED_IN_PATHWAY]->(p:Pathway) WHERE p.organism IS NOT NULL RETURN p.organism AS pathway_organism LIMIT 1",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "pathway_organism": "9606"
      }
    ],
    "answer": "The organism of the pathway for metabolite HMDB0094081 is 9606, which corresponds to Homo sapiens (human)."
  },
  {
    "question": "How many biological processes are parent processes of GO:0048311?",
    "cypher": "MATCH (b1:Biological_process {id: 'GO:0048311'})-[:HAS_PARENT]->(b2:Biological_process) RETURN COUNT(b2) AS parent_process_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "parent_process_count": 2
      }
    ],
    "answer": "There are 2 biological processes that are parent processes of GO:0048311."
  },
  {
    "question": "What clinical relevance does variant chr4:g.7768929G>T have?",
    "cypher": "MATCH (v:Known_variant {id: 'chr4:g.7768929G>T'}) RETURN v.clinical_relevance AS variant_clinical_relevance",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "variant_clinical_relevance": "-"
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many proteins are associated with diseases that are also linked to the CHGA gene's protein products?",
    "cypher": "MATCH (g:Gene {name: 'CHGA'})-[:TRANSLATED_INTO]->(p1:Protein)-[:ASSOCIATED_WITH]->(d:Disease)<-[:ASSOCIATED_WITH]-(p2:Protein) RETURN COUNT(DISTINCT p2) AS total_proteins",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_proteins": 0
      }
    ],
    "answer": "Based on the query result, 0 proteins are associated with diseases that are also linked to the CHGA gene's protein products."
  },
  {
    "question": "What's the name of the cellular component associated with proteins translated from the NUDT1 gene?",
    "cypher": "MATCH (g:Gene {name: 'NUDT1'})-[:TRANSLATED_INTO]->(p:Protein)-[:ASSOCIATED_WITH]->(cc:Cellular_component) RETURN cc.name AS component_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the highest score among protein interactions where both proteins are associated with the same biological process",
    "cypher": "MATCH (p1:Protein)-[:COMPILED_INTERACTS_WITH]->(p2:Protein), (p1)-[:ASSOCIATED_WITH]->(bp:Biological_process)<-[:ASSOCIATED_WITH]-(p2) WHERE p1.id < p2.id RETURN MAX(r.score) AS highest_interaction_score",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "How many distinct pathways connect to proteins that have known variants on chromosome 16?",
    "cypher": "MATCH (chr:Chromosome {name: '16'})<-[:VARIANT_FOUND_IN_CHROMOSOME]-(v:Known_variant)-[:VARIANT_FOUND_IN_GENE]->(g:Gene)-[:TRANSLATED_INTO]->(p:Protein)-[:ANNOTATED_IN_PATHWAY]->(pw:Pathway) RETURN COUNT(DISTINCT pw) AS pathway_count",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "pathway_count": 1189
      }
    ],
    "answer": "Based on the query result, there are 1,189 distinct pathways that connect to proteins with known variants on chromosome 16."
  },
  {
    "question": "What's the shortest path length between any tissue and a disease through protein associations?",
    "cypher": "MATCH path = shortestPath((t:Tissue)-[*]-(d:Disease)) WHERE t.name = 'fungus' AND d.name IS NOT NULL RETURN LENGTH(path) AS shortest_distance",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "Tell me the description of the biological process that's parent to mitochondrion inheritance",
    "cypher": "MATCH (bp1:Biological_process {name: 'mitochondrion inheritance'})-[:HAS_PARENT]->(bp2:Biological_process) RETURN bp2.description AS parent_description",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "parent_description": "Any process that establishes the spatial arrangement of mitochondria between and within cells. [GOC:jid]"
      },
      {
        "parent_description": "The partitioning of organelles between daughter cells at cell division. [GOC:jid]"
      }
    ]
  },
  {
    "question": "How many protiens are substrates of the modified sites found in MPG protein?",
    "cypher": "MATCH (p:Protein {name: 'MPG'})-[:HAS_MODIFIED_SITE]->(mp:Modified_protein)-[:IS_SUBSTRATE_OF]->(p2:Protein) RETURN COUNT(DISTINCT p2) AS substrate_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "substrate_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 proteins that are substrates of the modified sites found in the MPG protein."
  },
  {
    "question": "What's the maximum position value among clinically relevant variants associated with diseases?",
    "cypher": "MATCH (crv:Clinically_relevant_variant)-[:ASSOCIATED_WITH]->(d:Disease) WHERE crv.position IS NOT NULL RETURN MAX(crv.position) AS highest_position",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_position": 212578308
      }
    ],
    "answer": "The maximum position value among clinically relevant variants associated with diseases is 212,578,308."
  },
  {
    "question": "How many publications mention functional regions that are found in proteins associated with cellular components?",
    "cypher": "MATCH (fr:Functional_region)-[:FOUND_IN_PROTEIN]->(p:Protein)-[:ASSOCIATED_WITH]->(cc:Cellular_component), (fr)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) RETURN COUNT(DISTINCT pub) AS publication_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "publication_count": 1554
      }
    ],
    "answer": "1,554 publications mention functional regions that are found in proteins associated with cellular components."
  },
  {
    "question": "What's the source of the protein structure linked to NUDT1 gene products?",
    "cypher": "MATCH (g:Gene {name: 'NUDT1'})-[:TRANSLATED_INTO]->(p:Protein)-[:HAS_STRUCTURE]->(ps:Protein_structure) RETURN ps.source AS structure_source LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Count how many complexes are associated with biological processes that have child processes",
    "cypher": "MATCH (c:Complex)-[:ASSOCIATED_WITH]->(bp1:Biological_process)<-[:HAS_PARENT]-(bp2:Biological_process) RETURN COUNT(DISTINCT c) AS complex_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "complex_count": 2153
      }
    ],
    "answer": "There are 2,153 unique complexes associated with biological processes that have child processes."
  },
  {
    "question": "What's the lowest year among publications that GWAS studies on gout were published in?",
    "cypher": "MATCH (g:GWAS_study)-[:STUDIES_TRAIT]->(ef:Experimental_factor {name: 'gout'}), (g)-[:PUBLISHED_IN]->(p:Publication) WHERE p.year IS NOT NULL RETURN MIN(p.year) AS earliest_year",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_year": 2012
      }
    ],
    "answer": "Based on the query result, the lowest year among publications for GWAS studies on gout is 2012."
  },
  {
    "question": "How many transcripts connect the KANK3 gene to chromosome 19?",
    "cypher": "MATCH (g:Gene {name: 'KANK3'})-[:TRANSCRIBED_INTO]->(t:Transcript)-[:LOCATED_IN]->(c:Chromosome {name: '19'}) RETURN COUNT(DISTINCT t) AS transcript_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "transcript_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 transcripts that connect the KANK3 gene to chromosome 19."
  },
  {
    "question": "Find the organism property of complexes containing proteins that interact with each other",
    "cypher": "MATCH (p1:Protein)-[:CURATED_INTERACTS_WITH]->(p2:Protein), (p1)-[:IS_SUBUNIT_OF]->(c:Complex) WHERE p2.id IN [(p)-[:IS_SUBUNIT_OF]->(c) | p.id] RETURN c.organism AS complex_organism LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "complex_organism": "9606"
      }
    ],
    "answer": "The organism property of the complex is 9606, which corresponds to Homo sapiens (human)."
  },
  {
    "question": "What's the total number of unique peptides that belong to proteins with structures?",
    "cypher": "MATCH (pep:Peptide)-[:BELONGS_TO_PROTEIN]->(p:Protein)-[:HAS_STRUCTURE]->(ps:Protein_structure) RETURN COUNT(DISTINCT pep) AS peptide_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "peptide_count": 433772
      }
    ],
    "answer": "There are 433,772 unique peptides that belong to proteins with known structures."
  },
  {
    "question": "Which impact level shows up most among somatic mutations found in genes on chromosone 1?",
    "cypher": "MATCH (chr:Chromosome {name: '1'})<-[:VARIANT_FOUND_IN_CHROMOSOME]-(sm:Somatic_mutation)-[:VARIANT_FOUND_IN_GENE]->(g:Gene) WHERE sm.impact IS NOT NULL RETURN sm.impact AS most_common_impact ORDER BY COUNT(*) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "How many pathways are metabolites associated with when those metabolites are also linked to tissues?",
    "cypher": "MATCH (m:Metabolite)-[:ASSOCIATED_WITH]->(t:Tissue), (m)-[:ANNOTATED_IN_PATHWAY]->(p:Pathway) RETURN COUNT(DISTINCT p) AS pathway_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "pathway_count": 68
      }
    ],
    "answer": "Based on the query result, there are 68 distinct pathways associated with metabolites that are also linked to tissues."
  },
  {
    "question": "Tell me the linkout URL for protein structures associated with the P36639-4 protein",
    "cypher": "MATCH (p:Protein {id: 'P36639-4'})-[:HAS_STRUCTURE]->(ps:Protein_structure) RETURN ps.link AS structure_url",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "structure_url": "http://www.rcsb.org/structure/6GLR"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6AA4"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5GHI"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLT"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLQ"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLS"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5FSK"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5OTM"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5ANS"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLI"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6F23"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6F1X"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLU"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5GHJ"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLH"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/1IRY"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLN"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6EQ6"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/3ZR1"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5FSL"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6F20"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6ILI"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLL"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5GHM"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/4N1U"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLV"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5FSI"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLF"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6EQ3"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5GHO"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5WS7"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6AA5"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5NHY"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5GHN"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6AA3"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5ANW"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6IJY"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLK"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLO"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/3ZR0"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLE"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5NGS"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLG"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5GHQ"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/3WHW"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5NGT"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/4N1T"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6EQ5"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6F22"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5FSM"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5FSO"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6EQ2"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5NGR"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6EQ7"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5ANT"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5GHP"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLJ"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/4C9W"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6EQ4"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5FSN"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLP"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/6GLM"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/4C9X"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5ANV"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/5ANU"
      },
      {
        "structure_url": "http://www.rcsb.org/structure/3Q93"
      }
    ]
  },
  {
    "question": "What's the maximum score for protein associations with molecular functions that have parent functions?",
    "cypher": "MATCH (p:Protein)-[a:ASSOCIATED_WITH]->(mf1:Molecular_function)<-[:HAS_PARENT]-(mf2:Molecular_function) WHERE a.score IS NOT NULL RETURN MAX(a.score) AS highest_score",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_score": 5.0
      }
    ],
    "answer": "The maximum score for protein associations with molecular functions that have parent functions is 5.0."
  },
  {
    "question": "How many folks participated in projects studying diseases?",
    "cypher": "MATCH (u:User)-[:PARTICIPATES_IN]->(p:Project)-[:STUDIES_DISEASE]->(d:Disease) RETURN COUNT(DISTINCT u) AS participant_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "participant_count": 3
      }
    ],
    "answer": "3 people participated in projects studying diseases."
  },
  {
    "question": "What's the clinical relevance of variants found in the CGHA gene that affect protein P10645?",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_GENE]->(g:Gene {name: 'CHGA'}), (v)-[:VARIANT_FOUND_IN_PROTEIN]->(p:Protein {id: 'P10645'}) RETURN v.clinical_relevance AS variant_relevance LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Count the number of proteins that act on other proteins which are detected in disease samples",
    "cypher": "MATCH (p1:Protein)-[:ACTS_ON]->(p2:Protein)-[:DETECTED_IN_PATHOLOGY_SAMPLE]->(d:Disease) RETURN COUNT(DISTINCT p1) AS acting_protein_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "acting_protein_count": 15307
      }
    ],
    "answer": "Based on the query result, there are 15,307 unique proteins that act on other proteins which are detected in disease samples."
  },
  {
    "question": "Find the shortest path length between any user and a disease through project relationships",
    "cypher": "MATCH path = shortestPath((u:User)-[*]-(d:Disease)) WHERE u.id IS NOT NULL AND d.id IS NOT NULL RETURN LENGTH(path) AS connection_distance",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the highest sample size among GWAS studies investigating gout?",
    "cypher": "MATCH (g:GWAS_study)-[:STUDIES_TRAIT]->(e:Experimental_factor {name: 'gout'}) WHERE g.sample_size IS NOT NULL RETURN g.sample_size AS largest_sample_size ORDER BY LENGTH(g.sample_size) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "How many amino acid sequences are linked to proteins that participate in pathways?",
    "cypher": "MATCH (p:Protein)-[:HAS_SEQUENCE]->(a:Amino_acid_sequence), (p)-[:ANNOTATED_IN_PATHWAY]->(pw:Pathway) RETURN COUNT(DISTINCT a) AS sequence_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "sequence_count": 10670
      }
    ],
    "answer": "Based on the query result, there are 10,670 distinct amino acid sequences linked to proteins that participate in pathways."
  },
  {
    "question": "Tell me the effect of known variants that connect genes to proteins through transcription",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_GENE]->(g:Gene)-[:TRANSCRIBED_INTO]->(t:Transcript)-[:TRANSLATED_INTO]->(p:Protein) RETURN v.effect AS variant_effect LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "variant_effect": "missense variant"
      }
    ],
    "answer": "Based on the query result, a known variant that connects a gene to a protein through transcription has a missense variant effect. A missense variant means that a single nucleotide change results in a different amino acid being coded in the protein, which can potentially alter the protein's structure or function."
  },
  {
    "question": "What's the minimum position value among modified protein sites that have modifications?",
    "cypher": "MATCH (mp:Modified_protein)-[:HAS_MODIFICATION]->(m:Modification) WHERE mp.position IS NOT NULL RETURN MIN(toInteger(mp.position)) AS lowest_position",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_position": 1
      }
    ],
    "answer": "The minimum position value among modified protein sites is 1."
  },
  {
    "question": "How many distinct cellular components are proteins associated with when those proteins also appear in complexs?",
    "cypher": "MATCH (p:Protein)-[:ASSOCIATED_WITH]->(cc:Cellular_component), (p)-[:IS_SUBUNIT_OF]->(c:Complex) RETURN COUNT(DISTINCT cc) AS component_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "component_count": 2765
      }
    ],
    "answer": "Based on the query result, there are 2,765 distinct cellular components associated with proteins that are also part of complexes."
  },
  {
    "question": "What metabolite classes are found in foods?",
    "cypher": "MATCH (f:Food)-[:HAS_CONTENT]->(m:Metabolite) WHERE m.class IS NOT NULL RETURN DISTINCT m.class AS metabolite_class LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "metabolite_class": "Glycerophospholipids"
      }
    ],
    "answer": "Based on the query result, at least one metabolite class found in foods is Glycerophospholipids. However, since the query used a LIMIT 1, there may be other metabolite classes not shown in this result."
  },
  {
    "question": "Count how many proteins serve as bridges between diseases and pathways through metabolites",
    "cypher": "MATCH (d:Disease)<-[:ASSOCIATED_WITH]-(m:Metabolite)-[:ASSOCIATED_WITH]->(p:Protein)-[:ANNOTATED_IN_PATHWAY]->(pw:Pathway) RETURN COUNT(DISTINCT p) AS bridge_protein_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the average molecular weight of metabolites annotated in human pathways?",
    "cypher": "MATCH (m:Metabolite)-[:ANNOTATED_IN_PATHWAY]->(p:Pathway {organism: '9606'}) WHERE m.average_molecular_weight IS NOT NULL RETURN AVG(toFloat(m.average_molecular_weight)) AS mean_weight",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "mean_weight": 551.3150246173201
      }
    ],
    "answer": "The average molecular weight of metabolites annotated in human pathways is approximately 551.32 Da (Daltons)."
  },
  {
    "question": "Find the year when the most recent publication mentioning NTF3 protein was published",
    "cypher": "MATCH (p:Protein {name: 'NTF3'})-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.year IS NOT NULL RETURN MAX(pub.year) AS latest_year",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "latest_year": 2019
      }
    ],
    "answer": "Based on the query result, the most recent publication mentioning the NTF3 protein was published in 2019."
  },
  {
    "question": "How many tissues have hierarchical relationships going 4 levels deep?",
    "cypher": "MATCH (t1:Tissue)-[:HAS_PARENT]->(t2:Tissue)-[:HAS_PARENT]->(t3:Tissue)-[:HAS_PARENT]->(t4:Tissue) RETURN COUNT(DISTINCT t1) AS deep_tissue_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "deep_tissue_count": 1301
      }
    ],
    "answer": "1,301 tissues have hierarchical relationships that go 4 levels deep."
  },
  {
    "question": "What stuff connects experimental factors to diseases through mapping relationships?",
    "cypher": "MATCH (ef:Experimental_factor)-[:MAPS_TO]->(d:Disease) RETURN ef.name AS connecting_factor LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_factor": "cleft lip"
      }
    ],
    "answer": "Based on the query result, cleft lip appears to be an experimental factor that maps to a disease, serving as a connecting factor between experimental factors and diseases."
  },
  {
    "question": "Count proteins that have both curated and compiled interactions with the same partner",
    "cypher": "MATCH (p1:Protein)-[:CURATED_INTERACTS_WITH]->(p2:Protein), (p1)-[:COMPILED_INTERACTS_WITH]->(p2) RETURN COUNT(DISTINCT p1) AS dual_interaction_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "dual_interaction_count": 8278
      }
    ],
    "answer": "8,278 proteins have both curated and compiled interactions with the same partner."
  },
  {
    "question": "What's the highest evidence score for protein associations with tissues that have parent tissues?",
    "cypher": "MATCH (p:Protein)-[a:ASSOCIATED_WITH]->(t1:Tissue)-[:HAS_PARENT]->(t2:Tissue) WHERE a.score IS NOT NULL RETURN MAX(a.score) AS peak_score",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "peak_score": 5.0
      }
    ],
    "answer": "The highest evidence score for protein associations with tissues that have parent tissues is 5.0."
  },
  {
    "question": "How many modifications are linked to protein sites that serve as substrates?",
    "cypher": "MATCH (mp:Modified_protein)-[:HAS_MODIFICATION]->(m:Modification), (mp)-[:IS_SUBSTRATE_OF]->(p:Protein) RETURN COUNT(DISTINCT m) AS modification_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "modification_count": 3
      }
    ],
    "answer": "3 modifications are linked to protein sites that serve as substrates."
  },
  {
    "question": "Tell me the super class of metabolites that proteins from the GPD2 gene are associated with",
    "cypher": "MATCH (g:Gene {name: 'GPD2'})-[:TRANSLATED_INTO]->(p:Protein)-[:ASSOCIATED_WITH]->(m:Metabolite) WHERE m.super_class IS NOT NULL RETURN m.super_class AS metabolite_superclass LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the lowest imact level among somatic mutations that are known variants?",
    "cypher": "MATCH (sm:Somatic_mutation)-[:IS_A_KNOWN_VARIANT]->(kv:Known_variant) WHERE sm.impact IS NOT NULL RETURN sm.impact AS minimal_impact ORDER BY sm.impact ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "minimal_impact": "HIGH"
      }
    ],
    "answer": "The lowest impact level among somatic mutations that are known variants is HIGH."
  },
  {
    "question": "Count how many projects follow up on other projects that study the same diseases",
    "cypher": "MATCH (p1:Project)-[:FOLLOWS_UP_PROJECT]->(p2:Project), (p1)-[:STUDIES_DISEASE]->(d:Disease)<-[:STUDIES_DISEASE]-(p2) RETURN COUNT(DISTINCT p1) AS followup_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "followup_count": 3
      }
    ],
    "answer": "3 projects follow up on other projects that study the same diseases."
  },
  {
    "question": "What's the accession ID of proteins that have peptide RLPNGTELR?",
    "cypher": "MATCH (pep:Peptide {id: 'RLPNGTELR'})-[:BELONGS_TO_PROTEIN]->(p:Protein) RETURN p.accession AS protein_accession LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "protein_accession": "3MG_HUMAN"
      }
    ],
    "answer": "The accession ID of the protein with the peptide RLPNGTELR is 3MG_HUMAN."
  },
  {
    "question": "How many phenotypes are mapped to by experimental factors that GWAS studies investigate?",
    "cypher": "MATCH (g:GWAS_study)-[:STUDIES_TRAIT]->(ef:Experimental_factor)-[:MAPS_TO]->(ph:Phenotype) RETURN COUNT(DISTINCT ph) AS phenotype_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "phenotype_count": 69
      }
    ],
    "answer": "Based on the query result, there are 69 distinct phenotypes mapped to by experimental factors in GWAS studies."
  },
  {
    "question": "Find the total number of genes that have transcripts located on multiple chromosomes",
    "cypher": "MATCH (g:Gene)-[:TRANSCRIBED_INTO]->(t1:Transcript)-[:LOCATED_IN]->(c1:Chromosome), (g)-[:TRANSCRIBED_INTO]->(t2:Transcript)-[:LOCATED_IN]->(c2:Chromosome) WHERE c1.id <> c2.id RETURN COUNT(DISTINCT g) AS multi_chromosome_genes",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "multi_chromosome_genes": 22
      }
    ],
    "answer": "Based on the query result, there are 22 genes that have transcripts located on multiple chromosomes."
  },
  {
    "question": "What's the highest score among protein interactions where the evidence type is CURATED?",
    "cypher": "MATCH (p1:Protein)-[r:CURATED_INTERACTS_WITH]->(p2:Protein) WHERE r.score IS NOT NULL AND r.evidence_type = 'CURATED' RETURN MAX(r.score) AS max_curated_score",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "max_curated_score": null
      }
    ],
    "answer": "UNKNOWN\n\nThe query result returned None, which suggests there are no CURATED protein interactions with a valid score in the database."
  },
  {
    "question": "Tell me which chromosome contains transcripts from genes with variants affecting NUDT1 proteins",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_PROTEIN]->(p:Protein {name: 'NUDT1'})<-[:TRANSLATED_INTO]-(t:Transcript)-[:LOCATED_IN]->(c:Chromosome) RETURN c.name AS chromosome_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "chromosome_name": "7"
      }
    ],
    "answer": "Chromosome 7 contains transcripts from genes with variants affecting NUDT1 proteins."
  },
  {
    "question": "How many diseases hav proteins detected in their pathology samples?",
    "cypher": "MATCH (p:Protein)-[:DETECTED_IN_PATHOLOGY_SAMPLE]->(d:Disease) RETURN COUNT(DISTINCT d) AS disease_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "disease_count": 16
      }
    ],
    "answer": "Based on the query result, 16 distinct diseases have proteins detected in their pathology samples."
  },
  {
    "question": "What's the source of functional regions found in proteins that interact with MPG?",
    "cypher": "MATCH (p1:Protein {name: 'MPG'})-[:COMPILED_INTERACTS_WITH|CURATED_INTERACTS_WITH]-(p2:Protein)<-[:FOUND_IN_PROTEIN]-(fr:Functional_region) RETURN fr.source AS region_source LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "region_source": "PFam"
      }
    ],
    "answer": "Based on the query result, the source of functional regions found in proteins that interact with MPG is PFam."
  },
  {
    "question": "Count how many complexes contain proteins from genes with somatic mutations",
    "cypher": "MATCH (sm:Somatic_mutation)-[:VARIANT_FOUND_IN_GENE]->(g:Gene)-[:TRANSLATED_INTO]->(p:Protein)-[:IS_SUBUNIT_OF]->(c:Complex) RETURN COUNT(DISTINCT c) AS complex_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "complex_count": 178
      }
    ],
    "answer": "178 complexes contain proteins from genes with somatic mutations."
  },
  {
    "question": "What's the smallest page number among publications about diseases?",
    "cypher": "MATCH (d:Disease)-[:MENTIONED_IN_PUBLICATION]->(p:Publication) WHERE p.page IS NOT NULL RETURN p.page AS earliest_page ORDER BY toInteger(p.page) ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "How many unique modifications are there across all modified protein sites?",
    "cypher": "MATCH (mp:Modified_protein)-[:HAS_MODIFICATION]->(m:Modification) RETURN COUNT(DISTINCT m) AS total_modifications",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_modifications": 5
      }
    ],
    "answer": "There are 5 unique modifications across all modified protein sites."
  },
  {
    "question": "How many proteins are associated with diseases that are also linked to proteins modified at position 172?",
    "cypher": "MATCH (mp:Modified_protein {position: '172'})<-[:HAS_MODIFIED_SITE]-(p1:Protein)-[:ASSOCIATED_WITH]->(d:Disease)<-[:ASSOCIATED_WITH]-(p2:Protein) RETURN COUNT(DISTINCT p2) AS total_proteins",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_proteins": 17675
      }
    ],
    "answer": "Based on the query result, 17,675 proteins are associated with diseases that are also linked to proteins modified at position 172."
  },
  {
    "question": "What's the name of the tissue that is the parent of fungus form tissue?",
    "cypher": "MATCH (t1:Tissue {name: 'fungus form'})-[:HAS_PARENT]->(t2:Tissue) RETURN t2.name AS parent_tissue_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "parent_tissue_name": "fungus"
      }
    ],
    "answer": "The parent tissue of fungus form tissue is \"fungus\"."
  },
  {
    "question": "How many different modifications connect to proteins that interact with GMIP protein?",
    "cypher": "MATCH (p1:Protein {name: 'GMIP'})<-[:COMPILED_INTERACTS_WITH|CURATED_INTERACTS_WITH]-(p2:Protein)-[:HAS_MODIFIED_SITE]->(mp:Modified_protein)-[:HAS_MODIFICATION]->(m:Modification) RETURN COUNT(DISTINCT m) AS modification_count",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "modification_count": 2
      }
    ],
    "answer": "Based on the query result, there are 2 different modifications that connect to proteins that interact with the GMIP protein."
  },
  {
    "question": "What's the highest year among publications mentioning proteins that have the variant chr19:g.51354221C>A?",
    "cypher": "MATCH (v:Known_variant {id: 'chr19:g.51354221C>A'})-[:VARIANT_FOUND_IN_PROTEIN]->(p:Protein)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.year IS NOT NULL RETURN MAX(pub.year) AS latest_year",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "latest_year": 2018
      }
    ],
    "answer": "2018 is the highest year among publications mentioning proteins associated with the variant chr19:g.51354221C>A."
  },
  {
    "question": "How many pathways contain metabolites that are also found in food items?",
    "cypher": "MATCH (f:Food)-[:HAS_CONTENT]->(m:Metabolite)-[:ANNOTATED_IN_PATHWAY]->(pw:Pathway) RETURN COUNT(DISTINCT pw) AS pathway_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "pathway_count": 25740
      }
    ],
    "answer": "Based on the query result, there are 25,740 distinct pathways that contain metabolites also found in food items."
  },
  {
    "question": "What's the accession number of the protein translated from the NTF3 gene?",
    "cypher": "MATCH (g:Gene {name: 'NTF3'})-[:TRANSLATED_INTO]->(p:Protein) RETURN p.accession AS protein_accession LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "How many proteins are connected to cellular components that are associated with proteins having known variants?",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_PROTEIN]->(p1:Protein)-[:ASSOCIATED_WITH]->(cc:Cellular_component)<-[:ASSOCIATED_WITH]-(p2:Protein) RETURN COUNT(DISTINCT p2) AS protein_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the lowest score among protein associations with biological processes linked to the Neurotrophin-3-p75 complex?",
    "cypher": "MATCH (c:Complex {name: 'Neurotrophin-3-p75 complex'})-[:ASSOCIATED_WITH]->(bp:Biological_process)<-[:ASSOCIATED_WITH]-(p:Protein) WHERE p.score IS NOT NULL RETURN MIN(p.score) AS minimum_score",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "minimum_score": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Tell me the description of the disease that has ovarian angiosarcoma as a child?",
    "cypher": "MATCH (d1:Disease {name: 'ovarian angiosarcoma'})-[:HAS_PARENT]->(d2:Disease) RETURN d2.description AS parent_disease_description",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "parent_disease_description": "A cell type cancer that has material basis in abnormally proliferating cells derives from embryonic mesoderm. [url:http\\://cancergenome.nih.gov/cancersselected/Sarcoma, url:http\\://en.wikipedia.org/wiki/Sarcoma, url:http\\://www.cancer.gov/dictionary?CdrID=45562]"
      },
      {
        "parent_disease_description": "A female reproductive organ cancer that is located_in the ovary. [url:http\\://www.cancer.gov/dictionary?CdrID=445074]"
      },
      {
        "parent_disease_description": "A vascular cancer that derives_from the cells that line the walls of blood vessels or lymphatic vessels. [url:http\\://emedicine.medscape.com/article/276512-overview, url:http\\://en.wikipedia.org/wiki/Hemangiosarcoma, url:https\\://en.wikipedia.org/wiki/Angiosarcoma, url:https\\://ncit.nci.nih.gov/ncitbrowser/ConceptReport.jsp?dictionary=NCI_Thesaurus&ns=ncit&code=C3088, url:https\\://www.ncbi.nlm.nih.gov/pubmed/23327728]"
      }
    ]
  },
  {
    "question": "How many peptides belong to proteins that are subunits of complexes associated with biological processes?",
    "cypher": "MATCH (pep:Peptide)-[:BELONGS_TO_PROTEIN]->(p:Protein)-[:IS_SUBUNIT_OF]->(c:Complex)-[:ASSOCIATED_WITH]->(bp:Biological_process) RETURN COUNT(DISTINCT pep) AS peptide_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "peptide_count": 259203
      }
    ],
    "answer": "259,203 peptides belong to proteins that are subunits of complexes associated with biological processes."
  },
  {
    "question": "What's the ID of the modification at the top of the hierarchy containing MOD:01516?",
    "cypher": "MATCH (m1:Modification {id: 'MOD:01516'})-[:HAS_PARENT*]->(m2:Modification) WHERE NOT (m2)-[:HAS_PARENT]->() RETURN m2.id AS root_modification_id",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "root_modification_id": "MOD:00000"
      }
    ],
    "answer": "The ID of the modification at the top of the hierarchy containing MOD:01516 is MOD:00000."
  },
  {
    "question": "How many folks have proteins associated with angiosarcoma disease through CD34 protein?",
    "cypher": "MATCH (d:Disease {name: 'angiosarcoma'})<-[:ASSOCIATED_WITH]-(p:Protein {name: 'CD34'})<-[:BELONGS_TO_PROTEIN]-(pep:Peptide) RETURN COUNT(DISTINCT pep) AS peptide_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "peptide_count": 29
      }
    ],
    "answer": "Based on the query result, 29 peptides are associated with the angiosarcoma disease through the CD34 protein."
  },
  {
    "question": "What's the chemical formula of the metabolite linked to both MTHFS protein and pathway SMP0033411?",
    "cypher": "MATCH (p:Protein {name: 'MTHFS'})<-[:ASSOCIATED_WITH]-(m:Metabolite)-[:ANNOTATED_IN_PATHWAY]->(pw:Pathway {id: 'SMP0033411'}) RETURN m.chemical_formula AS metabolite_formula LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "metabolite_formula": "H"
      }
    ],
    "answer": "The chemical formula of the metabolite linked to both MTHFS protein and pathway SMP0033411 is H."
  },
  {
    "question": "How many transcripts does the ETFB gene produc?",
    "cypher": "MATCH (g:Gene {name: 'ETFB'})-[:TRANSCRIBED_INTO]->(t:Transcript) RETURN COUNT(DISTINCT t) AS transcript_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "transcript_count": 0
      }
    ],
    "answer": "Based on the query result, the ETFB gene produces 0 transcripts according to the current database."
  },
  {
    "question": "What's the highest position value among modified proteins that are substrates of kinases?",
    "cypher": "MATCH (mp:Modified_protein)-[:IS_SUBSTRATE_OF]->(p:Protein) WHERE mp.position IS NOT NULL RETURN MAX(toInteger(mp.position)) AS highest_position",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_position": 2274
      }
    ],
    "answer": "The highest position value among modified proteins that are substrates of kinases is 2274."
  },
  {
    "question": "How many proteins interact with proteins that have peptide DGGGEVSSQGPEDSLLGTQSRGHFSRQPVK?",
    "cypher": "MATCH (pep:Peptide {id: 'DGGGEVSSQGPEDSLLGTQSRGHFSRQPVK'})-[:BELONGS_TO_PROTEIN]->(p1:Protein)<-[:COMPILED_INTERACTS_WITH|CURATED_INTERACTS_WITH]-(p2:Protein) RETURN COUNT(DISTINCT p2) AS interacting_proteins",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interacting_proteins": 39
      }
    ],
    "answer": "39 proteins interact with proteins containing the peptide DGGGEVSSQGPEDSLLGTQSRGHFSRQPVK."
  },
  {
    "question": "Find the linkout URL of the pathway containing glycerol 3-phosphate metabolite",
    "cypher": "MATCH (m:Metabolite {name: 'Glycerol 3-phosphate'})-[:ANNOTATED_IN_PATHWAY]->(pw:Pathway) RETURN pw.linkout AS pathway_url LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "pathway_url": "http://smpdb.ca/view/SMP0027534"
      }
    ],
    "answer": "The linkout URL for the pathway containing glycerol 3-phosphate is http://smpdb.ca/view/SMP0027534."
  },
  {
    "question": "What's the smallest molecular weight among metabolites found in pathways that also contain DG(19:0/20:0/0:0)?",
    "cypher": "MATCH (m1:Metabolite {name: 'DG(19:0/20:0/0:0)'})-[:ANNOTATED_IN_PATHWAY]->(pw:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(m2:Metabolite) WHERE m2.average_molecular_weight IS NOT NULL RETURN MIN(toFloat(m2.average_molecular_weight)) AS lowest_weight",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_weight": 1.0079
      }
    ],
    "answer": "The smallest molecular weight among metabolites found in pathways containing DG(19:0/20:0/0:0) is 1.0079."
  },
  {
    "question": "How many publications mention diseases that have parent relationships?",
    "cypher": "MATCH (d1:Disease)-[:HAS_PARENT]->(d2:Disease)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) RETURN COUNT(DISTINCT pub) AS publication_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the organism ID for the complex that NTF3 protien is a subunit of?",
    "cypher": "MATCH (p:Protein {name: 'NTF3'})-[:IS_SUBUNIT_OF]->(c:Complex) RETURN c.organism AS complex_organism LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "complex_organism": "9606"
      }
    ],
    "answer": "The organism ID for the complex that NTF3 protein is a subunit of is 9606 (which corresponds to the human species)."
  },
  {
    "question": "How many proteins are detected in pathology samples of diseases mentioned in publications after 2010?",
    "cypher": "MATCH (p:Protein)-[:DETECTED_IN_PATHOLOGY_SAMPLE]->(d:Disease)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.year > 2010 RETURN COUNT(DISTINCT p) AS protein_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the effect of the variant found in CHGA gene at chromosome 14?",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_GENE]->(g:Gene {name: 'CHGA'}) WHERE v.id CONTAINS 'chr14' RETURN v.effect AS variant_effect LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the highest imdbRating... wait, I mean highest score for protein interactions with ETFB?",
    "cypher": "MATCH (p1:Protein {name: 'ETFB'})-[r:COMPILED_INTERACTS_WITH|CURATED_INTERACTS_WITH]-(p2:Protein) WHERE r.score IS NOT NULL RETURN MAX(r.score) AS highest_interaction_score",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_interaction_score": 0.999
      }
    ],
    "answer": "The highest interaction score for protein interactions with ETFB is 0.999."
  },
  {
    "question": "How many different tissues are associated with proteins that have Q9P107-2 as their ID?",
    "cypher": "MATCH (p:Protein {id: 'Q9P107-2'})-[:ASSOCIATED_WITH]->(t:Tissue) RETURN COUNT(DISTINCT t) AS tissue_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "tissue_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 different tissues associated with the protein Q9P107-2."
  },
  {
    "question": "Tell me the sequence window of modified proteins linked to ETFB through modification sites",
    "cypher": "MATCH (p:Protein {name: 'ETFB'})-[:HAS_MODIFIED_SITE]->(mp:Modified_protein) RETURN mp.sequence_window AS modification_window LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "modification_window": "CGPAQCQETIRTALAMGADRGIHVEVPPAEA"
      }
    ],
    "answer": "The sequence window of a modified protein linked to ETFB is: CGPAQCQETIRTALAMGADRGIHVEVPPAEA."
  },
  {
    "question": "What's the lowest year among publications that studied proteins with variants on chromosome 20?",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_CHROMOSOME]->(chr:Chromosome {name: '20'}), (v)-[:VARIANT_FOUND_IN_PROTEIN]->(p:Protein)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.year IS NOT NULL RETURN MIN(pub.year) AS earliest_year",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_year": 1911
      }
    ],
    "answer": "The lowest year among publications that studied proteins with variants on chromosome 20 is 1911."
  },
  {
    "question": "How many pathways connect metabolites that are associated with proteins having peptide sequences?",
    "cypher": "MATCH (pep:Peptide)-[:BELONGS_TO_PROTEIN]->(p:Protein)<-[:ASSOCIATED_WITH]-(m:Metabolite)-[:ANNOTATED_IN_PATHWAY]->(pw:Pathway) RETURN COUNT(DISTINCT pw) AS pathway_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's da name of the gene that has transcript NP_001288619.1?",
    "cypher": "MATCH (g:Gene)-[:TRANSCRIBED_INTO]->(t:Transcript {id: 'NP_001288619.1'}) RETURN g.name AS gene_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "gene_name": "chromogranin A"
      }
    ],
    "answer": "The gene name for transcript NP_001288619.1 is chromogranin A."
  },
  {
    "question": "How many distinct protein structures are linked to proteins that have variants in the NUDT1 gene?",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_GENE]->(g:Gene {name: 'NUDT1'})-[:TRANSLATED_INTO]->(p:Protein)-[:HAS_STRUCTURE]->(ps:Protein_structure) RETURN COUNT(DISTINCT ps) AS structure_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "structure_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 distinct protein structures linked to proteins that have variants in the NUDT1 gene."
  },
  {
    "question": "What's the super class of metabolites found in foods?",
    "cypher": "MATCH (f:Food)-[:HAS_CONTENT]->(m:Metabolite) WHERE m.super_class IS NOT NULL RETURN m.super_class AS metabolite_super_class LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "metabolite_super_class": "Lipids and lipid-like molecules"
      }
    ],
    "answer": "Based on the query result, the super class of metabolites found in foods is \"Lipids and lipid-like molecules\"."
  },
  {
    "question": "How many proteins are qc markers in tissues that have parent tissues?",
    "cypher": "MATCH (p:Protein)-[:IS_QCMARKER_IN_TISSUE]->(t1:Tissue)-[:HAS_PARENT]->(t2:Tissue) RETURN COUNT(DISTINCT p) AS qc_protein_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "qc_protein_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 proteins that are QC markers in tissues that have parent tissues."
  },
  {
    "question": "What's the DOI of publications mentioning the CRLS1 gene's proteins?",
    "cypher": "MATCH (g:Gene {name: 'CRLS1'})-[:TRANSLATED_INTO]->(p:Protein)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.DOI IS NOT NULL RETURN pub.DOI AS publication_doi LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the max position value among modified proteins connected to modifications under MOD:00538",
    "cypher": "MATCH (m1:Modification {id: 'MOD:00538'})<-[:HAS_PARENT*]-(m2:Modification)<-[:HAS_MODIFICATION]-(mp:Modified_protein) WHERE mp.position IS NOT NULL RETURN MAX(toInteger(mp.position)) AS highest_position",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_position": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many cellular components are linked to proteins translated from genes with variants?",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_GENE]->(g:Gene)-[:TRANSLATED_INTO]->(p:Protein)-[:ASSOCIATED_WITH]->(cc:Cellular_component) RETURN COUNT(DISTINCT cc) AS component_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "component_count": 3028
      }
    ],
    "answer": "Based on the query result, there are 3,028 distinct cellular components linked to proteins translated from genes with variants."
  },
  {
    "question": "What's the taxid of proteins that belong to the peptide LTQGICLEQNKTSSCAEFK?",
    "cypher": "MATCH (pep:Peptide {id: 'LTQGICLEQNKTSSCAEFK'})-[:BELONGS_TO_PROTEIN]->(p:Protein) RETURN p.taxid AS protein_taxid LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "protein_taxid": "9606"
      }
    ],
    "answer": "The taxid of the protein belonging to the peptide LTQGICLEQNKTSSCAEFK is 9606, which corresponds to the human species."
  },
  {
    "question": "How many pathways connect the PLPP3 gene to metabolites through translated proteins?",
    "cypher": "MATCH (g:Gene {name: 'PLPP3'})-[:TRANSLATED_INTO]->(p:Protein)-[:ANNOTATED_IN_PATHWAY]->(pw:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(m:Metabolite) RETURN COUNT(DISTINCT pw) AS connecting_pathways",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "connecting_pathways": 0
      }
    ],
    "answer": "Based on the query result, there are 0 pathways connecting the PLPP3 gene to metabolites through translated proteins."
  },
  {
    "question": "What's the clinical relevance of variants found in protiens associated with phosphopyruvate hydratase complex?",
    "cypher": "MATCH (cc:Cellular_component {name: 'phosphopyruvate hydratase complex'})<-[:ASSOCIATED_WITH]-(p:Protein)<-[:VARIANT_FOUND_IN_PROTEIN]-(v:Known_variant) WHERE v.clinical_relevance IS NOT NULL RETURN v.clinical_relevance AS variant_relevance LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "variant_relevance": "-"
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many biological processes connect to complexes that have E-box in their names?",
    "cypher": "MATCH (c:Complex)-[:ASSOCIATED_WITH]->(bp:Biological_process) WHERE c.name CONTAINS 'E-box' RETURN COUNT(DISTINCT bp) AS process_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "process_count": 4
      }
    ],
    "answer": "4 biological processes are connected to complexes that have E-box in their names."
  },
  {
    "question": "What's the link URL for protein structures associated with NUDT1 stuff?",
    "cypher": "MATCH (p:Protein {name: 'NUDT1'})-[:HAS_STRUCTURE]->(ps:Protein_structure) RETURN ps.link AS structure_url LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "structure_url": "http://www.rcsb.org/structure/5GHM"
      }
    ],
    "answer": "The link URL for a protein structure associated with NUDT1 is http://www.rcsb.org/structure/5GHM."
  },
  {
    "question": "How many proteins can be reached from angiosarcoma through two different association paths?",
    "cypher": "MATCH (d1:Disease {name: 'angiosarcoma'})<-[:ASSOCIATED_WITH]-(p1:Protein)-[:ASSOCIATED_WITH]->(x)<-[:ASSOCIATED_WITH]-(p2:Protein) WHERE x:Disease OR x:Tissue OR x:Cellular_component RETURN COUNT(DISTINCT p2) AS reachable_proteins",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the average molecular weight of metabolites in pathway SMP0049409?",
    "cypher": "MATCH (pw:Pathway {id: 'SMP0049409'})<-[:ANNOTATED_IN_PATHWAY]-(m:Metabolite) WHERE m.average_molecular_weight IS NOT NULL RETURN AVG(toFloat(m.average_molecular_weight)) AS avg_weight",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "avg_weight": 575.8117900000001
      }
    ],
    "answer": "The average molecular weight of metabolites in pathway SMP0049409 is approximately 575.81 g/mol."
  },
  {
    "question": "Tell me which proteins act on proteins that are QC markers in tisues",
    "cypher": "MATCH (p1:Protein)-[:ACTS_ON]->(p2:Protein)-[:IS_QCMARKER_IN_TISSUE]->(t:Tissue) RETURN p1.name AS acting_protein_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "acting_protein_name": "IFNA1"
      }
    ],
    "answer": "Based on the query result, the protein IFNA1 acts on a protein that is a QC marker in tissues. However, the result is limited to one example, so there may be other proteins with similar characteristics that are not shown in this result."
  },
  {
    "question": "What's the shortest path length between ETFB and CHGA proteins through any relationships?",
    "cypher": "MATCH path = shortestPath((p1:Protein {name: 'ETFB'})-[*]-(p2:Protein {name: 'CHGA'})) RETURN LENGTH(path) AS shortest_distance",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "shortest_distance": 2
      },
      {
        "shortest_distance": 2
      },
      {
        "shortest_distance": 2
      },
      {
        "shortest_distance": 2
      },
      {
        "shortest_distance": 2
      },
      {
        "shortest_distance": 2
      },
      {
        "shortest_distance": 2
      },
      {
        "shortest_distance": 2
      },
      {
        "shortest_distance": 2
      },
      {
        "shortest_distance": 2
      },
      {
        "shortest_distance": 2
      },
      {
        "shortest_distance": 2
      }
    ]
  },
  {
    "question": "How many proteins are mentioned in publications from journal 'Mol Biol Cell'?",
    "cypher": "MATCH (p:Protein)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication {journal: 'Mol Biol Cell'}) RETURN COUNT(DISTINCT p) AS protein_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "protein_count": 3327
      }
    ],
    "answer": "3,327 proteins are mentioned in publications from the journal 'Mol Biol Cell'."
  },
  {
    "question": "What's the pubchem compound ID of the smallest metabolite by molecular weight?",
    "cypher": "MATCH (m:Metabolite) WHERE m.average_molecular_weight IS NOT NULL AND m.pubchem_compound_id IS NOT NULL RETURN m.pubchem_compound_id AS smallest_metabolite_pubchem ORDER BY toFloat(m.average_molecular_weight) ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "smallest_metabolite_pubchem": "1038"
      }
    ],
    "answer": "The PubChem compound ID of the smallest metabolite by molecular weight is 1038."
  },
  {
    "question": "How many different tissues serve as parents to other tissues in the hierachy?",
    "cypher": "MATCH (t1:Tissue)<-[:HAS_PARENT]-(t2:Tissue) RETURN COUNT(DISTINCT t1) AS parent_tissue_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "parent_tissue_count": 886
      }
    ],
    "answer": "According to the query result, 886 different tissues serve as parents to other tissues in the hierarchy."
  },
  {
    "question": "What's the source of functional regions found in CD34 protein?",
    "cypher": "MATCH (fr:Functional_region)-[:FOUND_IN_PROTEIN]->(p:Protein {name: 'CD34'}) RETURN fr.source AS region_source LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "region_source": "PFam"
      }
    ],
    "answer": "The source of functional regions found in the CD34 protein is PFam."
  },
  {
    "question": "How many intermediate proteins connect GMIP to proteins in the phosphopyruvate hydratase complex?",
    "cypher": "MATCH (p1:Protein {name: 'GMIP'})<-[:COMPILED_INTERACTS_WITH|CURATED_INTERACTS_WITH]-(intermediate:Protein)-[:ASSOCIATED_WITH]->(cc:Cellular_component {name: 'phosphopyruvate hydratase complex'})<-[:ASSOCIATED_WITH]-(p2:Protein) RETURN COUNT(DISTINCT intermediate) AS bridge_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "bridge_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 intermediate proteins connecting GMIP to proteins in the phosphopyruvate hydratase complex."
  },
  {
    "question": "What's the size of the amino acid sequence for protein A0A024R1R8?",
    "cypher": "MATCH (p:Protein {id: 'A0A024R1R8'})-[:HAS_SEQUENCE]->(aa:Amino_acid_sequence) RETURN aa.size AS sequence_length LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "sequence_length": "64"
      }
    ],
    "answer": "The amino acid sequence for protein A0A024R1R8 is 64 amino acids long."
  },
  {
    "question": "How many distinct metabolit classes are found in foods?",
    "cypher": "MATCH (f:Food)-[:HAS_CONTENT]->(m:Metabolite) WHERE m.class IS NOT NULL RETURN COUNT(DISTINCT m.class) AS metabolite_class_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "metabolite_class_count": 93
      }
    ],
    "answer": "Based on the query result, there are 93 distinct metabolite classes found in foods."
  },
  {
    "question": "How many proteins are associated with diseases that are mentioned in publications about ovarian angiosarcoma?",
    "cypher": "MATCH (d:Disease {name: 'ovarian angiosarcoma'})-[:MENTIONED_IN_PUBLICATION]->(pub:Publication)<-[:MENTIONED_IN_PUBLICATION]-(d2:Disease)<-[:ASSOCIATED_WITH]-(p:Protein) RETURN COUNT(DISTINCT p) AS total_proteins",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_proteins": 16417
      }
    ],
    "answer": "Based on the query result, 16,417 proteins are associated with diseases mentioned in publications about ovarian angiosarcoma."
  },
  {
    "question": "What's the name of the gene that chromogranin A is translated from?",
    "cypher": "MATCH (p:Protein {name: 'CHGA'})<-[:TRANSLATED_INTO]-(g:Gene) RETURN g.name AS gene_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "gene_name": "chromogranin A"
      },
      {
        "gene_name": "chromogranin A"
      },
      {
        "gene_name": "chromogranin A"
      }
    ]
  },
  {
    "question": "What's the highest score among proteins associated with cellular components that CHGA is linked to?",
    "cypher": "MATCH (p1:Protein {name: 'CHGA'})-[:ASSOCIATED_WITH]->(cc:Cellular_component)<-[r:ASSOCIATED_WITH]-(p2:Protein) WHERE r.score IS NOT NULL RETURN MAX(r.score) AS highest_score",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_score": 5.0
      }
    ],
    "answer": "The highest score among proteins associated with cellular components linked to CHGA is 5.0."
  },
  {
    "question": "How many distinct modification types connect to protein modification through parent relationships?",
    "cypher": "MATCH (m:Modification {name: 'protein modification'})<-[:HAS_PARENT*1..3]-(child:Modification) RETURN COUNT(DISTINCT child) AS modification_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "modification_count": 1259
      }
    ],
    "answer": "There are 1,259 distinct modification types that connect to protein modification through parent relationships."
  },
  {
    "question": "What's the total number of peptides belonging to proteins associated with angiosarcoma?",
    "cypher": "MATCH (d:Disease {name: 'angiosarcoma'})<-[:ASSOCIATED_WITH]-(p:Protein)<-[:BELONGS_TO_PROTEIN]-(pep:Peptide) RETURN COUNT(DISTINCT pep) AS peptide_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "peptide_count": 13098
      }
    ],
    "answer": "Based on the query result, there are 13,098 unique peptides belonging to proteins associated with angiosarcoma."
  },
  {
    "question": "Tell me the description of the biological process that ATCAY protein is associated with through mitochondrion distribution?",
    "cypher": "MATCH (p:Protein {name: 'ATCAY'})-[:ASSOCIATED_WITH]->(bp:Biological_process {name: 'mitochondrion distribution'})-[:HAS_PARENT]->(parent:Biological_process) RETURN parent.description AS process_description",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "process_description": "A process that is carried out at the cellular level which results in the assembly, arrangement of constituent parts, or disassembly of a mitochondrion; includes mitochondrial morphogenesis and distribution, and replication of the mitochondrial genome as well as synthesis of new mitochondrial components. [GOC:dph, GOC:jl, GOC:mah, GOC:sgd_curators, PMID:9786946]"
      },
      {
        "process_description": "Any process in which a mitochondrion or mitochondria are transported to, and/or maintained in, a specific location within the cell. [GOC:ai]"
      }
    ]
  },
  {
    "question": "What's the minimum year among publications mentioning diseases associated with CD34 protein?",
    "cypher": "MATCH (p:Protein {name: 'CD34'})-[:ASSOCIATED_WITH]->(d:Disease)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.year IS NOT NULL RETURN MIN(pub.year) AS earliest_year",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_year": 1781
      }
    ],
    "answer": "The minimum year of publications mentioning diseases associated with the CD34 protein is 1781."
  },
  {
    "question": "How many pathways are proteins from the NUDT1 gene annotated in?",
    "cypher": "MATCH (g:Gene {name: 'NUDT1'})-[:TRANSLATED_INTO]->(p:Protein)-[:ANNOTATED_IN_PATHWAY]->(pw:Pathway) RETURN COUNT(DISTINCT pw) AS pathway_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "pathway_count": 0
      }
    ],
    "answer": "Based on the query result, proteins from the NUDT1 gene are annotated in 0 pathways."
  },
  {
    "question": "What's the average imdbRating score for proteins associated with phosphopyruvate hydratase complex?",
    "cypher": "MATCH (cc:Cellular_component {name: 'phosphopyruvate hydratase complex'})<-[r:ASSOCIATED_WITH]-(p:Protein) WHERE r.score IS NOT NULL RETURN AVG(r.score) AS average_score",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_score": 1.0280348837209299
      }
    ],
    "answer": "The average imdbRating score for proteins associated with the phosphopyruvate hydratase complex is approximately 1.03."
  },
  {
    "question": "Find the clinical relevance of variants found in the AFAP1 gene that affect proteins?",
    "cypher": "MATCH (kv:Known_variant)-[:VARIANT_FOUND_IN_GENE]->(g:Gene {name: 'AFAP1'})-[:TRANSLATED_INTO]->(p:Protein) RETURN kv.clinical_relevance AS variant_clinical_relevance LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the peak evidence score among molecular functions associated with proteins that bind zinc ions?",
    "cypher": "MATCH (mf:Molecular_function)-[:HAS_PARENT]->(parent:Molecular_function {name: 'zinc ion transmembrane transporter activity'})<-[r:ASSOCIATED_WITH]-(p:Protein) WHERE r.score IS NOT NULL RETURN MAX(r.score) AS highest_evidence_score",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_evidence_score": 5.0
      }
    ],
    "answer": "The peak evidence score among molecular functions associated with proteins that bind zinc ions is 5.0."
  },
  {
    "question": "How many projects does Ana Rita Colaco participate in that follow up the CT45 project?",
    "cypher": "MATCH (u:User {name: 'Ana Rita Cola\u00e7o'})-[:PARTICIPATES_IN]->(p:Project)-[:FOLLOWS_UP_PROJECT]->(p2:Project {acronym: 'CT45'}) RETURN COUNT(DISTINCT p) AS followup_project_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "followup_project_count": 3
      }
    ],
    "answer": "Ana Rita Colaco participates in 3 projects that follow up the CT45 project."
  },
  {
    "question": "Count all the different tissues that are children of fungus form in the hierarchy?",
    "cypher": "MATCH (t:Tissue {name: 'fungus form'})<-[:HAS_PARENT*1..3]-(child:Tissue) RETURN COUNT(DISTINCT child) AS tissue_descendants",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "tissue_descendants": 10
      }
    ],
    "answer": "There are 10 distinct tissue types that are children of the \"fungus form\" in the tissue hierarchy."
  },
  {
    "question": "What's the accession number of the NUDT1 protein isoform 4?",
    "cypher": "MATCH (p:Protein {id: 'P36639-4', name: 'NUDT1'}) RETURN p.accession AS protein_accession",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "protein_accession": "8ODP_HUMAN"
      }
    ],
    "answer": "The accession number of the NUDT1 protein isoform 4 is 8ODP_HUMAN."
  },
  {
    "question": "What's the lowest position value among modified protein sites that are substrates of kinases?",
    "cypher": "MATCH (mp:Modified_protein)-[r:IS_SUBSTRATE_OF]->(p:Protein) WHERE mp.position IS NOT NULL RETURN MIN(toInteger(mp.position)) AS lowest_position",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_position": 2
      }
    ],
    "answer": "The lowest position value among modified protein sites that are substrates of kinases is 2."
  },
  {
    "question": "How many publications mention functional regions found in the SPIR1 protein?",
    "cypher": "MATCH (p:Protein {accession: 'SPIR1_HUMAN'})<-[:FOUND_IN_PROTEIN]-(fr:Functional_region)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) RETURN COUNT(DISTINCT pub) AS publication_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "publication_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 publications that mention functional regions found in the SPIR1 protein."
  },
  {
    "question": "What's the sum of all sample sizes in GWAS studies that investigate cleft lip traits?",
    "cypher": "MATCH (ef:Experimental_factor {name: 'cleft lip'})<-[:STUDIES_TRAIT]-(gs:GWAS_study) RETURN COUNT(DISTINCT gs) AS gwas_study_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "gwas_study_count": 14
      }
    ],
    "answer": "I apologize, but the provided query result does not directly answer the question about the sum of sample sizes. The result only shows the count of GWAS studies related to cleft lip (14 studies), but does not provide the sample sizes. To answer the sum of sample sizes, a different Cypher query would be needed that retrieves and sums the sample sizes of those studies.\n\nUNKNOWN"
  },
  {
    "question": "Tell me the effect of the variant at position chr7:g.2249954C>T found in NUDT1 gene?",
    "cypher": "MATCH (kv:Known_variant {id: 'chr7:g.2249954C>T'})-[:VARIANT_FOUND_IN_GENE]->(g:Gene {name: 'NUDT1'}) RETURN kv.effect AS variant_effect",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the highest year among pubs mentioning ovarian angiosarkoma and its parent diseases?",
    "cypher": "MATCH (d:Disease {name: 'ovarian angiosarcoma'})-[:HAS_PARENT]->(parent:Disease)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.year IS NOT NULL RETURN MAX(pub.year) AS latest_year",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "latest_year": 2020
      }
    ],
    "answer": "The highest year among publications mentioning ovarian angiosarkoma and its parent diseases is 2020."
  },
  {
    "question": "Count how many protein structures are linked to proteins translated from the NUDT1 gene?",
    "cypher": "MATCH (g:Gene {name: 'NUDT1'})-[:TRANSLATED_INTO]->(p:Protein)-[:HAS_STRUCTURE]->(ps:Protein_structure) RETURN COUNT(DISTINCT ps) AS structure_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "structure_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 protein structures linked to proteins translated from the NUDT1 gene."
  },
  {
    "question": "How many folks are responsible for projects studying ovarian serous carcinoma?",
    "cypher": "MATCH (p:Project)-[:STUDIES_DISEASE]->(d:Disease {name: 'ovarian serous carcinoma'})<-[:IS_RESPONSIBLE]-(u:User) RETURN COUNT(DISTINCT u) AS responsible_user_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What's the tissue type that project P0000003 is studying?",
    "cypher": "MATCH (p:Project {id: 'P0000003'})-[:STUDIES_TISSUE]->(t:Tissue) RETURN t.name AS tissue_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "tissue_name": "abdominal adipose tissue"
      }
    ],
    "answer": "The tissue type that project P0000003 is studying is abdominal adipose tissue."
  },
  {
    "question": "Find the smallest molecular weight among metabolites annotated in pathways?",
    "cypher": "MATCH (m:Metabolite)-[:ANNOTATED_IN_PATHWAY]->(pw:Pathway) WHERE m.average_molecular_weight IS NOT NULL RETURN MIN(toFloat(m.average_molecular_weight)) AS lowest_molecular_weight",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "lowest_molecular_weight": 1.0079
      }
    ],
    "answer": "The smallest molecular weight among metabolites annotated in pathways is 1.0079."
  },
  {
    "question": "How many chromosomes contain transcripts from genes with known variants affecting AFAP1?",
    "cypher": "MATCH (g:Gene {name: 'AFAP1'})<-[:VARIANT_FOUND_IN_GENE]-(kv:Known_variant)-[:VARIANT_FOUND_IN_CHROMOSOME]->(chr:Chromosome) RETURN COUNT(DISTINCT chr) AS chromosome_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "chromosome_count": 0
      }
    ],
    "answer": "The query result shows 0 chromosomes containing transcripts from genes with known variants affecting AFAP1. This could mean either no known variants are found for AFAP1 or the database lacks this specific information."
  },
  {
    "question": "What's the total number of unique peptides that belong to proteins with structure 6GLR?",
    "cypher": "MATCH (ps:Protein_structure {id: '6GLR'})-[:HAS_STRUCTURE]->(p:Protein)<-[:BELONGS_TO_PROTEIN]-(pep:Peptide) WHERE pep.unique = 'True' RETURN COUNT(DISTINCT pep) AS unique_peptide_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "What chromosome does the MVB12B gene's transcript XM_017015278.2 locate on?",
    "cypher": "MATCH (t:Transcript {id: 'XM_017015278.2'})<-[:TRANSCRIBED_INTO]-(g:Gene {name: 'MVB12B'}), (t)-[:LOCATED_IN]->(chr:Chromosome) RETURN chr.name AS chromosome_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the highest PMC id number among publications about angiosarcoma diseases?",
    "cypher": "MATCH (d:Disease {name: 'angiosarcoma'})-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.PMC_id IS NOT NULL RETURN MAX(pub.PMC_id) AS highest_pmc_id",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_pmc_id": "PMC6953799"
      }
    ],
    "answer": "The highest PMC id number among publications about angiosarcoma diseases is PMC6953799."
  },
  {
    "question": "How many somatic mutations in chromosome 1 are known variants?",
    "cypher": "MATCH (sm:Somatic_mutation)-[:VARIANT_FOUND_IN_CHROMOSOME]->(chr:Chromosome {name: '1'}), (sm)-[:IS_A_KNOWN_VARIANT]->(kv:Known_variant) RETURN COUNT(DISTINCT sm) AS somatic_mutation_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "somatic_mutation_count": 3
      }
    ],
    "answer": "There are 3 known somatic mutations found in chromosome 1."
  },
  {
    "question": "Sum up all the scores of protein interactions where SLC39A8 acts on other proteins?",
    "cypher": "MATCH (p:Protein {name: 'SLC39A8'})-[r:ACTS_ON]->(target:Protein) WHERE r.score IS NOT NULL RETURN SUM(r.score) AS total_interaction_score",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "total_interaction_score": 0.817
      }
    ],
    "answer": "The total interaction score for protein interactions where SLC39A8 acts on other proteins is 0.817."
  },
  {
    "question": "What's the source of the functional region PF16474 found in proteins?",
    "cypher": "MATCH (fr:Functional_region {id: 'PF16474'}) RETURN fr.source AS region_source",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "region_source": "PFam"
      }
    ],
    "answer": "The source of the functional region PF16474 is PFam."
  },
  {
    "question": "Which journal published the study with the lowest DOI about cleft palate research?",
    "cypher": "MATCH (gs:GWAS_study)-[:STUDIES_TRAIT]->(ef:Experimental_factor), (gs)-[:PUBLISHED_IN]->(pub:Publication) WHERE pub.DOI IS NOT NULL AND ef.name CONTAINS 'cleft' ORDER BY pub.DOI ASC LIMIT 1 RETURN pub.journal AS journal_name",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "journal_name": "Genet Epidemiol"
      }
    ],
    "answer": "The journal that published the study with the lowest DOI about cleft palate research is Genet Epidemiol."
  },
  {
    "question": "How many distinct proteins are QC markers in various tissues?",
    "cypher": "MATCH (p:Protein)-[:IS_QCMARKER_IN_TISSUE]->(t:Tissue) RETURN COUNT(DISTINCT p) AS qcmarker_protein_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "qcmarker_protein_count": 242
      }
    ],
    "answer": "There are 242 distinct proteins that serve as quality control (QC) markers across various tissues."
  },
  {
    "question": "What's the average length of amino acid sequences for proteins associated with translation processes?",
    "cypher": "MATCH (bp:Biological_process {name: 'translation'})<-[:ASSOCIATED_WITH]-(p:Protein)-[:HAS_SEQUENCE]->(seq:Amino_acid_sequence) WHERE seq.size IS NOT NULL RETURN AVG(toInteger(seq.size)) AS average_sequence_length",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "average_sequence_length": 291.5596330275228
      }
    ],
    "answer": "Based on the query result, the average length of amino acid sequences for proteins associated with translation processes is approximately 292 amino acids."
  },
  {
    "question": "Tell me the intervention used in project P0000006 studying phosphoproteomics?",
    "cypher": "MATCH (p:Project {id: 'P0000006'}) RETURN p.intervention AS project_intervention",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "project_intervention": "Carboplatin (108759002)"
      }
    ],
    "answer": "The intervention used in project P0000006 is Carboplatin."
  },
  {
    "question": "What's the top position value for modified sites on proteins that have phosphorylation mods?",
    "cypher": "MATCH (mp:Modified_protein)-[:HAS_MODIFICATION]->(m:Modification) WHERE mp.position IS NOT NULL AND m.name CONTAINS 'phospho' RETURN MAX(toInteger(mp.position)) AS highest_position",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_position": 12791
      }
    ],
    "answer": "The top position value for modified sites on proteins with phosphorylation modifications is 12,791."
  },
  {
    "question": "Count connections between proteins involved in zinc transport and their associated pathways?",
    "cypher": "MATCH (mf:Molecular_function {name: 'zinc ion transmembrane transporter activity'})<-[:ASSOCIATED_WITH]-(p:Protein)-[:ANNOTATED_IN_PATHWAY]->(pw:Pathway) RETURN COUNT(DISTINCT pw) AS pathway_connections",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "pathway_connections": 4
      }
    ],
    "answer": "The proteins involved in zinc ion transmembrane transporter activity are associated with 4 distinct pathways."
  },
  {
    "question": "How many different cell components are kids of phosphopyruvate hydratase complex in the ontology?",
    "cypher": "MATCH (cc:Cellular_component {name: 'phosphopyruvate hydratase complex'})<-[:HAS_PARENT*1..3]-(child:Cellular_component) RETURN COUNT(DISTINCT child) AS child_component_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "child_component_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 different cell components that are kids (children) of the phosphopyruvate hydratase complex in the ontology."
  },
  {
    "question": "What's the disease description for variant chr14:g.92932742G>A found in CHGA gene?",
    "cypher": "MATCH (kv:Known_variant {id: 'chr14:g.92932742G>A'})-[:VARIANT_FOUND_IN_GENE]->(g:Gene {name: 'CHGA'}) RETURN kv.disease AS variant_disease_description",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the earliest start date among projects that Alberto Santos is responsible for?",
    "cypher": "MATCH (u:User {name: 'Alberto Santos'})-[:IS_RESPONSIBLE]->(p:Project) WHERE p.start_date IS NOT NULL ORDER BY p.start_date ASC LIMIT 1 RETURN p.start_date AS earliest_start_date",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "earliest_start_date": "2020-04-06"
      }
    ],
    "answer": "The earliest start date for a project Alberto Santos is responsible for is April 6, 2020."
  },
  {
    "question": "How many transcripts connect gene PEX10 to chromosome 1 through location relationships?",
    "cypher": "MATCH (g:Gene {name: 'PEX10'})-[:TRANSCRIBED_INTO]->(t:Transcript)-[:LOCATED_IN]->(chr:Chromosome {name: '1'}) RETURN COUNT(DISTINCT t) AS transcript_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "transcript_count": 0
      }
    ],
    "answer": "Based on the query result, 0 transcripts connect the gene PEX10 to chromosome 1 through location relationships."
  },
  {
    "question": "What's the total count of proteins that interact with CD34 through curated interactions?",
    "cypher": "MATCH (p1:Protein {name: 'CD34'})-[:CURATED_INTERACTS_WITH]-(p2:Protein) RETURN COUNT(DISTINCT p2) AS interacting_protein_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "interacting_protein_count": 1
      }
    ],
    "answer": "Based on the query result, there is 1 protein that interacts with CD34 through curated interactions."
  },
  {
    "question": "Which tissue does the heterotroph belong to as its parent in the hierarchy?",
    "cypher": "MATCH (t:Tissue {name: 'heterotroph'})-[:HAS_PARENT]->(parent:Tissue) RETURN parent.name AS parent_tissue_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": [
      {
        "parent_tissue_name": "plant form"
      },
      {
        "parent_tissue_name": "fungus form"
      },
      {
        "parent_tissue_name": "organism form"
      }
    ]
  },
  {
    "question": "What's the max page number in publications mentioning functional regions?",
    "cypher": "MATCH (fr:Functional_region)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.page IS NOT NULL RETURN MAX(pub.page) AS highest_page_number",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "highest_page_number": "reviews3013.1"
      }
    ],
    "answer": "The max page number in publications mentioning functional regions is \"reviews3013.1\"."
  },
  {
    "question": "How many proteins are subunits of complexes that associate with biological processes?",
    "cypher": "MATCH (p:Protein)-[:IS_SUBUNIT_OF]->(c:Complex)-[:ASSOCIATED_WITH]->(bp:Biological_process) RETURN COUNT(DISTINCT p) AS subunit_protein_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "subunit_protein_count": 3354
      }
    ],
    "answer": "Based on the query result, there are 3,354 distinct proteins that are subunits of complexes associated with biological processes."
  },
  {
    "question": "Count all the metabolites that foods have content relationships with?",
    "cypher": "MATCH (f:Food)-[:HAS_CONTENT]->(m:Metabolite) RETURN COUNT(DISTINCT m) AS metabolite_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "metabolite_count": 704
      }
    ],
    "answer": "There are 704 distinct metabolites that have content relationships with foods in the database."
  },
  {
    "question": "What's the link URL for protein structure 6GLR associated with NUDT1?",
    "cypher": "MATCH (ps:Protein_structure {id: '6GLR'})-[:HAS_STRUCTURE]->(p:Protein {name: 'NUDT1'}) RETURN ps.link AS structure_link",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false
  },
  {
    "question": "Find the protein with lowest accession code that's detected in angiosarcoma pathology samples?",
    "cypher": "MATCH (p:Protein)-[:DETECTED_IN_PATHOLOGY_SAMPLE]->(d:Disease {name: 'angiosarcoma'}) WHERE p.accession IS NOT NULL ORDER BY p.accession ASC LIMIT 1 RETURN p.accession AS lowest_accession",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": false,
    "result": []
  },
  {
    "question": "How many peptides connect to proteins that are translated from the AFAP1 gene through multiple paths?",
    "cypher": "MATCH (g:Gene {name: 'AFAP1'})-[:TRANSLATED_INTO]->(p:Protein)<-[:BELONGS_TO_PROTEIN]-(pep:Peptide) RETURN COUNT(DISTINCT pep) AS peptide_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "peptide_count": 0
      }
    ],
    "answer": "0 peptides connect to proteins translated from the AFAP1 gene."
  },
  {
    "question": "What's the total number of diseases that have parent relationships pointing to angiosarcoma?",
    "cypher": "MATCH (child:Disease)-[:HAS_PARENT]->(d:Disease {name: 'angiosarcoma'}) RETURN COUNT(DISTINCT child) AS child_disease_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "child_disease_count": 9
      }
    ],
    "answer": "There are 9 distinct diseases that have a parent relationship pointing to angiosarcoma."
  },
  {
    "question": "Tell me what type of experiment has isobaric modification stuff as its grandparent?",
    "cypher": "MATCH (m:Modification {name: 'protein modification categorized by isobaric sets'})<-[:HAS_PARENT]-(child:Modification)<-[:HAS_PARENT]-(grandchild:Modification) RETURN grandchild.type AS modification_type LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "anthropic-chat",
    "validated": true,
    "result": [
      {
        "modification_type": "-41"
      }
    ],
    "answer": "UNKNOWN\n\nNote: While a result was returned, the value '-41' does not clearly represent a type of experiment, and the data does not provide a clear, interpretable answer to the specific question about experiment types."
  },
  {
    "question": "What is the revenue of Microsoft Corporation?",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'}) RETURN o.revenue AS organization_revenue",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "organization_revenue": 198270000000.0
      }
    ],
    "answer": "Based on the query result, the revenue of Microsoft Corporation is $198,270,000,000."
  },
  {
    "question": "How many employees work for SAP?",
    "cypher": "MATCH (o:Organization {name: 'SAP'}) RETURN o.nbrEmployees AS number_of_employees",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "number_of_employees": 111961
      }
    ],
    "answer": "According to the data, SAP has 111,961 employees."
  },
  {
    "question": "What is the motto of Mircosoft Corporation?",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'}) RETURN o.motto AS organization_motto",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "organization_motto": "We\u2019re on a mission to empower every person and every organization on the planet to achieve more."
      }
    ],
    "answer": "Microsoft's motto is: \"We're on a mission to empower every person and every organization on the planet to achieve more.\""
  },
  {
    "question": "How many subsidiaries does SAP have?",
    "cypher": "MATCH (o:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub) RETURN count(sub) AS subsidiary_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "subsidiary_count": 94
      }
    ],
    "answer": "Based on the query result, SAP has 94 subsidiaries."
  },
  {
    "question": "Who is the CEO of Accentur?",
    "cypher": "MATCH (o:Organization {name: 'Accenture'})-[:HAS_CEO]->(p:Person) RETURN p.name AS ceo_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "ceo_name": "Julie Spellman Sweet"
      }
    ],
    "answer": "Julie Spellman Sweet is the CEO of Accenture."
  },
  {
    "question": "What's the name of the city where New Relic is located?",
    "cypher": "MATCH (o:Organization {name: 'New Relic'})-[:IN_CITY]->(c:City) RETURN c.name AS city_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "city_name": "Seattle"
      },
      {
        "city_name": "New York City"
      },
      {
        "city_name": "Munich"
      },
      {
        "city_name": "Paris"
      },
      {
        "city_name": "London"
      },
      {
        "city_name": "San Francisco"
      },
      {
        "city_name": "Amsterdam"
      },
      {
        "city_name": "Portland"
      },
      {
        "city_name": "Z\u00fcrich"
      },
      {
        "city_name": "Tel Aviv"
      },
      {
        "city_name": "Menlo Park"
      },
      {
        "city_name": "California"
      }
    ]
  },
  {
    "question": "What is the name of the country where the organization Concur is located?",
    "cypher": "MATCH (o:Organization {name: 'Concur'})-[:IN_CITY]->(c:City)-[:IN_COUNTRY]->(country:Country) RETURN country.name AS country_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "United States of America"
      },
      {
        "country_name": "Italy"
      },
      {
        "country_name": "Netherlands"
      },
      {
        "country_name": "France"
      },
      {
        "country_name": "France"
      },
      {
        "country_name": "France"
      },
      {
        "country_name": "France"
      },
      {
        "country_name": "France"
      },
      {
        "country_name": "Germany"
      },
      {
        "country_name": "Germany"
      },
      {
        "country_name": "Sweden"
      }
    ]
  },
  {
    "question": "What's the revenue of the company that Julie Spellman Sweet is the CEO of?",
    "cypher": "MATCH (p:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO]-(o:Organization) RETURN o.revenue AS organization_revenue",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "organization_revenue": null
      }
    ],
    "answer": "Based on the query result, the revenue information is not available (None). Therefore, the answer is UNKNOWN."
  },
  {
    "question": "Is the company Cloud Sherpas dissolved?",
    "cypher": "MATCH (o:Organization {name: 'Cloud Sherpas'}) RETURN o.isDissolved AS is_dissolved",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "is_dissolved": true
      }
    ],
    "answer": "Yes, Cloud Sherpas is dissolved according to the database."
  },
  {
    "question": "Tell me the total number of suppliers for the firm IBM.",
    "cypher": "MATCH (o:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(s:Organization) RETURN count(s) AS total_suppliers",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_suppliers": 560
      }
    ],
    "answer": "IBM has 560 suppliers."
  },
  {
    "question": "How many articles mention the organization 'IBM Research'?",
    "cypher": "MATCH (o:Organization {name: 'IBM Research'})<-[:MENTIONS]-(a:Article) RETURN count(a) AS article_mention_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "article_mention_count": 15
      }
    ],
    "answer": "15 articles mention the organization 'IBM Research'."
  },
  {
    "question": "What's the industry category name for a supplier of Oracle?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})-[:HAS_SUPPLIER]->(s:Organization)-[:HAS_CATEGORY]->(i:IndustryCategory) RETURN i.name AS supplier_industry_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_industry_name": "Electronic Products Manufacturers"
      }
    ],
    "answer": "The industry category name for a supplier of Oracle is \"Electronic Products Manufacturers\"."
  },
  {
    "question": "What's the revenue for the biz named SAP?",
    "cypher": "MATCH (o:Organization {name: 'SAP'}) RETURN o.revenue AS organization_revenue",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "organization_revenue": 30870000000.0
      }
    ],
    "answer": "The revenue for SAP is $30.87 billion."
  },
  {
    "question": "What's the total workforce for all of SAP's subsidiaries?",
    "cypher": "MATCH (o:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization) RETURN sum(sub.nbrEmployees) AS total_subsidiary_employees",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_subsidiary_employees": 65000
      }
    ],
    "answer": "Based on the query result, SAP's subsidiaries have a total workforce of 65,000 employees."
  },
  {
    "question": "Find the city where a competitor of IBM is located.",
    "cypher": "MATCH (o:Organization {name: 'IBM'})-[:HAS_COMPETITOR]->(c:Organization)-[:IN_CITY]->(city:City) RETURN city.name AS competitor_city_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "competitor_city_name": "Round Rock"
      }
    ],
    "answer": "Round Rock is the city where an IBM competitor is located."
  },
  {
    "question": "Find the name of the country where Seattle is located.",
    "cypher": "MATCH (c:City {name: 'Seattle'})-[:IN_COUNTRY]->(country:Country) RETURN country.name AS country_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "country_name": "United States of America"
      }
    ],
    "answer": "Seattle is located in the United States of America."
  },
  {
    "question": "How many suppliers does a subsidiary of IBM have?",
    "cypher": "MATCH (o:Organization {name: 'IBM'})-[:HAS_SUBSIDIARY]->(sub)-[:HAS_SUPPLIER]->(sup) RETURN count(sup) AS total_suppliers_of_subsidiaries",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_suppliers_of_subsidiaries": 269
      }
    ],
    "answer": "Based on the query result, IBM's subsidiaries have 269 suppliers."
  },
  {
    "question": "Find the maximum revenue among all competitors of Mircosoft Corporation.",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})-[:HAS_COMPETITOR]->(c:Organization) WHERE c.revenue IS NOT NULL RETURN max(c.revenue) AS max_competitor_revenue",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_competitor_revenue": 30870000000.0
      }
    ],
    "answer": "The maximum revenue among Microsoft Corporation's competitors is $30,870,000,000."
  },
  {
    "question": "What is the name of the CEO of a company that is a competitor to Oracle?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})-[:HAS_COMPETITOR]->(c:Organization)-[:HAS_CEO]->(p:Person) RETURN p.name AS ceo_of_competitor_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "ceo_of_competitor_name": "Satya Nadella"
      }
    ],
    "answer": "Satya Nadella is the CEO of a company that is a competitor to Oracle."
  },
  {
    "question": "What is the number of employees at Oracle?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'}) RETURN o.nbrEmployees AS number_of_employees",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "number_of_employees": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many board members does Accenture have?",
    "cypher": "MATCH (o:Organization {name: 'Accenture'})-[:HAS_BOARD_MEMBER]->(p:Person) RETURN count(p) AS board_member_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "board_member_count": 24
      }
    ],
    "answer": "Accenture has 24 board members."
  },
  {
    "question": "What's the name of an organization that invested in a subsidiary of SAP?",
    "cypher": "MATCH (o:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub)-[:HAS_INVESTOR]->(inv:Organization) RETURN inv.name AS investor_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "investor_name": "Knockri"
      }
    ],
    "answer": "Knockri is an organization that invested in a subsidiary of SAP."
  },
  {
    "question": "What is the name of the industry category with ID 'EUNd__O4zMNW81lAXNK2GNw'?",
    "cypher": "MATCH (i:IndustryCategory {id: 'EUNd__O4zMNW81lAXNK2GNw'}) RETURN i.name AS industry_category_name",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "industry_category_name": "Electronic Products Manufacturers"
      }
    ],
    "answer": "The industry category with ID 'EUNd__O4zMNW81lAXNK2GNw' is Electronic Products Manufacturers."
  },
  {
    "question": "What is the total number of employes at all of IBMs subsidiaries?",
    "cypher": "MATCH (o:Organization {name: 'IBM'})-[:HAS_SUBSIDIARY]->(sub:Organization) RETURN sum(sub.nbrEmployees) AS total_subsidiary_employees",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo, grammar",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_subsidiary_employees": 0
      }
    ],
    "answer": "Based on the query result, the total number of employees at IBM's subsidiaries is 0. However, this could indicate either that the data is incomplete or that no employee information is available for IBM's subsidiaries in the database."
  },
  {
    "question": "In what country is a supplier of IBM located?",
    "cypher": "MATCH (o:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(s:Organization)-[:IN_CITY]->(c:City)-[:IN_COUNTRY]->(country:Country) RETURN country.name AS supplier_country_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_country_name": "United States of America"
      }
    ],
    "answer": "Based on the query result, a supplier of IBM is located in the United States of America."
  },
  {
    "question": "What is the summary for the organization 'IBM Research'?",
    "cypher": "MATCH (o:Organization {name: 'IBM Research'}) RETURN o.summary AS organization_summary",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "organization_summary": "IBM's research and development division"
      }
    ],
    "answer": "IBM Research is IBM's research and development division."
  },
  {
    "question": "How many organizations are located in the city of Seattle?",
    "cypher": "MATCH (c:City {name: 'Seattle'})<-[:IN_CITY]-(o:Organization) RETURN count(o) AS organization_count_in_city",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "organization_count_in_city": 201
      }
    ],
    "answer": "There are 201 organizations located in the city of Seattle."
  },
  {
    "question": "What is the name of the city where the company run by Julie Spellman Sweet is located?",
    "cypher": "MATCH (p:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO]-(o:Organization)-[:IN_CITY]->(c:City) RETURN c.name AS ceo_workplace_city LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "ceo_workplace_city": "Berwyn"
      }
    ],
    "answer": "Berwyn is the city where the company run by Julie Spellman Sweet is located."
  },
  {
    "question": "How much cash did Mircosoft Corporation make?",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'}) RETURN o.revenue AS organization_revenue",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism, typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "organization_revenue": 198270000000.0
      }
    ],
    "answer": "Based on the query result, Microsoft Corporation made $198.27 billion in revenue."
  },
  {
    "question": "How many companys supply stuff to Oracle?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})-[:HAS_SUPPLIER]->(s:Organization) RETURN count(s) AS total_suppliers",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "grammar, colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_suppliers": 348
      }
    ],
    "answer": "Based on the query result, 348 companies supply goods or services to Oracle."
  },
  {
    "question": "What is the name of a subsidiary of the company that Julie Spellman Sweet leads as CEO?",
    "cypher": "MATCH (p:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO]-(o:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization) RETURN sub.name AS subsidiary_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "subsidiary_name": "Beacon Consulting Group"
      }
    ],
    "answer": "Beacon Consulting Group is a subsidiary of the company that Julie Spellman Sweet leads as CEO."
  },
  {
    "question": "Is Accenture a public corp?",
    "cypher": "MATCH (o:Organization {name: 'Accenture'}) RETURN o.isPublic AS is_public",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": false
      },
      {
        "is_public": null
      },
      {
        "is_public": null
      }
    ]
  },
  {
    "question": "Find the earliest date of an article mentioning 'New Energy Group'.",
    "cypher": "MATCH (a:Article)-[:MENTIONS]->(o:Organization {name: 'New Energy Group'}) WHERE a.date IS NOT NULL RETURN min(a.date) AS earliest_article_date",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "earliest_article_date": "2017-01-13T00:00:00.000000000+00:00"
      }
    ],
    "answer": "The earliest date of an article mentioning 'New Energy Group' is January 13, 2017."
  },
  {
    "question": "How many subsidiaries does a competitor of SAP have?",
    "cypher": "MATCH (o:Organization {name: 'SAP'})-[:HAS_COMPETITOR]->(c:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization) RETURN count(sub) AS total_subsidiaries_of_competitors",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_subsidiaries_of_competitors": 1197
      }
    ],
    "answer": "Based on the query result, a competitor of SAP has 1,197 subsidiaries."
  },
  {
    "question": "What's the sentiment of the article titled 'BRIEF-Tongking New Energy Group says a unit has been awarded two contracts'?",
    "cypher": "MATCH (a:Article {title: 'BRIEF-Tongking New Energy Group says a unit has been awarded two contracts'}) RETURN a.sentiment AS article_sentiment",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "article_sentiment": 0.664
      }
    ],
    "answer": "The article has a positive sentiment with a score of 0.664, which indicates a fairly optimistic tone."
  },
  {
    "question": "Count the number of investors in Infinite Analytiks.",
    "cypher": "MATCH (o:Organization {name: 'Infinite Analytics'})-[:HAS_INVESTOR]->(inv) RETURN count(inv) AS total_investors",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_investors": 9
      }
    ],
    "answer": "Infinite Analytiks has 9 investors."
  },
  {
    "question": "Find the name of the head honcho for a company that is a supplier to IBM.",
    "cypher": "MATCH (o:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(s:Organization)-[:HAS_CEO]->(p:Person) RETURN p.name AS ceo_of_supplier_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "ceo_of_supplier_name": "Ryan Roslansky"
      }
    ],
    "answer": "Ryan Roslansky is the head honcho (CEO) of a company that is a supplier to IBM."
  },
  {
    "question": "What is the name of the person with id 'Eaf0bpz6NNoqLVUCqNZPAew'?",
    "cypher": "MATCH (p:Person {id: 'Eaf0bpz6NNoqLVUCqNZPAew'}) RETURN p.name AS person_name",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "person_name": "Julie Spellman Sweet"
      }
    ],
    "answer": "The name of the person with id 'Eaf0bpz6NNoqLVUCqNZPAew' is Julie Spellman Sweet."
  },
  {
    "question": "What industry does Altium belong to?",
    "cypher": "MATCH (o:Organization {name: 'Altium'})-[:HAS_CATEGORY]->(i:IndustryCategory) RETURN i.name AS industry_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "industry_name": "Electronic Products Manufacturers"
      },
      {
        "industry_name": "Manufacturing Companies"
      },
      {
        "industry_name": "Software Companies"
      }
    ]
  },
  {
    "question": "What is the industry of a company which is a subsidiary of Accentur?",
    "cypher": "MATCH (o:Organization {name: 'Accenture'})-[:HAS_SUBSIDIARY]->(s:Organization)-[:HAS_CATEGORY]->(i:IndustryCategory) RETURN i.name AS subsidiary_industry_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "subsidiary_industry_name": "Enterprise Software Companies"
      }
    ],
    "answer": "The subsidiary of Accenture is in the Enterprise Software Companies industry."
  },
  {
    "question": "What's the title of the article with ID 'ART176872705964'?",
    "cypher": "MATCH (a:Article {id: 'ART176872705964'}) RETURN a.title AS article_title",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "article_title": "Funds for Consumer Behavior Specialist Infinite Analytics"
      }
    ],
    "answer": "The title of the article with ID 'ART176872705964' is \"Funds for Consumer Behavior Specialist Infinite Analytics\"."
  },
  {
    "question": "What is the total revenue of all suppliers for IBM Research?",
    "cypher": "MATCH (o:Organization {name: 'IBM Research'})-[:HAS_SUPPLIER]->(s:Organization) RETURN sum(s.revenue) AS total_supplier_revenue",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_supplier_revenue": 0
      }
    ],
    "answer": "Based on the query result, the total revenue of all suppliers for IBM Research is 0. This could mean either there are no recorded suppliers for IBM Research or their revenue data is not available in the database."
  },
  {
    "question": "What's the name of the country where a supplier to Mircosoft Corporation is based?",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})-[:HAS_SUPPLIER]->(s:Organization)-[:IN_CITY]->(c:City)-[:IN_COUNTRY]->(country:Country) RETURN country.name AS supplier_country_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_country_name": "United States of America"
      }
    ],
    "answer": "Based on the query result, the supplier to Microsoft Corporation is based in the United States of America."
  },
  {
    "question": "Is IBM a public company?",
    "cypher": "MATCH (o:Organization {name: 'IBM'}) RETURN o.isPublic AS is_public",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "is_public": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Count the competitors of Oracle.",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})-[:HAS_COMPETITOR]->(c:Organization) RETURN count(c) AS competitor_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "competitor_count": 24
      }
    ],
    "answer": "Oracle has 24 competitors according to the database."
  },
  {
    "question": "What is the name of an organization that invested in Infinite Analytics?",
    "cypher": "MATCH (o:Organization {name: 'Infinite Analytics'})-[:HAS_INVESTOR]->(inv:Organization) RETURN inv.name AS investor_name LIMIT 1",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the site name for the article titled 'Funds for Consumer Behavior Specialist Infinite Analytics'?",
    "cypher": "MATCH (a:Article {title: 'Funds for Consumer Behavior Specialist Infinite Analytics'}) RETURN a.siteName AS article_site_name",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "article_site_name": "MrWeb"
      }
    ],
    "answer": "The site name for the article titled 'Funds for Consumer Behavior Specialist Infinite Analytics' is MrWeb."
  },
  {
    "question": "What is the average number of employees for companies that are suppliers to IBM?",
    "cypher": "MATCH (o:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(s:Organization) WHERE s.nbrEmployees IS NOT NULL RETURN avg(s.nbrEmployees) AS average_supplier_employees",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_supplier_employees": 7808.862068965517
      }
    ],
    "answer": "Based on the query result, the average number of employees for companies that are suppliers to IBM is approximately 7,809 employees."
  },
  {
    "question": "How many employees work at a subsidiary of Accenture?",
    "cypher": "MATCH (o:Organization {name: 'Accenture'})-[:HAS_SUBSIDIARY]->(s:Organization) RETURN s.nbrEmployees AS subsidiary_employee_count LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "subsidiary_employee_count": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Give me the summary for the city of Seattle.",
    "cypher": "MATCH (c:City {name: 'Seattle'}) RETURN c.summary AS city_summary",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "city_summary": "City in and county seat of King County, Washington, United States"
      }
    ],
    "answer": "Seattle is a city located in King County, Washington, and serves as the county seat of the United States."
  },
  {
    "question": "What is the total revenue of all direct suppliers for SAP's subsidiaries?",
    "cypher": "MATCH (o1:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization)<-[:HAS_SUPPLIER]-(sup:Organization) WHERE sup.revenue IS NOT NULL RETURN SUM(sup.revenue) AS total_supplier_revenue",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_supplier_revenue": 1315849914999.0
      }
    ],
    "answer": "The total revenue of all direct suppliers for SAP's subsidiaries is $1,315,849,914,999."
  },
  {
    "question": "Find the name of the CEO for the company that owns 'Cloud Sherpas' as a subsidiary.",
    "cypher": "MATCH (p:Person)<-[:HAS_CEO]-(parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization {name: 'Cloud Sherpas'}) RETURN p.name AS ceo_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "ceo_name": "Julie Spellman Sweet"
      }
    ],
    "answer": "The CEO of the company that owns Cloud Sherpas is Julie Spellman Sweet."
  },
  {
    "question": "Which supplier of Microsoft Corporation has the highest revenue?",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(s:Organization) WHERE s.revenue IS NOT NULL RETURN s.name AS top_supplier_by_revenue ORDER BY s.revenue DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_supplier_by_revenue": "Meta Platforms"
      }
    ],
    "answer": "Based on the query result, Meta Platforms is the highest-revenue supplier of Microsoft Corporation."
  },
  {
    "question": "How many direct supplier links exist between IBM and Oracle?",
    "cypher": "MATCH path = (o1:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(o2:Organization {name: 'Oracle'}) RETURN count(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_count": 1
      }
    ],
    "answer": "Based on the query result, there is 1 direct supplier link between IBM and Oracle."
  },
  {
    "question": "Count the number of competitors for the subsidiaries of Mircosoft Corporation.",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:HAS_COMPETITOR]->(comp:Organization) RETURN COUNT(DISTINCT comp) AS num_competitors",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_competitors": 186
      }
    ],
    "answer": "Based on the query result, Microsoft Corporation's subsidiaries have 186 distinct competitors."
  },
  {
    "question": "What's the country for the biz that 'Concur' is a subsidiary of?",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization {name: 'Concur'})-[:IN_CITY]->(c:City)-[:IN_COUNTRY]->(country:Country) RETURN country.name AS parent_company_country LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "parent_company_country": "United States of America"
      }
    ],
    "answer": "The country for the company that 'Concur' is a subsidiary of is the United States of America."
  },
  {
    "question": "Among the suppliers for Oracel, which one has the smallest number of employees?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})<-[:HAS_SUPPLIER]-(s:Organization) WHERE s.nbrEmployees IS NOT NULL RETURN s.name AS smallest_supplier_by_employees ORDER BY s.nbrEmployees ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "smallest_supplier_by_employees": "DAZ Systems"
      }
    ],
    "answer": "Based on the query result, DAZ Systems is the Oracle supplier with the smallest number of employees."
  },
  {
    "question": "What's the shortest corporate path length between SAP and IBM?",
    "cypher": "MATCH path = shortestPath((o1:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY|HAS_SUPPLIER|HAS_COMPETITOR*]-(o2:Organization {name: 'IBM'})) RETURN length(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "path_length": 1
      }
    ],
    "answer": "The shortest corporate path length between SAP and IBM is 1, indicating they are directly connected through a corporate relationship (such as subsidiary, supplier, or competitor)."
  },
  {
    "question": "What is the average number of employees for companies in Seattle that supply IBM?",
    "cypher": "MATCH (c:City {name: 'Seattle'})<-[:IN_CITY]-(sup:Organization)-[:HAS_SUPPLIER]->(o:Organization {name: 'IBM'}) WHERE sup.nbrEmployees IS NOT NULL RETURN avg(sup.nbrEmployees) AS average_employees",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_employees": 6900.0
      }
    ],
    "answer": "Based on the query result, the average number of employees for companies in Seattle that supply IBM is 6,900."
  },
  {
    "question": "What is the industry category for a competitor of a supplier to Oracle?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})<-[:HAS_SUPPLIER]-(sup:Organization)-[:HAS_COMPETITOR]->(comp:Organization)-[:HAS_CATEGORY]->(cat:IndustryCategory) RETURN cat.name AS competitor_industry LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "competitor_industry": "Electronic Products Manufacturers"
      }
    ],
    "answer": "The industry category for a competitor of a supplier to Oracle is Electronic Products Manufacturers."
  },
  {
    "question": "Find the name of the CEO of the highest-revenue supplier to Microsoft Corporation.",
    "cypher": "MATCH (p:Person)<-[:HAS_CEO]-(sup:Organization)-[:HAS_SUPPLIER]->(o:Organization {name: 'Microsoft Corporation'}) WHERE sup.revenue IS NOT NULL RETURN p.name AS top_supplier_ceo ORDER BY sup.revenue DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_supplier_ceo": "Mark Zuckerberg"
      }
    ],
    "answer": "Mark Zuckerberg is the CEO of the highest-revenue supplier to Microsoft Corporation."
  },
  {
    "question": "How many distinct cities in the United States of America host subsidiaries of SAP?",
    "cypher": "MATCH (country:Country {name: 'United States of America'})<-[:IN_COUNTRY]-(city:City)<-[:IN_CITY]-(sub:Organization)<-[:HAS_SUBSIDIARY]-(o:Organization {name: 'SAP'}) RETURN COUNT(DISTINCT city) AS city_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "city_count": 83
      }
    ],
    "answer": "SAP has subsidiaries in 83 distinct cities across the United States of America."
  },
  {
    "question": "Sum up the total workforce of all public firms that are suppliers to IBM's subsidiaries.",
    "cypher": "MATCH (o:Organization {name: 'IBM'})-[:HAS_SUBSIDIARY]->(sub:Organization)<-[:HAS_SUPPLIER]-(sup:Organization) WHERE sup.isPublic = true AND sup.nbrEmployees IS NOT NULL RETURN SUM(sup.nbrEmployees) AS total_public_supplier_workforce",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_public_supplier_workforce": 1455495
      }
    ],
    "answer": "Based on the query result, the total workforce of all public firms that are suppliers to IBM's subsidiaries is 1,455,495 employees."
  },
  {
    "question": "What's the motto of the parent company of a biz called 'IBM Reserch'?",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization {name: 'IBM Research'}) RETURN parent.motto AS parent_company_motto",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "parent_company_motto": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Which corp has the biggest revenue among competitors of IBM's suppliers?",
    "cypher": "MATCH (o:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(sup:Organization)-[:HAS_COMPETITOR]->(comp:Organization) WHERE comp.revenue IS NOT NULL RETURN comp.name AS top_competitor_by_revenue ORDER BY comp.revenue DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_competitor_by_revenue": "Microsoft Corporation"
      }
    ],
    "answer": "Based on the query result, Microsoft Corporation has the biggest revenue among competitors of IBM's suppliers."
  },
  {
    "question": "How many investors does a company mentioned in an article with 'Infinite Analitycs' in the title have?",
    "cypher": "MATCH (a:Article)-[:MENTIONS]->(o:Organization)-[:HAS_INVESTOR]->(inv) WHERE a.title CONTAINS 'Infinite Analytics' RETURN COUNT(DISTINCT inv) AS investor_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "investor_count": 9
      }
    ],
    "answer": "The company mentioned in an article with 'Infinite Analitycs' in the title has 9 investors."
  },
  {
    "question": "Count the total number of board members across all direct subsidiaries of SAP.",
    "cypher": "MATCH (o:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:HAS_BOARD_MEMBER]->(p:Person) RETURN COUNT(DISTINCT p) AS total_board_members",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_board_members": 29
      }
    ],
    "answer": "Based on the query result, SAP's direct subsidiaries have a total of 29 board members."
  },
  {
    "question": "What is the name of the country where 'New Relic', a supplier to IBM, is located?",
    "cypher": "MATCH (country:Country)<-[:IN_COUNTRY]-(c:City)<-[:IN_CITY]-(sup:Organization {name: 'New Relic'})-[:HAS_SUPPLIER]->(o:Organization {name: 'IBM'}) RETURN country.name AS company_country LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the title of the latest article mentioning a subsidiary of Microsoft Corporation.",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(sub:Organization)<-[:MENTIONS]-(a:Article) WHERE a.date IS NOT NULL RETURN a.title AS latest_article_title ORDER BY a.date DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "latest_article_title": "US injunction temporarily blocks Microsoft\u2019s Activision Blizzard acquisition leading up court battle"
      }
    ],
    "answer": "The latest article mentioning a Microsoft subsidiary is \"US injunction temporarily blocks Microsoft's Activision Blizzard acquisition leading up court battle\"."
  },
  {
    "question": "How many corporate links are there between the company run by Julie Spellman Sweet and IBM?",
    "cypher": "MATCH path = (p:Person {name: 'Julie Spellman Sweet'})-[:HAS_CEO]->(o1:Organization)-[:HAS_SUPPLIER|HAS_SUBSIDIARY*1..2]-(o2:Organization {name: 'IBM'}) RETURN count(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What's the average revenue of suppliers to a company called 'Accenturee'?",
    "cypher": "MATCH (o:Organization {name: 'Accenture'})<-[:HAS_SUPPLIER]-(s:Organization) WHERE s.revenue IS NOT NULL RETURN avg(s.revenue) AS average_supplier_revenue",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_supplier_revenue": 157439500000.0
      }
    ],
    "answer": "The average revenue of suppliers to Accenture is $157.44 billion."
  },
  {
    "question": "What is the name of the city for SAPs subsidiary, Concur?",
    "cypher": "MATCH (o:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization {name: 'Concur'})-[:IN_CITY]->(c:City) RETURN c.name AS subsidiary_city",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "grammar",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "subsidiary_city": "Paris"
      },
      {
        "subsidiary_city": "San Francisco"
      },
      {
        "subsidiary_city": "Singapore"
      },
      {
        "subsidiary_city": "Atlanta"
      },
      {
        "subsidiary_city": "Paradise Valley"
      },
      {
        "subsidiary_city": "Eden Prairie"
      },
      {
        "subsidiary_city": "Amsterdam"
      },
      {
        "subsidiary_city": "Levallois-Perret"
      },
      {
        "subsidiary_city": "Stockholm"
      },
      {
        "subsidiary_city": "Bellevue"
      },
      {
        "subsidiary_city": "Minneapolis"
      },
      {
        "subsidiary_city": "Frankfurt am Main"
      },
      {
        "subsidiary_city": "Prague"
      },
      {
        "subsidiary_city": "Redmond"
      },
      {
        "subsidiary_city": "Noisy-le-Grand"
      },
      {
        "subsidiary_city": "Vienna"
      },
      {
        "subsidiary_city": "Taipei"
      },
      {
        "subsidiary_city": "Allen"
      },
      {
        "subsidiary_city": "Rueil-Malmaison"
      },
      {
        "subsidiary_city": "Addison"
      },
      {
        "subsidiary_city": "Andover"
      },
      {
        "subsidiary_city": "Eschborn"
      },
      {
        "subsidiary_city": "Plainfield"
      },
      {
        "subsidiary_city": "Topsfield"
      },
      {
        "subsidiary_city": "Tracy"
      },
      {
        "subsidiary_city": "Massy"
      },
      {
        "subsidiary_city": "South San Francisco"
      },
      {
        "subsidiary_city": "Alexandria"
      },
      {
        "subsidiary_city": "North Andover"
      },
      {
        "subsidiary_city": "Clichy"
      },
      {
        "subsidiary_city": "Methuen"
      },
      {
        "subsidiary_city": "Coppell"
      },
      {
        "subsidiary_city": "Vimercate"
      },
      {
        "subsidiary_city": "St. Louis Park"
      },
      {
        "subsidiary_city": "Haddonfield"
      },
      {
        "subsidiary_city": "Muskegon"
      },
      {
        "subsidiary_city": "Lebanon"
      },
      {
        "subsidiary_city": "Mukwonago"
      }
    ]
  },
  {
    "question": "What's the top number of employees for any biz that invests in 'Infinite Analytics'?",
    "cypher": "MATCH (o:Organization {name: 'Infinite Analytics'})<-[:HAS_INVESTOR]-(inv:Organization) WHERE inv.nbrEmployees IS NOT NULL RETURN max(inv.nbrEmployees) AS max_investor_employees",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_investor_employees": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many steps to get from Julie Spellman Sweet's firm to any company in Seattle?",
    "cypher": "MATCH path = shortestPath((p:Person {name: 'Julie Spellman Sweet'})-[:HAS_CEO]->(o1:Organization)-[*]-(o2:Organization)-[:IN_CITY]->(c:City {name: 'Seattle'})) RETURN length(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What is the total revenue of organizations that are both suppliers and competitors to Microsoft Corporation?",
    "cypher": "MATCH (sup:Organization)-[:HAS_SUPPLIER]->(o:Organization {name: 'Microsoft Corporation'}) MATCH (sup)-[:HAS_COMPETITOR]->(o) WHERE sup.revenue IS NOT NULL RETURN SUM(sup.revenue) AS total_revenue",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_revenue": 163108379000.0
      }
    ],
    "answer": "The total revenue of organizations that are both suppliers and competitors to Microsoft Corporation is $163,108,379,000."
  },
  {
    "question": "Find the name of the CEO of the company that is a parent to 'IBM Research'.",
    "cypher": "MATCH (p:Person)<-[:HAS_CEO]-(parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization {name: 'IBM Research'}) RETURN p.name AS ceo_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "ceo_name": "Arvind Krishna"
      }
    ],
    "answer": "Arvind Krishna is the CEO of the parent company of IBM Research."
  },
  {
    "question": "Which subsidiary of SAP has the lowest revenue?",
    "cypher": "MATCH (o:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE sub.revenue IS NOT NULL RETURN sub.name AS lowest_revenue_subsidiary ORDER BY sub.revenue ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_revenue_subsidiary": "Deloitte"
      }
    ],
    "answer": "Based on the query result, Deloitte appears to be the subsidiary of SAP with the lowest revenue. However, I would caution that this result seems unusual, as Deloitte is typically known as its own consulting firm, not an SAP subsidiary. Without additional context, this answer should be treated with skepticism."
  },
  {
    "question": "Count the number of shared suppliers between 'IBM' and 'Oracle'.",
    "cypher": "MATCH (o1:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(s:Organization)-[:HAS_SUPPLIER]->(o2:Organization {name: 'Oracle'}) RETURN COUNT(DISTINCT s) AS shared_supplier_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "shared_supplier_count": 14
      }
    ],
    "answer": "Based on the query result, IBM and Oracle have 14 shared suppliers."
  },
  {
    "question": "How many board members does the parent company of 'Cloud Sherpa' have?",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization {name: 'Cloud Sherpas'}), (parent)-[:HAS_BOARD_MEMBER]->(p:Person) RETURN COUNT(DISTINCT p) AS board_member_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "board_member_count": 20
      }
    ],
    "answer": "The parent company of Cloud Sherpas has 20 board members."
  },
  {
    "question": "Find the industry of the parent corp of SuccessFactors.",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization {name: 'SuccessFactors'}), (parent)-[:HAS_CATEGORY]->(cat:IndustryCategory) RETURN cat.name AS parent_industry_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "parent_industry_name": "Enterprise Software Companies"
      },
      {
        "parent_industry_name": "Computer Hardware Companies"
      },
      {
        "parent_industry_name": "Business Software Companies"
      },
      {
        "parent_industry_name": "Cloud Computing Providers"
      },
      {
        "parent_industry_name": "CRM Software Companies"
      },
      {
        "parent_industry_name": "Software Companies"
      },
      {
        "parent_industry_name": "Data Analytics Companies"
      }
    ]
  },
  {
    "question": "What's the highest revenue among the investors of 'Infinyte Analytics'?",
    "cypher": "MATCH (o:Organization {name: 'Infinite Analytics'})<-[:HAS_INVESTOR]-(inv:Organization) WHERE inv.revenue IS NOT NULL RETURN max(inv.revenue) AS highest_investor_revenue",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "highest_investor_revenue": null
      }
    ],
    "answer": "The query returned None, which suggests there is no revenue data available for the investors of 'Infinite Analytics' in the database. Therefore, the answer is: UNKNOWN."
  },
  {
    "question": "How many subsidiarys does the company run by Julie Spellman Sweet have?",
    "cypher": "MATCH (p:Person {name: 'Julie Spellman Sweet'})-[:HAS_CEO]->(o:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization) RETURN COUNT(DISTINCT sub) AS number_of_subsidiaries",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "grammar",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Calculate the average sentiment of articles that mention suppliers of Microsoft Corporation.",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(sup:Organization)<-[:MENTIONS]-(a:Article) WHERE a.sentiment IS NOT NULL RETURN avg(a.sentiment) AS average_sentiment",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_sentiment": NaN
      }
    ],
    "answer": "Unable to calculate the average sentiment because the result returned NaN (Not a Number), which suggests there might not be any valid sentiment data for articles mentioning Microsoft Corporation's suppliers."
  },
  {
    "question": "What is the motto of the company that is a supplier to 'New Relic' and a subsidiary of 'IBM'?",
    "cypher": "MATCH (o1:Organization {name: 'New Relic'})<-[:HAS_SUPPLIER]-(s:Organization)<-[:HAS_SUBSIDIARY]-(o2:Organization {name: 'IBM'}) RETURN s.motto AS company_motto LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "company_motto": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Find the name of the city hosting the SAP subsidiary with the largest number of employees.",
    "cypher": "MATCH (o:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(c:City) WHERE sub.nbrEmployees IS NOT NULL RETURN c.name AS top_city_by_employees ORDER BY sub.nbrEmployees DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_city_by_employees": "Prague"
      }
    ],
    "answer": "Based on the query result, Prague is the city hosting the SAP subsidiary with the largest number of employees."
  },
  {
    "question": "What is the number of hops in the shortest corporate path between 'Microsoft Corporation' and 'SAP'?",
    "cypher": "MATCH path = shortestPath((o1:Organization {name: 'Microsoft Corporation'})-[:HAS_SUPPLIER|HAS_SUBSIDIARY|HAS_COMPETITOR*]-(o2:Organization {name: 'SAP'})) RETURN length(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "path_length": 1
      }
    ],
    "answer": "The shortest corporate path between Microsoft Corporation and SAP is 1 hop."
  },
  {
    "question": "Count the total number of firms that are suppliers to suppliers of Mircosoft.",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(s1:Organization)<-[:HAS_SUPPLIER]-(s2:Organization) RETURN COUNT(DISTINCT s2) AS second_tier_supplier_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "second_tier_supplier_count": 385
      }
    ],
    "answer": "There are 385 distinct firms that are suppliers to suppliers of Microsoft Corporation."
  },
  {
    "question": "Which country is the company 'Accentur' located in?",
    "cypher": "MATCH (o:Organization {name: 'Accenture'})-[:IN_CITY]->(c:City)-[:IN_COUNTRY]->(country:Country) RETURN country.name AS company_country",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "United States of America"
      },
      {
        "company_country": "Australia"
      },
      {
        "company_country": "Australia"
      },
      {
        "company_country": "Australia"
      },
      {
        "company_country": "Netherlands"
      },
      {
        "company_country": "Argentina"
      },
      {
        "company_country": "Argentina"
      },
      {
        "company_country": "Argentina"
      },
      {
        "company_country": "Argentina"
      },
      {
        "company_country": "France"
      },
      {
        "company_country": "France"
      },
      {
        "company_country": "India"
      },
      {
        "company_country": "India"
      },
      {
        "company_country": "India"
      },
      {
        "company_country": "Canada"
      },
      {
        "company_country": "Canada"
      },
      {
        "company_country": "Canada"
      },
      {
        "company_country": "Canada"
      },
      {
        "company_country": "Portugal"
      },
      {
        "company_country": "Portugal"
      },
      {
        "company_country": "Malaysia"
      },
      {
        "company_country": "Malaysia"
      },
      {
        "company_country": "Malaysia"
      },
      {
        "company_country": "Denmark"
      },
      {
        "company_country": "Brazil"
      },
      {
        "company_country": "Brazil"
      },
      {
        "company_country": "Brazil"
      },
      {
        "company_country": "Hong Kong"
      },
      {
        "company_country": "Philippines"
      },
      {
        "company_country": "Philippines"
      },
      {
        "company_country": "Philippines"
      },
      {
        "company_country": "Turkey"
      },
      {
        "company_country": "Belgium"
      },
      {
        "company_country": "Belgium"
      },
      {
        "company_country": "Colombia"
      },
      {
        "company_country": "Sweden"
      },
      {
        "company_country": "Finland"
      },
      {
        "company_country": "Finland"
      },
      {
        "company_country": "Finland"
      },
      {
        "company_country": "Poland"
      },
      {
        "company_country": "Poland"
      },
      {
        "company_country": "Poland"
      },
      {
        "company_country": "Poland"
      },
      {
        "company_country": "Saudi Arabia"
      }
    ]
  },
  {
    "question": "What is the minimum revenue of a biz that has 'Julie Spelman Sweet' as its CEO?",
    "cypher": "MATCH (p:Person {name: 'Julie Spellman Sweet'})-[:HAS_CEO]->(o:Organization) WHERE o.revenue IS NOT NULL RETURN min(o.revenue) AS minimum_revenue",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many suppliers link IBM to any company in the 'Electronic Products Manufacterers' category?",
    "cypher": "MATCH path = (o:Organization {name: 'IBM'})-[:HAS_SUPPLIER*]->(sup:Organization)-[:HAS_CATEGORY]->(cat:IndustryCategory {name: 'Electronic Products Manufacturers'}) RETURN count(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Sum the number of employees for all companies that are competitors to the suppliers of Oracle.",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})<-[:HAS_SUPPLIER]-(sup:Organization)-[:HAS_COMPETITOR]->(comp:Organization) WHERE comp.nbrEmployees IS NOT NULL RETURN SUM(comp.nbrEmployees) AS total_employee_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_employee_count": 9920348
      }
    ],
    "answer": "The total number of employees across all companies that are competitors to Oracle's suppliers is 9,920,348."
  },
  {
    "question": "What is the name of the CEO of the company that is a supplier to Microsoft and a competitor to Oracle?",
    "cypher": "MATCH (p:Person)<-[:HAS_CEO]-(o:Organization)-[:HAS_SUPPLIER]->(:Organization {name: 'Microsoft Corporation'}), (o)-[:HAS_COMPETITOR]->(:Organization {name: 'Oracle'}) RETURN p.name AS ceo_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "ceo_name": "Mark Benjamin"
      }
    ],
    "answer": "Mark Benjamin is the CEO of the company that is a supplier to Microsoft and a competitor to Oracle."
  },
  {
    "question": "Find the name of the organization with the most employees that is mentioned in an article from 'Reuters'.",
    "cypher": "MATCH (a:Article {siteName: 'Reuters'})-[:MENTIONS]->(o:Organization) WHERE o.nbrEmployees IS NOT NULL RETURN o.name AS top_mentioned_org_by_employees ORDER BY o.nbrEmployees DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_mentioned_org_by_employees": "Foxconn"
      }
    ],
    "answer": "Based on the query result, Foxconn is the organization with the most employees mentioned in a Reuters article."
  },
  {
    "question": "How many distinct investors (person or org) have invested in subsidiaries of SAP?",
    "cypher": "MATCH (o:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:HAS_INVESTOR]->(inv) RETURN COUNT(DISTINCT inv) AS investor_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "investor_count": 5
      }
    ],
    "answer": "5 distinct investors have invested in subsidiaries of SAP."
  },
  {
    "question": "What's the total revenue for all of IBMs competitors suppliers?",
    "cypher": "MATCH (o:Organization {name: 'IBM'})-[:HAS_COMPETITOR]->(comp:Organization)<-[:HAS_SUPPLIER]-(sup:Organization) WHERE sup.revenue IS NOT NULL RETURN SUM(sup.revenue) AS total_revenue",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "grammar",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_revenue": 2364132521999.0
      }
    ],
    "answer": "The total revenue for all suppliers of IBM's competitors is $2,364,132,521,999."
  },
  {
    "question": "Tell me the motto for the biz that has Cloud Sherpas as a subsidiary.",
    "cypher": "MATCH (o:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization {name: 'Cloud Sherpas'}) RETURN o.motto AS parent_company_motto",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "parent_company_motto": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Find the city of the company with the most employees that acts as a supplier to 'Microsft Corporation'.",
    "cypher": "MATCH (o:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(sup:Organization)-[:IN_CITY]->(c:City) WHERE sup.nbrEmployees IS NOT NULL RETURN c.name AS city_of_largest_supplier ORDER BY sup.nbrEmployees DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "city_of_largest_supplier": "Bangalore"
      }
    ],
    "answer": "The city of the company with the most employees that acts as a supplier to Microsoft Corporation is Bangalore."
  },
  {
    "question": "Count the number of links between IBM and any public company through their supplier chain.",
    "cypher": "MATCH path = (o1:Organization {name: 'IBM'})-[:HAS_SUPPLIER*]->(o2:Organization {isPublic: true}) RETURN count(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What is the average number of employees for companies that are suppliers to IBM and located in the United States of America?",
    "cypher": "MATCH (sup:Organization)-[:HAS_SUPPLIER]->(o:Organization {name: 'IBM'}), (sup)-[:IN_CITY]->(city:City)-[:IN_COUNTRY]->(country:Country {name: 'United States of America'}) WHERE sup.nbrEmployees IS NOT NULL RETURN avg(sup.nbrEmployees) AS average_employee_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_employee_count": 84162.55357142857
      }
    ],
    "answer": "Based on the query result, the average number of employees for companies that are suppliers to IBM and located in the United States of America is approximately 84,163 employees."
  },
  {
    "question": "Find the name of the parent company of 'Concur'.",
    "cypher": "MATCH (parent:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization {name: 'Concur'}) RETURN parent.name AS parent_company_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "parent_company_name": "SAP"
      }
    ],
    "answer": "The parent company of Concur is SAP."
  },
  {
    "question": "How many distinct suppliers does Microsoft Corporation have that are also suppliers to Oracle?",
    "cypher": "MATCH (msft:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(s:Organization)-[:HAS_SUPPLIER]->(oracle:Organization {name: 'Oracle'}) RETURN count(DISTINCT s) AS common_supplier_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "common_supplier_count": 28
      }
    ],
    "answer": "Microsoft Corporation and Oracle have 28 common suppliers."
  },
  {
    "question": "What is the name of the CEO of a company that is a competitor to Oracle and a supplier to IBM?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(org:Organization)-[:HAS_COMPETITOR]->(oracle:Organization {name: 'Oracle'}), (org)-[:HAS_CEO]->(ceo:Person) RETURN ceo.name AS ceo_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "ceo_name": "Mark Benjamin"
      }
    ],
    "answer": "Mark Benjamin is the CEO of a company that is both a supplier to IBM and a competitor to Oracle."
  },
  {
    "question": "What is the highest revenue of a company that is a supplier to a subsidiary of Microsoft Corporation?",
    "cypher": "MATCH (msft:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(sub:Organization)<-[:HAS_SUPPLIER]-(sup:Organization) WHERE sup.revenue IS NOT NULL RETURN max(sup.revenue) AS highest_revenue",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "highest_revenue": 198270000000.0
      }
    ],
    "answer": "The highest revenue of a company that is a supplier to a subsidiary of Microsoft Corporation is $198,270,000,000."
  },
  {
    "question": "How many organizations act as an intermediary supplier between Microsoft Corporation and SAP?",
    "cypher": "MATCH (msft:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(mid:Organization)-[:HAS_SUPPLIER]->(sap:Organization {name: 'SAP'}) RETURN count(DISTINCT mid) AS intermediary_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "intermediary_count": 11
      }
    ],
    "answer": "Based on the query result, there are 11 organizations that act as an intermediary supplier between Microsoft Corporation and SAP."
  },
  {
    "question": "What's the total revenue of all subsidiaries of SAP's competitors?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_COMPETITOR]->(comp:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE sub.revenue IS NOT NULL RETURN sum(sub.revenue) AS total_subsidiary_revenue",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_subsidiary_revenue": 68460199256.0
      }
    ],
    "answer": "Based on the query result, the total revenue of subsidiaries of SAP's competitors is $68,460,199,256."
  },
  {
    "question": "Find the name of the country where a subsidiary of SAP is located.",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(c:City)-[:IN_COUNTRY]->(country:Country) RETURN country.name AS subsidiary_country LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "subsidiary_country": "Netherlands"
      }
    ],
    "answer": "Based on the query result, a subsidiary of SAP is located in the Netherlands."
  },
  {
    "question": "Find the name of the company with the most employees that acts as a supplier to both IBM and Oracle.",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(s:Organization)-[:HAS_SUPPLIER]->(oracle:Organization {name: 'Oracle'}) WHERE s.nbrEmployees IS NOT NULL RETURN s.name AS largest_company_name ORDER BY s.nbrEmployees DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many companies connect IBM to the 'Electronic Products Manufacturers' industry category via a chain of two suppliers?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(s1:Organization)<-[:HAS_SUPPLIER]-(s2:Organization)-[:HAS_CATEGORY]->(cat:IndustryCategory {name: 'Electronic Products Manufacturers'}) RETURN count(DISTINCT s2) AS connecting_companies_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connecting_companies_count": 33
      }
    ],
    "answer": "Based on the query result, there are 33 companies that connect IBM to the 'Electronic Products Manufacturers' industry category through a chain of two suppliers."
  },
  {
    "question": "What is the average number of employees for companies that are suppliers to IBM and are located in the United States of America?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(s:Organization)-[:IN_CITY]->(c:City)-[:IN_COUNTRY]->(country:Country {name: 'United States of America'}) WHERE s.nbrEmployees IS NOT NULL RETURN avg(s.nbrEmployees) AS average_employee_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_employee_count": 84162.55357142857
      }
    ],
    "answer": "Based on the query result, the average number of employees for companies that are suppliers to IBM and are located in the United States is approximately 84,163 employees."
  },
  {
    "question": "What city is a supplier to the company run by Julie Spelman Sweet located in?",
    "cypher": "MATCH (:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO]-(org:Organization)<-[:HAS_SUPPLIER]-(sup:Organization)-[:IN_CITY]->(city:City) RETURN city.name AS supplier_city LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_city": "Weston"
      }
    ],
    "answer": "The supplier city is Weston."
  },
  {
    "question": "What's the minimum revenue among competitors of SAP's subsidiaries?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:HAS_COMPETITOR]->(comp:Organization) WHERE comp.revenue IS NOT NULL RETURN min(comp.revenue) AS lowest_revenue",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_revenue": 741149000.0
      }
    ],
    "answer": "The minimum revenue among competitors of SAP's subsidiaries is $741,149,000."
  },
  {
    "question": "How many supply chain links are there between the company run by Julie Spellman Sweet and any company in Seattle?",
    "cypher": "MATCH p = shortestPath((:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO]-(start_org:Organization)-[:HAS_SUPPLIER*]-(end_org:Organization)-[:IN_CITY]->(:City {name: 'Seattle'})) RETURN length(p) AS supply_chain_length",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Count the number of investors (people) in companies that are competitors of Mircosoft Corporation.",
    "cypher": "MATCH (msft:Organization {name: 'Microsoft Corporation'})-[:HAS_COMPETITOR]->(comp:Organization)-[:HAS_INVESTOR]->(p:Person) RETURN count(DISTINCT p) AS total_investors",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_investors": 14
      }
    ],
    "answer": "There are 14 distinct investors in companies that are competitors of Microsoft Corporation."
  },
  {
    "question": "What is the industry category of a company that has invested in Microsoft Corporation?",
    "cypher": "MATCH (msft:Organization {name: 'Microsoft Corporation'})<-[:HAS_INVESTOR]-(inv_org:Organization)-[:HAS_CATEGORY]->(cat:IndustryCategory) RETURN cat.name AS investor_industry LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "investor_industry": "Manufacturing Companies"
      }
    ],
    "answer": "The industry category of a company that has invested in Microsoft Corporation is Manufacturing Companies."
  },
  {
    "question": "Which supplier to a subsidiary of Accenture has the smallest workforce?",
    "cypher": "MATCH (acc:Organization {name: 'Accenture'})-[:HAS_SUBSIDIARY]->(sub:Organization)<-[:HAS_SUPPLIER]-(s:Organization) WHERE s.nbrEmployees IS NOT NULL RETURN s.name AS smallest_supplier_name ORDER BY s.nbrEmployees ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "smallest_supplier_name": "Origin Digital"
      }
    ],
    "answer": "Origin Digital is the supplier to an Accenture subsidiary with the smallest workforce."
  },
  {
    "question": "How many investors (organizations) does IBM share with Oracle through their common suppliers?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(s:Organization)-[:HAS_SUPPLIER]->(oracle:Organization {name: 'Oracle'}), (s)-[:HAS_INVESTOR]->(inv:Organization) RETURN count(DISTINCT inv) AS shared_investor_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "shared_investor_count": 27
      }
    ],
    "answer": "IBM and Oracle share 27 common investors through their suppliers."
  },
  {
    "question": "How many distinct industry categories are associated with suppliers of Accenture?",
    "cypher": "MATCH (acc:Organization {name: 'Accenture'})<-[:HAS_SUPPLIER]-(s:Organization)-[:HAS_CATEGORY]->(ic:IndustryCategory) RETURN count(DISTINCT ic) AS num_categories",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_categories": 33
      }
    ],
    "answer": "Accenture has suppliers from 33 distinct industry categories."
  },
  {
    "question": "Give me the motto of a biz that supplies both IBM and Oracle.",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(s:Organization)-[:HAS_SUPPLIER]->(oracle:Organization {name: 'Oracle'}) WHERE s.motto IS NOT NULL RETURN s.motto AS company_motto LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the top revenue-generating company that has invested in a competitor of Mircosoft.",
    "cypher": "MATCH (msft:Organization {name: 'Microsoft Corporation'})-[:HAS_COMPETITOR]->(comp:Organization)<-[:HAS_INVESTOR]-(inv:Organization) WHERE inv.revenue IS NOT NULL RETURN inv.name AS top_investor_by_revenue ORDER BY inv.revenue DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_investor_by_revenue": "Microsoft Corporation"
      }
    ],
    "answer": "Based on the query result, the top revenue-generating company that has invested in a competitor of Microsoft is Microsoft Corporation itself. This might indicate a self-referential or unexpected result in the data, so the answer should be treated with caution."
  },
  {
    "question": "How many competitors of Mircosoft are located in the same country as SAP?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:IN_CITY]->(:City)-[:IN_COUNTRY]->(c:Country), (msft:Organization {name: 'Microsoft Corporation'})-[:HAS_COMPETITOR]->(comp:Organization)-[:IN_CITY]->(:City)-[:IN_COUNTRY]->(c) RETURN count(DISTINCT comp) AS competitor_count_in_country",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "competitor_count_in_country": 8
      }
    ],
    "answer": "Based on the query result, there are 8 competitors of Microsoft located in the same country as SAP."
  },
  {
    "question": "Sum up the total number of employees for all firms that are subsidiaries of SAP's suppliers.",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})<-[:HAS_SUPPLIER]-(sup:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE sub.nbrEmployees IS NOT NULL RETURN sum(sub.nbrEmployees) AS total_workforce",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_workforce": 510956
      }
    ],
    "answer": "The total number of employees for subsidiaries of SAP's suppliers is 510,956."
  },
  {
    "question": "Name a person who is a board member of a company that is a subsidiary of a competitor of Accenture.",
    "cypher": "MATCH (acc:Organization {name: 'Accenture'})-[:HAS_COMPETITOR]->(comp:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization)-[:HAS_BOARD_MEMBER]->(p:Person) RETURN p.name AS board_member_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "board_member_name": "L John Doerr"
      }
    ],
    "answer": "L John Doerr is a board member of a subsidiary of a company that competes with Accenture."
  },
  {
    "question": "What is the name of the city with the highest number of employees working for companies that are suppliers to IBM?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(sup:Organization)-[:IN_CITY]->(city:City) WHERE sup.nbrEmployees IS NOT NULL WITH city, sum(sup.nbrEmployees) AS total_employees RETURN city.name AS top_city_by_employees ORDER BY total_employees DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_city_by_employees": "New York City"
      }
    ],
    "answer": "According to the data, New York City has the highest number of employees working for companies that are suppliers to IBM."
  },
  {
    "question": "What is the shortest number of subsidiary relationships between SAP and Concur?",
    "cypher": "MATCH p = shortestPath((sap:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY*]->(concur:Organization {name: 'Concur'})) RETURN length(p) AS subsidiary_path_length",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "subsidiary_path_length": 1
      }
    ],
    "answer": "Based on the query result, the shortest number of subsidiary relationships between SAP and Concur is 1, meaning SAP directly owns Concur as a subsidiary."
  },
  {
    "question": "Calculate the total number of board members for companies that are suppliers to IBM's competitors.",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})-[:HAS_COMPETITOR]->(comp:Organization)<-[:HAS_SUPPLIER]-(sup:Organization)-[:HAS_BOARD_MEMBER]->(p:Person) RETURN count(DISTINCT p) AS total_board_members",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_board_members": 1521
      }
    ],
    "answer": "Based on the query result, there are 1,521 distinct board members for companies that are suppliers to IBM's competitors."
  },
  {
    "question": "What's the name of the parent of the CEO of Accenture?",
    "cypher": "MATCH (:Organization {name: 'Accenture'})-[:HAS_CEO]->(ceo:Person)-[:HAS_PARENT]->(parent:Person) RETURN parent.name AS ceo_parent_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the lowest revenue among public companies that are suppliers to Oracle's competitors.",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})-[:HAS_COMPETITOR]->(comp:Organization)<-[:HAS_SUPPLIER]-(sup:Organization) WHERE sup.isPublic = true AND sup.revenue IS NOT NULL RETURN min(sup.revenue) AS lowest_public_revenue",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_public_revenue": 141000000.0
      }
    ],
    "answer": "The lowest revenue among public companies that supply Oracle's competitors is $141 million."
  },
  {
    "question": "How many distinct paths of length 3 or less exist between Accenture and IBM using only supplier and subsidiary links?",
    "cypher": "MATCH p = (acc:Organization {name: 'Accenture'})-[:HAS_SUPPLIER|HAS_SUBSIDIARY*1..3]-(ibm:Organization {name: 'IBM'}) RETURN count(p) AS path_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "path_count": 3223
      }
    ],
    "answer": "There are 3,223 distinct paths of length 3 or less between Accenture and IBM using supplier and subsidiary links."
  },
  {
    "question": "What's the average revenue for biz's that act as suppliers to Oracle's subsidiaries?",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})-[:HAS_SUBSIDIARY]->(sub:Organization)<-[:HAS_SUPPLIER]-(sup:Organization) WHERE sup.revenue IS NOT NULL RETURN avg(sup.revenue) AS average_supplier_revenue",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_supplier_revenue": 40717984333.33333
      }
    ],
    "answer": "Based on the query result, the average revenue for businesses that act as suppliers to Oracle's subsidiaries is approximately $40.7 billion."
  },
  {
    "question": "Identify the industry of a company that is a supplier to a subsidiary of Microsoft Corporation.",
    "cypher": "MATCH (msft:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(sub:Organization)<-[:HAS_SUPPLIER]-(sup:Organization)-[:HAS_CATEGORY]->(cat:IndustryCategory) RETURN cat.name AS supplier_industry_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_industry_name": "Electronic Products Manufacturers"
      }
    ],
    "answer": "Based on the query result, the industry of a company that is a supplier to a Microsoft Corporation subsidiary is Electronic Products Manufacturers."
  },
  {
    "question": "Which firm, a supplier to a company invested in by Julie Spellman Sweet, has the largest workforce?",
    "cypher": "MATCH (:Person {name: 'Julie Spellman Sweet'})-[:HAS_INVESTOR]->(inv_org:Organization)<-[:HAS_SUPPLIER]-(sup:Organization) WHERE sup.nbrEmployees IS NOT NULL RETURN sup.name AS largest_supplier_name ORDER BY sup.nbrEmployees DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many board members connect Julie Spellman Sweet's firm to IBM's suppliers?",
    "cypher": "MATCH (:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO]-(acc:Organization)-[:HAS_BOARD_MEMBER]->(bm:Person)<-[:HAS_BOARD_MEMBER]-(sup:Organization)-[:HAS_SUPPLIER]->(ibm:Organization {name: 'IBM'}) RETURN count(DISTINCT bm) AS connecting_board_members",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connecting_board_members": 0
      }
    ],
    "answer": "Based on the query result, there are 0 board members connecting Julie Spellman Sweet's firm to IBM's suppliers."
  },
  {
    "question": "How many distinct organizations has Julie Spellman Sweet invested in that also have IBM as a supplier?",
    "cypher": "MATCH (p:Person {name: 'Julie Spellman Sweet'})-[:HAS_INVESTOR]->(org:Organization)<-[:HAS_SUPPLIER]-(ibm:Organization {name: 'IBM'}) RETURN count(DISTINCT org) AS investment_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Find the name of a child of a person who is on the board of a supplier to Oracel.",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})<-[:HAS_SUPPLIER]-(s:Organization)-[:HAS_BOARD_MEMBER]->(p:Person)-[:HAS_CHILD]->(child:Person) RETURN child.name AS board_member_child_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "board_member_child_name": "Juliette Dell"
      }
    ],
    "answer": "Juliette Dell is a child of a person who serves on the board of a supplier to Oracle."
  },
  {
    "question": "What is the maximum number of employees for a company in the same industry as a supplier to SAP, and located in the United States of America?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})<-[:HAS_SUPPLIER]-(sup:Organization)-[:HAS_CATEGORY]->(cat:IndustryCategory)<-[:HAS_CATEGORY]-(other:Organization)-[:IN_CITY]->(:City)-[:IN_COUNTRY]->(:Country {name: 'United States of America'}) WHERE other.nbrEmployees IS NOT NULL RETURN max(other.nbrEmployees) AS max_employees_in_category",
    "query_type": "Sorting",
    "complexity": "5-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_employees_in_category": 1290000
      }
    ],
    "answer": "The maximum number of employees for a company in the same industry category as a supplier to SAP, and located in the United States of America, is 1,290,000 employees."
  },
  {
    "question": "Count the number of cities that house both a subsidiary of Microsoft and a competitor of Oracle.",
    "cypher": "MATCH (msft:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(city:City), (oracle:Organization {name: 'Oracle'})-[:HAS_COMPETITOR]->(comp:Organization)-[:IN_CITY]->(city) RETURN count(DISTINCT city) AS common_city_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "common_city_count": 218
      }
    ],
    "answer": "Based on the query result, there are 218 cities that house both a subsidiary of Microsoft and a competitor of Oracle."
  },
  {
    "question": "Count the number of suppliers for competitors of the company whose CEO is Julie Spellman Sweet.",
    "cypher": "MATCH (:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO]-(org:Organization)-[:HAS_COMPETITOR]->(comp:Organization)<-[:HAS_SUPPLIER]-(sup:Organization) RETURN count(DISTINCT sup) AS total_suppliers",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_suppliers": 170
      }
    ],
    "answer": "There are 170 distinct suppliers for the competitors of the company led by Julie Spellman Sweet."
  },
  {
    "question": "What is the name of the country where a competitor of SAP's supplier is located?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})<-[:HAS_SUPPLIER]-(sup:Organization)-[:HAS_COMPETITOR]->(comp:Organization)-[:IN_CITY]->(c:City)-[:IN_COUNTRY]->(country:Country) RETURN country.name AS competitor_country_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "competitor_country_name": "United States of America"
      }
    ],
    "answer": "The competitor of SAP's supplier is located in the United States of America."
  },
  {
    "question": "Show me the name of the company with the lowest revenue that has a subsidiary which is a competitor to Oracel.",
    "cypher": "MATCH (o:Organization {name: 'Oracle'})<-[:HAS_COMPETITOR]-(sub:Organization)<-[:HAS_SUBSIDIARY]-(parent:Organization) WHERE parent.revenue IS NOT NULL RETURN parent.name AS lowest_revenue_parent ORDER BY parent.revenue ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_revenue_parent": "Micro Focus"
      }
    ],
    "answer": "Based on the query result, Micro Focus is the company with the lowest revenue that has a subsidiary which is a competitor to Oracle."
  },
  {
    "question": "What's the shortest connection in terms of company hops between an investor in IBM and a supplier of SAP?",
    "cypher": "MATCH p = shortestPath((:Organization {name: 'IBM'})<-[:HAS_INVESTOR]-(inv:Organization)-[:HAS_SUPPLIER|HAS_SUBSIDIARY|HAS_COMPETITOR*]-(sup:Organization)-[:HAS_SUPPLIER]->(:Organization {name: 'SAP'})) RETURN length(p) AS connection_hops",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What's the total workforce of companies located in the same city as a subsidiary of Mircosoft Corporation?",
    "cypher": "MATCH (msft:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(city:City)<-[:IN_CITY]-(other_org:Organization) WHERE other_org.nbrEmployees IS NOT NULL RETURN sum(other_org.nbrEmployees) AS city_workforce_total",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "city_workforce_total": 635598848
      }
    ],
    "answer": "The total workforce of companies located in the same city as a Microsoft subsidiary is 635,598,848 employees."
  },
  {
    "question": "Name one investor (an organization) in a company that supplies technology to IBM.",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(sup:Organization)-[:HAS_INVESTOR]->(inv:Organization) WHERE (sup)-[:HAS_CATEGORY]->(:IndustryCategory) AND any(cat IN sup.category WHERE cat.name CONTAINS 'Technology') RETURN inv.name AS investor_organization_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the highest revenue of a company located in the same country as the headquarters of a supplier to Microsoft Corporation.",
    "cypher": "MATCH (msft:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(sup:Organization)-[:IN_CITY]->(:City)-[:IN_COUNTRY]->(country:Country)<-[:IN_COUNTRY]-(:City)<-[:IN_CITY]-(other:Organization) WHERE other.revenue IS NOT NULL RETURN max(other.revenue) AS max_revenue_in_country",
    "query_type": "Sorting",
    "complexity": "5-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_revenue_in_country": 198270000000.0
      }
    ],
    "answer": "The highest revenue of a company located in the same country as a Microsoft supplier is $198,270,000,000."
  },
  {
    "question": "How many competitors of SAP are also suppliers to a subsidiary of Microsoft Corporation?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_COMPETITOR]->(comp:Organization)-[:HAS_SUPPLIER]->(sub:Organization)<-[:HAS_SUBSIDIARY]-(msft:Organization {name: 'Microsoft Corporation'}) RETURN count(DISTINCT comp) AS competitor_supplier_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "competitor_supplier_count": 5
      }
    ],
    "answer": "There are 5 competitors of SAP that are also suppliers to a subsidiary of Microsoft Corporation."
  },
  {
    "question": "How many public companys are suppliers to competitors of SAP?",
    "cypher": "MATCH (sap:Organization {name: 'SAP'})-[:HAS_COMPETITOR]->(comp:Organization)<-[:HAS_SUPPLIER]-(sup:Organization) WHERE sup.isPublic = true RETURN count(DISTINCT sup) AS public_supplier_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "grammar",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "public_supplier_count": 38
      }
    ],
    "answer": "There are 38 public companies that are suppliers to SAP's competitors."
  },
  {
    "question": "What is the name of the city a competitor to an IBM subsidiary is located in?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:HAS_COMPETITOR]->(comp:Organization)-[:IN_CITY]->(city:City) RETURN city.name AS competitor_city_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "competitor_city_name": "Bangalore"
      }
    ],
    "answer": "Bangalore"
  },
  {
    "question": "What is the minimum number of employees in a company that is a supplier to a company where Julie Spellman Sweet is a board member?",
    "cypher": "MATCH (:Person {name: 'Julie Spellman Sweet'})-[:HAS_BOARD_MEMBER]->(org:Organization)<-[:HAS_SUPPLIER]-(sup:Organization) WHERE sup.nbrEmployees IS NOT NULL RETURN min(sup.nbrEmployees) AS min_employee_count",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What is the number of organizational investors that have invested in both Microsoft Corporation and Oracle?",
    "cypher": "MATCH (msft:Organization {name: 'Microsoft Corporation'})<-[:HAS_INVESTOR]-(inv:Organization)-[:HAS_INVESTOR]->(oracle:Organization {name: 'Oracle'}) RETURN count(DISTINCT inv) AS common_investor_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "common_investor_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 organizational investors that have invested in both Microsoft Corporation and Oracle."
  },
  {
    "question": "What is the total count of organizations mentioned in articles that also mention a supplier of IBM?",
    "cypher": "MATCH (ibm:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(sup:Organization)<-[:MENTIONS]-(article:Article)-[:MENTIONS]->(mentioned_org:Organization) RETURN count(DISTINCT mentioned_org) AS total_mentioned_orgs",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": null,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_mentioned_orgs": 1313
      }
    ],
    "answer": "Based on the query result, there are 1,313 distinct organizations mentioned in articles that also mention a supplier of IBM."
  },
  {
    "question": "Find the total revenue for all the companys which are suppliers to a subsidiary of a competitor of Mircosoft.",
    "cypher": "MATCH (msft:Organization {name: 'Microsoft Corporation'})-[:HAS_COMPETITOR]->(comp:Organization)-[:HAS_SUBSIDIARY]->(sub:Organization)<-[:HAS_SUPPLIER]-(sup:Organization) WHERE sup.revenue IS NOT NULL RETURN sum(sup.revenue) AS total_supplier_revenue",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "grammar",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_supplier_revenue": 5702952411997.0
      }
    ],
    "answer": "The total revenue for suppliers to subsidiaries of Microsoft's competitors is $5,702,952,411,997."
  },
  {
    "question": "How many distinct suppliers does the company run by Julie Spellman Sweet have?",
    "cypher": "MATCH (:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO]-(o:Organization)-[:HAS_SUPPLIER]->(s:Organization) RETURN count(DISTINCT s) AS total_suppliers",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_suppliers": 270
      }
    ],
    "answer": "The company run by Julie Spellman Sweet has 270 distinct suppliers."
  },
  {
    "question": "In what country is a subsidiary of SAP located?",
    "cypher": "MATCH (:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(c:City)-[:IN_COUNTRY]->(co:Country) RETURN co.name AS subsidiary_country LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "subsidiary_country": "Netherlands"
      }
    ],
    "answer": "Based on the query result, a subsidiary of SAP is located in the Netherlands."
  },
  {
    "question": "What is the highest revenue among the competitors of Microsoft Corporation?",
    "cypher": "MATCH (:Organization {name: 'Microsoft Corporation'})-[:HAS_COMPETITOR]->(c:Organization) WHERE c.revenue IS NOT NULL RETURN max(c.revenue) AS highest_competitor_revenue",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "highest_competitor_revenue": 30870000000.0
      }
    ],
    "answer": "The highest revenue among Microsoft Corporation's competitors is $30,870,000,000."
  },
  {
    "question": "Count the number of corporate pathways (subsidiaries or suppliers) connecting IBM to New Relic.",
    "cypher": "MATCH path = (:Organization {name: 'IBM'})-[:HAS_SUBSIDIARY|HAS_SUPPLIER*1..4]->(:Organization {name: 'New Relic'}) RETURN count(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_count": 1554
      }
    ],
    "answer": "There are 1,554 corporate pathways (through subsidiaries or suppliers) connecting IBM to New Relic."
  },
  {
    "question": "What's the total number of employees for all firms that supply Mircosoft Corporation?",
    "cypher": "MATCH (:Organization {name: 'Microsoft Corporation'})-[:HAS_SUPPLIER]->(s:Organization) WHERE s.nbrEmployees IS NOT NULL RETURN sum(s.nbrEmployees) AS total_supplier_employees",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_supplier_employees": 3616267
      }
    ],
    "answer": "The total number of employees for all firms that supply Microsoft Corporation is 3,616,267."
  },
  {
    "question": "Tell me the motto of a biz that acts as a supplier to a subsidiary of IBM.",
    "cypher": "MATCH (:Organization {name: 'IBM'})-[:HAS_SUBSIDIARY]->(sub)-[:HAS_SUPPLIER]->(sup:Organization) WHERE sup.motto IS NOT NULL AND sup.motto <> '' RETURN sup.motto AS supplier_motto LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_motto": "moments connected"
      }
    ],
    "answer": "The motto of a business that supplies to an IBM subsidiary is \"moments connected\"."
  },
  {
    "question": "Find the name of the investor in 'Infinite Analytics' which has the lowest number of employees.",
    "cypher": "MATCH (:Organization {name: 'Infinite Analytics'})<-[:HAS_INVESTOR]-(inv:Organization) WHERE inv.nbrEmployees IS NOT NULL RETURN inv.name AS smallest_investor_name ORDER BY inv.nbrEmployees ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the shortest number of supply chain links between Oracle and IBM?",
    "cypher": "MATCH path = shortestPath((o1:Organization {name: 'Oracle'})-[:HAS_SUPPLIER*]-(o2:Organization {name: 'IBM'})) RETURN length(path) AS supply_chain_distance",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supply_chain_distance": 1
      }
    ],
    "answer": "Oracle and IBM are directly connected with 1 supply chain link."
  },
  {
    "question": "What is the average number of employees for companies located in Seattle that are suppliers to IBM Research?",
    "cypher": "MATCH (:Organization {name: 'IBM Research'})-[:HAS_SUPPLIER]->(s:Organization)-[:IN_CITY]->(:City {name: 'Seattle'}) WHERE s.nbrEmployees IS NOT NULL RETURN avg(s.nbrEmployees) AS average_employees_in_seattle",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_employees_in_seattle": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "What is the industry category for a company that is a competitor to 'Acenture'?",
    "cypher": "MATCH (:Organization {name: 'Accenture'})-[:HAS_COMPETITOR]->(c:Organization)-[:HAS_CATEGORY]->(ic:IndustryCategory) RETURN ic.name AS competitor_industry LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "competitor_industry": "Electronic Products Manufacturers"
      }
    ],
    "answer": "The industry category for a competitor of Accenture is Electronic Products Manufacturers."
  },
  {
    "question": "Which public company that supplies Oracle has the biggest workforce?",
    "cypher": "MATCH (:Organization {name: 'Oracle'})-[:HAS_SUPPLIER]->(s:Organization) WHERE s.isPublic = true AND s.nbrEmployees IS NOT NULL RETURN s.name AS largest_supplier_name ORDER BY s.nbrEmployees DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "largest_supplier_name": "Microsoft Corporation"
      }
    ],
    "answer": "Microsoft Corporation is the largest public company supplier of Oracle based on workforce size."
  },
  {
    "question": "How many distinct cities are home to subsidiaries of Microsoft Corporation?",
    "cypher": "MATCH (:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(sub:Organization)-[:IN_CITY]->(c:City) RETURN count(DISTINCT c) AS num_subsidiary_cities",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_subsidiary_cities": 738
      }
    ],
    "answer": "Based on the query result, Microsoft Corporation has subsidiaries located in 738 distinct cities."
  },
  {
    "question": "Count the number of board members associated with suppliers of SAP.",
    "cypher": "MATCH (:Organization {name: 'SAP'})-[:HAS_SUPPLIER]->(s:Organization)-[:HAS_BOARD_MEMBER]->(p:Person) RETURN count(DISTINCT p) AS total_board_members",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_board_members": 379
      }
    ],
    "answer": "There are 379 board members associated with suppliers of SAP."
  },
  {
    "question": "What is the name of the CEO of a company that is a subsidiary of a supplier to IBM?",
    "cypher": "MATCH (:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(sup)-[:HAS_SUBSIDIARY]->(sub)-[:HAS_CEO]->(ceo:Person) RETURN ceo.name AS ceo_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "ceo_name": "Vincent Pilette"
      }
    ],
    "answer": "Vincent Pilette is the CEO of a company that is a subsidiary of a supplier to IBM."
  },
  {
    "question": "Among all the companys that are competitors to Oracle, what is the minimum revenue reported?",
    "cypher": "MATCH (:Organization {name: 'Oracle'})-[:HAS_COMPETITOR]->(c:Organization) WHERE c.revenue IS NOT NULL RETURN min(c.revenue) AS lowest_competitor_revenue",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_competitor_revenue": 499264000.0
      }
    ],
    "answer": "The minimum revenue reported among Oracle's competitors is $499,264,000."
  },
  {
    "question": "How many organizations act as both an investor and a supplier to IBM?",
    "cypher": "MATCH (investor:Organization)-[:HAS_INVESTOR]->(o:Organization {name: 'IBM'})<-[:HAS_SUPPLIER]-(investor) RETURN count(DISTINCT investor) AS dual_role_companies",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "dual_role_companies": 0
      }
    ],
    "answer": "Based on the query result, 0 organizations act as both an investor and a supplier to IBM."
  },
  {
    "question": "What is the combined revenue of all subsidiaries of the company run by Julie Spelman Sweet?",
    "cypher": "MATCH (:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO]-(o:Organization)-[:HAS_SUBSIDIARY]->(s:Organization) WHERE s.revenue IS NOT NULL RETURN sum(s.revenue) AS total_subsidiary_revenue",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_subsidiary_revenue": 124698986388.0
      }
    ],
    "answer": "The combined revenue of all subsidiaries of the company run by Julie Spelman Sweet is $124,698,986,388."
  },
  {
    "question": "Find the name of a country where a company that supplies a competitor of Microsoft Corporation is located.",
    "cypher": "MATCH (:Organization {name: 'Microsoft Corporation'})-[:HAS_COMPETITOR]->(comp)-[:HAS_SUPPLIER]->(sup)-[:IN_CITY]->(city)-[:IN_COUNTRY]->(country) RETURN country.name AS supplier_country_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "5-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_country_name": "United States of America"
      }
    ],
    "answer": "United States of America is a country where a company that supplies a competitor of Microsoft Corporation is located."
  },
  {
    "question": "Tell me the site name of the most positive article mentioning a supplier of SAP.",
    "cypher": "MATCH (:Organization {name: 'SAP'})-[:HAS_SUPPLIER]->(s:Organization)<-[:MENTIONS]-(a:Article) WHERE a.sentiment IS NOT NULL RETURN a.siteName AS top_article_site ORDER BY a.sentiment DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_article_site": "Vancouver Sun"
      }
    ],
    "answer": "The site name of the most positive article mentioning a supplier of SAP is Vancouver Sun."
  },
  {
    "question": "How many competitors of IBM are located in a city in the United States of America?",
    "cypher": "MATCH (:Organization {name: 'IBM'})-[:HAS_COMPETITOR]->(c:Organization)-[:IN_CITY]->(:City)-[:IN_COUNTRY]->(:Country {name: 'United States of America'}) RETURN count(c) AS competitor_count_in_usa",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "competitor_count_in_usa": 809
      }
    ],
    "answer": "Based on the query result, IBM has 809 competitors located in cities within the United States of America."
  },
  {
    "question": "What is the average sentiment of articles that mention subsidiaries of 'Mircosoft Corporation'?",
    "cypher": "MATCH (:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(s:Organization)<-[:MENTIONS]-(a:Article) WHERE a.sentiment IS NOT NULL RETURN avg(a.sentiment) AS average_article_sentiment",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_article_sentiment": NaN
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "What's the name of the industry for a firm that is a subsidiary of a competitor to Oracle?",
    "cypher": "MATCH (:Organization {name: 'Oracle'})-[:HAS_COMPETITOR]->(c)-[:HAS_SUBSIDIARY]->(s)-[:HAS_CATEGORY]->(ic:IndustryCategory) RETURN ic.name AS industry_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "industry_name": "Electronic Products Manufacturers"
      }
    ],
    "answer": "The industry for the subsidiary of a competitor to Oracle is Electronic Products Manufacturers."
  },
  {
    "question": "Find the title of the article with the lowest sentiment score that mentions a company supplied by IBM.",
    "cypher": "MATCH (:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(s:Organization)<-[:MENTIONS]-(a:Article) WHERE a.sentiment IS NOT NULL RETURN a.title AS article_title ORDER BY a.sentiment ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "article_title": "Deja vu: Gelen Robinson loses football job as XFL suspends operations"
      }
    ],
    "answer": "The article with the lowest sentiment score that mentions a company supplied by IBM is \"Deja vu: Gelen Robinson loses football job as XFL suspends operations\"."
  },
  {
    "question": "What is the shortest path length between Julie Spellman Sweet and an organization in the 'Electronic Products Manufacturers' industry?",
    "cypher": "MATCH path = shortestPath((p:Person {name: 'Julie Spellman Sweet'})-[*]-(o:Organization)-[:HAS_CATEGORY]->(ic:IndustryCategory {name: 'Electronic Products Manufacturers'})) RETURN length(path) AS connection_distance",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many public companies are suppliers to subsidiaries of SAP?",
    "cypher": "MATCH (:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub)-[:HAS_SUPPLIER]->(sup:Organization) WHERE sup.isPublic = true RETURN count(DISTINCT sup) AS num_public_suppliers",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_public_suppliers": 8
      }
    ],
    "answer": "8 public companies are suppliers to subsidiaries of SAP."
  },
  {
    "question": "What is the summary for the person who is the parent of the CEO of Accenture?",
    "cypher": "MATCH (:Organization {name: 'Accenture'})-[:HAS_CEO]->(ceo:Person)-[:HAS_PARENT]->(parent:Person) RETURN parent.summary AS parent_summary LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the name of the city with the most employees working for a subsidiary of 'SAPP'.",
    "cypher": "MATCH (:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(s:Organization)-[:IN_CITY]->(c:City) WHERE s.nbrEmployees IS NOT NULL RETURN c.name AS city_name ORDER BY s.nbrEmployees DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "city_name": "Prague"
      }
    ],
    "answer": "Prague is the city with the most employees working for a subsidiary of SAP."
  },
  {
    "question": "How many investors in IBM are also board members of one of its suppliers?",
    "cypher": "MATCH (:Organization {name: 'IBM'})<-[:HAS_INVESTOR]-(p:Person)-[:HAS_BOARD_MEMBER]->(s:Organization)<-[:HAS_SUPPLIER]-(:Organization {name: 'IBM'}) RETURN count(DISTINCT p) AS investor_board_member_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Sum up the total workforce of all competitors to any subsidiary of Mircosoft Corporation.",
    "cypher": "MATCH (:Organization {name: 'Microsoft Corporation'})-[:HAS_SUBSIDIARY]->(sub)-[:HAS_COMPETITOR]->(comp:Organization) WHERE comp.nbrEmployees IS NOT NULL RETURN sum(comp.nbrEmployees) AS total_competitor_workforce",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_competitor_workforce": 5600920
      }
    ],
    "answer": "The total workforce of all competitors to Microsoft Corporation's subsidiaries is 5,600,920 employees."
  },
  {
    "question": "What's the name of a city where a supplier to one of Oracles competitors is located?",
    "cypher": "MATCH (:Organization {name: 'Oracle'})-[:HAS_COMPETITOR]->(c)-[:HAS_SUPPLIER]->(s)-[:IN_CITY]->(city:City) RETURN city.name AS supplier_city_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_city_name": "Vancouver"
      }
    ],
    "answer": "Vancouver is a city where a supplier to one of Oracle's competitors is located."
  },
  {
    "question": "Find the name of the least profitable public subsidiary of IBM.",
    "cypher": "MATCH (:Organization {name: 'IBM'})-[:HAS_SUBSIDIARY]->(s:Organization) WHERE s.revenue IS NOT NULL AND s.isPublic = true RETURN s.name AS least_profitable_subsidiary ORDER BY s.revenue ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many different industry categories are associated with suppliers of SAP?",
    "cypher": "MATCH (:Organization {name: 'SAP'})-[:HAS_SUPPLIER]->(s:Organization)-[:HAS_CATEGORY]->(ic:IndustryCategory) RETURN count(DISTINCT ic) AS num_industries",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_industries": 50
      }
    ],
    "answer": "According to the data, there are 50 different industry categories associated with SAP's suppliers."
  },
  {
    "question": "Count the number of dissolved companies that were once competitors of IBM.",
    "cypher": "MATCH (:Organization {name: 'IBM'})-[:HAS_COMPETITOR]->(c:Organization) WHERE c.isDissolved = true RETURN count(c) AS dissolved_competitor_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "dissolved_competitor_count": 0
      }
    ],
    "answer": "According to the query result, there are 0 dissolved companies that were once competitors of IBM."
  },
  {
    "question": "Who is the CEO of a company that has invested in a subsidiary of Accenture?",
    "cypher": "MATCH (:Organization {name: 'Accenture'})-[:HAS_SUBSIDIARY]->(sub)<-[:HAS_INVESTOR]-(inv:Organization)-[:HAS_CEO]->(ceo:Person) RETURN ceo.name AS investor_ceo_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "investor_ceo_name": "Julie Spellman Sweet"
      }
    ],
    "answer": "Julie Spellman Sweet is the CEO of a company that has invested in a subsidiary of Accenture."
  },
  {
    "question": "What is the maximum number of employees at a company located in a city in the same country as 'Concurr'?",
    "cypher": "MATCH (:Organization {name: 'Concur'})-[:IN_CITY]->(:City)-[:IN_COUNTRY]->(country)<-[:IN_COUNTRY]-(:City)<-[:IN_CITY]-(o:Organization) WHERE o.nbrEmployees IS NOT NULL RETURN max(o.nbrEmployees) AS max_employees_in_country",
    "query_type": "Sorting",
    "complexity": "5-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_employees_in_country": 1290000
      }
    ],
    "answer": "The maximum number of employees at a company in the same country as Concur is 1,290,000."
  },
  {
    "question": "How many articles mention firms that are suppliers to New Relic?",
    "cypher": "MATCH (:Organization {name: 'New Relic'})-[:HAS_SUPPLIER]->(s:Organization)<-[:MENTIONS]-(a:Article) RETURN count(DISTINCT a) AS article_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "article_count": 735
      }
    ],
    "answer": "735 articles mention firms that are suppliers to New Relic."
  },
  {
    "question": "What's the average revenue of companies in the 'Electronic Products Manufacturers' category that supply Microsoft Corporation?",
    "cypher": "MATCH (:Organization {name: 'Microsoft Corporation'})-[:HAS_SUPPLIER]->(s:Organization)-[:HAS_CATEGORY]->(:IndustryCategory {name: 'Electronic Products Manufacturers'}) WHERE s.revenue IS NOT NULL RETURN avg(s.revenue) AS average_revenue",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_revenue": 41124460666.666664
      }
    ],
    "answer": "The average revenue of companies in the 'Electronic Products Manufacturers' category that supply Microsoft Corporation is approximately $41.1 billion."
  },
  {
    "question": "What is the motto of a company that is supplied by 'Oracel' and is a subsidiary of SAP?",
    "cypher": "MATCH (:Organization {name: 'SAP'})-[:HAS_SUBSIDIARY]->(sub:Organization)<-[:HAS_SUPPLIER]-(:Organization {name: 'Oracle'}) WHERE sub.motto IS NOT NULL AND sub.motto <> '' RETURN sub.motto AS company_motto LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the name of the biz with the smallest workforce that is a subsidiary of a supplier to IBM.",
    "cypher": "MATCH (:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(sup)-[:HAS_SUBSIDIARY]->(sub:Organization) WHERE sub.nbrEmployees IS NOT NULL RETURN sub.name AS smallest_subsidiary_name ORDER BY sub.nbrEmployees ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "smallest_subsidiary_name": "CodeStream"
      }
    ],
    "answer": "CodeStream is the name of the smallest workforce subsidiary of a supplier to IBM."
  },
  {
    "question": "How many people are CEOs of companies that are both competitors and suppliers to Microsoft Corporation?",
    "cypher": "MATCH (o:Organization)-[:HAS_COMPETITOR]->(msft:Organization {name: 'Microsoft Corporation'})<-[:HAS_SUPPLIER]-(o)-[:HAS_CEO]->(p:Person) RETURN count(DISTINCT p) AS ceo_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "ceo_count": 20
      }
    ],
    "answer": "Based on the query result, there are 20 people who are CEOs of companies that are both competitors and suppliers to Microsoft Corporation."
  },
  {
    "question": "How many of IBMs investors are also investors in its competitors?",
    "cypher": "MATCH (:Organization {name: 'IBM'})<-[:HAS_INVESTOR]->(inv)<-[:HAS_INVESTOR]-(comp:Organization)<-[:HAS_COMPETITOR]-(:Organization {name: 'IBM'}) RETURN count(DISTINCT inv) AS shared_investor_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "shared_investor_count": 1
      }
    ],
    "answer": "Based on the query result, 1 investor of IBM is also an investor in one of IBM's competitors."
  },
  {
    "question": "Find the name of an organization that has invested in a supplier of the company where Julie Spellman Sweet is the CEO.",
    "cypher": "MATCH (:Person {name: 'Julie Spellman Sweet'})<-[:HAS_CEO]-(:Organization)-[:HAS_SUPPLIER]->(s)<-[:HAS_INVESTOR]-(i:Organization) RETURN i.name AS investor_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "investor_name": "ANU Connect Ventures"
      }
    ],
    "answer": "ANU Connect Ventures is an organization that has invested in a supplier of the company where Julie Spellman Sweet is the CEO."
  },
  {
    "question": "What is the highest number of employees for a company that supplies a subsidiary of Accenture?",
    "cypher": "MATCH (:Organization {name: 'Accenture'})-[:HAS_SUBSIDIARY]->(sub)-[:HAS_SUPPLIER]->(sup:Organization) WHERE sup.nbrEmployees IS NOT NULL RETURN max(sup.nbrEmployees) AS highest_employee_count",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "highest_employee_count": 221000
      }
    ],
    "answer": "The highest number of employees for a company that supplies a subsidiary of Accenture is 221,000."
  },
  {
    "question": "Count how many suppliers of 'New Relick' are located in Seattle.",
    "cypher": "MATCH (:Organization {name: 'New Relic'})-[:HAS_SUPPLIER]->(s:Organization)-[:IN_CITY]->(:City {name: 'Seattle'}) RETURN count(s) AS seattle_supplier_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "seattle_supplier_count": 3
      }
    ],
    "answer": "New Relic has 3 suppliers located in Seattle."
  },
  {
    "question": "How many children does the CEO of Accenture have in the database?",
    "cypher": "MATCH (:Organization {name: 'Accenture'})-[:HAS_CEO]->(ceo:Person)-[:HAS_CHILD]->(child:Person) RETURN count(child) AS number_of_children",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "number_of_children": 0
      }
    ],
    "answer": "Based on the query result, the CEO of Accenture has 0 children in the database."
  },
  {
    "question": "What's the name of a city where some subsidiary of a competitor to IBM Research is?",
    "cypher": "MATCH (:Organization {name: 'IBM Research'})-[:HAS_COMPETITOR]->(c)-[:HAS_SUBSIDIARY]->(s)-[:IN_CITY]->(city:City) RETURN city.name AS subsidiary_city_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "subsidiary_city_name": "Santa Cruz"
      }
    ],
    "answer": "Santa Cruz is a city where a subsidiary of a competitor to IBM Research is located."
  },
  {
    "question": "Find the name of the supplier to Microsoft Corporation that has the smallest revenue.",
    "cypher": "MATCH (:Organization {name: 'Microsoft Corporation'})-[:HAS_SUPPLIER]->(s:Organization) WHERE s.revenue IS NOT NULL RETURN s.name AS smallest_supplier_name ORDER BY s.revenue ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "smallest_supplier_name": "RWS"
      }
    ],
    "answer": "Based on the query result, the supplier to Microsoft Corporation with the smallest revenue is RWS."
  },
  {
    "question": "What is the minimum number of company-to-company relationships (supplier, subsidiary, or competitor) separating SAP from Oracle?",
    "cypher": "MATCH path = shortestPath((o1:Organization {name: 'SAP'})-[:HAS_SUPPLIER|HAS_SUBSIDIARY|HAS_COMPETITOR*]-(o2:Organization {name: 'Oracle'})) RETURN length(path) AS connection_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_length": 1
      }
    ],
    "answer": "Based on the query result, SAP and Oracle are directly connected through a company-to-company relationship, with a minimum path length of 1."
  },
  {
    "question": "Give me the total revenue for all the corps that are suppliers to 'SuccessFactorz'.",
    "cypher": "MATCH (:Organization {name: 'SuccessFactors'})-[:HAS_SUPPLIER]->(s:Organization) WHERE s.revenue IS NOT NULL RETURN sum(s.revenue) AS total_supplier_revenue",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_supplier_revenue": 0
      }
    ],
    "answer": "The total revenue for suppliers to SuccessFactors is $0. This could mean either there are no suppliers with revenue data, or the suppliers have zero recorded revenue in the database."
  },
  {
    "question": "What is the industry name for a company that has invested in a supplier to IBM?",
    "cypher": "MATCH (:Organization {name: 'IBM'})-[:HAS_SUPPLIER]->(s)<-[:HAS_INVESTOR]-(i:Organization)-[:HAS_CATEGORY]->(ic:IndustryCategory) RETURN ic.name AS investor_industry_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "investor_industry_name": "Electronic Products Manufacturers"
      }
    ],
    "answer": "The industry name for a company that has invested in a supplier to IBM is Electronic Products Manufacturers."
  },
  {
    "question": "How many followers does the streamer spiukbs have?",
    "cypher": "MATCH (s:Stream {name: 'spiukbs'}) RETURN s.followers AS stream_followers",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_followers": 159814
      }
    ],
    "answer": "The streamer spiukbs has 159,814 followers."
  },
  {
    "question": "What is the total view count for the channel itsbigchasee?",
    "cypher": "MATCH (s:Stream {name: 'itsbigchase'}) RETURN s.total_view_count AS stream_total_views",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_total_views": 569603
      }
    ],
    "answer": "The total view count for the channel itsbigchasee is 569,603 views."
  },
  {
    "question": "Show me the description for anaseu's stream.",
    "cypher": "MATCH (s:Stream {name: 'anaseu'}) RETURN s.description AS stream_description",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_description": "Anas is a professional Fortnite player for Guild Esports. On his streams you can watch him practice and play tournaments. "
      }
    ],
    "answer": "Anaseu's stream description is: \"Anas is a professional Fortnite player for Guild Esports. On his streams you can watch him practice and play tournaments.\""
  },
  {
    "question": "What is the URL for luckyghost's channel?",
    "cypher": "MATCH (s:Stream {name: 'luckyghost'}) RETURN s.url AS stream_url",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_url": "https://www.twitch.tv/luckyghost"
      }
    ],
    "answer": "The URL for luckyghost's channel is https://www.twitch.tv/luckyghost."
  },
  {
    "question": "What's the total number of streams in the database?",
    "cypher": "MATCH (s:Stream) RETURN count(s) AS total_streams",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_streams": 5787
      }
    ],
    "answer": "There are 5,787 total streams in the database."
  },
  {
    "question": "How many different games are listed?",
    "cypher": "MATCH (g:Game) RETURN count(g) AS total_games",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_games": 594
      }
    ],
    "answer": "There are 594 different games listed in the database."
  },
  {
    "question": "Count the total number of registered users.",
    "cypher": "MATCH (u:User) RETURN count(u) AS total_users",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_users": 10514229
      }
    ],
    "answer": "There are 10,514,229 registered users in the database."
  },
  {
    "question": "How many streamer teams exist?",
    "cypher": "MATCH (t:Team) RETURN count(t) AS total_teams",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_teams": 1468
      }
    ],
    "answer": "There are 1,468 streamer teams in the database."
  },
  {
    "question": "Give me the follower count for the streamer ninja614.",
    "cypher": "MATCH (s:Stream {name: 'ninja614'}) RETURN s.followers AS stream_followers",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_followers": 38758
      }
    ],
    "answer": "The streamer ninja614 has 38,758 followers."
  },
  {
    "question": "What's the view count for cacarov?",
    "cypher": "MATCH (s:Stream {name: 'cacarov'}) RETURN s.total_view_count AS stream_total_views",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_total_views": 3050171
      }
    ],
    "answer": "The view count for cacarov is 3,050,171."
  },
  {
    "question": "What is the description for the deshplease stream?",
    "cypher": "MATCH (s:Stream {name: 'deshplease'}) RETURN s.description AS stream_description",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_description": "Cotton Candy NIGHTMARE Fuel"
      }
    ],
    "answer": "The description for the deshplease stream is \"Cotton Candy NIGHTMARE Fuel\"."
  },
  {
    "question": "Find the URL for the fengrushh stream.",
    "cypher": "MATCH (s:Stream {name: 'fengrush'}) RETURN s.url AS stream_url",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_url": "https://www.twitch.tv/fengrush"
      }
    ],
    "answer": "The URL for the fengrushh stream is https://www.twitch.tv/fengrush."
  },
  {
    "question": "Tell me about the followers for agustabell212.",
    "cypher": "MATCH (s:Stream {name: 'agustabell212'}) RETURN s.followers AS stream_followers",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_followers": 58208
      }
    ],
    "answer": "The streamer agustabell212 has 58,208 followers."
  },
  {
    "question": "What is the total view count for the channel called syna?",
    "cypher": "MATCH (s:Stream {name: 'syna'}) RETURN s.total_view_count AS stream_total_views",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_total_views": 2547860
      }
    ],
    "answer": "The total view count for the channel syna is 2,547,860 views."
  },
  {
    "question": "Tell me the description for creightonolsen's stream.",
    "cypher": "MATCH (s:Stream {name: 'creightonolsen'}) RETURN s.description AS stream_description",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_description": "Hey! I'm Creighton. I provide premiere coverage and commentary of Starcraft 2 events as well as casual play of other strategy and sim games. My stream celebrates ludic culture and positive inclusivity, so kick off your shoes and stay a while!"
      }
    ],
    "answer": "Creighton's stream description is: \"Hey! I'm Creighton. I provide premiere coverage and commentary of Starcraft 2 events as well as casual play of other strategy and sim games. My stream celebrates ludic culture and positive inclusivity, so kick off your shoes and stay a while!\""
  },
  {
    "question": "Get the number of followers for 9linda.",
    "cypher": "MATCH (s:Stream {name: '9linda'}) RETURN s.followers AS stream_followers",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_followers": 5272
      }
    ],
    "answer": "9linda has 5,272 followers."
  },
  {
    "question": "What is the follower count for the streamer with the most total views?",
    "cypher": "MATCH (s:Stream) WHERE s.total_view_count IS NOT NULL AND s.followers IS NOT NULL RETURN s.followers AS top_streamer_followers ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_streamer_followers": 567761
      }
    ],
    "answer": "The streamer with the most total views has 567,761 followers."
  },
  {
    "question": "How many games does the streamer itsbigchase play?",
    "cypher": "MATCH (:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game) RETURN count(g) AS number_of_games",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "number_of_games": 1
      }
    ],
    "answer": "The streamer itsbigchase plays 1 game."
  },
  {
    "question": "What language does the streamer anasue stream in?",
    "cypher": "MATCH (:Stream {name: 'anaseu'})-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS language_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "language_name": "en"
      }
    ],
    "answer": "The streamer anasue streams in English (en)."
  },
  {
    "question": "How many moderators does the spiukbs stream have?",
    "cypher": "MATCH (:Stream {name: 'spiukbs'})<-[:MODERATOR]-(u:User) RETURN count(u) AS moderator_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "moderator_count": 7
      }
    ],
    "answer": "The spiukbs stream has 7 moderators."
  },
  {
    "question": "What's the deal with the team for ninja614?",
    "cypher": "MATCH (:Stream {name: 'ninja614'})-[:HAS_TEAM]->(t:Team) RETURN t.name AS team_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "techandjunk"
      },
      {
        "team_name": "GG Army"
      },
      {
        "team_name": "Ready Type 1"
      }
    ]
  },
  {
    "question": "How many streams play the game 'Rust'?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN count(s) AS number_of_streams",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "number_of_streams": 47
      }
    ],
    "answer": "47 streams play the game 'Rust'."
  },
  {
    "question": "How many streams are broadcast in the English language?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'}) RETURN count(s) AS number_of_streams",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "number_of_streams": 2344
      }
    ],
    "answer": "There are 2,344 streams broadcast in the English language."
  },
  {
    "question": "What's the average follower count for streamers playing 'The Elder Scrolls Onlinee'?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(:Game {name: 'The Elder Scrolls Online'}) RETURN avg(s.followers) AS average_followers",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_followers": 66052.0
      }
    ],
    "answer": "The average follower count for streamers playing 'The Elder Scrolls Online' is 66,052 followers."
  },
  {
    "question": "What is the maximum total view count for a stream in Russian?",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'ru'}) RETURN max(s.total_view_count) AS max_views_in_russian",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_views_in_russian": 287407089
      }
    ],
    "answer": "The maximum total view count for a stream in Russian is 287,407,089 views."
  },
  {
    "question": "Count the VIPs for luckyghost's channel.",
    "cypher": "MATCH (:Stream {name: 'luckyghost'})<-[:VIP]-(u:User) RETURN count(u) AS vip_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "vip_count": 2
      }
    ],
    "answer": "luckyghost's channel has 2 VIPs."
  },
  {
    "question": "What is the total number of chatters for the deshplease stream?",
    "cypher": "MATCH (:Stream {name: 'deshplease'})<-[:CHATTER]-(u:User) RETURN count(u) AS chatter_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "chatter_count": 19
      }
    ],
    "answer": "The total number of chatters for the deshplease stream is 19."
  },
  {
    "question": "Find the minimum follower count among streams in the 'ESO Stream Team'.",
    "cypher": "MATCH (s:Stream)-[:HAS_TEAM]->(:Team {name: 'ESO Stream Team'}) RETURN min(s.followers) AS min_followers_in_team",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "min_followers_in_team": 10554
      }
    ],
    "answer": "The minimum follower count among streams in the ESO Stream Team is 10,554."
  },
  {
    "question": "Number of peeps who chat in cacarov's stream?",
    "cypher": "MATCH (:Stream {name: 'cacarov'})<-[:CHATTER]-(u:User) RETURN count(u) AS chatter_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "chatter_count": 2660
      }
    ],
    "answer": "2,660 people have chatted in cacarov's stream."
  },
  {
    "question": "What is the total follower count of all streamers on the 'ESO Stream Team'?",
    "cypher": "MATCH (s:Stream)-[:HAS_TEAM]->(:Team {name: 'ESO Stream Team'}) RETURN sum(s.followers) AS total_team_followers",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_team_followers": 734848
      }
    ],
    "answer": "The total follower count of all streamers on the 'ESO Stream Team' is 734,848 followers."
  },
  {
    "question": "How many different teams is the streamer ninja614 a member of?",
    "cypher": "MATCH (:Stream {name: 'ninja614'})-[:HAS_TEAM]->(t:Team) RETURN count(t) AS team_membership_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "team_membership_count": 4
      }
    ],
    "answer": "The streamer ninja614 is a member of 4 different teams."
  },
  {
    "question": "What game does the streamer fengrush play?",
    "cypher": "MATCH (:Stream {name: 'fengrush'})-[:PLAYS]->(g:Game) RETURN g.name AS game_name LIMIT 1",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "game_name": "Enlisted"
      }
    ],
    "answer": "Fengrush plays Enlisted."
  },
  {
    "question": "Find the follower count of the 'Rust' streamer with the most views.",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) WHERE s.total_view_count IS NOT NULL RETURN s.followers AS top_streamer_followers ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_streamer_followers": 754330
      }
    ],
    "answer": "The streamer playing Rust with the most views has 754,330 followers."
  },
  {
    "question": "What is the name of a game played on a stream that elokratzz moderates?",
    "cypher": "MATCH (:User {name: 'elokratz'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game) RETURN g.name AS game_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "game_name": "Fortnite"
      }
    ],
    "answer": "Fortnite is a game played on a stream that elokratzz moderates."
  },
  {
    "question": "What is the lingo on the stream where business_daddy chats?",
    "cypher": "MATCH (:User {name: 'business_daddy'})-[:CHATTER]->(s:Stream)-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS language_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "language_name": "es"
      }
    ],
    "answer": "The stream where business_daddy chats is in Spanish (es)."
  },
  {
    "question": "How many peeps follow the streamer moderated by raymundogalvez?",
    "cypher": "MATCH (:User {name: 'raymundogalvez'})-[:MODERATOR]->(s:Stream) RETURN s.followers AS streamer_followers",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "streamer_followers": 159814
      }
    ],
    "answer": "The streamer moderated by raymundogalvez has 159,814 followers."
  },
  {
    "question": "What is the name of the team associated with the stream where wickedbad4you is a chatter?",
    "cypher": "MATCH (:User {name: 'wickedbad4u'})-[:CHATTER]->(s:Stream)-[:HAS_TEAM]->(t:Team) RETURN t.name AS team_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "team_name": "ESO Stream Team"
      }
    ],
    "answer": "The team associated with the stream where wickedbad4you is a chatter is the ESO Stream Team."
  },
  {
    "question": "How many unique users moderate streams that play the game Rast?",
    "cypher": "MATCH (u:User)-[:MODERATOR]->(:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN count(DISTINCT u) AS unique_moderator_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "unique_moderator_count": 332
      }
    ],
    "answer": "332 unique users moderate streams that play the game Rust."
  },
  {
    "question": "What is the name of a game played by a member of the 'ESO Stream Team'?",
    "cypher": "MATCH (:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream)-[:PLAYS]->(g:Game) RETURN g.name AS game_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "game_name": "The Elder Scrolls Online"
      }
    ],
    "answer": "The Elder Scrolls Online is a game played by a member of the 'ESO Stream Team'."
  },
  {
    "question": "What language is used on a stream that plays 'The Elder Scrolls Online'?",
    "cypher": "MATCH (:Game {name: 'The Elder Scrolls Online'})<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS language_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "language_name": "en"
      }
    ],
    "answer": "English (en)"
  },
  {
    "question": "Count how many streamers play 'Rust' in Russian.",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}), (s)-[:HAS_LANGUAGE]->(:Language {name: 'ru'}) RETURN count(s) AS rust_in_russian_stream_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "rust_in_russian_stream_count": 3
      }
    ],
    "answer": "Based on the query result, there are 3 streamers who play 'Rust' in Russian."
  },
  {
    "question": "What is the total number of followers for the stream moderated by the user imcoma?",
    "cypher": "MATCH (:User {name: 'imcoma'})-[:MODERATOR]->(s:Stream) RETURN s.followers AS streamer_followers",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "streamer_followers": 33366
      }
    ],
    "answer": "The stream moderated by imcoma has 33,366 followers."
  },
  {
    "question": "What's the name of the language used by a streamer on the 'ESO Stream Team'?",
    "cypher": "MATCH (:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream)-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS language_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "language_name": "en"
      }
    ],
    "answer": "English (en)"
  },
  {
    "question": "How many followers does the streamer have, who is moderated by soydas06?",
    "cypher": "MATCH (:User {name: 'soydas06'})-[:MODERATOR]->(s:Stream) RETURN s.followers AS streamer_followers",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "streamer_followers": 105177
      }
    ],
    "answer": "The streamer moderated by soydas06 has 105,177 followers."
  },
  {
    "question": "What is the game played by streamer syna, who is moderated by user evariss?",
    "cypher": "MATCH (:User {name: 'evariss'})-[:MODERATOR]->(:Stream {name: 'syna'})-[:PLAYS]->(g:Game) RETURN g.name AS game_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "game_name": "Grand Theft Auto V"
      }
    ],
    "answer": "The game played by streamer syna, who is moderated by user evariss, is Grand Theft Auto V."
  },
  {
    "question": "What is the team name for the streamer luckyghost, who is moderated by deshplease?",
    "cypher": "MATCH (:User {name: 'deshplease'})-[:MODERATOR]->(s:Stream {name: 'luckyghost'})-[:HAS_TEAM]->(t:Team) RETURN t.name AS team_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "team_name": "ESO Stream Team"
      }
    ],
    "answer": "The team name for the streamer luckyghost is ESO Stream Team."
  },
  {
    "question": "Total views for English streams modded by haraldinho_?",
    "cypher": "MATCH (:User {name: 'haraldinho_'})-[:MODERATOR]->(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'}) RETURN sum(s.total_view_count) AS total_views_of_modded_streams",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_views_of_modded_streams": 749506
      }
    ],
    "answer": "The total views for English streams modded by haraldinho_ is 749,506."
  },
  {
    "question": "Find the name of a game played by a streamer who is a chatter in spiukbs's stream.",
    "cypher": "MATCH (:Stream {name: 'spiukbs'})<-[:CHATTER]-(s_chatter:Stream)-[:PLAYS]->(g:Game) RETURN g.name AS game_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the maximum number of followers for a stream moderated by a user who chats in anaseu's channel?",
    "cypher": "MATCH (:Stream {name: 'anaseu'})<-[:CHATTER]-(u:User)-[:MODERATOR]->(s:Stream) RETURN max(s.followers) AS max_followers_of_modded_stream",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_followers_of_modded_stream": 1676460
      }
    ],
    "answer": "The maximum number of followers for a stream moderated by a user who chats in anaseu's channel is 1,676,460."
  },
  {
    "question": "How many unique games are played by streamers who are moderated by the user 'evariss'?",
    "cypher": "MATCH (:User {name: 'evariss'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game) RETURN count(DISTINCT g) AS num_games",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_games": 1
      }
    ],
    "answer": "Based on the query result, there is 1 unique game played by streamers moderated by the user 'evariss'."
  },
  {
    "question": "What is the name of the team associated with the streamer 'luckyghost', who is moderated by a user who also chats in 'deshplease's channel?",
    "cypher": "MATCH (:User)-[:CHATTER]->(:Stream {name: 'deshplease'})<-[:MODERATOR]-(:User)-[:MODERATOR]->(s:Stream {name: 'luckyghost'})-[:HAS_TEAM]->(t:Team) RETURN t.name AS team_name",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "ESO Stream Team"
      }
    ]
  },
  {
    "question": "Find the streamer with the most followers who plays 'Rust' and is moderated by user 'imcoma'.",
    "cypher": "MATCH (:User {name: 'imcoma'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) WHERE s.followers IS NOT NULL RETURN s.name AS top_streamer ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_streamer": "itsbigchase"
      }
    ],
    "answer": "The streamer with the most followers who plays 'Rust' and is moderated by user 'imcoma' is 'itsbigchase'."
  },
  {
    "question": "What's the shortest path length between the user 'rubiz' and any streamer from the 'ESO Stream Team'?",
    "cypher": "MATCH p = shortestPath((u:User {name: 'rubiz'})-[*]-(s:Stream)-[:HAS_TEAM]->(t:Team {name: 'ESO Stream Team'})) RETURN length(p) AS connection_distance",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What is the total follower count for all streamers that 'haraldinho_' moderates?",
    "cypher": "MATCH (:User {name: 'haraldinho_'})-[:MODERATOR]->(s:Stream) RETURN sum(s.followers) AS total_followers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_followers": 71726
      }
    ],
    "answer": "The total follower count for all streams that 'haraldinho_' moderates is 71,726 followers."
  },
  {
    "question": "What is the URL of the stream with the lowest total view count that plays 'The Elder Scrolls Online'?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(:Game {name: 'The Elder Scrolls Online'}) WHERE s.total_view_count IS NOT NULL RETURN s.url AS stream_url ORDER BY s.total_view_count ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_url": "https://www.twitch.tv/luckyghost"
      }
    ],
    "answer": "The stream with the lowest total view count for 'The Elder Scrolls Online' is https://www.twitch.tv/luckyghost."
  },
  {
    "question": "How many streamers that play 'Rust' are also moderated by a user who is a VIP in 'cacarov's stream?",
    "cypher": "MATCH (:Stream {name: 'cacarov'})<-[:VIP]-(u:User)-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN count(DISTINCT s) AS total_streamers",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_streamers": 0
      }
    ],
    "answer": "Based on the query result, there are 0 streamers that play 'Rust' who are also moderated by a VIP in 'cacarov's stream."
  },
  {
    "question": "Find the language of the stream 'atlanticdk', which has 'haraldinho_' as a moderator and 'anaseu' as a chatter.",
    "cypher": "MATCH (:User {name: 'haraldinho_'})-[:MODERATOR]->(s:Stream {name: 'atlanticdk'})<-[:CHATTER]-(:Stream {name: 'anaseu'}), (s)-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS stream_language",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many different paths connect user 'wickedbad4u' to the team 'ESO Stream Team'?",
    "cypher": "MATCH p = (:User {name: 'wickedbad4u'})-[*..4]-(:Stream)-[:HAS_TEAM]->(:Team {name: 'ESO Stream Team'}) RETURN count(p) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_count": 276
      }
    ],
    "answer": "There are 276 different paths connecting the user 'wickedbad4u' to the 'ESO Stream Team' within a maximum path length of 4 relationships."
  },
  {
    "question": "What's the average number of followers for streamers who play the same game as 'itsbigchase' and are moderated by 'imcoma'?",
    "cypher": "MATCH (:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream)<-[:MODERATOR]-(:User {name: 'imcoma'}) RETURN avg(s.followers) AS average_followers",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_followers": null
      }
    ],
    "answer": "Unable to determine the average number of followers, as the query result returned None, which suggests there might not be any matching streamers or the data is incomplete."
  },
  {
    "question": "Which game is played on the stream with the highest view count that a user named 'soydas06' moderates?",
    "cypher": "MATCH (:User {name: 'soydas06'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game) WHERE s.total_view_count IS NOT NULL RETURN g.name AS top_game ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_game": "Grand Theft Auto V"
      }
    ],
    "answer": "The game \"Grand Theft Auto V\" is played on the stream with the highest view count that 'soydas06' moderates."
  },
  {
    "question": "What is the name of the streamer who plays 'Rust' and is moderated by the same person who moderates 'syna'?",
    "cypher": "MATCH (:Stream {name: 'syna'})<-[:MODERATOR]-(u:User)-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN s.name AS rust_streamer_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "rust_streamer_name": "krolay"
      }
    ],
    "answer": "krolay is the streamer who plays 'Rust' and is moderated by the same person who moderates 'syna'."
  },
  {
    "question": "Count how many users moderate streams that play 'Fortnite' and are part of the same team as 'ninja614'.",
    "cypher": "MATCH (:Stream {name: 'ninja614'})-[:HAS_TEAM]->(t:Team)<-[:HAS_TEAM]-(s:Stream)-[:PLAYS]->(:Game {name: 'Fortnite'}), (s)<-[:MODERATOR]-(u:User) RETURN count(DISTINCT u) AS num_moderators",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_moderators": 0
      }
    ],
    "answer": "Based on the query result, there are 0 users who moderate streams that play 'Fortnite' and are part of the same team as 'ninja614'."
  },
  {
    "question": "How many moderators connect the streamer 'anaseu' to the streamer 'cacarov'?",
    "cypher": "MATCH (:Stream {name: 'anaseu'})<-[:MODERATOR]-(u:User)-[:MODERATOR]->(:Stream {name: 'cacarov'}) RETURN count(DISTINCT u) AS bridge_moderators",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "bridge_moderators": 0
      }
    ],
    "answer": "There are 0 moderators connecting the streamers 'anaseu' and 'cacarov'."
  },
  {
    "question": "Tell me the name of the stream with the smallest follower count that the user 'raymundogalvez' is a VIP for.",
    "cypher": "MATCH (:User {name: 'raymundogalvez'})-[:VIP]->(s:Stream) WHERE s.followers IS NOT NULL RETURN s.name AS smallest_stream_name ORDER BY s.followers ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the description for the stream moderated by 'elokratz' that also has 'atlanticdk' as a chatter?",
    "cypher": "MATCH (:User {name: 'elokratz'})-[:MODERATOR]->(s:Stream)<-[:CHATTER]-(:Stream {name: 'atlanticdk'}) RETURN s.description AS stream_description",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_description": "Fortnite player and Content Creator"
      }
    ],
    "answer": "The stream moderated by 'elokratz' has the description: \"Fortnite player and Content Creator\""
  },
  {
    "question": "What is the total number of viewers for English streams that play the same game as '9linda'?",
    "cypher": "MATCH (:Stream {name: '9linda'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'}) RETURN sum(s.total_view_count) AS total_english_viewers",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_english_viewers": 134388876
      }
    ],
    "answer": "The total number of viewers for English streams playing the same game as '9linda' is 134,388,876."
  },
  {
    "question": "How many streamers does user 'busines_daddy' have a VIP or moderator status with?",
    "cypher": "MATCH (:User {name: 'business_daddy'})-[:VIP|MODERATOR]->(s:Stream) RETURN count(DISTINCT s) AS privileged_stream_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "privileged_stream_count": 0
      }
    ],
    "answer": "User 'business_daddy' has 0 streamers that they have a VIP or moderator status with."
  },
  {
    "question": "Find the creator with the most followers on the 'ESO Stream Team'.",
    "cypher": "MATCH (s:Stream)-[:HAS_TEAM]->(:Team {name: 'ESO Stream Team'}) WHERE s.followers IS NOT NULL RETURN s.name AS top_creator_name ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_creator_name": "fextralife"
      }
    ],
    "answer": "Based on the query result, Fextralife is the creator with the most followers on the 'ESO Stream Team'."
  },
  {
    "question": "What is the name of the language used by the streamer 'creightonolsen', who has 'comettunes' as a chatter?",
    "cypher": "MATCH (s:Stream {name: 'creightonolsen'})<-[:CHATTER]-(:User {name: 'comettunes'}), (s)-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS streamer_language",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "streamer_language": "en"
      }
    ],
    "answer": "The language used by the streamer 'creightonolsen' is English (en)."
  },
  {
    "question": "Count the number of Russian-speaking streamers who play the same game as 'itsbigchase'.",
    "cypher": "MATCH (:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'ru'}) RETURN count(DISTINCT s) AS ru_streamer_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "ru_streamer_count": 3
      }
    ],
    "answer": "There are 3 Russian-speaking streamers who play the same game as 'itsbigchase'."
  },
  {
    "question": "How many chat interactions are there between users who moderate 'spiukbs' and users who moderate 'anaseu'?",
    "cypher": "MATCH (:Stream {name: 'spiukbs'})<-[:MODERATOR]-(u1:User)-[:CHATTER]-(u2:User)-[:MODERATOR]->(:Stream {name: 'anaseu'}) RETURN count(*) AS mod_chatter_connections",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "mod_chatter_connections": 0
      }
    ],
    "answer": "There are 0 chat interactions between users who moderate 'spiukbs' and users who moderate 'anaseu'."
  },
  {
    "question": "What is the maximum number of followers for a channel that 'soydas06' moderates and which in turn is moderated by 'syna'?",
    "cypher": "MATCH (:User {name: 'soydas06'})-[:MODERATOR]->(s1:Stream)<-[:MODERATOR]-(:Stream {name: 'syna'}) RETURN max(s1.followers) AS max_follower_count",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_follower_count": null
      }
    ],
    "answer": "UNKNOWN\n\nThe query result returned None, which suggests there is no stream that meets the specified conditions of being moderated by both 'soydas06' and 'syna', or the stream exists but has no recorded follower count."
  },
  {
    "question": "Get the URL of the channel that plays 'Rust' and is moderated by a user who also moderates 'cacarov'.",
    "cypher": "MATCH (:Stream {name: 'cacarov'})<-[:MODERATOR]-(u:User)-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game {name: 'Rust'}) RETURN s.url AS channel_url LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "channel_url": "https://www.twitch.tv/9linda"
      }
    ],
    "answer": "The URL of the channel that plays 'Rust' and is moderated by a user who also moderates 'cacarov' is https://www.twitch.tv/9linda."
  },
  {
    "question": "What is the average view count of streams moderated by users who are VIPs for the channel 'deshplease'?",
    "cypher": "MATCH (:Stream {name: 'deshplease'})<-[:VIP]-(u:User)-[:MODERATOR]->(s:Stream) RETURN avg(s.total_view_count) AS average_views",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_views": null
      }
    ],
    "answer": "UNKNOWN (The query result shows None, which indicates no data was found matching the specified conditions)"
  },
  {
    "question": "How many different teams are associated with streamers who play 'The Elder Scrolls Online' and are moderated by 'luckyghost'?",
    "cypher": "MATCH (:User {name: 'luckyghost'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'The Elder Scrolls Online'}), (s)-[:HAS_TEAM]->(t:Team) RETURN count(DISTINCT t) AS team_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "team_count": 0
      }
    ],
    "answer": "There are no teams associated with streamers playing 'The Elder Scrolls Online' who are moderated by 'luckyghost'."
  },
  {
    "question": "Find the name of the streamer with the lowest follower count who speaks English and plays a game moderated by 'imcoma'.",
    "cypher": "MATCH (:User {name: 'imcoma'})-[:MODERATOR]->(:Stream)-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'}) WHERE s.followers IS NOT NULL RETURN s.name AS least_followed_streamer ORDER BY s.followers ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "least_followed_streamer": "blazed"
      }
    ],
    "answer": "The streamer with the lowest follower count who speaks English and plays a game moderated by 'imcoma' is 'blazed'."
  },
  {
    "question": "Find the name of the guy who moderates 'anaseau' and also chats in a channel that plays 'Fortnite'.",
    "cypher": "MATCH (u:User)-[:MODERATOR]->(:Stream {name: 'anaseu'}), (u)-[:CHATTER]->(s:Stream)-[:PLAYS]->(:Game {name: 'Fortnite'}) RETURN u.name AS user_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo, colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "user_name": "haraldinho_"
      }
    ],
    "answer": "haraldinho_ moderates the 'anaseau' stream and chats in a Fortnite stream."
  },
  {
    "question": "What is the total number of followers for streamers on the 'ESO Strem Team'?",
    "cypher": "MATCH (s:Stream)-[:HAS_TEAM]->(:Team {name: 'ESO Stream Team'}) RETURN sum(s.followers) AS team_total_followers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "team_total_followers": 734848
      }
    ],
    "answer": "The total number of followers for streamers on the 'ESO Stream Team' is 734,848."
  },
  {
    "question": "How many degrees of separation are between the viewer 'evaris' and the game 'Rust'?",
    "cypher": "MATCH p = shortestPath((:User {name: 'evariss'})-[*..5]-(:Game {name: 'Rust'})) RETURN length(p) AS separation_degree",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo, colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "separation_degree": 3
      }
    ],
    "answer": "Based on the query result, the user 'evaris' is 3 degrees of separation away from the game 'Rust'."
  },
  {
    "question": "What's the most viewed channel that user 'wickedbad4u' chats in and which has a moderator that also moderates 'luckyghost'?",
    "cypher": "MATCH (:User {name: 'wickedbad4u'})-[:CHATTER]->(s:Stream)<-[:MODERATOR]-(u:User)-[:MODERATOR]->(:Stream {name: 'luckyghost'}) WHERE s.total_view_count IS NOT NULL RETURN s.name AS most_viewed_channel ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "most_viewed_channel": "deshplease"
      }
    ],
    "answer": "The most viewed channel that user 'wickedbad4u' chats in and which has a common moderator with the 'luckyghost' stream is 'deshplease'."
  },
  {
    "question": "What is the name of the team that streamer 'fengrush' is on, who plays the same title as 'ninja614'?",
    "cypher": "MATCH (:Stream {name: 'ninja614'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream {name: 'fengrush'})-[:HAS_TEAM]->(t:Team) RETURN t.name AS team_name",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "team_name": "GG Talent Group"
      }
    ],
    "answer": "fengrush is on the team 'GG Talent Group', which plays the same game title as ninja614."
  },
  {
    "question": "Count how many streamers are moderated by 'rubiz' and play a game that is also played by a member of the 'ESO Stream Team'.",
    "cypher": "MATCH (:User {name: 'rubiz'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game)<-[:PLAYS]-(:Stream)-[:HAS_TEAM]->(:Team {name: 'ESO Stream Team'}) RETURN count(DISTINCT s) AS total_streamers",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_streamers": 0
      }
    ],
    "answer": "Based on the query result, there are 0 streamers that are moderated by 'rubiz' and play a game that is also played by a member of the 'ESO Stream Team'."
  },
  {
    "question": "How many users are VIPs in channels that play 'Rust' and also moderate channels that play 'Fortnite'?",
    "cypher": "MATCH (:Game {name: 'Rust'})<-[:PLAYS]-(s1:Stream)<-[:VIP]-(u:User)-[:MODERATOR]->(s2:Stream)-[:PLAYS]->(:Game {name: 'Fortnite'}) RETURN count(DISTINCT u) AS crossover_user_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "crossover_user_count": 0
      }
    ],
    "answer": "Based on the query result, 0 users are VIPs in channels that play 'Rust' and also moderate channels that play 'Fortnite'."
  },
  {
    "question": "What's the minimum follower count for a stream moderated by 'haraldinho_' that has 'atlanticdk' as a chatter?",
    "cypher": "MATCH (:User {name: 'haraldinho_'})-[:MODERATOR]->(s:Stream)<-[:CHATTER]-(:Stream {name: 'atlanticdk'}) WHERE s.followers IS NOT NULL RETURN min(s.followers) AS min_followers",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "min_followers": null
      }
    ],
    "answer": "UNKNOWN\n\nThe query result returned None, which suggests there are no streams matching the specified conditions or the followers data is not available."
  },
  {
    "question": "Show me the url of the channel for streamer 'itsbigchase'.",
    "cypher": "MATCH (s:Stream {name: 'itsbigchase'}) RETURN s.url AS stream_url",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_url": "https://www.twitch.tv/itsbigchase"
      }
    ],
    "answer": "The URL for the channel of streamer 'itsbigchase' is https://www.twitch.tv/itsbigchase."
  },
  {
    "question": "What is the average total view count for Russian-speaking streamers who play the title 'Rust'?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}), (s)-[:HAS_LANGUAGE]->(:Language {name: 'ru'}) RETURN avg(s.total_view_count) AS avg_rust_views_ru",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "avg_rust_views_ru": 5562670.0
      }
    ],
    "answer": "The average total view count for Russian-speaking streamers playing Rust is 5,562,670 views."
  },
  {
    "question": "How many common games are played by streamers moderated by user 'imcoma' and streamers moderated by user 'soydas06'?",
    "cypher": "MATCH (:User {name: 'imcoma'})-[:MODERATOR]->(:Stream)-[:PLAYS]->(g:Game)<-[:PLAYS]<-(:Stream)<-[:MODERATOR]-(:User {name: 'soydas06'}) RETURN count(DISTINCT g) AS common_game_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What is the top follower count among channels that play 'Rust' and are part of a team that 'ninja614' is also on?",
    "cypher": "MATCH (:Stream {name: 'ninja614'})-[:HAS_TEAM]->(t:Team)<-[:HAS_TEAM]-(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) WHERE s.followers IS NOT NULL RETURN max(s.followers) AS highest_follower_count",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "highest_follower_count": null
      }
    ],
    "answer": "Based on the query result, the highest follower count is None, which suggests that either:\n1. There are no channels that meet the specified criteria, or\n2. The follower count data is missing for the relevant streams.\n\nSo the answer is: UNKNOWN"
  },
  {
    "question": "Find the name of the user who moderates 'spuikbs' and also has VIP status in 'cacarov's channel.",
    "cypher": "MATCH (u:User)-[:MODERATOR]->(:Stream {name: 'spiukbs'}), (u)-[:VIP]->(:Stream {name: 'cacarov'}) RETURN u.name AS user_with_privileges",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Count the total number of unique moderators for all streams that are part of the 'ESO Stream Team'.",
    "cypher": "MATCH (:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream)<-[:MODERATOR]-(u:User) RETURN count(DISTINCT u) AS total_moderators",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_moderators": 24
      }
    ],
    "answer": "There are 24 unique moderators across all streams in the ESO Stream Team."
  },
  {
    "question": "How many other streamers are on the same team as the streamer 'fengrush'?",
    "cypher": "MATCH (s1:Stream {name: 'fengrush'})-[:HAS_TEAM]->(t:Team)<-[:HAS_TEAM]-(s2:Stream) WHERE s1 <> s2 RETURN count(DISTINCT s2) AS num_teammates",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_teammates": 15
      }
    ],
    "answer": "Based on the query result, there are 15 other streamers on the same team as 'fengrush'."
  },
  {
    "question": "What is the lowest view count for a channel that plays the same game as '9linda' and is moderated by a VIP of 'deshplease'?",
    "cypher": "MATCH (:Stream {name: 'deshplease'})<-[:VIP]-(u:User)-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game)<-[:PLAYS]-(:Stream {name: '9linda'}) WHERE s.total_view_count IS NOT NULL RETURN min(s.total_view_count) AS lowest_view_count",
    "query_type": "Sorting",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_view_count": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "What is the name of the game played by the streamer 'cacarov' who is moderated by 'syna'?",
    "cypher": "MATCH (:Stream {name: 'syna'})-[:MODERATOR]->(s:Stream {name: 'cacarov'})-[:PLAYS]->(g:Game) RETURN g.name AS game_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "game_name": "Rust"
      },
      {
        "game_name": "Grand Theft Auto V"
      },
      {
        "game_name": "Just Chatting"
      }
    ]
  },
  {
    "question": "Sum up the followers of all streamers who are moderated by people who chat in 'itsbigchase's channel.",
    "cypher": "MATCH (:Stream {name: 'itsbigchase'})<-[:CHATTER]-(u:User)-[:MODERATOR]->(s:Stream) RETURN sum(s.followers) AS total_followers_by_chatters",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_followers_by_chatters": 72362779
      }
    ],
    "answer": "The streamers moderated by people who chat in 'itsbigchase's channel have a total of 72,362,779 followers."
  },
  {
    "question": "How many folks moderate streamers who play 'The Elder Scroll Online'?",
    "cypher": "MATCH (u:User)-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game {name: 'The Elder Scrolls Online'}) RETURN count(DISTINCT u) AS num_moderators",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo, colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_moderators": 22
      }
    ],
    "answer": "22 people moderate streams of 'The Elder Scrolls Online'."
  },
  {
    "question": "Which creator has the most views among those moderated by user 'raymundogalvez'?",
    "cypher": "MATCH (:User {name: 'raymundogalvez'})-[:MODERATOR]->(s:Stream) WHERE s.total_view_count IS NOT NULL RETURN s.name AS top_streamer_name ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_streamer_name": "spiukbs"
      }
    ],
    "answer": "Based on the query result, the creator with the most views among those moderated by user 'raymundogalvez' is 'spiukbs'."
  },
  {
    "question": "What's the name of the team that has a streamer who plays 'Fortnite' and is moderated by 'elokratz'?",
    "cypher": "MATCH (:User {name: 'elokratz'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game {name: 'Fortnite'}), (s)-[:HAS_TEAM]->(t:Team) RETURN t.name AS team_name",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "team_name": "Guild"
      }
    ],
    "answer": "The team is Guild."
  },
  {
    "question": "Count the number of streamers who play 'Rust' and are in a different language than 'anaseu'.",
    "cypher": "MATCH (s1:Stream {name: 'anaseu'})-[:HAS_LANGUAGE]->(l1:Language), (s2:Stream)-[:PLAYS]->(:Game {name: 'Rust'}), (s2)-[:HAS_LANGUAGE]->(l2:Language) WHERE l1 <> l2 RETURN count(DISTINCT s2) AS different_language_streamer_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "different_language_streamer_count": 25
      }
    ],
    "answer": "There are 25 streamers who play 'Rust' in a different language than 'anaseu'."
  },
  {
    "question": "What is the shortest number of moderation steps between user 'haraldinho_' and user 'soydas06'?",
    "cypher": "MATCH p = shortestPath((:User {name: 'haraldinho_'})-[:MODERATOR*]-(:User {name: 'soydas06'})) RETURN length(p) AS moderation_path_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "moderation_path_length": 4
      }
    ],
    "answer": "The shortest number of moderation steps between user 'haraldinho_' and user 'soydas06' is 4."
  },
  {
    "question": "How many distinct games are played by streamers who are moderated by the user 'raymundogalvez'?",
    "cypher": "MATCH (:User {name: 'raymundogalvez'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game) RETURN count(DISTINCT g) AS num_games",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_games": 2
      }
    ],
    "answer": "Based on the query result, the streamer 'raymundogalvez' moderates streams that play 2 distinct games."
  },
  {
    "question": "What is the total number of followers for all streamers who are part of the 'ESO Stream Team'?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream) RETURN sum(s.followers) AS total_followers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_followers": 734848
      }
    ],
    "answer": "The total number of followers for streamers in the 'ESO Stream Team' is 734,848."
  },
  {
    "question": "Find the name of the game played by the streamer 'cacarov', who is moderated by a user who also moderates 'syna'.",
    "cypher": "MATCH (:User)-[:MODERATOR]->(:Stream {name: 'syna'}), (:User)-[:MODERATOR]->(s:Stream {name: 'cacarov'})-[:PLAYS]->(g:Game) RETURN g.name AS game_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "game_name": "Rust"
      }
    ],
    "answer": "The game played by the streamer 'cacarov' is Rust."
  },
  {
    "question": "What is the name of the streamer with the most followers who plays 'Rust'?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'Rust'}) WHERE s.followers IS NOT NULL RETURN s.name AS top_streamer ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_streamer": "shiphtur"
      }
    ],
    "answer": "The streamer with the most followers who plays 'Rust' is Shiphtur."
  },
  {
    "question": "How many interaction paths (chatter, moderator, or vip) exist between the user 'wickedbad4u' and the streamer 'luckyghost'?",
    "cypher": "MATCH path = (:User {name: 'wickedbad4u'})-[:CHATTER|MODERATOR|VIP*1..2]-(:Stream {name: 'luckyghost'}) RETURN count(path) AS interaction_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "interaction_count": 1
      }
    ],
    "answer": "There is 1 interaction path between the user 'wickedbad4u' and the streamer 'luckyghost'."
  },
  {
    "question": "What's the average total view count for streamers who play the same game as 'itsbigchace' and stream in English?",
    "cypher": "MATCH (:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'}) RETURN avg(s.total_view_count) AS average_views",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_views": 6372346.333333332
      }
    ],
    "answer": "The average total view count for English-speaking streamers who play the same game as 'itsbigchace' is approximately 6,372,346 views."
  },
  {
    "question": "What is the description of the channel with the fewest followers on the 'ESO Strem Team'?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream) WHERE s.followers IS NOT NULL RETURN s.description AS channel_description ORDER BY s.followers ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "channel_description": "Cotton Candy NIGHTMARE Fuel"
      }
    ],
    "answer": "The description of the channel with the fewest followers on the 'ESO Strem Team' is \"Cotton Candy NIGHTMARE Fuel\"."
  },
  {
    "question": "Find the name of the team that streamer 'ninja614' is on, who plays 'The Elder Scrolls Online'.",
    "cypher": "MATCH (s:Stream {name: 'ninja614'})-[:PLAYS]->(:Game {name: 'The Elder Scrolls Online'}), (s)-[:HAS_TEAM]->(t:Team) RETURN t.name AS team_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "team_name": "ESO Stream Team"
      },
      {
        "team_name": "techandjunk"
      },
      {
        "team_name": "GG Army"
      },
      {
        "team_name": "Ready Type 1"
      }
    ]
  },
  {
    "question": "What's the shortest path length between user 'business_daddy' and the game 'Rust'?",
    "cypher": "MATCH path = shortestPath((:User {name: 'business_daddy'})-[*]-(:Game {name: 'Rust'})) RETURN length(path) AS connection_distance",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_distance": 2
      }
    ],
    "answer": "The shortest path length between user 'business_daddy' and the game 'Rust' is 2."
  },
  {
    "question": "Count the number of streamers who play 'Rast' and are connected to the user 'imcoma' through a moderator relationship.",
    "cypher": "MATCH (:User {name: 'imcoma'})-[:MODERATOR]-(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN count(s) AS streamer_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "streamer_count": 1
      }
    ],
    "answer": "There is 1 streamer who plays Rust and is connected to the user 'imcoma' through a moderator relationship."
  },
  {
    "question": "What is the maximum number of followers among streamers moderated by users who are VIPs in 'deshplease's channel?",
    "cypher": "MATCH (:Stream {name: 'deshplease'})<-[:VIP]-(u:User)-[:MODERATOR]->(s:Stream) WHERE s.followers IS NOT NULL RETURN max(s.followers) AS max_followers",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_followers": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "What is the URL of the stream with the highest total view count that plays 'The Elder Scrolls Online'?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(:Game {name: 'The Elder Scrolls Online'}) WHERE s.total_view_count IS NOT NULL RETURN s.url AS stream_url ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_url": "https://www.twitch.tv/fengrush"
      }
    ],
    "answer": "The stream with the highest total view count for 'The Elder Scrolls Online' is https://www.twitch.tv/fengrush."
  },
  {
    "question": "How many different languages are used by streamers on the same team as 'fengrush'?",
    "cypher": "MATCH (:Stream {name: 'fengrush'})-[:HAS_TEAM]->(t:Team)<-[:HAS_TEAM]-(s:Stream)-[:HAS_LANGUAGE]->(l:Language) RETURN count(DISTINCT l) AS language_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "language_count": 2
      }
    ],
    "answer": "Based on the query result, there are 2 different languages used by streamers on the same team as 'fengrush'."
  },
  {
    "question": "Gimme the name of the language spoken by the streamer '9linda' who plays the same vidya game as 'itsbigchase'.",
    "cypher": "MATCH (:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream {name: '9linda'}), (s)-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS language_name",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "language_name": "ru"
      }
    ],
    "answer": "The language spoken by the streamer '9linda' is Russian (ru)."
  },
  {
    "question": "What is the minimum follower count of a streamer who is a mod for 'luckygost' and plays a game from the 'ESO Stream Team'?",
    "cypher": "MATCH (:Stream {name: 'luckyghost'})<-[:MODERATOR]-(s:Stream)-[:PLAYS]->(g:Game)<-[:PLAYS]-(:Stream)-[:HAS_TEAM]->(:Team {name: 'ESO Stream Team'}) WHERE s.followers IS NOT NULL RETURN min(s.followers) AS min_followers",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "min_followers": 10554
      }
    ],
    "answer": "The minimum follower count of a streamer who is a mod for 'luckygost' and plays a game from the 'ESO Stream Team' is 10,554 followers."
  },
  {
    "question": "How many folks are VIPs in channels that play 'Rust' and are also moderated by the user 'imcoma'?",
    "cypher": "MATCH (:User {name: 'imcoma'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}), (s)<-[:VIP]-(u:User) RETURN count(DISTINCT u) AS total_vips",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_vips": 5
      }
    ],
    "answer": "There are 5 VIP users in channels that play 'Rust' and are moderated by the user 'imcoma'."
  },
  {
    "question": "What's the name of the user who moderates 'anaseu' and also chats in a channel that streams in english?",
    "cypher": "MATCH (:Stream {name: 'anaseu'})<-[:MODERATOR]-(u:User)-[:CHATTER]->(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'}) RETURN u.name AS moderator_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "moderator_name": "haraldinho_"
      }
    ],
    "answer": "haraldinho_ is the name of the user who moderates the 'anaseu' stream and also chats in an English-language stream."
  },
  {
    "question": "Which streamer has the lowest total view count among those who are moderated by 'raymundogalves' and play the same game as 'spiukbs'?",
    "cypher": "MATCH (:Stream {name: 'spiukbs'})-[:PLAYS]->(g:Game), (s:Stream)-[:PLAYS]->(g) WHERE (:User {name: 'raymundogalvez'})-[:MODERATOR]->(s) AND s.total_view_count IS NOT NULL RETURN s.name AS least_viewed_streamer ORDER BY s.total_view_count ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many unique users moderate channels that are on the same team as the channel 'ninja614'?",
    "cypher": "MATCH (:Stream {name: 'ninja614'})-[:HAS_TEAM]->(:Team)<-[:HAS_TEAM]-(s:Stream)<-[:MODERATOR]-(u:User) RETURN count(DISTINCT u) AS bridge_moderators",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "bridge_moderators": 59
      }
    ],
    "answer": "59 unique users moderate channels that are on the same team as the channel 'ninja614'."
  },
  {
    "question": "Find the total view count for the channel 'anaseu', which is moderated by user 'elokratz' and has chatters who also chat in 'atlanticdk's stream.",
    "cypher": "MATCH (:User {name: 'elokratz'})-[:MODERATOR]->(s:Stream {name: 'anaseu'}), (s)<-[:CHATTER]-(u:User)-[:CHATTER]->(:Stream {name: 'atlanticdk'}) RETURN s.total_view_count AS stream_views",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "stream_views": 749506
      },
      {
        "stream_views": 749506
      },
      {
        "stream_views": 749506
      },
      {
        "stream_views": 749506
      }
    ]
  },
  {
    "question": "What's the total number of fans for streamers that the user 'evariss' is a mod for, who also have 'cacarov' as a mod?",
    "cypher": "MATCH (:User {name: 'evariss'})-[:MODERATOR]->(s:Stream)<-[:MODERATOR]-(:Stream {name: 'cacarov'}) RETURN sum(s.followers) AS total_fan_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_fan_count": 0
      }
    ],
    "answer": "The total number of fans for streams where both 'evariss' and 'cacarov' are moderators is 0."
  },
  {
    "question": "What is the name of the team with the most viewed streamer who plays 'The Elder Scrolls Online'?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(:Game {name: 'The Elder Scrolls Online'}), (s)-[:HAS_TEAM]->(t:Team) WHERE s.total_view_count IS NOT NULL RETURN t.name AS top_team ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_team": "GG Talent Group"
      }
    ],
    "answer": "Based on the query result, the team with the most viewed streamer who plays 'The Elder Scrolls Online' is GG Talent Group."
  },
  {
    "question": "How many steps does it take to connect user 'soydas06' to the game 'Rust' through moderator relationships?",
    "cypher": "MATCH p = shortestPath((:User {name: 'soydas06'})-[:MODERATOR*]->(:Game {name: 'Rust'})) RETURN length(p) AS moderation_path_length",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What's the name of the user who is a VIP in a Russian-language stream that plays the same game as 'itsbigchase'?",
    "cypher": "MATCH (:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'ru'}), (s)<-[:VIP]-(u:User) RETURN u.name AS vip_user_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "5-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "vip_user_name": "terokru"
      }
    ],
    "answer": "The VIP user in a Russian-language stream that plays the same game as 'itsbigchase' is 'terokru'."
  },
  {
    "question": "What's the average number of followers for streamers that 'haraldinho_' is a mod for and who have 'atlanticdk' as a chatter?",
    "cypher": "MATCH (:User {name: 'haraldinho_'})-[:MODERATOR]->(s:Stream)<-[:CHATTER]-(:Stream {name: 'atlanticdk'}) RETURN avg(s.followers) AS average_follower_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_follower_count": null
      }
    ],
    "answer": "UNKNOWN\n\nThe query result returned None, which means there are no matching streams that satisfy both conditions (where 'haraldinho_' is a mod and 'atlanticdk' is a chatter), or the followers data is missing."
  },
  {
    "question": "What is the name of the streamer with the most followers among those who are moderated by 'evariss' and play 'Rust'?",
    "cypher": "MATCH (:User {name: 'evariss'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) WHERE s.followers IS NOT NULL RETURN s.name AS top_streamer_name ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Count how many streams connect the user 'rubiz' to 'itsbigchase' via moderator and chatter links.",
    "cypher": "MATCH path = (:User {name: 'rubiz'})-[:MODERATOR|CHATTER*2]-(:Stream {name: 'itsbigchase'}) RETURN count(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 streams connecting the user 'rubiz' to 'itsbigchase' via moderator and chatter links."
  },
  {
    "question": "What is the language of the channel with the lowest view count on the 'ESO Stream Team'?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream)-[:HAS_LANGUAGE]->(l:Language) WHERE s.total_view_count IS NOT NULL RETURN l.name AS language_of_least_viewed ORDER BY s.total_view_count ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "language_of_least_viewed": "en"
      }
    ],
    "answer": "The language of the channel with the lowest view count on the 'ESO Stream Team' is English (en)."
  },
  {
    "question": "What's the URL for the channel 'deshplease', where the user 'business_daddy' is a chatter and 'luckyghost' is a moderator?",
    "cypher": "MATCH (:User {name: 'business_daddy'})-[:CHATTER]->(s:Stream {name: 'deshplease'})<-[:MODERATOR]-(:Stream {name: 'luckyghost'}) RETURN s.url AS stream_url",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Calculate the total number of views for streamers who are on the same team as 'luckyghost' and speak English.",
    "cypher": "MATCH (:Stream {name: 'luckyghost'})-[:HAS_TEAM]->(:Team)<-[:HAS_TEAM]-(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'}) RETURN sum(s.total_view_count) AS total_team_views",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_team_views": 1559370211
      }
    ],
    "answer": "The total number of views for streamers on the same team as 'luckyghost' who speak English is 1,559,370,211."
  },
  {
    "question": "How many games are played by streamers who are VIPs in channels moderated by user 'comettunes'?",
    "cypher": "MATCH (:User {name: 'comettunes'})-[:MODERATOR]->(s1:Stream)<-[:VIP]-(s2:Stream)-[:PLAYS]->(g:Game) RETURN count(DISTINCT g) AS num_vip_games",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_vip_games": 0
      }
    ],
    "answer": "Based on the query result, there are 0 games played by VIP streamers in channels moderated by 'comettunes'."
  },
  {
    "question": "What's the name of the streamer with the most subs who is a mod for 'cacarov' and plays 'Rust'?",
    "cypher": "MATCH (s:Stream)-[:MODERATOR]->(:Stream {name: 'cacarov'}), (s)-[:PLAYS]->(:Game {name: 'Rust'}) WHERE s.followers IS NOT NULL RETURN s.name AS top_streamer_by_subs ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the name of the user who is a VIP in 'romandoduik's channel and also moderates an English-speaking stream.",
    "cypher": "MATCH (:Stream {name: 'romandoduik'})<-[:VIP]-(u:User)-[:MODERATOR]->(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'}) RETURN u.name AS vip_moderator_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the minimum number of followers for a channel that user 'elokratz' moderates which has 'atlanticdk' as a chatter?",
    "cypher": "MATCH (:User {name: 'elokratz'})-[:MODERATOR]->(s:Stream)<-[:CHATTER]-(:Stream {name: 'atlanticdk'}) WHERE s.followers IS NOT NULL RETURN min(s.followers) AS minimum_followers",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "minimum_followers": 64538
      }
    ],
    "answer": "The minimum number of followers for a channel that 'elokratz' moderates and 'atlanticdk' chats in is 64,538."
  },
  {
    "question": "Find the game with the highest number of streamers connected to the 'ESO Strem Team'.",
    "cypher": "MATCH (:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream)-[:PLAYS]->(g:Game) RETURN g.name AS most_popular_game ORDER BY count(s) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many moderators does the channel 'spiukbs' have that also chat in channels playing 'Rust'?",
    "cypher": "MATCH (:Stream {name: 'spiukbs'})<-[:MODERATOR]-(u:User)-[:CHATTER]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN count(DISTINCT u) AS crossover_moderators",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "crossover_moderators": 1
      }
    ],
    "answer": "1 moderator from the 'spiukbs' channel also chats in channels playing 'Rust'."
  },
  {
    "question": "Tell me the name of the game played by the streamer with the most views who is on the same team as 'ninja614'.",
    "cypher": "MATCH (:Stream {name: 'ninja614'})-[:HAS_TEAM]->(:Team)<-[:HAS_TEAM]-(s:Stream)-[:PLAYS]->(g:Game) WHERE s.total_view_count IS NOT NULL RETURN g.name AS top_viewed_game ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_viewed_game": "Baldur's Gate: Dark Alliance"
      }
    ],
    "answer": "Based on the query result, the game played by the streamer with the most views on the same team as 'ninja614' is \"Baldur's Gate: Dark Alliance\"."
  },
  {
    "question": "What's the ID of the team that 'fengrush' is on, who is a member of the 'ESO Stream Team'?",
    "cypher": "MATCH (:Stream {name: 'fengrush'})-[:HAS_TEAM]->(t:Team {name: 'ESO Stream Team'}) RETURN t.id AS team_id",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the total number of viewers who are VIPs in channels that play 'The Elder Scrolls Online' and are moderated by 'luckyghost'?",
    "cypher": "MATCH (:Stream {name: 'luckyghost'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'The Elder Scrolls Online'}), (s)<-[:VIP]-(u:User) RETURN count(DISTINCT u) AS total_vip_viewers",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_vip_viewers": 0
      }
    ],
    "answer": "Based on the query result, there are 0 VIP viewers in channels playing 'The Elder Scrolls Online' that are moderated by 'luckyghost'."
  },
  {
    "question": "How many different streamers who play 'Rust' does the user 'imcoma' moderate for?",
    "cypher": "MATCH (:User {name: 'imcoma'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN count(s) AS moderated_streamer_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "moderated_streamer_count": 1
      }
    ],
    "answer": "1 streamer who plays 'Rust' is moderated by the user 'imcoma'."
  },
  {
    "question": "Which streamer has the most fans that is a mod for 'syna' and has 'cacarov' as a VIP?",
    "cypher": "MATCH (s:Stream)-[:MODERATOR]->(:Stream {name: 'syna'}), (s)<-[:VIP]-(:Stream {name: 'cacarov'}) WHERE s.followers IS NOT NULL RETURN s.name AS most_popular_streamer ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the description of the channel that 'agustabell212' chats in, which is moderated by 'spiukbs'?",
    "cypher": "MATCH (:Stream {name: 'agustabell212'})-[:CHATTER]->(s:Stream)<-[:MODERATOR]-(:Stream {name: 'spiukbs'}) RETURN s.description AS channel_description LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the average number of followers for channels in the 'ru' language that play the same game's as '9linda'?",
    "cypher": "MATCH (:Stream {name: '9linda'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'ru'}) RETURN avg(s.followers) AS avg_ru_followers",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "avg_ru_followers": 17623.5
      }
    ],
    "answer": "The average number of followers for Russian-language channels that play the same games as '9linda' is 17,624 followers."
  },
  {
    "question": "How many degrees of separation are there between user 'wickedbad4u' and team 'ESO Strem Team'?",
    "cypher": "MATCH p = shortestPath((:User {name: 'wickedbad4u'})-[*]-(:Team {name: 'ESO Stream Team'})) RETURN length(p) AS separation_degree",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "separation_degree": 2
      }
    ],
    "answer": "There are 2 degrees of separation between user 'wickedbad4u' and the team 'ESO Stream Team'."
  },
  {
    "question": "Which streamer has the earliest creation date on the team that 'ninja614' is a part of?",
    "cypher": "MATCH (:Stream {name: 'ninja614'})-[:HAS_TEAM]->(:Team)<-[:HAS_TEAM]-(s:Stream) WHERE s.createdAt IS NOT NULL RETURN s.name AS oldest_streamer ORDER BY s.createdAt ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "oldest_streamer": "gernaderjake"
      }
    ],
    "answer": "Based on the query result, the streamer with the earliest creation date on the same team as 'ninja614' is 'gernaderjake'."
  },
  {
    "question": "What is the name of the game with the lowest average follower count among its streamers on the 'ESO Stream Team'?",
    "cypher": "MATCH (:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream)-[:PLAYS]->(g:Game) RETURN g.name AS least_popular_game ORDER BY avg(s.followers) ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What's the name of the user who is a VIP for 'creightonolsen' and also chats in the channel of a streamer who plays 'Rust'?",
    "cypher": "MATCH (:Stream {name: 'creightonolsen'})<-[:VIP]-(u:User)-[:CHATTER]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN u.name AS crossover_vip_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many other streamers are on the same team as 'fengrush' and play the same vidya game?",
    "cypher": "MATCH (s1:Stream {name: 'fengrush'})-[:HAS_TEAM]->(t:Team), (s1)-[:PLAYS]->(g:Game), (s2:Stream)-[:HAS_TEAM]->(t), (s2)-[:PLAYS]->(g) WHERE s1 <> s2 RETURN count(DISTINCT s2) AS teammate_count",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "teammate_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 other streamers on the same team as 'fengrush' who play the same video game."
  },
  {
    "question": "How many channels connect the game 'Rust' to the language 'ru'?",
    "cypher": "MATCH (:Game {name: 'Rust'})<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'ru'}) RETURN count(s) AS connecting_channels",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connecting_channels": 3
      }
    ],
    "answer": "3 channels connect the game 'Rust' to the Russian language."
  },
  {
    "question": "Find the name of the streamer with the most views who is moderated by 'soydas06' and has 'cacarov' as a VIP.",
    "cypher": "MATCH (:User {name: 'soydas06'})-[:MODERATOR]->(s:Stream)<-[:VIP]-(:Stream {name: 'cacarov'}) WHERE s.total_view_count IS NOT NULL RETURN s.name AS top_viewed_streamer ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many distinct games are played by streamers who are on the 'ESO Stream Team'?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream)-[:PLAYS]->(g:Game) RETURN count(DISTINCT g) AS num_games",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_games": 4
      }
    ],
    "answer": "Streamers on the 'ESO Stream Team' play 4 distinct games."
  },
  {
    "question": "What is the name of the game played by the streamer 'itsbigchase', who is moderated by the user 'imcoma'?",
    "cypher": "MATCH (:User {name: 'imcoma'})-[:MODERATOR]->(s:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game) RETURN g.name AS game_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "game_name": "Rust"
      }
    ],
    "answer": "The game played by the streamer 'itsbigchase' is Rust."
  },
  {
    "question": "Find the streamer with the most followers who plays 'Rust'.",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(g:Game {name: 'Rust'}) WHERE s.followers IS NOT NULL RETURN s.name AS top_streamer ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_streamer": "shiphtur"
      }
    ],
    "answer": "Based on the query result, the streamer with the most followers who plays 'Rust' is shiphtur."
  },
  {
    "question": "What is the shortest path length between user 'raymundogalvez' and the game 'Rust'?",
    "cypher": "MATCH path = shortestPath((u:User {name: 'raymundogalvez'})-[*]-(g:Game {name: 'Rust'})) RETURN length(path) AS connection_distance",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_distance": 3
      }
    ],
    "answer": "The shortest path length between user 'raymundogalvez' and the game 'Rust' is 3 connections."
  },
  {
    "question": "Count the total number of viewers who are VIPs in streams that play 'The Elder Scrolls Online'.",
    "cypher": "MATCH (u:User)-[:VIP]->(s:Stream)-[:PLAYS]->(:Game {name: 'The Elder Scrolls Online'}) RETURN COUNT(DISTINCT u) AS total_vips",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_vips": 3
      }
    ],
    "answer": "There are 3 VIP viewers watching streams of 'The Elder Scrolls Online'."
  },
  {
    "question": "What's the language of the channel 'anaseu', which is moderated by the user 'elokratz'?",
    "cypher": "MATCH (:User {name: 'elokratz'})-[:MODERATOR]->(s:Stream {name: 'anaseu'})-[:HAS_LANGUAGE]->(l:Language) RETURN l.name AS stream_language",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "stream_language": "en"
      }
    ],
    "answer": "The language of the channel 'anaseu' is English (en)."
  },
  {
    "question": "Which streamer has the lowest total view count among those who are on the 'ESO Stream Team' and play 'The Elder Scrolls Online'?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream)-[:PLAYS]->(g:Game {name: 'The Elder Scrolls Online'}) WHERE s.total_view_count IS NOT NULL RETURN s.name AS least_viewed_streamer ORDER BY s.total_view_count ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "least_viewed_streamer": "luckyghost"
      }
    ],
    "answer": "Based on the query result, luckyghost is the streamer with the lowest total view count among those on the 'ESO Stream Team' who play 'The Elder Scrolls Online'."
  },
  {
    "question": "How many streamers who play Rust also have Russian-language streams?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}), (s)-[:HAS_LANGUAGE]->(:Language {name: 'ru'}) RETURN COUNT(DISTINCT s) AS ru_rust_streamers",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "ru_rust_streamers": 3
      }
    ],
    "answer": "Based on the query result, there are 3 streamers who play Rust and have Russian-language streams."
  },
  {
    "question": "What is the average number of followers for streamers who have a user named 'business_daddy' as a chatter?",
    "cypher": "MATCH (:User {name: 'business_daddy'})-[:CHATTER]->(s:Stream) RETURN avg(s.followers) AS average_follower_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_follower_count": 224845.36047372306
      }
    ],
    "answer": "Based on the query result, streamers who have 'business_daddy' as a chatter have an average of approximately 224,845 followers."
  },
  {
    "question": "Tell me the description of the stream 'luckyghost', which has a chatter named 'deshplease'.",
    "cypher": "MATCH (:Stream {name: 'deshplease'})-[:CHATTER]->(s:Stream {name: 'luckyghost'}) RETURN s.description AS stream_description",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the name of the team with the most recently created stream channel that plays 'Rust'?",
    "cypher": "MATCH (t:Team)<-[:HAS_TEAM]-(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) WHERE s.createdAt IS NOT NULL RETURN t.name AS team_name ORDER BY s.createdAt DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "team_name": "G FUEL: The Official Energy Drink of Esports\u00ae"
      }
    ],
    "answer": "The team with the most recently created stream channel playing Rust is G FUEL: The Official Energy Drink of Esports\u00ae."
  },
  {
    "question": "How many moderators does streamer 'spiukbs' have who are also chatters in 'agustabell212's stream?",
    "cypher": "MATCH (s1:Stream {name: 'spiukbs'})<-[:MODERATOR]-(u:User)-[:CHATTER]->(s2:Stream {name: 'agustabell212'}) RETURN COUNT(DISTINCT u) AS shared_community_mods",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "shared_community_mods": 0
      }
    ],
    "answer": "Based on the query result, spiukbs has 0 moderators who are also chatters in agustabell212's stream."
  },
  {
    "question": "Sum up the total views of all streams that have 'ru' as a language and are played by streamers who also play 'Rust'.",
    "cypher": "MATCH (s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'ru'}), (s)-[:PLAYS]->(g:Game)<-[:PLAYS]-(s2:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN SUM(s.total_view_count) AS total_views",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_views": 3134485620
      }
    ],
    "answer": "The total views for Russian-language streams by streamers who also play Rust is 3,134,485,620 views."
  },
  {
    "question": "What game title is played by the streamer 'cacarov', who is moderated by a user who also moderates 'syna'?",
    "cypher": "MATCH (:Stream {name: 'syna'})<-[:MODERATOR]-(u:User)-[:MODERATOR]->(s:Stream {name: 'cacarov'})-[:PLAYS]->(g:Game) RETURN g.name AS shared_mod_game_title LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "shared_mod_game_title": "Rust"
      }
    ],
    "answer": "Based on the query result, the game title played by 'cacarov' is Rust. This game is streamed by 'cacarov' and the streamer is moderated by a user who also moderates 'syna'."
  },
  {
    "question": "Find the name of the streamer with the most followers that user 'soydas06' moderates.",
    "cypher": "MATCH (:User {name: 'soydas06'})-[:MODERATOR]->(s:Stream) WHERE s.followers IS NOT NULL RETURN s.name AS top_moderated_streamer ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_moderated_streamer": "syna"
      }
    ],
    "answer": "The streamer with the most followers that 'soydas06' moderates is 'syna'."
  },
  {
    "question": "How many paths connect the 'ESO Stream Team' to the game 'Rust'?",
    "cypher": "MATCH path = (t:Team {name: 'ESO Stream Team'})-[*..4]-(g:Game {name: 'Rust'}) RETURN count(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many folks are moderators for 'anaseu' and also chatter in streams that play games for the 'ESO Stream Team'?",
    "cypher": "MATCH (:Stream {name: 'anaseu'})<-[:MODERATOR]-(u:User)-[:CHATTER]->(s:Stream)-[:HAS_TEAM]->(:Team {name: 'ESO Stream Team'}) RETURN COUNT(DISTINCT u) AS crossover_fans",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "crossover_fans": 0
      }
    ],
    "answer": "0 users are both moderators for 'anaseu' and chatters in streams that play games for the 'ESO Stream Team'."
  },
  {
    "question": "What is the name of the user who moderates 'itsbigchse' and chats in 'spiukbs's stream?",
    "cypher": "MATCH (u:User)-[:MODERATOR]->(:Stream {name: 'itsbigchase'}), (u)-[:CHATTER]->(:Stream {name: 'spiukbs'}) RETURN u.name AS user_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Which game is played by the streamer with the highest number of followers on the 'ESO Stream Team'?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream)-[:PLAYS]->(g:Game) WHERE s.followers IS NOT NULL RETURN g.name AS top_game_by_followers ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_game_by_followers": "Baldur's Gate: Dark Alliance"
      }
    ],
    "answer": "Based on the query result, the game played by the streamer with the highest number of followers on the 'ESO Stream Team' is \"Baldur's Gate: Dark Alliance\"."
  },
  {
    "question": "Count the number of shared moderators between 'anaseu' and 'spiukbs'.",
    "cypher": "MATCH (:Stream {name: 'anaseu'})<-[:MODERATOR]-(u:User)-[:MODERATOR]->(:Stream {name: 'spiukbs'}) RETURN COUNT(DISTINCT u) AS shared_moderator_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "shared_moderator_count": 1
      }
    ],
    "answer": "There is 1 shared moderator between the streams 'anaseu' and 'spiukbs'."
  },
  {
    "question": "What's the total follower count of streamers who play 'Rist' and are moderated by users who are VIPs in 'fengrush's channel?",
    "cypher": "MATCH (:Stream {name: 'fengrush'})<-[:VIP]-(u:User)-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN SUM(s.followers) AS total_followers_in_network",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_followers_in_network": 0
      }
    ],
    "answer": "Based on the query result, the total follower count of streamers who play 'Rust' and are moderated by VIPs in 'fengrush's channel is 0."
  },
  {
    "question": "Get the URL for the streamer who plays the same game as '9linda' and has the most total views.",
    "cypher": "MATCH (:Stream {name: '9linda'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s2:Stream) WHERE s2.total_view_count IS NOT NULL RETURN s2.url AS top_streamer_url ORDER BY s2.total_view_count DESC LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_streamer_url": "https://www.twitch.tv/shiphtur"
      }
    ],
    "answer": "The URL for the streamer who plays the same game as '9linda' and has the most total views is https://www.twitch.tv/shiphtur."
  },
  {
    "question": "Which language is used by the streamer with the fewest followers who plays games for the 'ESO Stream Team'?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream)-[:HAS_LANGUAGE]->(l:Language) WHERE s.followers IS NOT NULL RETURN l.name AS language_of_smallest_streamer ORDER BY s.followers ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "language_of_smallest_streamer": "en"
      }
    ],
    "answer": "The language used by the streamer with the fewest followers in the 'ESO Stream Team' is English (en)."
  },
  {
    "question": "How many other streamers play the same game as 'itsbigchase' and are also moderated by the user 'imcoma'?",
    "cypher": "MATCH (u:User {name: 'imcoma'})-[:MODERATOR]->(s1:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game), (u)-[:MODERATOR]->(s2:Stream)-[:PLAYS]->(g) WHERE s1 <> s2 RETURN COUNT(DISTINCT s2) AS similarly_moderated_streamers",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "similarly_moderated_streamers": 0
      }
    ],
    "answer": "Based on the query result, there are 0 other streamers who play the same game as 'itsbigchase' and are also moderated by the user 'imcoma'."
  },
  {
    "question": "What is the average total view count of streamers who are VIPs in 'luckyghost's channel and play 'Rust'?",
    "cypher": "MATCH (:Stream {name: 'luckyghost'})<-[:VIP]-(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN AVG(s.total_view_count) AS average_vip_streamer_views",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_vip_streamer_views": null
      }
    ],
    "answer": "UNKNOWN\n\nThe query result returned None for the average total view count, which could indicate either no matching streamers or missing data."
  },
  {
    "question": "What's the name of the guy who moderates 'anaseu' and is also a VIP for that same channel?",
    "cypher": "MATCH (u:User)-[:MODERATOR]->(s:Stream {name: 'anaseu'}), (u)-[:VIP]->(s) RETURN u.name AS mod_and_vip_user",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Show me the name of the streamer with the most followers, who is moderated by a user who is a chatter for 'deshplease'.",
    "cypher": "MATCH (:Stream {name: 'deshplease'})<-[:CHATTER]-(u:User)-[:MODERATOR]->(s:Stream) WHERE s.followers IS NOT NULL RETURN s.name AS top_streamer_in_chatter_network ORDER BY s.followers DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_streamer_in_chatter_network": "retku"
      }
    ],
    "answer": "The streamer with the most followers in the chatter network of 'deshplease' is 'retku'."
  },
  {
    "question": "How many degrees of separation are there between user 'soydas06' and streamer 'fengrush'?",
    "cypher": "MATCH path = shortestPath((u1:User {name: 'soydas06'})-[*..5]-(u2:User {name: 'fengrush'})) RETURN length(path) AS social_distance",
    "query_type": "Existence Verification",
    "complexity": "5-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "social_distance": 3
      }
    ],
    "answer": "Based on the query result, there are 3 degrees of separation between user 'soydas06' and streamer 'fengrush'."
  },
  {
    "question": "Count how many users are both a chatter and a VIP in the stream of 'creightonolsen'.",
    "cypher": "MATCH (u:User)-[:CHATTER]->(s:Stream {name: 'creightonolsen'}), (u)-[:VIP]->(s) RETURN COUNT(DISTINCT u) AS chatter_vip_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "chatter_vip_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 users who are both a chatter and a VIP in the stream of 'creightonolsen'."
  },
  {
    "question": "What team does the streamer 'ninja614' belong to, who plays 'The Elder Scrolls Online'?",
    "cypher": "MATCH (t:Team)<-[:HAS_TEAM]-(s:Stream {name: 'ninja614'})-[:PLAYS]->(:Game {name: 'The Elder Scrolls Online'}) RETURN t.name AS streamer_team_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "streamer_team_name": "ESO Stream Team"
      },
      {
        "streamer_team_name": "techandjunk"
      },
      {
        "streamer_team_name": "GG Army"
      },
      {
        "streamer_team_name": "Ready Type 1"
      }
    ]
  },
  {
    "question": "What's the oldest stream account that plays 'The Elder Scrolls Online' and is part of the 'ESO Stream Team'?",
    "cypher": "MATCH (:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream)-[:PLAYS]->(:Game {name: 'The Elder Scrolls Online'}) WHERE s.createdAt IS NOT NULL RETURN s.name AS oldest_streamer_name ORDER BY s.createdAt ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "oldest_streamer_name": "alcasthq"
      }
    ],
    "answer": "Based on the query result, the oldest stream account that plays 'The Elder Scrolls Online' and is part of the 'ESO Stream Team' is 'alcasthq'."
  },
  {
    "question": "How many connections exist where a user moderates one stream and is a VIP in another, and both streams play 'Rust'?",
    "cypher": "MATCH (u:User)-[:MODERATOR]->(s1:Stream)-[:PLAYS]->(:Game {name: 'Rust'}), (u)-[:VIP]->(s2:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) WHERE s1 <> s2 RETURN COUNT(u) AS cross_community_influencers",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "cross_community_influencers": 5
      }
    ],
    "answer": "Based on the query result, there are 5 users who moderate one Rust stream and are VIP in another Rust stream."
  },
  {
    "question": "What is the total follower count for streamers moderated by raymundogalves?",
    "cypher": "MATCH (:User {name: 'raymundogalvez'})-[:MODERATOR]->(s:Stream) RETURN SUM(s.followers) AS total_moderated_followers",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_moderated_followers": 159814
      }
    ],
    "answer": "The total follower count for streams moderated by raymundogalvez is 159,814 followers."
  },
  {
    "question": "What is the name of the game played by the streamer with the most views who is a member of the ESO Stream Team?",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream)-[:PLAYS]->(g:Game) RETURN g.name AS top_game_by_views ORDER BY s.total_view_count DESC LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_game_by_views": "Baldur's Gate: Dark Alliance"
      }
    ],
    "answer": "Based on the query result, the game played by the streamer with the most views in the ESO Stream Team is \"Baldur's Gate: Dark Alliance\"."
  },
  {
    "question": "Find the name of the streamer with the least followers who is moderated by a VIP from anseu's stream.",
    "cypher": "MATCH (:Stream {name: 'anaseu'})<-[:VIP]-(u:User)-[:MODERATOR]->(s:Stream) WHERE s.followers IS NOT NULL RETURN s.name AS smallest_streamer_in_network ORDER BY s.followers ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Are there any Russian-speaking streamers who play the same game as 'itsbigchase'? Give me the count.",
    "cypher": "MATCH (:Stream {name: 'itsbigchase'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'ru'}) RETURN COUNT(s) AS count_of_streamers",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "count_of_streamers": 3
      }
    ],
    "answer": "Yes, there are 3 Russian-speaking streamers who play the same game as 'itsbigchase'."
  },
  {
    "question": "Count the number of different languages spoken by streamers who have 'comettunes' as a chatter.",
    "cypher": "MATCH (:User {name: 'comettunes'})-[:CHATTER]->(s:Stream)-[:HAS_LANGUAGE]->(l:Language) RETURN COUNT(DISTINCT l) AS num_languages",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_languages": 28
      }
    ],
    "answer": "The streamer 'comettunes' has chatted on streams in 28 different languages."
  },
  {
    "question": "What is the game played by streamer '9linda' who also speaks 'ru'?",
    "cypher": "MATCH (s:Stream {name: '9linda'})-[:PLAYS]->(g:Game), (s)-[:HAS_LANGUAGE]->(:Language {name: 'ru'}) RETURN g.name AS game_title",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "game_title": "Rust"
      }
    ],
    "answer": "The streamer '9linda' plays the game 'Rust' and speaks Russian (ru)."
  },
  {
    "question": "Which streamer that plays 'The Elder Scrolls Online' has the most recent account creation date?",
    "cypher": "MATCH (s:Stream)-[:PLAYS]->(:Game {name: 'The Elder Scrolls Online'}) WHERE s.createdAt IS NOT NULL RETURN s.name AS newest_streamer ORDER BY s.createdAt DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "newest_streamer": "luckyghost"
      }
    ],
    "answer": "The streamer luckyghost has the most recent account creation date among streamers playing 'The Elder Scrolls Online'."
  },
  {
    "question": "How many moderators of 'syna's stream also play the game 'Rust'?",
    "cypher": "MATCH (:Stream {name: 'syna'})<-[:MODERATOR]-(u:User)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN COUNT(DISTINCT u) AS mod_player_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "mod_player_count": 0
      }
    ],
    "answer": "0 moderators of 'syna's stream also play the game 'Rust'."
  },
  {
    "question": "What is the combined total view count of all streamers that user 'wickedbad4u' chats with?",
    "cypher": "MATCH (:User {name: 'wickedbad4u'})-[:CHATTER]->(s:Stream) RETURN SUM(s.total_view_count) AS total_chatted_stream_views",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_chatted_stream_views": 1594957
      }
    ],
    "answer": "The combined total view count of all streamers that user 'wickedbad4u' chats with is 1,594,957 views."
  },
  {
    "question": "Fetch the name of the team associated with streamer 'luckyghost', who is moderated by 'deshplease'.",
    "cypher": "MATCH (:Stream {name: 'deshplease'})-[:MODERATOR]->(s:Stream {name: 'luckyghost'})-[:HAS_TEAM]->(t:Team) RETURN t.name AS team_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "team_name": "ESO Stream Team"
      }
    ],
    "answer": "The team associated with streamer 'luckyghost' is the ESO Stream Team."
  },
  {
    "question": "Which game is most popular (by total streamer followers) among streams moderated by users who are VIPs in 'fengrush's channel?",
    "cypher": "MATCH (:Stream {name: 'fengrush'})<-[:VIP]-(u:User)-[:MODERATOR]->(s:Stream)-[:PLAYS]->(g:Game) RETURN g.name AS most_popular_game ORDER BY SUM(s.followers) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many other streamers are there on the same team as 'ninja614'?",
    "cypher": "MATCH (s1:Stream {name: 'ninja614'})-[:HAS_TEAM]->(t:Team)<-[:HAS_TEAM]-(s2:Stream) WHERE s1 <> s2 RETURN COUNT(DISTINCT s2) AS teammate_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "teammate_count": 8
      }
    ],
    "answer": "There are 8 other streamers on the same team as 'ninja614'."
  },
  {
    "question": "Sum the followers of all streamers who are on the same team as the streamer with the most views in the 'ESO Stream Team'.",
    "cypher": "MATCH (t:Team {name: 'ESO Stream Team'})<-[:HAS_TEAM]-(s:Stream) WITH t ORDER BY s.total_view_count DESC LIMIT 1 MATCH (t)<-[:HAS_TEAM]-(s_teammate) RETURN SUM(s_teammate.followers) AS total_teammate_followers",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_teammate_followers": 734848
      }
    ],
    "answer": "The total number of followers for all streamers on the 'ESO Stream Team' is 734,848."
  },
  {
    "question": "Find the description of the stream that has 'evariss' as a mod and also plays 'Rust'.",
    "cypher": "MATCH (:User {name: 'evariss'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN s.description AS stream_description",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Among streamers who play the same game as 'fengrush', who has the least total views?",
    "cypher": "MATCH (:Stream {name: 'fengrush'})-[:PLAYS]->(g:Game)<-[:PLAYS]-(s:Stream) WHERE s.total_view_count IS NOT NULL AND s.name <> 'fengrush' RETURN s.name AS least_viewed_coplayer ORDER BY s.total_view_count ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "least_viewed_coplayer": "buxoi_papa"
      }
    ],
    "answer": "Based on the query result, the streamer 'buxoi_papa' has the least total views among streamers who play the same game as 'fengrush'."
  },
  {
    "question": "What's the number of hops to get from the user 'rubiz' to any stream in english?",
    "cypher": "MATCH path = shortestPath((:User {name: 'rubiz'})-[*..4]-(:Stream)-[:HAS_LANGUAGE]->(:Language {name: 'en'})) RETURN length(path) AS path_length_to_english_stream",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Calculate the total number of followers for streamers who are VIPs in channels moderated by 'haraldinho_'.",
    "cypher": "MATCH (:User {name: 'haraldinho_'})-[:MODERATOR]->(s1:Stream)<-[:VIP]-(s2:Stream) RETURN SUM(s2.followers) AS vip_streamer_follower_total",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "vip_streamer_follower_total": 0
      }
    ],
    "answer": "Based on the query result, the total number of followers for VIP streamers in channels moderated by 'haraldinho_' is 0."
  },
  {
    "question": "What's the name of the streamer who plays Rust and is moderated by the user 'soydas06'?",
    "cypher": "MATCH (:User {name: 'soydas06'})-[:MODERATOR]->(s:Stream)-[:PLAYS]->(:Game {name: 'Rust'}) RETURN s.name AS streamer_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the location of the DC1 datacenter?",
    "cypher": "MATCH (d:DataCenter {name: 'DC1'}) RETURN d.location AS datacenter_location",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The location of the DC1 datacenter is Iceland, Rekjavik."
  },
  {
    "question": "What is the PID for the 'csm' application that has a start time of 1606977275027?",
    "cypher": "MATCH (a:Application {name: 'cms', startTime: 1606977275027}) RETURN a.pid AS application_pid",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "application_pid": 5521
      }
    ],
    "answer": "The PID for the 'csm' application with a start time of 1606977275027 is 5521."
  },
  {
    "question": "Find the zone for the router named 'DC1-R-1'.",
    "cypher": "MATCH (r:Router {name: 'DC1-R-1'}) RETURN r.zone AS router_zone",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "router_zone": 1
      }
    ],
    "answer": "The zone for the router 'DC1-R-1' is zone 1."
  },
  {
    "question": "Tell me the IP for the interface '10.1.0.254'.",
    "cypher": "MATCH (i:Interface {ip: '10.1.0.254'}) RETURN i.ip AS interface_ip",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "interface_ip": "10.1.0.254"
      }
    ],
    "answer": "The IP for the interface '10.1.0.254' is 10.1.0.254."
  },
  {
    "question": "What is the rack number for 'DC1-RCK-4-2'?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-4-2'}) RETURN r.rack AS rack_number",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "rack_number": 2
      }
    ],
    "answer": "The rack number for 'DC1-RCK-4-2' is 2."
  },
  {
    "question": "How much ram does type with id 1 have?",
    "cypher": "MATCH (t:Type {id: 1}) RETURN t.ram AS type_ram",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "type_ram": 4
      }
    ],
    "answer": "The type with id 1 has 4 RAM."
  },
  {
    "question": "What is the list of ports for the 'webserver' software?",
    "cypher": "MATCH (s:Software {name: 'webserver'}) RETURN s.ports AS software_ports",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "software_ports": [
          80,
          443
        ]
      }
    ],
    "answer": "The ports for the 'webserver' software are 80 and 443."
  },
  {
    "question": "What is the CPU count for the type with id 2?",
    "cypher": "MATCH (t:Type {id: 2}) RETURN t.cpu AS type_cpu_count",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "type_cpu_count": 4
      }
    ],
    "answer": "The CPU count for the type with id 2 is 4."
  },
  {
    "question": "Find the location for the datacenter named 'DC1'.",
    "cypher": "MATCH (d:DataCenter {name: 'DC1'}) RETURN d.location AS datacenter_location",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The location for the datacenter named 'DC1' is Iceland, Rekjavik."
  },
  {
    "question": "What is the pid for the 'webapp' app that started at 1606270292820?",
    "cypher": "MATCH (a:Application {name: 'webapp', startTime: 1606270292820}) RETURN a.pid AS application_pid",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "application_pid": 9257
      }
    ],
    "answer": "The pid for the 'webapp' app that started at 1606270292820 is 9257."
  },
  {
    "question": "Show me the zone number for rack 'DC1-RCK-2-9'.",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-2-9'}) RETURN r.zone AS rack_zone",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "rack_zone": 2
      }
    ],
    "answer": "The zone number for rack 'DC1-RCK-2-9' is 2."
  },
  {
    "question": "What are the dependencies for the 'cms' softwere?",
    "cypher": "MATCH (s:Software {name: 'cms'}) RETURN s.dependencies AS software_dependencies",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "software_dependencies": [
          "php",
          "webserver",
          "couchbase"
        ]
      }
    ],
    "answer": "The dependencies for the 'cms' software are: php, webserver, and couchbase."
  },
  {
    "question": "What is the size of the network with IP '10.1'?",
    "cypher": "MATCH (n:Network {ip: '10.1'}) RETURN n.size AS network_size",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "network_size": 16
      }
    ],
    "answer": "The size of the network with IP '10.1' is 16."
  },
  {
    "question": "Give me the start time of the OS named '7.3'.",
    "cypher": "MATCH (o:OS {name: '7.3'}) RETURN o.startTime AS os_start_time",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "os_start_time": 1606423282068
      },
      {
        "os_start_time": 1605953971233
      },
      {
        "os_start_time": 1606132525244
      },
      {
        "os_start_time": 1606234137162
      },
      {
        "os_start_time": 1606079722496
      },
      {
        "os_start_time": 1605967972010
      },
      {
        "os_start_time": 1606101140665
      },
      {
        "os_start_time": 1605800380813
      },
      {
        "os_start_time": 1605738795084
      },
      {
        "os_start_time": 1606291267911
      },
      {
        "os_start_time": 1606078568776
      },
      {
        "os_start_time": 1606336346869
      },
      {
        "os_start_time": 1605959871343
      },
      {
        "os_start_time": 1606097409297
      },
      {
        "os_start_time": 1606459148344
      },
      {
        "os_start_time": 1606299907803
      },
      {
        "os_start_time": 1605876338534
      },
      {
        "os_start_time": 1606153114265
      },
      {
        "os_start_time": 1606563782321
      },
      {
        "os_start_time": 1605747798674
      },
      {
        "os_start_time": 1605746055910
      },
      {
        "os_start_time": 1606420689864
      },
      {
        "os_start_time": 1606037475986
      },
      {
        "os_start_time": 1606224620341
      },
      {
        "os_start_time": 1605898740497
      },
      {
        "os_start_time": 1605788293265
      },
      {
        "os_start_time": 1606529364642
      },
      {
        "os_start_time": 1606513449412
      },
      {
        "os_start_time": 1605738148929
      },
      {
        "os_start_time": 1606407946896
      },
      {
        "os_start_time": 1606306217247
      },
      {
        "os_start_time": 1606596056201
      },
      {
        "os_start_time": 1606416828528
      },
      {
        "os_start_time": 1606205819121
      },
      {
        "os_start_time": 1606555803654
      },
      {
        "os_start_time": 1606476571231
      },
      {
        "os_start_time": 1606245387834
      },
      {
        "os_start_time": 1605835547184
      },
      {
        "os_start_time": 1606167633397
      },
      {
        "os_start_time": 1606097104927
      },
      {
        "os_start_time": 1606428505152
      },
      {
        "os_start_time": 1606326110423
      },
      {
        "os_start_time": 1606305248608
      },
      {
        "os_start_time": 1606404547719
      },
      {
        "os_start_time": 1606419361047
      },
      {
        "os_start_time": 1606141576342
      },
      {
        "os_start_time": 1605812572887
      },
      {
        "os_start_time": 1606444112928
      },
      {
        "os_start_time": 1606353050563
      },
      {
        "os_start_time": 1605996082069
      },
      {
        "os_start_time": 1606248139890
      },
      {
        "os_start_time": 1606499906706
      },
      {
        "os_start_time": 1606255865137
      },
      {
        "os_start_time": 1606147384800
      },
      {
        "os_start_time": 1606177601452
      },
      {
        "os_start_time": 1605852351296
      },
      {
        "os_start_time": 1606306112310
      },
      {
        "os_start_time": 1606097160026
      },
      {
        "os_start_time": 1605838184707
      },
      {
        "os_start_time": 1605936070046
      },
      {
        "os_start_time": 1605906591496
      },
      {
        "os_start_time": 1606499761290
      },
      {
        "os_start_time": 1606414680531
      },
      {
        "os_start_time": 1606436484633
      },
      {
        "os_start_time": 1606470055668
      },
      {
        "os_start_time": 1606081370894
      },
      {
        "os_start_time": 1605991048282
      },
      {
        "os_start_time": 1605775926168
      },
      {
        "os_start_time": 1606560712431
      },
      {
        "os_start_time": 1606458152555
      },
      {
        "os_start_time": 1606400330488
      },
      {
        "os_start_time": 1606556487130
      },
      {
        "os_start_time": 1606095639884
      },
      {
        "os_start_time": 1605893183251
      },
      {
        "os_start_time": 1606460077670
      },
      {
        "os_start_time": 1605762013386
      },
      {
        "os_start_time": 1606586808115
      },
      {
        "os_start_time": 1605736476675
      },
      {
        "os_start_time": 1606375161073
      },
      {
        "os_start_time": 1606061578139
      },
      {
        "os_start_time": 1605879668209
      },
      {
        "os_start_time": 1606567363012
      },
      {
        "os_start_time": 1606402354039
      },
      {
        "os_start_time": 1606066653806
      },
      {
        "os_start_time": 1605854691016
      },
      {
        "os_start_time": 1605870928530
      },
      {
        "os_start_time": 1606569930969
      },
      {
        "os_start_time": 1606173926910
      },
      {
        "os_start_time": 1606557465757
      },
      {
        "os_start_time": 1605854298622
      },
      {
        "os_start_time": 1606020080458
      },
      {
        "os_start_time": 1606509882794
      },
      {
        "os_start_time": 1605821228706
      },
      {
        "os_start_time": 1606260920262
      },
      {
        "os_start_time": 1606032992473
      },
      {
        "os_start_time": 1606177251328
      },
      {
        "os_start_time": 1606215115558
      },
      {
        "os_start_time": 1606035971439
      },
      {
        "os_start_time": 1605803598674
      },
      {
        "os_start_time": 1606506279222
      },
      {
        "os_start_time": 1606279037911
      },
      {
        "os_start_time": 1605988083774
      },
      {
        "os_start_time": 1605776798822
      },
      {
        "os_start_time": 1605889855277
      },
      {
        "os_start_time": 1606367082969
      },
      {
        "os_start_time": 1606383994505
      },
      {
        "os_start_time": 1606391769651
      },
      {
        "os_start_time": 1605831943137
      },
      {
        "os_start_time": 1605773593876
      },
      {
        "os_start_time": 1606554879625
      },
      {
        "os_start_time": 1606198873290
      },
      {
        "os_start_time": 1606287096225
      },
      {
        "os_start_time": 1605740451544
      },
      {
        "os_start_time": 1606405885127
      },
      {
        "os_start_time": 1606228426098
      },
      {
        "os_start_time": 1606374329453
      },
      {
        "os_start_time": 1606252445408
      },
      {
        "os_start_time": 1606255291595
      },
      {
        "os_start_time": 1606362099814
      },
      {
        "os_start_time": 1606156343945
      },
      {
        "os_start_time": 1606108219230
      },
      {
        "os_start_time": 1606352105404
      },
      {
        "os_start_time": 1606452834770
      },
      {
        "os_start_time": 1606468340621
      },
      {
        "os_start_time": 1606208040679
      },
      {
        "os_start_time": 1605912597709
      },
      {
        "os_start_time": 1606046179673
      },
      {
        "os_start_time": 1606564946704
      },
      {
        "os_start_time": 1605988088616
      },
      {
        "os_start_time": 1606142816868
      },
      {
        "os_start_time": 1605896087957
      },
      {
        "os_start_time": 1606520503118
      },
      {
        "os_start_time": 1605837313880
      },
      {
        "os_start_time": 1606032623059
      },
      {
        "os_start_time": 1605908334308
      },
      {
        "os_start_time": 1606209716172
      },
      {
        "os_start_time": 1606540678239
      },
      {
        "os_start_time": 1605924054590
      },
      {
        "os_start_time": 1605805886479
      },
      {
        "os_start_time": 1605764679892
      },
      {
        "os_start_time": 1606019482058
      },
      {
        "os_start_time": 1606046652451
      },
      {
        "os_start_time": 1606377918779
      },
      {
        "os_start_time": 1606313680038
      },
      {
        "os_start_time": 1605941967727
      },
      {
        "os_start_time": 1605963006673
      },
      {
        "os_start_time": 1606124627730
      },
      {
        "os_start_time": 1605879073569
      },
      {
        "os_start_time": 1606452382858
      },
      {
        "os_start_time": 1605838078677
      },
      {
        "os_start_time": 1606042965339
      },
      {
        "os_start_time": 1606233874514
      },
      {
        "os_start_time": 1606488095737
      },
      {
        "os_start_time": 1605818284563
      },
      {
        "os_start_time": 1606074629217
      },
      {
        "os_start_time": 1606351368626
      },
      {
        "os_start_time": 1605930326852
      },
      {
        "os_start_time": 1606364651066
      },
      {
        "os_start_time": 1605947609741
      },
      {
        "os_start_time": 1605840554389
      },
      {
        "os_start_time": 1605753163217
      },
      {
        "os_start_time": 1605897587051
      },
      {
        "os_start_time": 1605999607039
      },
      {
        "os_start_time": 1606100243053
      },
      {
        "os_start_time": 1605882812577
      },
      {
        "os_start_time": 1605824552541
      },
      {
        "os_start_time": 1606580171601
      },
      {
        "os_start_time": 1606312596166
      },
      {
        "os_start_time": 1605986085764
      },
      {
        "os_start_time": 1606171074964
      },
      {
        "os_start_time": 1605925586146
      },
      {
        "os_start_time": 1606595360343
      },
      {
        "os_start_time": 1606518210064
      },
      {
        "os_start_time": 1605950746568
      },
      {
        "os_start_time": 1606517713498
      },
      {
        "os_start_time": 1606337433314
      },
      {
        "os_start_time": 1605967496003
      },
      {
        "os_start_time": 1606398103730
      },
      {
        "os_start_time": 1606413640856
      },
      {
        "os_start_time": 1605981040910
      },
      {
        "os_start_time": 1606077391833
      },
      {
        "os_start_time": 1606037226804
      },
      {
        "os_start_time": 1605776047044
      },
      {
        "os_start_time": 1605783641054
      },
      {
        "os_start_time": 1605878851230
      },
      {
        "os_start_time": 1606348765989
      },
      {
        "os_start_time": 1606521449967
      },
      {
        "os_start_time": 1606033146506
      },
      {
        "os_start_time": 1606162895870
      },
      {
        "os_start_time": 1606435023638
      },
      {
        "os_start_time": 1605927332613
      },
      {
        "os_start_time": 1605771932072
      },
      {
        "os_start_time": 1605937081937
      },
      {
        "os_start_time": 1605943091947
      },
      {
        "os_start_time": 1605985498367
      },
      {
        "os_start_time": 1606412692636
      },
      {
        "os_start_time": 1606419137445
      },
      {
        "os_start_time": 1606215149257
      },
      {
        "os_start_time": 1605751140499
      },
      {
        "os_start_time": 1606324685627
      },
      {
        "os_start_time": 1606441946897
      },
      {
        "os_start_time": 1606120834317
      },
      {
        "os_start_time": 1606557441875
      },
      {
        "os_start_time": 1606101460036
      },
      {
        "os_start_time": 1605984497272
      },
      {
        "os_start_time": 1606315923640
      },
      {
        "os_start_time": 1605991834539
      },
      {
        "os_start_time": 1605860494672
      },
      {
        "os_start_time": 1605889377563
      },
      {
        "os_start_time": 1605919762497
      },
      {
        "os_start_time": 1606074939467
      },
      {
        "os_start_time": 1606509717058
      },
      {
        "os_start_time": 1606505748368
      },
      {
        "os_start_time": 1606332796753
      },
      {
        "os_start_time": 1606103181359
      },
      {
        "os_start_time": 1606017770892
      },
      {
        "os_start_time": 1606237524694
      },
      {
        "os_start_time": 1606309982156
      },
      {
        "os_start_time": 1606121918490
      },
      {
        "os_start_time": 1606337607586
      },
      {
        "os_start_time": 1605909087871
      },
      {
        "os_start_time": 1606502533925
      },
      {
        "os_start_time": 1606027133512
      },
      {
        "os_start_time": 1605827853317
      },
      {
        "os_start_time": 1606124951570
      },
      {
        "os_start_time": 1605917229515
      },
      {
        "os_start_time": 1605762223148
      },
      {
        "os_start_time": 1606325465925
      },
      {
        "os_start_time": 1606213480085
      },
      {
        "os_start_time": 1606538341046
      },
      {
        "os_start_time": 1606091755723
      },
      {
        "os_start_time": 1606085610695
      },
      {
        "os_start_time": 1606130039813
      },
      {
        "os_start_time": 1606230440591
      },
      {
        "os_start_time": 1606150242420
      },
      {
        "os_start_time": 1606453363427
      },
      {
        "os_start_time": 1606359387829
      },
      {
        "os_start_time": 1606096825005
      },
      {
        "os_start_time": 1606593186035
      },
      {
        "os_start_time": 1605857321092
      },
      {
        "os_start_time": 1606062770127
      },
      {
        "os_start_time": 1605745858901
      },
      {
        "os_start_time": 1605886076706
      },
      {
        "os_start_time": 1605733628167
      },
      {
        "os_start_time": 1606399137874
      },
      {
        "os_start_time": 1606304544334
      },
      {
        "os_start_time": 1606100778776
      },
      {
        "os_start_time": 1606445213500
      },
      {
        "os_start_time": 1606425541107
      },
      {
        "os_start_time": 1606544969991
      },
      {
        "os_start_time": 1605840141019
      },
      {
        "os_start_time": 1605749374418
      },
      {
        "os_start_time": 1605908669325
      },
      {
        "os_start_time": 1606577318596
      },
      {
        "os_start_time": 1605863518884
      },
      {
        "os_start_time": 1605947938758
      },
      {
        "os_start_time": 1606416912863
      },
      {
        "os_start_time": 1606288783992
      },
      {
        "os_start_time": 1606261666921
      },
      {
        "os_start_time": 1606547907986
      },
      {
        "os_start_time": 1605968846282
      },
      {
        "os_start_time": 1605743336332
      },
      {
        "os_start_time": 1606249128455
      },
      {
        "os_start_time": 1606475966986
      },
      {
        "os_start_time": 1605778380986
      },
      {
        "os_start_time": 1605796421888
      },
      {
        "os_start_time": 1605864568697
      },
      {
        "os_start_time": 1605991656957
      },
      {
        "os_start_time": 1606453029002
      },
      {
        "os_start_time": 1605883513844
      },
      {
        "os_start_time": 1606353421320
      },
      {
        "os_start_time": 1606202201368
      },
      {
        "os_start_time": 1606338859101
      },
      {
        "os_start_time": 1606150671144
      },
      {
        "os_start_time": 1605855004251
      },
      {
        "os_start_time": 1606358651464
      },
      {
        "os_start_time": 1605861681640
      },
      {
        "os_start_time": 1606310937575
      },
      {
        "os_start_time": 1606213419447
      },
      {
        "os_start_time": 1606265755918
      },
      {
        "os_start_time": 1606356478359
      },
      {
        "os_start_time": 1606223727919
      },
      {
        "os_start_time": 1605926765676
      },
      {
        "os_start_time": 1605887894894
      },
      {
        "os_start_time": 1606381084719
      },
      {
        "os_start_time": 1606324927268
      },
      {
        "os_start_time": 1605930338768
      },
      {
        "os_start_time": 1606434680796
      },
      {
        "os_start_time": 1606222502462
      },
      {
        "os_start_time": 1606200771419
      },
      {
        "os_start_time": 1606558226590
      },
      {
        "os_start_time": 1605958938650
      },
      {
        "os_start_time": 1605739161162
      },
      {
        "os_start_time": 1606106922251
      },
      {
        "os_start_time": 1605770099677
      },
      {
        "os_start_time": 1605976896180
      },
      {
        "os_start_time": 1606057723652
      },
      {
        "os_start_time": 1605918658333
      },
      {
        "os_start_time": 1605748663343
      },
      {
        "os_start_time": 1605882109621
      },
      {
        "os_start_time": 1605805057054
      },
      {
        "os_start_time": 1605984093829
      },
      {
        "os_start_time": 1606246189029
      },
      {
        "os_start_time": 1606267348730
      },
      {
        "os_start_time": 1605947116990
      },
      {
        "os_start_time": 1606296443472
      },
      {
        "os_start_time": 1606389403605
      },
      {
        "os_start_time": 1606491472007
      },
      {
        "os_start_time": 1606409366150
      },
      {
        "os_start_time": 1605944829946
      },
      {
        "os_start_time": 1606119392108
      },
      {
        "os_start_time": 1605774391395
      },
      {
        "os_start_time": 1605955263917
      },
      {
        "os_start_time": 1606170289133
      },
      {
        "os_start_time": 1606094726852
      },
      {
        "os_start_time": 1606166157335
      },
      {
        "os_start_time": 1605808825074
      },
      {
        "os_start_time": 1605842772686
      },
      {
        "os_start_time": 1606353801621
      },
      {
        "os_start_time": 1606218605240
      },
      {
        "os_start_time": 1606442797846
      },
      {
        "os_start_time": 1606265324473
      },
      {
        "os_start_time": 1605785638930
      },
      {
        "os_start_time": 1606511394040
      },
      {
        "os_start_time": 1606524979154
      },
      {
        "os_start_time": 1605985105521
      },
      {
        "os_start_time": 1606102315452
      },
      {
        "os_start_time": 1606208604841
      },
      {
        "os_start_time": 1606309479781
      },
      {
        "os_start_time": 1606596070516
      },
      {
        "os_start_time": 1606039945108
      },
      {
        "os_start_time": 1606002923818
      },
      {
        "os_start_time": 1606069510459
      },
      {
        "os_start_time": 1606448356015
      },
      {
        "os_start_time": 1606105841526
      },
      {
        "os_start_time": 1606362866390
      },
      {
        "os_start_time": 1606076820597
      },
      {
        "os_start_time": 1606549238827
      },
      {
        "os_start_time": 1606151087775
      },
      {
        "os_start_time": 1606064099421
      },
      {
        "os_start_time": 1606394647138
      },
      {
        "os_start_time": 1606220810136
      },
      {
        "os_start_time": 1605837615282
      },
      {
        "os_start_time": 1605960448940
      },
      {
        "os_start_time": 1605965768299
      },
      {
        "os_start_time": 1606197732157
      },
      {
        "os_start_time": 1606414554643
      },
      {
        "os_start_time": 1606521376415
      },
      {
        "os_start_time": 1605799867690
      },
      {
        "os_start_time": 1605785111145
      },
      {
        "os_start_time": 1605854971646
      },
      {
        "os_start_time": 1606091027734
      },
      {
        "os_start_time": 1606177631488
      },
      {
        "os_start_time": 1606547941339
      },
      {
        "os_start_time": 1606555831123
      },
      {
        "os_start_time": 1605977003837
      },
      {
        "os_start_time": 1606367170930
      },
      {
        "os_start_time": 1606248996119
      },
      {
        "os_start_time": 1606345735696
      },
      {
        "os_start_time": 1606245590928
      },
      {
        "os_start_time": 1606218671841
      },
      {
        "os_start_time": 1605904253328
      },
      {
        "os_start_time": 1606535468096
      },
      {
        "os_start_time": 1605895751925
      },
      {
        "os_start_time": 1606004932372
      },
      {
        "os_start_time": 1606564288012
      },
      {
        "os_start_time": 1606322678262
      },
      {
        "os_start_time": 1606061994796
      },
      {
        "os_start_time": 1606201503968
      },
      {
        "os_start_time": 1605924131616
      },
      {
        "os_start_time": 1606109425931
      },
      {
        "os_start_time": 1605774779929
      },
      {
        "os_start_time": 1606148009768
      },
      {
        "os_start_time": 1606166061373
      },
      {
        "os_start_time": 1605844494219
      },
      {
        "os_start_time": 1605903007190
      },
      {
        "os_start_time": 1605737740398
      },
      {
        "os_start_time": 1606049790707
      },
      {
        "os_start_time": 1606539745730
      },
      {
        "os_start_time": 1606033617697
      },
      {
        "os_start_time": 1606381606818
      },
      {
        "os_start_time": 1606130361083
      },
      {
        "os_start_time": 1605770783316
      },
      {
        "os_start_time": 1606069063479
      },
      {
        "os_start_time": 1606027117169
      },
      {
        "os_start_time": 1605803345612
      },
      {
        "os_start_time": 1606105960454
      },
      {
        "os_start_time": 1606014423850
      },
      {
        "os_start_time": 1606318358502
      },
      {
        "os_start_time": 1606503370247
      },
      {
        "os_start_time": 1606435786560
      },
      {
        "os_start_time": 1605781003596
      },
      {
        "os_start_time": 1606594372197
      },
      {
        "os_start_time": 1605978624084
      },
      {
        "os_start_time": 1606351279788
      },
      {
        "os_start_time": 1606502085383
      },
      {
        "os_start_time": 1605874830299
      },
      {
        "os_start_time": 1606164484712
      },
      {
        "os_start_time": 1605998940519
      },
      {
        "os_start_time": 1606506803797
      },
      {
        "os_start_time": 1606380834883
      },
      {
        "os_start_time": 1606502854099
      },
      {
        "os_start_time": 1606166568640
      },
      {
        "os_start_time": 1605953815580
      },
      {
        "os_start_time": 1605872988897
      },
      {
        "os_start_time": 1605746121181
      },
      {
        "os_start_time": 1606534820324
      },
      {
        "os_start_time": 1606292775161
      },
      {
        "os_start_time": 1606341317451
      },
      {
        "os_start_time": 1606446325114
      },
      {
        "os_start_time": 1605739983888
      },
      {
        "os_start_time": 1606117945891
      },
      {
        "os_start_time": 1605877583722
      },
      {
        "os_start_time": 1605778465980
      },
      {
        "os_start_time": 1606202452982
      },
      {
        "os_start_time": 1606102455811
      },
      {
        "os_start_time": 1606154322886
      },
      {
        "os_start_time": 1606212268840
      },
      {
        "os_start_time": 1605775828609
      },
      {
        "os_start_time": 1606383926119
      },
      {
        "os_start_time": 1606045896231
      },
      {
        "os_start_time": 1605941801259
      },
      {
        "os_start_time": 1606511459583
      },
      {
        "os_start_time": 1606521289973
      },
      {
        "os_start_time": 1606505509698
      },
      {
        "os_start_time": 1606558436102
      },
      {
        "os_start_time": 1605836294025
      },
      {
        "os_start_time": 1606473720786
      },
      {
        "os_start_time": 1606252495547
      },
      {
        "os_start_time": 1606299517286
      },
      {
        "os_start_time": 1605739474198
      },
      {
        "os_start_time": 1606165005002
      },
      {
        "os_start_time": 1606334100620
      },
      {
        "os_start_time": 1606235354146
      },
      {
        "os_start_time": 1606411526915
      },
      {
        "os_start_time": 1606369750373
      },
      {
        "os_start_time": 1605850332113
      },
      {
        "os_start_time": 1606211397112
      },
      {
        "os_start_time": 1606504329828
      },
      {
        "os_start_time": 1606037980965
      },
      {
        "os_start_time": 1606418083834
      },
      {
        "os_start_time": 1606214537379
      },
      {
        "os_start_time": 1605753281643
      },
      {
        "os_start_time": 1605800191315
      },
      {
        "os_start_time": 1606343616330
      },
      {
        "os_start_time": 1606537350071
      },
      {
        "os_start_time": 1606357843681
      },
      {
        "os_start_time": 1605830301530
      },
      {
        "os_start_time": 1606499586681
      },
      {
        "os_start_time": 1606539790334
      },
      {
        "os_start_time": 1606197436795
      },
      {
        "os_start_time": 1606280076358
      },
      {
        "os_start_time": 1606107907222
      },
      {
        "os_start_time": 1606186571791
      },
      {
        "os_start_time": 1606541811468
      },
      {
        "os_start_time": 1606477303636
      },
      {
        "os_start_time": 1605888194683
      },
      {
        "os_start_time": 1605872455402
      },
      {
        "os_start_time": 1605750213825
      },
      {
        "os_start_time": 1605989508744
      },
      {
        "os_start_time": 1605870570633
      },
      {
        "os_start_time": 1606564433162
      },
      {
        "os_start_time": 1606080628622
      },
      {
        "os_start_time": 1606556464553
      },
      {
        "os_start_time": 1606149096744
      },
      {
        "os_start_time": 1606083941004
      },
      {
        "os_start_time": 1606458043415
      },
      {
        "os_start_time": 1606272023272
      },
      {
        "os_start_time": 1606159796168
      },
      {
        "os_start_time": 1606354566714
      },
      {
        "os_start_time": 1606379604820
      },
      {
        "os_start_time": 1606552393527
      },
      {
        "os_start_time": 1606395958221
      },
      {
        "os_start_time": 1606400540963
      },
      {
        "os_start_time": 1605890991089
      },
      {
        "os_start_time": 1606160558204
      },
      {
        "os_start_time": 1606489825112
      },
      {
        "os_start_time": 1605879666989
      },
      {
        "os_start_time": 1605914083939
      },
      {
        "os_start_time": 1606043894348
      },
      {
        "os_start_time": 1606155664319
      },
      {
        "os_start_time": 1606088915886
      },
      {
        "os_start_time": 1605791382415
      },
      {
        "os_start_time": 1605822530816
      },
      {
        "os_start_time": 1606191801047
      },
      {
        "os_start_time": 1605908141998
      },
      {
        "os_start_time": 1606172821377
      },
      {
        "os_start_time": 1606163469379
      },
      {
        "os_start_time": 1606496865720
      },
      {
        "os_start_time": 1606360078580
      },
      {
        "os_start_time": 1606286373649
      },
      {
        "os_start_time": 1606108908920
      },
      {
        "os_start_time": 1606329113762
      },
      {
        "os_start_time": 1606423286480
      },
      {
        "os_start_time": 1606492970245
      },
      {
        "os_start_time": 1606355239126
      },
      {
        "os_start_time": 1606119865049
      },
      {
        "os_start_time": 1606492907999
      },
      {
        "os_start_time": 1606345098291
      },
      {
        "os_start_time": 1606410075532
      },
      {
        "os_start_time": 1606074399064
      },
      {
        "os_start_time": 1606348711515
      },
      {
        "os_start_time": 1605781347423
      },
      {
        "os_start_time": 1606310998826
      },
      {
        "os_start_time": 1605999635707
      },
      {
        "os_start_time": 1606342743576
      },
      {
        "os_start_time": 1606480885701
      },
      {
        "os_start_time": 1606061865308
      },
      {
        "os_start_time": 1606077090668
      },
      {
        "os_start_time": 1606034934021
      },
      {
        "os_start_time": 1605745387275
      },
      {
        "os_start_time": 1605870370321
      },
      {
        "os_start_time": 1605768570193
      },
      {
        "os_start_time": 1606188813171
      },
      {
        "os_start_time": 1606542808239
      },
      {
        "os_start_time": 1605855544380
      },
      {
        "os_start_time": 1606035666344
      },
      {
        "os_start_time": 1605906891993
      },
      {
        "os_start_time": 1606399902658
      },
      {
        "os_start_time": 1606212470917
      },
      {
        "os_start_time": 1606101559056
      },
      {
        "os_start_time": 1606294392282
      },
      {
        "os_start_time": 1606169271622
      },
      {
        "os_start_time": 1606315254653
      },
      {
        "os_start_time": 1605874149204
      },
      {
        "os_start_time": 1606266123059
      },
      {
        "os_start_time": 1605846674207
      },
      {
        "os_start_time": 1605985569981
      },
      {
        "os_start_time": 1605939802788
      },
      {
        "os_start_time": 1606276832790
      },
      {
        "os_start_time": 1606106984891
      },
      {
        "os_start_time": 1605952541303
      },
      {
        "os_start_time": 1606571701742
      },
      {
        "os_start_time": 1605913057802
      },
      {
        "os_start_time": 1606276558108
      },
      {
        "os_start_time": 1606390179675
      },
      {
        "os_start_time": 1606405949152
      },
      {
        "os_start_time": 1605871260840
      },
      {
        "os_start_time": 1605947605453
      },
      {
        "os_start_time": 1606332543328
      },
      {
        "os_start_time": 1606249303593
      },
      {
        "os_start_time": 1606578268553
      },
      {
        "os_start_time": 1606368271856
      },
      {
        "os_start_time": 1605983864499
      },
      {
        "os_start_time": 1606157752641
      },
      {
        "os_start_time": 1606160525513
      },
      {
        "os_start_time": 1606130933299
      },
      {
        "os_start_time": 1605770656856
      },
      {
        "os_start_time": 1606115233406
      },
      {
        "os_start_time": 1605843314364
      },
      {
        "os_start_time": 1606060060876
      },
      {
        "os_start_time": 1606243562895
      },
      {
        "os_start_time": 1606253693740
      },
      {
        "os_start_time": 1605804495544
      },
      {
        "os_start_time": 1606418787060
      },
      {
        "os_start_time": 1606372473250
      },
      {
        "os_start_time": 1606028810521
      },
      {
        "os_start_time": 1606504607464
      },
      {
        "os_start_time": 1606473465610
      },
      {
        "os_start_time": 1605773499395
      },
      {
        "os_start_time": 1606385589568
      },
      {
        "os_start_time": 1606502677737
      },
      {
        "os_start_time": 1606222403036
      },
      {
        "os_start_time": 1606556119955
      },
      {
        "os_start_time": 1606231088723
      },
      {
        "os_start_time": 1606526988956
      },
      {
        "os_start_time": 1605891207665
      },
      {
        "os_start_time": 1606529898456
      },
      {
        "os_start_time": 1606229251220
      },
      {
        "os_start_time": 1605834570436
      },
      {
        "os_start_time": 1606587919672
      },
      {
        "os_start_time": 1606166649591
      },
      {
        "os_start_time": 1606183733658
      },
      {
        "os_start_time": 1605777820563
      },
      {
        "os_start_time": 1606078345478
      },
      {
        "os_start_time": 1606225073325
      },
      {
        "os_start_time": 1605861747160
      },
      {
        "os_start_time": 1606269281286
      },
      {
        "os_start_time": 1606226580177
      },
      {
        "os_start_time": 1606457159734
      },
      {
        "os_start_time": 1606142872749
      },
      {
        "os_start_time": 1606524770576
      },
      {
        "os_start_time": 1606015776590
      },
      {
        "os_start_time": 1605935901400
      },
      {
        "os_start_time": 1606212422128
      },
      {
        "os_start_time": 1605823578570
      },
      {
        "os_start_time": 1605875630281
      },
      {
        "os_start_time": 1606164303013
      },
      {
        "os_start_time": 1605809722079
      },
      {
        "os_start_time": 1605858785615
      },
      {
        "os_start_time": 1605748425578
      },
      {
        "os_start_time": 1606562928040
      },
      {
        "os_start_time": 1606412808259
      },
      {
        "os_start_time": 1605814399320
      },
      {
        "os_start_time": 1606329077383
      },
      {
        "os_start_time": 1606376914638
      },
      {
        "os_start_time": 1606088370062
      },
      {
        "os_start_time": 1606130647704
      },
      {
        "os_start_time": 1605981836520
      },
      {
        "os_start_time": 1606199919575
      },
      {
        "os_start_time": 1605819003389
      },
      {
        "os_start_time": 1605860851438
      },
      {
        "os_start_time": 1605828106422
      },
      {
        "os_start_time": 1606497432061
      },
      {
        "os_start_time": 1605809554564
      },
      {
        "os_start_time": 1606150289284
      },
      {
        "os_start_time": 1606407100778
      },
      {
        "os_start_time": 1605823125615
      },
      {
        "os_start_time": 1606285418569
      },
      {
        "os_start_time": 1606435199860
      },
      {
        "os_start_time": 1605733839806
      },
      {
        "os_start_time": 1605736247270
      },
      {
        "os_start_time": 1606024226621
      },
      {
        "os_start_time": 1606295808755
      },
      {
        "os_start_time": 1606548267639
      },
      {
        "os_start_time": 1605839688141
      },
      {
        "os_start_time": 1606369304486
      },
      {
        "os_start_time": 1606590969221
      },
      {
        "os_start_time": 1606322374992
      },
      {
        "os_start_time": 1606416477003
      },
      {
        "os_start_time": 1605943057832
      },
      {
        "os_start_time": 1606498808928
      },
      {
        "os_start_time": 1605938466427
      },
      {
        "os_start_time": 1605934447639
      },
      {
        "os_start_time": 1606246277265
      },
      {
        "os_start_time": 1606439152459
      },
      {
        "os_start_time": 1606344862129
      },
      {
        "os_start_time": 1605898703706
      },
      {
        "os_start_time": 1605796037559
      },
      {
        "os_start_time": 1606052726513
      },
      {
        "os_start_time": 1606504773834
      },
      {
        "os_start_time": 1606263275735
      },
      {
        "os_start_time": 1605987370753
      },
      {
        "os_start_time": 1605960496161
      },
      {
        "os_start_time": 1606590413700
      },
      {
        "os_start_time": 1605780059244
      },
      {
        "os_start_time": 1606578869052
      },
      {
        "os_start_time": 1606142627785
      },
      {
        "os_start_time": 1605978119792
      },
      {
        "os_start_time": 1606474750274
      },
      {
        "os_start_time": 1606006269551
      },
      {
        "os_start_time": 1606455955973
      },
      {
        "os_start_time": 1606593210472
      },
      {
        "os_start_time": 1606433614823
      },
      {
        "os_start_time": 1605851213114
      },
      {
        "os_start_time": 1606346795048
      },
      {
        "os_start_time": 1605737043342
      },
      {
        "os_start_time": 1606381877007
      },
      {
        "os_start_time": 1606268090947
      },
      {
        "os_start_time": 1605956391131
      },
      {
        "os_start_time": 1606082256326
      },
      {
        "os_start_time": 1606525381175
      },
      {
        "os_start_time": 1606338053609
      },
      {
        "os_start_time": 1606457481795
      },
      {
        "os_start_time": 1606320683739
      },
      {
        "os_start_time": 1605877955734
      },
      {
        "os_start_time": 1606027277011
      },
      {
        "os_start_time": 1605967113754
      },
      {
        "os_start_time": 1606169181213
      },
      {
        "os_start_time": 1605912892202
      },
      {
        "os_start_time": 1606507762849
      },
      {
        "os_start_time": 1605897809339
      },
      {
        "os_start_time": 1606195808299
      },
      {
        "os_start_time": 1606578466849
      },
      {
        "os_start_time": 1606290864884
      },
      {
        "os_start_time": 1606443167810
      },
      {
        "os_start_time": 1606326771079
      },
      {
        "os_start_time": 1606499924451
      },
      {
        "os_start_time": 1606228687624
      },
      {
        "os_start_time": 1606202365711
      },
      {
        "os_start_time": 1606230637126
      },
      {
        "os_start_time": 1606043983334
      },
      {
        "os_start_time": 1606103723898
      },
      {
        "os_start_time": 1605910786793
      },
      {
        "os_start_time": 1606165204448
      },
      {
        "os_start_time": 1606200665756
      },
      {
        "os_start_time": 1605826104298
      },
      {
        "os_start_time": 1606330133273
      },
      {
        "os_start_time": 1606417967212
      },
      {
        "os_start_time": 1606392879661
      },
      {
        "os_start_time": 1606097587112
      },
      {
        "os_start_time": 1606017072779
      },
      {
        "os_start_time": 1606546235053
      },
      {
        "os_start_time": 1605922409659
      },
      {
        "os_start_time": 1606515297987
      },
      {
        "os_start_time": 1606369321974
      },
      {
        "os_start_time": 1606068074390
      },
      {
        "os_start_time": 1606111689902
      },
      {
        "os_start_time": 1605861004846
      },
      {
        "os_start_time": 1605819230148
      },
      {
        "os_start_time": 1606465453760
      },
      {
        "os_start_time": 1606279030267
      },
      {
        "os_start_time": 1606180659858
      },
      {
        "os_start_time": 1606497538778
      },
      {
        "os_start_time": 1606552043329
      },
      {
        "os_start_time": 1605975276924
      },
      {
        "os_start_time": 1606436093552
      },
      {
        "os_start_time": 1605757729022
      },
      {
        "os_start_time": 1605927251378
      },
      {
        "os_start_time": 1605754019090
      },
      {
        "os_start_time": 1606595490700
      },
      {
        "os_start_time": 1606013618090
      },
      {
        "os_start_time": 1605884017318
      },
      {
        "os_start_time": 1606189645007
      },
      {
        "os_start_time": 1606058339592
      },
      {
        "os_start_time": 1606260019759
      },
      {
        "os_start_time": 1605859531335
      },
      {
        "os_start_time": 1605931509341
      },
      {
        "os_start_time": 1606387872571
      },
      {
        "os_start_time": 1606433876975
      },
      {
        "os_start_time": 1605934770830
      },
      {
        "os_start_time": 1605889361043
      },
      {
        "os_start_time": 1606022400482
      },
      {
        "os_start_time": 1606154065271
      },
      {
        "os_start_time": 1605740864679
      },
      {
        "os_start_time": 1605917925778
      },
      {
        "os_start_time": 1606371704288
      },
      {
        "os_start_time": 1606458437109
      },
      {
        "os_start_time": 1606205714787
      },
      {
        "os_start_time": 1606453695683
      },
      {
        "os_start_time": 1606113823495
      },
      {
        "os_start_time": 1606188432581
      },
      {
        "os_start_time": 1605769556759
      },
      {
        "os_start_time": 1605929001595
      },
      {
        "os_start_time": 1606394209855
      },
      {
        "os_start_time": 1605907598237
      },
      {
        "os_start_time": 1606565749617
      },
      {
        "os_start_time": 1606004539268
      },
      {
        "os_start_time": 1606487379165
      },
      {
        "os_start_time": 1606482223094
      },
      {
        "os_start_time": 1605906591228
      },
      {
        "os_start_time": 1605867182488
      },
      {
        "os_start_time": 1606547756864
      },
      {
        "os_start_time": 1605857581544
      },
      {
        "os_start_time": 1606009759330
      },
      {
        "os_start_time": 1606016018268
      },
      {
        "os_start_time": 1606351547652
      },
      {
        "os_start_time": 1606190110870
      },
      {
        "os_start_time": 1606007698781
      },
      {
        "os_start_time": 1606401800292
      },
      {
        "os_start_time": 1605956241225
      },
      {
        "os_start_time": 1606326767825
      },
      {
        "os_start_time": 1606262874742
      },
      {
        "os_start_time": 1606541913859
      },
      {
        "os_start_time": 1606432622665
      },
      {
        "os_start_time": 1605773381383
      },
      {
        "os_start_time": 1605874946086
      },
      {
        "os_start_time": 1606299390577
      },
      {
        "os_start_time": 1605984006225
      },
      {
        "os_start_time": 1606047228276
      },
      {
        "os_start_time": 1606291957438
      },
      {
        "os_start_time": 1605805166779
      },
      {
        "os_start_time": 1606554025278
      },
      {
        "os_start_time": 1606090064791
      },
      {
        "os_start_time": 1606176887182
      },
      {
        "os_start_time": 1606311485869
      },
      {
        "os_start_time": 1605905859815
      },
      {
        "os_start_time": 1605830228918
      },
      {
        "os_start_time": 1606194836937
      },
      {
        "os_start_time": 1606484285264
      },
      {
        "os_start_time": 1606563681841
      },
      {
        "os_start_time": 1606552783108
      },
      {
        "os_start_time": 1606465541398
      },
      {
        "os_start_time": 1605905669832
      },
      {
        "os_start_time": 1605893596292
      },
      {
        "os_start_time": 1606593892523
      },
      {
        "os_start_time": 1606076435531
      },
      {
        "os_start_time": 1606306136165
      },
      {
        "os_start_time": 1605829126756
      },
      {
        "os_start_time": 1606487813140
      },
      {
        "os_start_time": 1606491489673
      },
      {
        "os_start_time": 1606411933535
      },
      {
        "os_start_time": 1606101743380
      },
      {
        "os_start_time": 1606557691867
      },
      {
        "os_start_time": 1606402799779
      },
      {
        "os_start_time": 1606329228337
      },
      {
        "os_start_time": 1605870791872
      },
      {
        "os_start_time": 1606484134956
      },
      {
        "os_start_time": 1606448445131
      },
      {
        "os_start_time": 1606590203712
      },
      {
        "os_start_time": 1606054781424
      },
      {
        "os_start_time": 1606407330193
      },
      {
        "os_start_time": 1606464597093
      },
      {
        "os_start_time": 1606059504377
      },
      {
        "os_start_time": 1605821683374
      },
      {
        "os_start_time": 1606261013413
      },
      {
        "os_start_time": 1605816458772
      },
      {
        "os_start_time": 1606057668263
      },
      {
        "os_start_time": 1606021288450
      },
      {
        "os_start_time": 1606207793332
      },
      {
        "os_start_time": 1606582364621
      },
      {
        "os_start_time": 1605891752635
      },
      {
        "os_start_time": 1606052908243
      },
      {
        "os_start_time": 1606117958452
      },
      {
        "os_start_time": 1606300204712
      },
      {
        "os_start_time": 1606381153078
      },
      {
        "os_start_time": 1606446777839
      },
      {
        "os_start_time": 1606501745738
      },
      {
        "os_start_time": 1606126270892
      },
      {
        "os_start_time": 1605959788320
      },
      {
        "os_start_time": 1606236059472
      }
    ]
  },
  {
    "question": "What's the disk size for the type with id 3?",
    "cypher": "MATCH (t:Type {id: 3}) RETURN t.disk AS type_disk_size",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "type_disk_size": 125
      }
    ],
    "answer": "The disk size for the type with id 3 is 125."
  },
  {
    "question": "What is the IP of the switch '10.1.10'?",
    "cypher": "MATCH (s:Switch {ip: '10.1.10'}) RETURN s.ip AS switch_ip",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "switch_ip": "10.1.10"
      }
    ],
    "answer": "The IP of the switch '10.1.10' is 10.1.10."
  },
  {
    "question": "Wheres the DC1 datacenter located?",
    "cypher": "MATCH (d:DataCenter {name: 'DC1'}) RETURN d.location AS datacenter_location",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "DC1 datacenter is located in Reykjavik, Iceland."
  },
  {
    "question": "How many machines are held in rack 'DC1-RCK-1-1'?",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-1-1'})-[:HOLDS]->(m:Machine) RETURN COUNT(m) AS machine_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_count": 200
      }
    ],
    "answer": "Rack 'DC1-RCK-1-1' holds 200 machines."
  },
  {
    "question": "whats the OS on machine DC1-RCK-1-1-M-1?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(os:OS) RETURN os.name AS os_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "os_name": "7.1"
      }
    ],
    "answer": "The OS on machine DC1-RCK-1-1-M-1 is 7.1."
  },
  {
    "question": "What port does the 'webserver' application with PID 8966 listen on?",
    "cypher": "MATCH (:Application {name: 'webserver', pid: 8966})-[:LISTENS]->(p:Port) RETURN p.port AS listening_port",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "listening_port": 443
      },
      {
        "listening_port": 80
      }
    ]
  },
  {
    "question": "How many racks are contained in the DC1 datacenter?",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack) RETURN COUNT(r) AS rack_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "rack_count": 40
      }
    ],
    "answer": "The DC1 datacenter contains 40 racks."
  },
  {
    "question": "What is the name of the software that the 'cms' application with PID 5521 is an instance of?",
    "cypher": "MATCH (:Application {name: 'cms', pid: 5521})-[:INSTANCE]->(s:Software) RETURN s.name AS software_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "software_name": "cms"
      }
    ],
    "answer": "The software name is 'cms'."
  },
  {
    "question": "How many software dependencies does the 'cms' application have?",
    "cypher": "MATCH (s:Software {name: 'cms'})-[:DEPENDS_ON]->(dep:Software) RETURN COUNT(dep) AS dependency_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "dependency_count": 3
      }
    ],
    "answer": "The 'cms' application has 3 software dependencies."
  },
  {
    "question": "Give me an IP address routed by router 'DC1-R-1'.",
    "cypher": "MATCH (:Router {name: 'DC1-R-1'})-[:ROUTES]->(i:Interface) RETURN i.ip AS interface_ip LIMIT 1",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "interface_ip": "10.1.0.254"
      }
    ],
    "answer": "10.1.0.254"
  },
  {
    "question": "How many applications is the machine 'DC1-RCK-4-2-M-174' running?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-4-2-M-174'})-[:RUNS]->(a:Application) RETURN COUNT(a) AS running_apps_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "running_apps_count": 1
      }
    ],
    "answer": "The machine 'DC1-RCK-4-2-M-174' is running 1 application."
  },
  {
    "question": "What is the name of the previous version of RHEL version '7.2'?",
    "cypher": "MATCH (:Version {name: '7.2'})-[:PREVIOUS]->(v:Version) RETURN v.name AS previous_version_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "previous_version_name": "7.1"
      }
    ],
    "answer": "The previous version of RHEL 7.2 is 7.1."
  },
  {
    "question": "How many routers are in the DC1 datacenter?",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Router) RETURN COUNT(r) AS router_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "router_count": 5
      }
    ],
    "answer": "There are 5 routers in the DC1 datacenter."
  },
  {
    "question": "What is the name of the machine type for 'DC1-RCK-4-2-M-174'?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-4-2-M-174'})-[:TYPE]->(t:Type) RETURN t.name AS machine_type_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_type_name": "m-4/16/25"
      }
    ],
    "answer": "The machine type for 'DC1-RCK-4-2-M-174' is 'm-4/16/25'."
  },
  {
    "question": "Count the number of services that the 'webapp' program depends on.",
    "cypher": "MATCH (:Application {name: 'webapp'})-[:DEPENDS_ON]->(s:Service) RETURN COUNT(s) AS service_dependency_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "service_dependency_count": 3178
      }
    ],
    "answer": "The 'webapp' program depends on 3,178 services."
  },
  {
    "question": "How many interfaces does the DC1-RE egress router routes?",
    "cypher": "MATCH (:Egress {name: 'DC1-RE'})-[:ROUTES]->(i:Interface) RETURN COUNT(i) AS interface_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "grammar",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "interface_count": 1
      }
    ],
    "answer": "The DC1-RE egress router routes 1 interface."
  },
  {
    "question": "Which OS is running on the box 'DC1-RCK-4-9-M-103'?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-4-9-M-103'})-[:RUNS]->(os:OS) RETURN os.name AS os_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "os_name": "7-Wheezy"
      }
    ],
    "answer": "The OS running on the box 'DC1-RCK-4-9-M-103' is 7-Wheezy."
  },
  {
    "question": "What's the version name for the 'java' softare?",
    "cypher": "MATCH (:Software {name: 'java'})-[:VERSION]->(v:Version) RETURN v.name AS version_name LIMIT 1",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "version_name": "8"
      }
    ],
    "answer": "The version name for 'java' is '8'."
  },
  {
    "question": "Find the name of the software that the 'postgres' service with version '9.4' is an instance of.",
    "cypher": "MATCH (:Service {name: 'postgres', version: '9.4'})-[:INSTANCE]->(s:Software) RETURN s.name AS software_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Total interfaces connected to '10.0.0.254'?",
    "cypher": "MATCH (:Interface {ip: '10.0.0.254'})-[:CONNECTS]->(i:Interface) RETURN COUNT(i) AS connection_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_count": 0
      }
    ],
    "answer": "0 interfaces are connected to '10.0.0.254'."
  },
  {
    "question": "In which datacenter is the rack 'DC1-RCK-4-2' located?",
    "cypher": "MATCH (d:DataCenter)-[:CONTAINS]->(:Rack {name: 'DC1-RCK-4-2'}) RETURN d.name AS datacenter_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_name": "DC1"
      }
    ],
    "answer": "The rack 'DC1-RCK-4-2' is located in the datacenter 'DC1'."
  },
  {
    "question": "Which rack holds the 'DC1-RCK-4-2-M-17' machine?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(:Machine {name: 'DC1-RCK-4-2-M-174'}) RETURN r.name AS rack_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "rack_name": "DC1-RCK-4-2"
      }
    ],
    "answer": "The machine 'DC1-RCK-4-2-M-174' is held in the rack 'DC1-RCK-4-2'."
  },
  {
    "question": "How many apps run on machines in rack DC1-RCK-1-1?",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-1-1'})-[:HOLDS]->(:Machine)-[:RUNS]->(a:Application) RETURN COUNT(a) AS total_applications",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_applications": 200
      }
    ],
    "answer": "200 apps run on machines in rack DC1-RCK-1-1."
  },
  {
    "question": "What is the location of the datacenter that contains machine 'DC1-RCK-1-1-M-1'?",
    "cypher": "MATCH (d:DataCenter)-[:CONTAINS]->(:Rack)-[:HOLDS]->(:Machine {name: 'DC1-RCK-1-1-M-1'}) RETURN d.location AS datacenter_location",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The datacenter containing machine 'DC1-RCK-1-1-M-1' is located in Reykjavik, Iceland."
  },
  {
    "question": "What is the PID of the 'cms' application that runs on machine 'DC1-RCK-4-2-M-174'?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-4-2-M-174'})-[:RUNS]->(a:Application {name: 'cms'}) RETURN a.pid AS application_pid",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "application_pid": 5521
      }
    ],
    "answer": "The PID of the 'cms' application running on machine 'DC1-RCK-4-2-M-174' is 5521."
  },
  {
    "question": "What is the IP of an interface exposed for the 'webserver' application (pid 8966)?",
    "cypher": "MATCH (:Application {name: 'webserver', pid: 8966})-[:LISTENS]->(:Port)<-[:EXPOSES]-(i:Interface) RETURN i.ip AS interface_ip LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "interface_ip": "10.1.1.1"
      }
    ],
    "answer": "The IP of the interface exposed for the 'webserver' application (pid 8966) is 10.1.1.1."
  },
  {
    "question": "What's the RAM for the type of the 'DC1-RCK-1-1-M-1' server?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-1-1-M-1'})-[:TYPE]->(t:Type) RETURN t.ram AS machine_type_ram",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_type_ram": 1
      }
    ],
    "answer": "The RAM for the type of the 'DC1-RCK-1-1-M-1' server is 1."
  },
  {
    "question": "How many machines in total are there in the DC1 datacenter?",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(:Rack)-[:HOLDS]->(m:Machine) RETURN COUNT(m) AS total_machines",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_machines": 8000
      }
    ],
    "answer": "There are 8,000 machines in the DC1 datacenter."
  },
  {
    "question": "What is the name of a software that the 'cms' application instance (pid 5521) depends on?",
    "cypher": "MATCH (:Application {name: 'cms', pid: 5521})-[:INSTANCE]->(:Software)-[:DEPENDS_ON]->(s:Software) RETURN s.name AS dependency_name LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "dependency_name": "couchbase"
      }
    ],
    "answer": "The software that the 'cms' application instance depends on is Couchbase."
  },
  {
    "question": "Find the IP of a switch in the same rack as machine DC1-RCK-1-1M-1.",
    "cypher": "MATCH (s:Switch)-[:HOLDS]-(:Rack)-[:HOLDS]->(:Machine {name: 'DC1-RCK-1-1-M-1'}) RETURN s.ip AS switch_ip LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "switch_ip": "10.1.1"
      }
    ],
    "answer": "The IP of the switch in the same rack as machine DC1-RCK-1-1M-1 is 10.1.1."
  },
  {
    "question": "How many services does the webserver app depend on?",
    "cypher": "MATCH (:Application {name: 'webserver'})-[:DEPENDS_ON]->(s:Service) RETURN COUNT(s) AS service_dependency_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "service_dependency_count": 1658
      }
    ],
    "answer": "The webserver app depends on 1,658 services."
  },
  {
    "question": "What's the location of the DC that holds the 'DC1-R-1' router?",
    "cypher": "MATCH (d:DataCenter)-[:CONTAINS]->(:Router {name: 'DC1-R-1'}) RETURN d.location AS datacenter_location",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The DC that holds the 'DC1-R-1' router is located in Iceland, Rekjavik."
  },
  {
    "question": "Find the name of the datacenter containing the machine 'DC1-RCK-2-9-M-90'.",
    "cypher": "MATCH (d:DataCenter)-[:CONTAINS]->(:Rack)-[:HOLDS]->(:Machine {name: 'DC1-RCK-2-9-M-90'}) RETURN d.name AS datacenter_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_name": "DC1"
      }
    ],
    "answer": "The machine 'DC1-RCK-2-9-M-90' is located in the datacenter named 'DC1'."
  },
  {
    "question": "What is the rack number for the switch with IP '10.4.8'?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(:Switch {ip: '10.4.8'}) RETURN r.rack AS rack_number",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "rack_number": 8
      }
    ],
    "answer": "The rack number for the switch with IP '10.4.8' is 8."
  },
  {
    "question": "What's the name of the software that the '9.4' process (pid 7211) is an instance of?",
    "cypher": "MATCH (:Process {name: '9.4', pid: 7211})-[:INSTANCE]->(s:Software) RETURN s.name AS software_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many machines are in the same rack as switch '10.1.1'?",
    "cypher": "MATCH (m:Machine)-[:HOLDS]-(:Rack)-[:HOLDS]->(:Switch {ip: '10.1.1'}) RETURN COUNT(m) AS machine_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_count": 200
      }
    ],
    "answer": "There are 200 machines in the same rack as switch '10.1.1'."
  },
  {
    "question": "How many machines in datacenter DC1 are running applications that depend on the 'java' software?",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(:Rack)-[:HOLDS]->(m:Machine)-[:RUNS]->(:Application)-[:DEPENDS_ON]->(:Software {name: 'java'}) RETURN count(DISTINCT m) AS machine_count",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_count": 0
      }
    ],
    "answer": "0 machines in datacenter DC1 are running applications that depend on the 'java' software."
  },
  {
    "question": "What is the location of the data center that contains machine 'DC1-RCK-2-9-M-90'?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(:Rack)-[:HOLDS]->(:Machine {name: 'DC1-RCK-2-9-M-90'}) RETURN dc.location AS datacenter_location",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The data center containing machine 'DC1-RCK-2-9-M-90' is located in Rekjavik, Iceland."
  },
  {
    "question": "Which machine in zone 1 running the 'webserver' application has the most CPU cores? Return its name.",
    "cypher": "MATCH (:Rack {zone: 1})-[:HOLDS]->(m:Machine)-[:RUNS]->(:Application {name: 'webserver'}), (m)-[:TYPE]->(t:Type) WHERE t.cpu IS NOT NULL RETURN m.name AS top_cpu_machine ORDER BY t.cpu DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_cpu_machine": "DC1-RCK-1-6-M-200"
      }
    ],
    "answer": "The machine with the most CPU cores in zone 1 running the 'webserver' application is DC1-RCK-1-6-M-200."
  },
  {
    "question": "How many distinct software packages does the 'cms' application instance on machine 'DC1-RCK-4-2-M-174' depend on?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-4-2-M-174'})-[:RUNS]->(app:Application {name: 'cms'})-[:INSTANCE]->(sw_instance:Software)-[:DEPENDS_ON]->(dep:Software) RETURN count(DISTINCT dep) AS dependency_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "dependency_count": 3
      }
    ],
    "answer": "The 'cms' application instance on machine 'DC1-RCK-4-2-M-174' depends on 3 distinct software packages."
  },
  {
    "question": "What's the total disk capacity for all boxes in rack DC1-RCK-1-1 that run the REHL operating system?",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-1-1'})-[:HOLDS]->(m:Machine)-[:RUNS]->(:OS {name: 'RHEL'}), (m)-[:TYPE]->(t:Type) WHERE t.disk IS NOT NULL RETURN sum(t.disk) AS total_disk_capacity",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism, typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_disk_capacity": 0
      }
    ],
    "answer": "The total disk capacity for machines in rack DC1-RCK-1-1 running RHEL is 0, which could mean either no machines match the criteria or the disk capacity data is not available."
  },
  {
    "question": "Find the IP address for the switch that routes traffic for the interface '10.1.10.254' within network '10.1'.",
    "cypher": "MATCH (n:Network {ip: '10.1'})-[:ROUTES]->(i:Interface {ip: '10.1.10.254'})<-[:ROUTES]-(s:Switch) RETURN s.ip AS switch_ip",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "switch_ip": "10.1.10"
      }
    ],
    "answer": "The switch IP address for the interface '10.1.10.254' within network '10.1' is 10.1.10."
  },
  {
    "question": "What is the earliest start time among all 'webapp' processes running on machines in zone 2?",
    "cypher": "MATCH (:Rack {zone: 2})-[:HOLDS]->(:Machine)-[:RUNS]->(p:Process {name: 'webapp'}) WHERE p.startTime IS NOT NULL RETURN min(p.startTime) AS earliest_start_time",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "earliest_start_time": 1606173022052
      }
    ],
    "answer": "The earliest start time for 'webapp' processes running on machines in zone 2 is 1606173022052 (Unix timestamp)."
  },
  {
    "question": "How many network hops are there on the shortest path between the router 'DC1-R-1' and the machine 'DC1-RCK-1-1-M-1'?",
    "cypher": "MATCH path = shortestPath((r:Router {name: 'DC1-R-1'})-[*]->(m:Machine {name: 'DC1-RCK-1-1-M-1'})) RETURN length(path) AS connection_length",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the average amount of RAM for machines located in rack 'DC1-RCK-4-9'?",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-4-9'})-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type) WHERE t.ram IS NOT NULL RETURN avg(t.ram) AS average_ram",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_ram": 25.659999999999993
      }
    ],
    "answer": "Based on the query result, the average amount of RAM for machines located in rack 'DC1-RCK-4-9' is approximately 25.66 GB."
  },
  {
    "question": "What's the OS name on the host 'DC1-RCK-4-2-M-174' that's running the cms app?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-4-2-M-174'})-[:RUNS]->(os:OS), (:Machine {name: 'DC1-RCK-4-2-M-174'})-[:RUNS]->(:Application {name: 'cms'}) RETURN os.name AS operating_system",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "operating_system": "8-Jessie"
      }
    ],
    "answer": "The operating system on the host 'DC1-RCK-4-2-M-174' running the cms app is 8-Jessie."
  },
  {
    "question": "Which software version is the immediate predecessor to version '7.3' of the 'RHEL' software?",
    "cypher": "MATCH (:Software {name: 'RHEL'})-[:VERSION]->(v1:Version {name: '7.3'})-[:PREVIOUS]->(v2:Version) RETURN v2.name AS previous_version",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "previous_version": "7.2"
      }
    ],
    "answer": "The immediate predecessor to RHEL version 7.3 is version 7.2."
  },
  {
    "question": "What's the name of the rack with the most machines in datacenter DC1?",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine) WITH r, count(m) AS machineCount RETURN r.name AS busiest_rack ORDER BY machineCount DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "busiest_rack": "DC1-RCK-4-9"
      }
    ],
    "answer": "The rack with the most machines in datacenter DC1 is DC1-RCK-4-9."
  },
  {
    "question": "Count how many services are listening on ports exposed by interfaces on machine 'DC1-RCK-1-1-M-1'.",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-1-1-M-1'})-[:ROUTES]->(:Interface)-[:EXPOSES]->(p:Port)<-[:LISTENS]-(s:Service) RETURN count(DISTINCT s) AS listening_service_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "listening_service_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 services listening on ports exposed by interfaces on machine 'DC1-RCK-1-1-M-1'."
  },
  {
    "question": "How many aplications are running on machines that have an OS which is an instance of RHEL version 7.1?",
    "cypher": "MATCH (v:Version {name: '7.1'})<-[:INSTANCE]-(:OS)<-[:RUNS]-(:Machine)-[:RUNS]->(app:Application) WHERE v.name CONTAINS '7.1' AND (:Software {name:'RHEL'})-[:VERSION]->(v) RETURN count(app) AS total_applications",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_applications": 820
      }
    ],
    "answer": "820 applications are running on machines with Red Hat Enterprise Linux (RHEL) version 7.1."
  },
  {
    "question": "What is the PID of the 'webserver' application running on machine DC1-RCK-1-1-M-1?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(app:Application {name: 'webserver'}) RETURN app.pid AS application_pid",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "application_pid": 8966
      }
    ],
    "answer": "The PID of the 'webserver' application running on machine DC1-RCK-1-1-M-1 is 8966."
  },
  {
    "question": "Find the highest port number used by any application that depends on the 'neo4j' service.",
    "cypher": "MATCH (app:Application)-[:INSTANCE]->(:Software)-[:DEPENDS_ON]->(:Software {name: 'neo4j'}) WHERE size(app.ports) > 0 RETURN max(app.ports[0]) AS highest_port",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "highest_port": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many racks in zone 4 hold a machine running a service that is an instance of postgress?",
    "cypher": "MATCH (r:Rack {zone: 4})-[:HOLDS]->(:Machine)-[:RUNS]->(:Service)-[:INSTANCE]->(:Software {name: 'postgres'}) RETURN count(DISTINCT r) AS rack_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "rack_count": 0
      }
    ],
    "answer": "Based on the query result, 0 racks in zone 4 hold a machine running a service that is an instance of postgres."
  },
  {
    "question": "Sum the 'rack' numbers for all racks in zone 1 of the DC1 datacenter.",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack {zone: 1}) RETURN sum(r.rack) AS total_rack_number",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_rack_number": 55
      }
    ],
    "answer": "The sum of rack numbers for all racks in zone 1 of the DC1 datacenter is 55."
  },
  {
    "question": "What is the name of the software that the '9.4' service, with pid 7211, is an instance of?",
    "cypher": "MATCH (:Service {name: '9.4', pid: 7211})-[:INSTANCE]->(s:Software) RETURN s.name AS software_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the name of the machine with the fewest CPU cores in rack 'DC1-RCK-1-1'?",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-1-1'})-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type) WHERE t.cpu IS NOT NULL RETURN m.name AS min_cpu_machine ORDER BY t.cpu ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "min_cpu_machine": "DC1-RCK-1-1-M-40"
      }
    ],
    "answer": "The machine with the fewest CPU cores in rack 'DC1-RCK-1-1' is 'DC1-RCK-1-1-M-40'."
  },
  {
    "question": "Are there any applications on machine 'DC1-RCK-4-2-M-174' that listen on port 8080? Give me the count.",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-4-2-M-174'})-[:RUNS]->(a:Application)-[:LISTENS]->(:Port {port: 8080}) RETURN count(a) AS listening_app_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "listening_app_count": 1
      }
    ],
    "answer": "Yes, there is 1 application on machine 'DC1-RCK-4-2-M-174' that listens on port 8080."
  },
  {
    "question": "Count the number of machines in the DC1 datacenter.",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(:Rack)-[:HOLDS]->(m:Machine) RETURN count(m) AS total_machines",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_machines": 8000
      }
    ],
    "answer": "There are 8,000 machines in the DC1 datacenter."
  },
  {
    "question": "What's the zone of the router named DC1-R-1?",
    "cypher": "MATCH (r:Router {name: 'DC1-R-1'}) RETURN r.zone AS router_zone",
    "query_type": "Property Retrieval",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "router_zone": 1
      }
    ],
    "answer": "The zone of the router DC1-R-1 is 1."
  },
  {
    "question": "Show me the PID of the oldest running process on any machine in rack 'DC1-RCK-2-9'.",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-2-9'})-[:HOLDS]->(:Machine)-[:RUNS]->(p:Process) WHERE p.startTime IS NOT NULL RETURN p.pid AS oldest_process_pid ORDER BY p.startTime ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "oldest_process_pid": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many interfaces does the machine DC1-RCK-1-1-M-1 route traffic through?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-1-1-M-1'})-[:ROUTES]->(i:Interface) RETURN count(i) AS interface_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "interface_count": 1
      }
    ],
    "answer": "The machine DC1-RCK-1-1-M-1 routes traffic through 1 interface."
  },
  {
    "question": "What's the total number of software versions available for the RHEL OS?",
    "cypher": "MATCH (:Software {name: 'RHEL'})-[:VERSION]->(v:Version) RETURN count(v) AS version_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "version_count": 3
      }
    ],
    "answer": "There are 3 software versions available for the RHEL operating system."
  },
  {
    "question": "What is the name of the machine held in rack DC1-RCK-4-9 that runs the service '9.4' with PID 2586?",
    "cypher": "MATCH (r:Rack {name: 'DC1-RCK-4-9'})-[:HOLDS]->(m:Machine)-[:RUNS]->(:Service {name: '9.4', pid: 2586}) RETURN m.name AS machine_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_name": "DC1-RCK-4-9-M-103"
      }
    ],
    "answer": "The name of the machine held in rack DC1-RCK-4-9 that runs the service '9.4' with PID 2586 is DC1-RCK-4-9-M-103."
  },
  {
    "question": "Find the name of the software with the most listed dependencies.",
    "cypher": "MATCH (s:Software) WHERE s.dependencies IS NOT NULL RETURN s.name AS most_dependent_software ORDER BY size(s.dependencies) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "0-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "most_dependent_software": "cms"
      }
    ],
    "answer": "The software with the most listed dependencies is \"cms\"."
  },
  {
    "question": "How many datacenters contain racks in zone 4?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(r:Rack {zone: 4}) RETURN count(DISTINCT dc) AS datacenter_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_count": 1
      }
    ],
    "answer": "1 datacenter contains racks in zone 4."
  },
  {
    "question": "Count all the machines in any rack that is located in Rekyavik.",
    "cypher": "MATCH (:DataCenter {location: 'Iceland, Rekjavik'})-[:CONTAINS]->(:Rack)-[:HOLDS]->(m:Machine) RETURN count(m) AS machine_count_in_location",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_count_in_location": 8000
      }
    ],
    "answer": "There are 8,000 machines located in racks within the data center in Reykjavik, Iceland."
  },
  {
    "question": "Tell me the type of the machine named 'DC1-RCK-1-1-M-1'.",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-1-1-M-1'})-[:TYPE]->(t:Type) RETURN t.name AS machine_type",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_type": "xs-1/1/1"
      }
    ],
    "answer": "The type of the machine 'DC1-RCK-1-1-M-1' is 'xs-1/1/1'."
  },
  {
    "question": "What is the name of the application that has the most recent start time across all machines in DC1?",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(:Rack)-[:HOLDS]->(:Machine)-[:RUNS]->(a:Application) WHERE a.startTime IS NOT NULL RETURN a.name AS newest_app ORDER BY a.startTime DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "4-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "newest_app": "cms"
      }
    ],
    "answer": "Based on the query result, the application with the most recent start time in DC1 is 'cms'."
  },
  {
    "question": "How many other services does the 'webserver' application depend on?",
    "cypher": "MATCH (:Application {name: 'webserver'})-[:DEPENDS_ON]->(s:Service) RETURN count(s) AS service_dependency_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "service_dependency_count": 1658
      }
    ],
    "answer": "The 'webserver' application depends on 1,658 other services."
  },
  {
    "question": "Calculate the total number of CPU cores across all machines running the 'webapp' app.",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(:Application {name: 'webapp'}), (m)-[:TYPE]->(t:Type) RETURN sum(t.cpu) AS total_cpu_cores",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_cpu_cores": 5048
      }
    ],
    "answer": "The total number of CPU cores across all machines running the 'webapp' app is 5,048 cores."
  },
  {
    "question": "What is the ip of the interface that connects to network 10.4 and is routed by the DC1-RE router?",
    "cypher": "MATCH (:Router {name: 'DC1-RE'})-[:ROUTES]->(i:Interface)<-[:ROUTES]-(:Network {ip: '10.4'}) RETURN i.ip AS interface_ip",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Which machine hosts the 'cms' process with the highest PID?",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(p:Process {name: 'cms'}) WHERE p.pid IS NOT NULL RETURN m.name AS machine_with_highest_pid ORDER BY p.pid DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_with_highest_pid": "DC1-RCK-1-6-M-36"
      }
    ],
    "answer": "The machine hosting the 'cms' process with the highest PID is DC1-RCK-1-6-M-36."
  },
  {
    "question": "How many switches are contained in racks in zone 1 of datacenter DC1?",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack {zone: 1})-[:HOLDS]->(s:Switch) RETURN count(s) AS switch_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "switch_count": 10
      }
    ],
    "answer": "There are 10 switches contained in racks in zone 1 of datacenter DC1."
  },
  {
    "question": "Count the total number of applications that depend on the 'webserver' software.",
    "cypher": "MATCH (a:Application)-[:INSTANCE]->(:Software)-[:DEPENDS_ON]->(:Software {name: 'webserver'}) RETURN count(a) AS dependent_app_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "dependent_app_count": 1634
      }
    ],
    "answer": "Based on the query result, there are 1,634 applications that depend on the 'webserver' software."
  },
  {
    "question": "What port does the webservr app listen on, on the machine that exposes the 10.1.1.1 IP?",
    "cypher": "MATCH (m:Machine)-[:ROUTES]->(:Interface {ip: '10.1.1.1'}), (m)-[:RUNS]->(a:Application {name: 'webserver'})-[:LISTENS]->(p:Port) RETURN p.port AS listening_port LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "listening_port": 443
      }
    ],
    "answer": "The webserver app listens on port 443 on the machine with the 10.1.1.1 IP address."
  },
  {
    "question": "Of all machines in zone 4, which one has the highest rack number? Return the machine's name.",
    "cypher": "MATCH (r:Rack {zone: 4})-[:HOLDS]->(m:Machine) WHERE r.rack IS NOT NULL RETURN m.name AS top_rack_machine ORDER BY r.rack DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_rack_machine": "DC1-RCK-4-10-M-73"
      }
    ],
    "answer": "The machine with the highest rack number in zone 4 is DC1-RCK-4-10-M-73."
  },
  {
    "question": "How many dependency connections (any type) originate from the 'cms' application?",
    "cypher": "MATCH (:Application {name: 'cms'})-[r:DEPENDS_ON]->() RETURN count(r) AS dependency_connection_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "dependency_connection_count": 4905
      }
    ],
    "answer": "The 'cms' application has 4,905 dependency connections."
  },
  {
    "question": "Sum up all the PIDs for processes running on machine DC1-RCK-4-2-M-174.",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-4-2-M-174'})-[:RUNS]->(p:Process) RETURN sum(p.pid) AS total_pids",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_pids": 30216
      }
    ],
    "answer": "The sum of all PIDs for processes running on machine DC1-RCK-4-2-M-174 is 30,216."
  },
  {
    "question": "What is the name of the datacenter that holds the rack DC1-RCK-4-9?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(:Rack {name: 'DC1-RCK-4-9'}) RETURN dc.name AS datacenter_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_name": "DC1"
      }
    ],
    "answer": "The datacenter that holds the rack DC1-RCK-4-9 is DC1."
  },
  {
    "question": "What is the name of the software with the oldest version of 'RHEL'?",
    "cypher": "MATCH (s:Software {name: 'RHEL'})-[:VERSION]->(v:Version) WHERE NOT (v)-[:PREVIOUS]->() RETURN s.name AS software_with_oldest_version LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "software_with_oldest_version": "RHEL"
      }
    ],
    "answer": "RHEL (Red Hat Enterprise Linux) is the software with the oldest version based on the query result."
  },
  {
    "question": "How many machines in rack DC1-RCK-1-1 are running any OS?",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-1-1'})-[:HOLDS]->(m:Machine)-[:RUNS]->(:OS) RETURN count(m) AS os_machine_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "os_machine_count": 200
      }
    ],
    "answer": "200 machines in rack DC1-RCK-1-1 are running an operating system."
  },
  {
    "question": "What's the total number of ports exposed by interfaces connected to the switch with IP '10.1.10'?",
    "cypher": "MATCH (:Switch {ip: '10.1.10'})-[:ROUTES]->(:Interface)-[:EXPOSES]->(p:Port) RETURN count(p) AS total_exposed_ports",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_exposed_ports": 0
      }
    ],
    "answer": "Based on the query result, the switch with IP '10.1.10' has 0 exposed ports."
  },
  {
    "question": "What's the ip of the interface used by the 'DC1-RE' router that connects to the '10.4' network zone?",
    "cypher": "MATCH (:Router {name: 'DC1-RE'})-[:ROUTES]->(i:Interface)<-[:ROUTES]-(:Zone {ip: '10.4'}) RETURN i.ip AS interface_ip",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the name of the machine with the maximum disk space in the whole DC1 datacenter.",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(:Rack)-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type) WHERE t.disk IS NOT NULL RETURN m.name AS max_disk_machine ORDER BY t.disk DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "noise_type": "none",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_disk_machine": "DC1-RCK-3-3-M-200"
      }
    ],
    "answer": "The machine with the maximum disk space in the DC1 datacenter is DC1-RCK-3-3-M-200."
  },
  {
    "question": "How many software packages are listed as dependencies for the 'cms' software package?",
    "cypher": "MATCH (s:Software {name: 'cms'}) RETURN size(s.dependencies) AS dependency_list_size",
    "query_type": "Existence Verification",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "dependency_list_size": 3
      }
    ],
    "answer": "The 'cms' software package has 3 dependencies."
  },
  {
    "question": "Count the number of distinct softwares that are dependencies for applications running on any machine in rack 'DC1-RCK-4-2'.",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-4-2'})-[:HOLDS]->(:Machine)-[:RUNS]->(:Application)-[:DEPENDS_ON|INSTANCE*1..2]->(s:Software) RETURN count(DISTINCT s) AS total_dependencies",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_dependencies": 9
      }
    ],
    "answer": "There are 9 distinct software applications that are dependencies for applications running on machines in rack DC1-RCK-4-2."
  },
  {
    "question": "How many machines in the 'DC1' datacenter are running applications that are instances of the 'cms' software?",
    "cypher": "MATCH (dc:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack)-[:HOLDS]->(m:Machine)-[:RUNS]->(a:Application)-[:INSTANCE]->(s:Software {name: 'cms'}) RETURN COUNT(DISTINCT m) AS total_machines",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_machines": 1634
      }
    ],
    "answer": "In the 'DC1' datacenter, there are 1,634 machines running applications that are instances of the 'cms' software."
  },
  {
    "question": "What is the physical location of the datacenter that contains the rack holding machine 'DC1-RCK-4-2-M-174'?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(:Rack)-[:HOLDS]->(m:Machine {name: 'DC1-RCK-4-2-M-174'}) RETURN dc.location AS datacenter_location",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The physical location of the datacenter containing the rack with machine 'DC1-RCK-4-2-M-174' is Iceland, Rekjavik."
  },
  {
    "question": "Find the name of the machine type with the most CPU cores, which is used by machines running the 'webapp' application.",
    "cypher": "MATCH (t:Type)<-[:TYPE]-(:Machine)-[:RUNS]->(a:Application {name: 'webapp'}) WHERE t.cpu IS NOT NULL RETURN t.name AS top_cpu_type ORDER BY t.cpu DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_cpu_type": "xxl-32/1024/3125"
      }
    ],
    "answer": "The machine type with the most CPU cores used by machines running the 'webapp' application is 'xxl-32/1024/3125'."
  },
  {
    "question": "What is the shortest path length between the 'webapp' application and the 'java' software it depends on?",
    "cypher": "MATCH path = shortestPath((a:Application {name: 'webapp'})-[*]->(s:Software {name: 'java'})) RETURN LENGTH(path) AS dependency_path_length",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "dependency_path_length": 1
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      },
      {
        "dependency_path_length": 2
      }
    ]
  },
  {
    "question": "Count the number of distinct services the 'webapp' app depends on, which run on machines in zone 2.",
    "cypher": "MATCH (:Zone {zone: 2})-[:ROUTES]->(:Interface)<-[:ROUTES]-(:Machine)-[:RUNS]->(a:Application {name: 'webapp'})-[:DEPENDS_ON]->(svc:Service) RETURN COUNT(DISTINCT svc) AS service_dependency_count",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "service_dependency_count": 0
      }
    ],
    "answer": "The webapp app does not depend on any services running on machines in zone 2."
  },
  {
    "question": "What is the name of the OS software that is an instance of version '7.3' and is running on machine 'DC1-RCK-1-1-M-1'?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(os:OS)-[:INSTANCE]->(v:Version {name: '7.3'})-[:VERSION]-(s:Software) RETURN s.name AS os_software_name",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the most recent start time among all processes that are instances of the 'postgres' software?",
    "cypher": "MATCH (p:Process)-[:INSTANCE]->(s:Software {name: 'postgres'}) WHERE p.startTime IS NOT NULL RETURN MAX(p.startTime) AS latest_start_time",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "latest_start_time": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many racks are in the same datacenter as rack 'DC1-RCK-1-1'?",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-1-1'})<-[:CONTAINS]-(dc:DataCenter)-[:CONTAINS]->(r:Rack) RETURN COUNT(DISTINCT r) AS sibling_rack_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "sibling_rack_count": 39
      }
    ],
    "answer": "There are 39 racks in the same datacenter as rack 'DC1-RCK-1-1'."
  },
  {
    "question": "What's the total number of machines in zone 4 that are running any version of the RHEL operating system?",
    "cypher": "MATCH (:Zone {zone: 4})-[:ROUTES]->(:Interface)<-[:ROUTES]-(m:Machine)-[:RUNS]->(:OS)-[:INSTANCE]->(:Version)-[:VERSION]-(:Software {name: 'RHEL'}) RETURN COUNT(DISTINCT m) AS total_rhel_machines",
    "query_type": "Aggregation",
    "complexity": "5-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_rhel_machines": 0
      }
    ],
    "answer": "Based on the query result, there are 0 machines in zone 4 running RHEL."
  },
  {
    "question": "Find the IP of the switch that is in the same rack as the box named 'DC1-RCK-2-9-M-90'.",
    "cypher": "MATCH (s:Switch)-[:HOLDS]-(:Rack)<-[:HOLDS]-(:Machine {name: 'DC1-RCK-2-9-M-90'}) RETURN s.ip AS switch_ip",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What is the name of the machine type with the least amount of disk space that is used in any rack in zone 1?",
    "cypher": "MATCH (t:Type)<-[:TYPE]-(:Machine)<-[:HOLDS]-(:Rack {zone: 1}) WHERE t.disk IS NOT NULL RETURN t.name AS min_disk_type ORDER BY t.disk ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "min_disk_type": "xs-1/1/1"
      }
    ],
    "answer": "The machine type with the least amount of disk space used in zone 1 is xs-1/1/1."
  },
  {
    "question": "How many dependency links exist between the 'cms' application and the 'webserver' software on machine 'DC1-RCK-4-2-M-174'?",
    "cypher": "MATCH path = (:Machine {name: 'DC1-RCK-4-2-M-174'})-[:RUNS]->(:Application)-[:INSTANCE]->(:Software {name: 'cms'})-[:DEPENDS_ON]->(:Software {name: 'webserver'}) RETURN COUNT(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_count": 1
      }
    ],
    "answer": "There is 1 dependency link between the 'cms' application and the 'webserver' software on machine 'DC1-RCK-4-2-M-174'."
  },
  {
    "question": "Calculate the average RAM size for all machine types that host applications which depend on the 'postgress' service.",
    "cypher": "MATCH (t:Type)<-[:TYPE]-(:Machine)-[:RUNS]->(a:Application)-[:DEPENDS_ON]->(:Service)-[:INSTANCE]->(:Software {name: 'postgres'}) WHERE t.ram IS NOT NULL RETURN AVG(t.ram) AS average_ram",
    "query_type": "Aggregation",
    "complexity": "5-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_ram": null
      }
    ],
    "answer": "UNKNOWN\n\nThe query result returned None for the average RAM, which could mean either no machines matching the criteria were found or the RAM data is missing."
  },
  {
    "question": "What port does the webapp application listen on, on the machine 'DC1-RCK-2-9-M-90'?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-2-9-M-90'})-[:RUNS]->(a:Application {name: 'webapp'})-[:LISTENS]->(p:Port) RETURN p.port AS listening_port",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "listening_port": 8080
      }
    ],
    "answer": "The webapp application listens on port 8080 on the machine 'DC1-RCK-2-9-M-90'."
  },
  {
    "question": "What is the lowest PID of a process running on a machine that's located in rack 'DC1-RCK-1-1'?",
    "cypher": "MATCH (p:Process)<-[:RUNS]-(:Machine)<-[:HOLDS]-(:Rack {name: 'DC1-RCK-1-1'}) WHERE p.pid IS NOT NULL RETURN MIN(p.pid) AS lowest_pid",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_pid": 6
      }
    ],
    "answer": "The lowest PID of a process running on a machine in rack 'DC1-RCK-1-1' is 6."
  },
  {
    "question": "How many network interfaces are connected to the router 'DC1-R-1'?",
    "cypher": "MATCH (:Router {name: 'DC1-R-1'})-[:ROUTES]->(i:Interface) RETURN COUNT(i) AS interface_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "interface_count": 1
      }
    ],
    "answer": "The router 'DC1-R-1' has 1 network interface connected to it."
  },
  {
    "question": "Sum up the disk space of all machine types found in racks within the datacenter located in 'Iceland, Rekjavik'.",
    "cypher": "MATCH (t:Type)<-[:TYPE]-(:Machine)<-[:HOLDS]-(:Rack)<-[:CONTAINS]-(:DataCenter {location: 'Iceland, Rekjavik'}) RETURN SUM(t.disk) AS total_disk_space",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_disk_space": 494880
      }
    ],
    "answer": "The total disk space for all machines in racks within the Reykjavik, Iceland datacenter is 494,880 units."
  },
  {
    "question": "What's the name of the software that the 'cms' app depends on, which in turn depends on the 'php' software?",
    "cypher": "MATCH (:Software {name: 'cms'})-[:DEPENDS_ON]->(s1:Software)-[:DEPENDS_ON]->(:Software {name: 'php'}) RETURN s1.name AS intermediate_dependency",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the name of the OS with the oldest running instance on any machine in any rack in zone 4.",
    "cypher": "MATCH (s:Software)<-[:VERSION]-(:Version)<-[:INSTANCE]-(os:OS)-[:RUNS]->(:Machine)<-[:HOLDS]-(:Rack {zone: 4}) WHERE os.startTime IS NOT NULL RETURN s.name AS oldest_os_name ORDER BY os.startTime ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "5-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many distinct softwares does the 'cms' application directly or indirectly depend on?",
    "cypher": "MATCH (:Software {name: 'cms'})-[:DEPENDS_ON*]->(s:Software) RETURN COUNT(DISTINCT s) AS total_dependencies",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_dependencies": 3
      }
    ],
    "answer": "The 'cms' application depends on 3 distinct software components."
  },
  {
    "question": "Count how many applications are running on machines that use an OS which is an instance of 'RHEL' software.",
    "cypher": "MATCH (a:Application)<-[:RUNS]-(:Machine)-[:RUNS]->(:OS)-[:INSTANCE]->(:Version)-[:VERSION]->(:Software {name: 'RHEL'}) RETURN COUNT(DISTINCT a) AS app_count_on_rhel",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What is the IP address for the interface that exposes port 8080 used by the 'webapp' application?",
    "cypher": "MATCH (i:Interface)-[:EXPOSES]->(:Port {port: 8080})<-[:LISTENS]-(:Application {name: 'webapp'}) RETURN i.ip AS interface_ip",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "interface_ip": "10.1.1.5"
      },
      {
        "interface_ip": "10.1.1.7"
      },
      {
        "interface_ip": "10.1.1.19"
      },
      {
        "interface_ip": "10.1.1.20"
      },
      {
        "interface_ip": "10.1.1.27"
      },
      {
        "interface_ip": "10.1.1.40"
      },
      {
        "interface_ip": "10.1.1.44"
      },
      {
        "interface_ip": "10.1.1.52"
      },
      {
        "interface_ip": "10.1.1.59"
      },
      {
        "interface_ip": "10.1.1.61"
      },
      {
        "interface_ip": "10.1.1.66"
      },
      {
        "interface_ip": "10.1.1.70"
      },
      {
        "interface_ip": "10.1.1.72"
      },
      {
        "interface_ip": "10.1.1.74"
      },
      {
        "interface_ip": "10.1.1.86"
      },
      {
        "interface_ip": "10.1.1.89"
      },
      {
        "interface_ip": "10.1.1.94"
      },
      {
        "interface_ip": "10.1.1.96"
      },
      {
        "interface_ip": "10.1.1.98"
      },
      {
        "interface_ip": "10.1.1.118"
      },
      {
        "interface_ip": "10.1.1.120"
      },
      {
        "interface_ip": "10.1.1.121"
      },
      {
        "interface_ip": "10.1.1.122"
      },
      {
        "interface_ip": "10.1.1.123"
      },
      {
        "interface_ip": "10.1.1.124"
      },
      {
        "interface_ip": "10.1.1.129"
      },
      {
        "interface_ip": "10.1.1.145"
      },
      {
        "interface_ip": "10.1.1.149"
      },
      {
        "interface_ip": "10.1.1.150"
      },
      {
        "interface_ip": "10.1.1.152"
      },
      {
        "interface_ip": "10.1.1.158"
      },
      {
        "interface_ip": "10.1.1.162"
      },
      {
        "interface_ip": "10.1.1.166"
      },
      {
        "interface_ip": "10.1.1.168"
      },
      {
        "interface_ip": "10.1.1.176"
      },
      {
        "interface_ip": "10.1.1.184"
      },
      {
        "interface_ip": "10.1.1.185"
      },
      {
        "interface_ip": "10.1.1.189"
      },
      {
        "interface_ip": "10.1.1.190"
      },
      {
        "interface_ip": "10.1.1.193"
      },
      {
        "interface_ip": "10.1.1.194"
      },
      {
        "interface_ip": "10.1.1.196"
      },
      {
        "interface_ip": "10.1.2.6"
      },
      {
        "interface_ip": "10.1.2.15"
      },
      {
        "interface_ip": "10.1.2.16"
      },
      {
        "interface_ip": "10.1.2.20"
      },
      {
        "interface_ip": "10.1.2.21"
      },
      {
        "interface_ip": "10.1.2.29"
      },
      {
        "interface_ip": "10.1.2.34"
      },
      {
        "interface_ip": "10.1.2.36"
      },
      {
        "interface_ip": "10.1.2.38"
      },
      {
        "interface_ip": "10.1.2.43"
      },
      {
        "interface_ip": "10.1.2.48"
      },
      {
        "interface_ip": "10.1.2.50"
      },
      {
        "interface_ip": "10.1.2.59"
      },
      {
        "interface_ip": "10.1.2.67"
      },
      {
        "interface_ip": "10.1.2.73"
      },
      {
        "interface_ip": "10.1.2.79"
      },
      {
        "interface_ip": "10.1.2.83"
      },
      {
        "interface_ip": "10.1.2.87"
      },
      {
        "interface_ip": "10.1.2.90"
      },
      {
        "interface_ip": "10.1.2.92"
      },
      {
        "interface_ip": "10.1.2.100"
      },
      {
        "interface_ip": "10.1.2.112"
      },
      {
        "interface_ip": "10.1.2.117"
      },
      {
        "interface_ip": "10.1.2.118"
      },
      {
        "interface_ip": "10.1.2.121"
      },
      {
        "interface_ip": "10.1.2.123"
      },
      {
        "interface_ip": "10.1.2.143"
      },
      {
        "interface_ip": "10.1.2.144"
      },
      {
        "interface_ip": "10.1.2.151"
      },
      {
        "interface_ip": "10.1.2.153"
      },
      {
        "interface_ip": "10.1.2.156"
      },
      {
        "interface_ip": "10.1.2.159"
      },
      {
        "interface_ip": "10.1.2.164"
      },
      {
        "interface_ip": "10.1.2.166"
      },
      {
        "interface_ip": "10.1.2.171"
      },
      {
        "interface_ip": "10.1.2.186"
      },
      {
        "interface_ip": "10.1.2.190"
      },
      {
        "interface_ip": "10.1.3.32"
      },
      {
        "interface_ip": "10.1.3.33"
      },
      {
        "interface_ip": "10.1.3.34"
      },
      {
        "interface_ip": "10.1.3.38"
      },
      {
        "interface_ip": "10.1.3.39"
      },
      {
        "interface_ip": "10.1.3.41"
      },
      {
        "interface_ip": "10.1.3.50"
      },
      {
        "interface_ip": "10.1.3.51"
      },
      {
        "interface_ip": "10.1.3.55"
      },
      {
        "interface_ip": "10.1.3.61"
      },
      {
        "interface_ip": "10.1.3.63"
      },
      {
        "interface_ip": "10.1.3.71"
      },
      {
        "interface_ip": "10.1.3.74"
      },
      {
        "interface_ip": "10.1.3.79"
      },
      {
        "interface_ip": "10.1.3.85"
      },
      {
        "interface_ip": "10.1.3.89"
      },
      {
        "interface_ip": "10.1.3.97"
      },
      {
        "interface_ip": "10.1.3.121"
      },
      {
        "interface_ip": "10.1.3.127"
      },
      {
        "interface_ip": "10.1.3.129"
      },
      {
        "interface_ip": "10.1.3.137"
      },
      {
        "interface_ip": "10.1.3.138"
      },
      {
        "interface_ip": "10.1.3.145"
      },
      {
        "interface_ip": "10.1.3.150"
      },
      {
        "interface_ip": "10.1.3.152"
      },
      {
        "interface_ip": "10.1.3.158"
      },
      {
        "interface_ip": "10.1.3.159"
      },
      {
        "interface_ip": "10.1.3.162"
      },
      {
        "interface_ip": "10.1.3.163"
      },
      {
        "interface_ip": "10.1.3.168"
      },
      {
        "interface_ip": "10.1.3.170"
      },
      {
        "interface_ip": "10.1.3.178"
      },
      {
        "interface_ip": "10.1.3.180"
      },
      {
        "interface_ip": "10.1.3.183"
      },
      {
        "interface_ip": "10.1.3.191"
      },
      {
        "interface_ip": "10.1.3.192"
      },
      {
        "interface_ip": "10.1.3.193"
      },
      {
        "interface_ip": "10.1.4.1"
      },
      {
        "interface_ip": "10.1.4.4"
      },
      {
        "interface_ip": "10.1.4.6"
      },
      {
        "interface_ip": "10.1.4.7"
      },
      {
        "interface_ip": "10.1.4.12"
      },
      {
        "interface_ip": "10.1.4.18"
      },
      {
        "interface_ip": "10.1.4.21"
      },
      {
        "interface_ip": "10.1.4.29"
      },
      {
        "interface_ip": "10.1.4.32"
      },
      {
        "interface_ip": "10.1.4.37"
      },
      {
        "interface_ip": "10.1.4.43"
      },
      {
        "interface_ip": "10.1.4.48"
      },
      {
        "interface_ip": "10.1.4.50"
      },
      {
        "interface_ip": "10.1.4.55"
      },
      {
        "interface_ip": "10.1.4.59"
      },
      {
        "interface_ip": "10.1.4.68"
      },
      {
        "interface_ip": "10.1.4.72"
      },
      {
        "interface_ip": "10.1.4.73"
      },
      {
        "interface_ip": "10.1.4.77"
      },
      {
        "interface_ip": "10.1.4.82"
      },
      {
        "interface_ip": "10.1.4.85"
      },
      {
        "interface_ip": "10.1.4.87"
      },
      {
        "interface_ip": "10.1.4.90"
      },
      {
        "interface_ip": "10.1.4.92"
      },
      {
        "interface_ip": "10.1.4.93"
      },
      {
        "interface_ip": "10.1.4.94"
      },
      {
        "interface_ip": "10.1.4.98"
      },
      {
        "interface_ip": "10.1.4.105"
      },
      {
        "interface_ip": "10.1.4.111"
      },
      {
        "interface_ip": "10.1.4.112"
      },
      {
        "interface_ip": "10.1.4.117"
      },
      {
        "interface_ip": "10.1.4.118"
      },
      {
        "interface_ip": "10.1.4.123"
      },
      {
        "interface_ip": "10.1.4.124"
      },
      {
        "interface_ip": "10.1.4.126"
      },
      {
        "interface_ip": "10.1.4.129"
      },
      {
        "interface_ip": "10.1.4.131"
      },
      {
        "interface_ip": "10.1.4.139"
      },
      {
        "interface_ip": "10.1.4.142"
      },
      {
        "interface_ip": "10.1.4.143"
      },
      {
        "interface_ip": "10.1.4.145"
      },
      {
        "interface_ip": "10.1.4.154"
      },
      {
        "interface_ip": "10.1.4.166"
      },
      {
        "interface_ip": "10.1.4.168"
      },
      {
        "interface_ip": "10.1.4.170"
      },
      {
        "interface_ip": "10.1.4.173"
      },
      {
        "interface_ip": "10.1.4.184"
      },
      {
        "interface_ip": "10.1.4.186"
      },
      {
        "interface_ip": "10.1.4.191"
      },
      {
        "interface_ip": "10.1.4.193"
      },
      {
        "interface_ip": "10.1.4.195"
      },
      {
        "interface_ip": "10.1.5.6"
      },
      {
        "interface_ip": "10.1.5.13"
      },
      {
        "interface_ip": "10.1.5.16"
      },
      {
        "interface_ip": "10.1.5.17"
      },
      {
        "interface_ip": "10.1.5.27"
      },
      {
        "interface_ip": "10.1.5.29"
      },
      {
        "interface_ip": "10.1.5.30"
      },
      {
        "interface_ip": "10.1.5.34"
      },
      {
        "interface_ip": "10.1.5.42"
      },
      {
        "interface_ip": "10.1.5.43"
      },
      {
        "interface_ip": "10.1.5.46"
      },
      {
        "interface_ip": "10.1.5.48"
      },
      {
        "interface_ip": "10.1.5.54"
      },
      {
        "interface_ip": "10.1.5.55"
      },
      {
        "interface_ip": "10.1.5.56"
      },
      {
        "interface_ip": "10.1.5.63"
      },
      {
        "interface_ip": "10.1.5.65"
      },
      {
        "interface_ip": "10.1.5.78"
      },
      {
        "interface_ip": "10.1.5.86"
      },
      {
        "interface_ip": "10.1.5.98"
      },
      {
        "interface_ip": "10.1.5.99"
      },
      {
        "interface_ip": "10.1.5.107"
      },
      {
        "interface_ip": "10.1.5.111"
      },
      {
        "interface_ip": "10.1.5.112"
      },
      {
        "interface_ip": "10.1.5.129"
      },
      {
        "interface_ip": "10.1.5.132"
      },
      {
        "interface_ip": "10.1.5.138"
      },
      {
        "interface_ip": "10.1.5.142"
      },
      {
        "interface_ip": "10.1.5.150"
      },
      {
        "interface_ip": "10.1.5.151"
      },
      {
        "interface_ip": "10.1.5.159"
      },
      {
        "interface_ip": "10.1.5.160"
      },
      {
        "interface_ip": "10.1.5.161"
      },
      {
        "interface_ip": "10.1.5.162"
      },
      {
        "interface_ip": "10.1.5.165"
      },
      {
        "interface_ip": "10.1.5.173"
      },
      {
        "interface_ip": "10.1.5.187"
      },
      {
        "interface_ip": "10.1.5.190"
      },
      {
        "interface_ip": "10.1.5.191"
      },
      {
        "interface_ip": "10.1.5.192"
      },
      {
        "interface_ip": "10.1.5.195"
      },
      {
        "interface_ip": "10.1.5.200"
      },
      {
        "interface_ip": "10.1.6.3"
      },
      {
        "interface_ip": "10.1.6.17"
      },
      {
        "interface_ip": "10.1.6.35"
      },
      {
        "interface_ip": "10.1.6.40"
      },
      {
        "interface_ip": "10.1.6.53"
      },
      {
        "interface_ip": "10.1.6.55"
      },
      {
        "interface_ip": "10.1.6.63"
      },
      {
        "interface_ip": "10.1.6.65"
      },
      {
        "interface_ip": "10.1.6.74"
      },
      {
        "interface_ip": "10.1.6.84"
      },
      {
        "interface_ip": "10.1.6.90"
      },
      {
        "interface_ip": "10.1.6.91"
      },
      {
        "interface_ip": "10.1.6.100"
      },
      {
        "interface_ip": "10.1.6.104"
      },
      {
        "interface_ip": "10.1.6.114"
      },
      {
        "interface_ip": "10.1.6.123"
      },
      {
        "interface_ip": "10.1.6.131"
      },
      {
        "interface_ip": "10.1.6.136"
      },
      {
        "interface_ip": "10.1.6.137"
      },
      {
        "interface_ip": "10.1.6.142"
      },
      {
        "interface_ip": "10.1.6.146"
      },
      {
        "interface_ip": "10.1.6.149"
      },
      {
        "interface_ip": "10.1.6.150"
      },
      {
        "interface_ip": "10.1.6.155"
      },
      {
        "interface_ip": "10.1.6.158"
      },
      {
        "interface_ip": "10.1.6.165"
      },
      {
        "interface_ip": "10.1.6.179"
      },
      {
        "interface_ip": "10.1.6.190"
      },
      {
        "interface_ip": "10.1.6.192"
      },
      {
        "interface_ip": "10.1.6.196"
      },
      {
        "interface_ip": "10.1.6.197"
      },
      {
        "interface_ip": "10.1.7.11"
      },
      {
        "interface_ip": "10.1.7.13"
      },
      {
        "interface_ip": "10.1.7.20"
      },
      {
        "interface_ip": "10.1.7.21"
      },
      {
        "interface_ip": "10.1.7.39"
      },
      {
        "interface_ip": "10.1.7.41"
      },
      {
        "interface_ip": "10.1.7.49"
      },
      {
        "interface_ip": "10.1.7.60"
      },
      {
        "interface_ip": "10.1.7.74"
      },
      {
        "interface_ip": "10.1.7.84"
      },
      {
        "interface_ip": "10.1.7.94"
      },
      {
        "interface_ip": "10.1.7.95"
      },
      {
        "interface_ip": "10.1.7.98"
      },
      {
        "interface_ip": "10.1.7.99"
      },
      {
        "interface_ip": "10.1.7.108"
      },
      {
        "interface_ip": "10.1.7.110"
      },
      {
        "interface_ip": "10.1.7.111"
      },
      {
        "interface_ip": "10.1.7.119"
      },
      {
        "interface_ip": "10.1.7.125"
      },
      {
        "interface_ip": "10.1.7.127"
      },
      {
        "interface_ip": "10.1.7.130"
      },
      {
        "interface_ip": "10.1.7.131"
      },
      {
        "interface_ip": "10.1.7.137"
      },
      {
        "interface_ip": "10.1.7.144"
      },
      {
        "interface_ip": "10.1.7.151"
      },
      {
        "interface_ip": "10.1.7.155"
      },
      {
        "interface_ip": "10.1.7.158"
      },
      {
        "interface_ip": "10.1.7.159"
      },
      {
        "interface_ip": "10.1.7.160"
      },
      {
        "interface_ip": "10.1.7.163"
      },
      {
        "interface_ip": "10.1.7.172"
      },
      {
        "interface_ip": "10.1.7.179"
      },
      {
        "interface_ip": "10.1.7.183"
      },
      {
        "interface_ip": "10.1.7.184"
      },
      {
        "interface_ip": "10.1.7.193"
      },
      {
        "interface_ip": "10.1.8.1"
      },
      {
        "interface_ip": "10.1.8.5"
      },
      {
        "interface_ip": "10.1.8.6"
      },
      {
        "interface_ip": "10.1.8.8"
      },
      {
        "interface_ip": "10.1.8.15"
      },
      {
        "interface_ip": "10.1.8.17"
      },
      {
        "interface_ip": "10.1.8.19"
      },
      {
        "interface_ip": "10.1.8.23"
      },
      {
        "interface_ip": "10.1.8.26"
      },
      {
        "interface_ip": "10.1.8.28"
      },
      {
        "interface_ip": "10.1.8.31"
      },
      {
        "interface_ip": "10.1.8.51"
      },
      {
        "interface_ip": "10.1.8.56"
      },
      {
        "interface_ip": "10.1.8.63"
      },
      {
        "interface_ip": "10.1.8.74"
      },
      {
        "interface_ip": "10.1.8.75"
      },
      {
        "interface_ip": "10.1.8.77"
      },
      {
        "interface_ip": "10.1.8.91"
      },
      {
        "interface_ip": "10.1.8.96"
      },
      {
        "interface_ip": "10.1.8.122"
      },
      {
        "interface_ip": "10.1.8.129"
      },
      {
        "interface_ip": "10.1.8.130"
      },
      {
        "interface_ip": "10.1.8.131"
      },
      {
        "interface_ip": "10.1.8.136"
      },
      {
        "interface_ip": "10.1.8.140"
      },
      {
        "interface_ip": "10.1.8.152"
      },
      {
        "interface_ip": "10.1.8.154"
      },
      {
        "interface_ip": "10.1.8.155"
      },
      {
        "interface_ip": "10.1.8.157"
      },
      {
        "interface_ip": "10.1.8.165"
      },
      {
        "interface_ip": "10.1.8.166"
      },
      {
        "interface_ip": "10.1.8.168"
      },
      {
        "interface_ip": "10.1.8.177"
      },
      {
        "interface_ip": "10.1.8.182"
      },
      {
        "interface_ip": "10.1.8.192"
      },
      {
        "interface_ip": "10.1.8.199"
      },
      {
        "interface_ip": "10.1.8.200"
      },
      {
        "interface_ip": "10.1.9.2"
      },
      {
        "interface_ip": "10.1.9.4"
      },
      {
        "interface_ip": "10.1.9.9"
      },
      {
        "interface_ip": "10.1.9.15"
      },
      {
        "interface_ip": "10.1.9.17"
      },
      {
        "interface_ip": "10.1.9.27"
      },
      {
        "interface_ip": "10.1.9.36"
      },
      {
        "interface_ip": "10.1.9.37"
      },
      {
        "interface_ip": "10.1.9.44"
      },
      {
        "interface_ip": "10.1.9.50"
      },
      {
        "interface_ip": "10.1.9.52"
      },
      {
        "interface_ip": "10.1.9.61"
      },
      {
        "interface_ip": "10.1.9.64"
      },
      {
        "interface_ip": "10.1.9.68"
      },
      {
        "interface_ip": "10.1.9.70"
      },
      {
        "interface_ip": "10.1.9.77"
      },
      {
        "interface_ip": "10.1.9.82"
      },
      {
        "interface_ip": "10.1.9.99"
      },
      {
        "interface_ip": "10.1.9.102"
      },
      {
        "interface_ip": "10.1.9.104"
      },
      {
        "interface_ip": "10.1.9.106"
      },
      {
        "interface_ip": "10.1.9.111"
      },
      {
        "interface_ip": "10.1.9.116"
      },
      {
        "interface_ip": "10.1.9.124"
      },
      {
        "interface_ip": "10.1.9.130"
      },
      {
        "interface_ip": "10.1.9.141"
      },
      {
        "interface_ip": "10.1.9.152"
      },
      {
        "interface_ip": "10.1.9.157"
      },
      {
        "interface_ip": "10.1.9.158"
      },
      {
        "interface_ip": "10.1.9.182"
      },
      {
        "interface_ip": "10.1.9.184"
      },
      {
        "interface_ip": "10.1.9.185"
      },
      {
        "interface_ip": "10.1.9.188"
      },
      {
        "interface_ip": "10.1.9.189"
      },
      {
        "interface_ip": "10.1.9.190"
      },
      {
        "interface_ip": "10.1.9.194"
      },
      {
        "interface_ip": "10.1.10.5"
      },
      {
        "interface_ip": "10.1.10.8"
      },
      {
        "interface_ip": "10.1.10.20"
      },
      {
        "interface_ip": "10.1.10.23"
      },
      {
        "interface_ip": "10.1.10.25"
      },
      {
        "interface_ip": "10.1.10.29"
      },
      {
        "interface_ip": "10.1.10.32"
      },
      {
        "interface_ip": "10.1.10.39"
      },
      {
        "interface_ip": "10.1.10.43"
      },
      {
        "interface_ip": "10.1.10.44"
      },
      {
        "interface_ip": "10.1.10.46"
      },
      {
        "interface_ip": "10.1.10.51"
      },
      {
        "interface_ip": "10.1.10.55"
      },
      {
        "interface_ip": "10.1.10.59"
      },
      {
        "interface_ip": "10.1.10.62"
      },
      {
        "interface_ip": "10.1.10.72"
      },
      {
        "interface_ip": "10.1.10.76"
      },
      {
        "interface_ip": "10.1.10.80"
      },
      {
        "interface_ip": "10.1.10.84"
      },
      {
        "interface_ip": "10.1.10.109"
      },
      {
        "interface_ip": "10.1.10.122"
      },
      {
        "interface_ip": "10.1.10.123"
      },
      {
        "interface_ip": "10.1.10.130"
      },
      {
        "interface_ip": "10.1.10.139"
      },
      {
        "interface_ip": "10.1.10.141"
      },
      {
        "interface_ip": "10.1.10.149"
      },
      {
        "interface_ip": "10.1.10.152"
      },
      {
        "interface_ip": "10.1.10.153"
      },
      {
        "interface_ip": "10.1.10.154"
      },
      {
        "interface_ip": "10.1.10.158"
      },
      {
        "interface_ip": "10.1.10.165"
      },
      {
        "interface_ip": "10.1.10.169"
      },
      {
        "interface_ip": "10.1.10.171"
      },
      {
        "interface_ip": "10.1.10.173"
      },
      {
        "interface_ip": "10.1.10.187"
      },
      {
        "interface_ip": "10.1.10.188"
      },
      {
        "interface_ip": "10.1.10.192"
      },
      {
        "interface_ip": "10.1.10.195"
      },
      {
        "interface_ip": "10.1.10.196"
      },
      {
        "interface_ip": "10.2.1.4"
      },
      {
        "interface_ip": "10.2.1.28"
      },
      {
        "interface_ip": "10.2.1.35"
      },
      {
        "interface_ip": "10.2.1.36"
      },
      {
        "interface_ip": "10.2.1.48"
      },
      {
        "interface_ip": "10.2.1.50"
      },
      {
        "interface_ip": "10.2.1.61"
      },
      {
        "interface_ip": "10.2.1.64"
      },
      {
        "interface_ip": "10.2.1.70"
      },
      {
        "interface_ip": "10.2.1.71"
      },
      {
        "interface_ip": "10.2.1.72"
      },
      {
        "interface_ip": "10.2.1.74"
      },
      {
        "interface_ip": "10.2.1.83"
      },
      {
        "interface_ip": "10.2.1.86"
      },
      {
        "interface_ip": "10.2.1.97"
      },
      {
        "interface_ip": "10.2.1.106"
      },
      {
        "interface_ip": "10.2.1.115"
      },
      {
        "interface_ip": "10.2.1.119"
      },
      {
        "interface_ip": "10.2.1.129"
      },
      {
        "interface_ip": "10.2.1.131"
      },
      {
        "interface_ip": "10.2.1.136"
      },
      {
        "interface_ip": "10.2.1.138"
      },
      {
        "interface_ip": "10.2.1.139"
      },
      {
        "interface_ip": "10.2.1.142"
      },
      {
        "interface_ip": "10.2.1.144"
      },
      {
        "interface_ip": "10.2.1.147"
      },
      {
        "interface_ip": "10.2.1.148"
      },
      {
        "interface_ip": "10.2.1.149"
      },
      {
        "interface_ip": "10.2.1.153"
      },
      {
        "interface_ip": "10.2.1.155"
      },
      {
        "interface_ip": "10.2.1.156"
      },
      {
        "interface_ip": "10.2.1.163"
      },
      {
        "interface_ip": "10.2.1.164"
      },
      {
        "interface_ip": "10.2.1.168"
      },
      {
        "interface_ip": "10.2.1.172"
      },
      {
        "interface_ip": "10.2.1.173"
      },
      {
        "interface_ip": "10.2.1.174"
      },
      {
        "interface_ip": "10.2.1.182"
      },
      {
        "interface_ip": "10.2.1.184"
      },
      {
        "interface_ip": "10.2.1.185"
      },
      {
        "interface_ip": "10.2.1.186"
      },
      {
        "interface_ip": "10.2.1.187"
      },
      {
        "interface_ip": "10.2.1.188"
      },
      {
        "interface_ip": "10.2.1.193"
      },
      {
        "interface_ip": "10.2.1.194"
      },
      {
        "interface_ip": "10.2.1.198"
      },
      {
        "interface_ip": "10.2.2.1"
      },
      {
        "interface_ip": "10.2.2.5"
      },
      {
        "interface_ip": "10.2.2.14"
      },
      {
        "interface_ip": "10.2.2.16"
      },
      {
        "interface_ip": "10.2.2.26"
      },
      {
        "interface_ip": "10.2.2.28"
      },
      {
        "interface_ip": "10.2.2.30"
      },
      {
        "interface_ip": "10.2.2.31"
      },
      {
        "interface_ip": "10.2.2.39"
      },
      {
        "interface_ip": "10.2.2.47"
      },
      {
        "interface_ip": "10.2.2.53"
      },
      {
        "interface_ip": "10.2.2.60"
      },
      {
        "interface_ip": "10.2.2.68"
      },
      {
        "interface_ip": "10.2.2.71"
      },
      {
        "interface_ip": "10.2.2.72"
      },
      {
        "interface_ip": "10.2.2.76"
      },
      {
        "interface_ip": "10.2.2.87"
      },
      {
        "interface_ip": "10.2.2.88"
      },
      {
        "interface_ip": "10.2.2.90"
      },
      {
        "interface_ip": "10.2.2.94"
      },
      {
        "interface_ip": "10.2.2.97"
      },
      {
        "interface_ip": "10.2.2.110"
      },
      {
        "interface_ip": "10.2.2.121"
      },
      {
        "interface_ip": "10.2.2.127"
      },
      {
        "interface_ip": "10.2.2.128"
      },
      {
        "interface_ip": "10.2.2.132"
      },
      {
        "interface_ip": "10.2.2.133"
      },
      {
        "interface_ip": "10.2.2.134"
      },
      {
        "interface_ip": "10.2.2.135"
      },
      {
        "interface_ip": "10.2.2.140"
      },
      {
        "interface_ip": "10.2.2.152"
      },
      {
        "interface_ip": "10.2.2.157"
      },
      {
        "interface_ip": "10.2.2.158"
      },
      {
        "interface_ip": "10.2.2.161"
      },
      {
        "interface_ip": "10.2.2.165"
      },
      {
        "interface_ip": "10.2.2.167"
      },
      {
        "interface_ip": "10.2.2.168"
      },
      {
        "interface_ip": "10.2.2.171"
      },
      {
        "interface_ip": "10.2.2.172"
      },
      {
        "interface_ip": "10.2.2.174"
      },
      {
        "interface_ip": "10.2.2.182"
      },
      {
        "interface_ip": "10.2.2.189"
      },
      {
        "interface_ip": "10.2.2.200"
      },
      {
        "interface_ip": "10.2.3.23"
      },
      {
        "interface_ip": "10.2.3.28"
      },
      {
        "interface_ip": "10.2.3.29"
      },
      {
        "interface_ip": "10.2.3.32"
      },
      {
        "interface_ip": "10.2.3.39"
      },
      {
        "interface_ip": "10.2.3.43"
      },
      {
        "interface_ip": "10.2.3.53"
      },
      {
        "interface_ip": "10.2.3.54"
      },
      {
        "interface_ip": "10.2.3.66"
      },
      {
        "interface_ip": "10.2.3.67"
      },
      {
        "interface_ip": "10.2.3.73"
      },
      {
        "interface_ip": "10.2.3.74"
      },
      {
        "interface_ip": "10.2.3.79"
      },
      {
        "interface_ip": "10.2.3.82"
      },
      {
        "interface_ip": "10.2.3.85"
      },
      {
        "interface_ip": "10.2.3.94"
      },
      {
        "interface_ip": "10.2.3.97"
      },
      {
        "interface_ip": "10.2.3.101"
      },
      {
        "interface_ip": "10.2.3.109"
      },
      {
        "interface_ip": "10.2.3.113"
      },
      {
        "interface_ip": "10.2.3.114"
      },
      {
        "interface_ip": "10.2.3.127"
      },
      {
        "interface_ip": "10.2.3.128"
      },
      {
        "interface_ip": "10.2.3.137"
      },
      {
        "interface_ip": "10.2.3.144"
      },
      {
        "interface_ip": "10.2.3.158"
      },
      {
        "interface_ip": "10.2.3.162"
      },
      {
        "interface_ip": "10.2.3.163"
      },
      {
        "interface_ip": "10.2.3.176"
      },
      {
        "interface_ip": "10.2.3.178"
      },
      {
        "interface_ip": "10.2.3.186"
      },
      {
        "interface_ip": "10.2.3.190"
      },
      {
        "interface_ip": "10.2.4.6"
      },
      {
        "interface_ip": "10.2.4.9"
      },
      {
        "interface_ip": "10.2.4.13"
      },
      {
        "interface_ip": "10.2.4.15"
      },
      {
        "interface_ip": "10.2.4.26"
      },
      {
        "interface_ip": "10.2.4.35"
      },
      {
        "interface_ip": "10.2.4.42"
      },
      {
        "interface_ip": "10.2.4.46"
      },
      {
        "interface_ip": "10.2.4.47"
      },
      {
        "interface_ip": "10.2.4.61"
      },
      {
        "interface_ip": "10.2.4.62"
      },
      {
        "interface_ip": "10.2.4.64"
      },
      {
        "interface_ip": "10.2.4.67"
      },
      {
        "interface_ip": "10.2.4.68"
      },
      {
        "interface_ip": "10.2.4.69"
      },
      {
        "interface_ip": "10.2.4.75"
      },
      {
        "interface_ip": "10.2.4.77"
      },
      {
        "interface_ip": "10.2.4.80"
      },
      {
        "interface_ip": "10.2.4.89"
      },
      {
        "interface_ip": "10.2.4.92"
      },
      {
        "interface_ip": "10.2.4.100"
      },
      {
        "interface_ip": "10.2.4.102"
      },
      {
        "interface_ip": "10.2.4.115"
      },
      {
        "interface_ip": "10.2.4.116"
      },
      {
        "interface_ip": "10.2.4.119"
      },
      {
        "interface_ip": "10.2.4.121"
      },
      {
        "interface_ip": "10.2.4.129"
      },
      {
        "interface_ip": "10.2.4.141"
      },
      {
        "interface_ip": "10.2.4.149"
      },
      {
        "interface_ip": "10.2.4.151"
      },
      {
        "interface_ip": "10.2.4.158"
      },
      {
        "interface_ip": "10.2.4.169"
      },
      {
        "interface_ip": "10.2.4.174"
      },
      {
        "interface_ip": "10.2.4.176"
      },
      {
        "interface_ip": "10.2.4.180"
      },
      {
        "interface_ip": "10.2.4.181"
      },
      {
        "interface_ip": "10.2.4.182"
      },
      {
        "interface_ip": "10.2.4.192"
      },
      {
        "interface_ip": "10.2.5.10"
      },
      {
        "interface_ip": "10.2.5.14"
      },
      {
        "interface_ip": "10.2.5.15"
      },
      {
        "interface_ip": "10.2.5.29"
      },
      {
        "interface_ip": "10.2.5.30"
      },
      {
        "interface_ip": "10.2.5.32"
      },
      {
        "interface_ip": "10.2.5.42"
      },
      {
        "interface_ip": "10.2.5.48"
      },
      {
        "interface_ip": "10.2.5.62"
      },
      {
        "interface_ip": "10.2.5.63"
      },
      {
        "interface_ip": "10.2.5.64"
      },
      {
        "interface_ip": "10.2.5.66"
      },
      {
        "interface_ip": "10.2.5.70"
      },
      {
        "interface_ip": "10.2.5.72"
      },
      {
        "interface_ip": "10.2.5.74"
      },
      {
        "interface_ip": "10.2.5.77"
      },
      {
        "interface_ip": "10.2.5.79"
      },
      {
        "interface_ip": "10.2.5.84"
      },
      {
        "interface_ip": "10.2.5.88"
      },
      {
        "interface_ip": "10.2.5.89"
      },
      {
        "interface_ip": "10.2.5.90"
      },
      {
        "interface_ip": "10.2.5.95"
      },
      {
        "interface_ip": "10.2.5.97"
      },
      {
        "interface_ip": "10.2.5.99"
      },
      {
        "interface_ip": "10.2.5.108"
      },
      {
        "interface_ip": "10.2.5.117"
      },
      {
        "interface_ip": "10.2.5.128"
      },
      {
        "interface_ip": "10.2.5.132"
      },
      {
        "interface_ip": "10.2.5.133"
      },
      {
        "interface_ip": "10.2.5.137"
      },
      {
        "interface_ip": "10.2.5.142"
      },
      {
        "interface_ip": "10.2.5.143"
      },
      {
        "interface_ip": "10.2.5.151"
      },
      {
        "interface_ip": "10.2.5.153"
      },
      {
        "interface_ip": "10.2.5.154"
      },
      {
        "interface_ip": "10.2.5.164"
      },
      {
        "interface_ip": "10.2.5.174"
      },
      {
        "interface_ip": "10.2.5.177"
      },
      {
        "interface_ip": "10.2.5.178"
      },
      {
        "interface_ip": "10.2.5.179"
      },
      {
        "interface_ip": "10.2.5.180"
      },
      {
        "interface_ip": "10.2.5.182"
      },
      {
        "interface_ip": "10.2.5.186"
      },
      {
        "interface_ip": "10.2.5.191"
      },
      {
        "interface_ip": "10.2.5.192"
      },
      {
        "interface_ip": "10.2.5.198"
      },
      {
        "interface_ip": "10.2.6.1"
      },
      {
        "interface_ip": "10.2.6.3"
      },
      {
        "interface_ip": "10.2.6.7"
      },
      {
        "interface_ip": "10.2.6.14"
      },
      {
        "interface_ip": "10.2.6.22"
      },
      {
        "interface_ip": "10.2.6.23"
      },
      {
        "interface_ip": "10.2.6.34"
      },
      {
        "interface_ip": "10.2.6.37"
      },
      {
        "interface_ip": "10.2.6.44"
      },
      {
        "interface_ip": "10.2.6.48"
      },
      {
        "interface_ip": "10.2.6.51"
      },
      {
        "interface_ip": "10.2.6.56"
      },
      {
        "interface_ip": "10.2.6.59"
      },
      {
        "interface_ip": "10.2.6.64"
      },
      {
        "interface_ip": "10.2.6.66"
      },
      {
        "interface_ip": "10.2.6.67"
      },
      {
        "interface_ip": "10.2.6.68"
      },
      {
        "interface_ip": "10.2.6.74"
      },
      {
        "interface_ip": "10.2.6.75"
      },
      {
        "interface_ip": "10.2.6.78"
      },
      {
        "interface_ip": "10.2.6.80"
      },
      {
        "interface_ip": "10.2.6.90"
      },
      {
        "interface_ip": "10.2.6.97"
      },
      {
        "interface_ip": "10.2.6.116"
      },
      {
        "interface_ip": "10.2.6.129"
      },
      {
        "interface_ip": "10.2.6.133"
      },
      {
        "interface_ip": "10.2.6.135"
      },
      {
        "interface_ip": "10.2.6.137"
      },
      {
        "interface_ip": "10.2.6.155"
      },
      {
        "interface_ip": "10.2.6.163"
      },
      {
        "interface_ip": "10.2.6.166"
      },
      {
        "interface_ip": "10.2.6.170"
      },
      {
        "interface_ip": "10.2.6.175"
      },
      {
        "interface_ip": "10.2.6.181"
      },
      {
        "interface_ip": "10.2.6.182"
      },
      {
        "interface_ip": "10.2.6.190"
      },
      {
        "interface_ip": "10.2.6.200"
      },
      {
        "interface_ip": "10.2.7.3"
      },
      {
        "interface_ip": "10.2.7.5"
      },
      {
        "interface_ip": "10.2.7.6"
      },
      {
        "interface_ip": "10.2.7.7"
      },
      {
        "interface_ip": "10.2.7.13"
      },
      {
        "interface_ip": "10.2.7.15"
      },
      {
        "interface_ip": "10.2.7.22"
      },
      {
        "interface_ip": "10.2.7.24"
      },
      {
        "interface_ip": "10.2.7.26"
      },
      {
        "interface_ip": "10.2.7.30"
      },
      {
        "interface_ip": "10.2.7.31"
      },
      {
        "interface_ip": "10.2.7.32"
      },
      {
        "interface_ip": "10.2.7.37"
      },
      {
        "interface_ip": "10.2.7.42"
      },
      {
        "interface_ip": "10.2.7.47"
      },
      {
        "interface_ip": "10.2.7.48"
      },
      {
        "interface_ip": "10.2.7.56"
      },
      {
        "interface_ip": "10.2.7.61"
      },
      {
        "interface_ip": "10.2.7.62"
      },
      {
        "interface_ip": "10.2.7.66"
      },
      {
        "interface_ip": "10.2.7.69"
      },
      {
        "interface_ip": "10.2.7.74"
      },
      {
        "interface_ip": "10.2.7.84"
      },
      {
        "interface_ip": "10.2.7.85"
      },
      {
        "interface_ip": "10.2.7.89"
      },
      {
        "interface_ip": "10.2.7.90"
      },
      {
        "interface_ip": "10.2.7.93"
      },
      {
        "interface_ip": "10.2.7.96"
      },
      {
        "interface_ip": "10.2.7.103"
      },
      {
        "interface_ip": "10.2.7.107"
      },
      {
        "interface_ip": "10.2.7.108"
      },
      {
        "interface_ip": "10.2.7.109"
      },
      {
        "interface_ip": "10.2.7.113"
      },
      {
        "interface_ip": "10.2.7.120"
      },
      {
        "interface_ip": "10.2.7.123"
      },
      {
        "interface_ip": "10.2.7.127"
      },
      {
        "interface_ip": "10.2.7.144"
      },
      {
        "interface_ip": "10.2.7.147"
      },
      {
        "interface_ip": "10.2.7.148"
      },
      {
        "interface_ip": "10.2.7.152"
      },
      {
        "interface_ip": "10.2.7.153"
      },
      {
        "interface_ip": "10.2.7.155"
      },
      {
        "interface_ip": "10.2.7.172"
      },
      {
        "interface_ip": "10.2.7.189"
      },
      {
        "interface_ip": "10.2.7.191"
      },
      {
        "interface_ip": "10.2.7.192"
      },
      {
        "interface_ip": "10.2.7.199"
      },
      {
        "interface_ip": "10.2.8.4"
      },
      {
        "interface_ip": "10.2.8.16"
      },
      {
        "interface_ip": "10.2.8.19"
      },
      {
        "interface_ip": "10.2.8.21"
      },
      {
        "interface_ip": "10.2.8.22"
      },
      {
        "interface_ip": "10.2.8.24"
      },
      {
        "interface_ip": "10.2.8.27"
      },
      {
        "interface_ip": "10.2.8.29"
      },
      {
        "interface_ip": "10.2.8.33"
      },
      {
        "interface_ip": "10.2.8.48"
      },
      {
        "interface_ip": "10.2.8.50"
      },
      {
        "interface_ip": "10.2.8.61"
      },
      {
        "interface_ip": "10.2.8.62"
      },
      {
        "interface_ip": "10.2.8.70"
      },
      {
        "interface_ip": "10.2.8.72"
      },
      {
        "interface_ip": "10.2.8.85"
      },
      {
        "interface_ip": "10.2.8.88"
      },
      {
        "interface_ip": "10.2.8.99"
      },
      {
        "interface_ip": "10.2.8.108"
      },
      {
        "interface_ip": "10.2.8.111"
      },
      {
        "interface_ip": "10.2.8.114"
      },
      {
        "interface_ip": "10.2.8.115"
      },
      {
        "interface_ip": "10.2.8.130"
      },
      {
        "interface_ip": "10.2.8.131"
      },
      {
        "interface_ip": "10.2.8.138"
      },
      {
        "interface_ip": "10.2.8.141"
      },
      {
        "interface_ip": "10.2.8.142"
      },
      {
        "interface_ip": "10.2.8.147"
      },
      {
        "interface_ip": "10.2.8.150"
      },
      {
        "interface_ip": "10.2.8.155"
      },
      {
        "interface_ip": "10.2.8.159"
      },
      {
        "interface_ip": "10.2.8.161"
      },
      {
        "interface_ip": "10.2.8.164"
      },
      {
        "interface_ip": "10.2.8.166"
      },
      {
        "interface_ip": "10.2.8.168"
      },
      {
        "interface_ip": "10.2.8.171"
      },
      {
        "interface_ip": "10.2.8.181"
      },
      {
        "interface_ip": "10.2.8.185"
      },
      {
        "interface_ip": "10.2.8.194"
      },
      {
        "interface_ip": "10.2.8.198"
      },
      {
        "interface_ip": "10.2.9.8"
      },
      {
        "interface_ip": "10.2.9.9"
      },
      {
        "interface_ip": "10.2.9.21"
      },
      {
        "interface_ip": "10.2.9.34"
      },
      {
        "interface_ip": "10.2.9.39"
      },
      {
        "interface_ip": "10.2.9.43"
      },
      {
        "interface_ip": "10.2.9.49"
      },
      {
        "interface_ip": "10.2.9.50"
      },
      {
        "interface_ip": "10.2.9.61"
      },
      {
        "interface_ip": "10.2.9.63"
      },
      {
        "interface_ip": "10.2.9.64"
      },
      {
        "interface_ip": "10.2.9.66"
      },
      {
        "interface_ip": "10.2.9.69"
      },
      {
        "interface_ip": "10.2.9.70"
      },
      {
        "interface_ip": "10.2.9.75"
      },
      {
        "interface_ip": "10.2.9.86"
      },
      {
        "interface_ip": "10.2.9.89"
      },
      {
        "interface_ip": "10.2.9.90"
      },
      {
        "interface_ip": "10.2.9.97"
      },
      {
        "interface_ip": "10.2.9.101"
      },
      {
        "interface_ip": "10.2.9.105"
      },
      {
        "interface_ip": "10.2.9.107"
      },
      {
        "interface_ip": "10.2.9.109"
      },
      {
        "interface_ip": "10.2.9.113"
      },
      {
        "interface_ip": "10.2.9.114"
      },
      {
        "interface_ip": "10.2.9.116"
      },
      {
        "interface_ip": "10.2.9.118"
      },
      {
        "interface_ip": "10.2.9.121"
      },
      {
        "interface_ip": "10.2.9.128"
      },
      {
        "interface_ip": "10.2.9.130"
      },
      {
        "interface_ip": "10.2.9.133"
      },
      {
        "interface_ip": "10.2.9.138"
      },
      {
        "interface_ip": "10.2.9.152"
      },
      {
        "interface_ip": "10.2.9.155"
      },
      {
        "interface_ip": "10.2.9.159"
      },
      {
        "interface_ip": "10.2.9.160"
      },
      {
        "interface_ip": "10.2.9.162"
      },
      {
        "interface_ip": "10.2.9.165"
      },
      {
        "interface_ip": "10.2.9.167"
      },
      {
        "interface_ip": "10.2.9.172"
      },
      {
        "interface_ip": "10.2.9.174"
      },
      {
        "interface_ip": "10.2.9.177"
      },
      {
        "interface_ip": "10.2.9.178"
      },
      {
        "interface_ip": "10.2.9.179"
      },
      {
        "interface_ip": "10.2.9.181"
      },
      {
        "interface_ip": "10.2.9.183"
      },
      {
        "interface_ip": "10.2.10.6"
      },
      {
        "interface_ip": "10.2.10.8"
      },
      {
        "interface_ip": "10.2.10.20"
      },
      {
        "interface_ip": "10.2.10.25"
      },
      {
        "interface_ip": "10.2.10.27"
      },
      {
        "interface_ip": "10.2.10.31"
      },
      {
        "interface_ip": "10.2.10.33"
      },
      {
        "interface_ip": "10.2.10.37"
      },
      {
        "interface_ip": "10.2.10.48"
      },
      {
        "interface_ip": "10.2.10.51"
      },
      {
        "interface_ip": "10.2.10.52"
      },
      {
        "interface_ip": "10.2.10.59"
      },
      {
        "interface_ip": "10.2.10.75"
      },
      {
        "interface_ip": "10.2.10.80"
      },
      {
        "interface_ip": "10.2.10.88"
      },
      {
        "interface_ip": "10.2.10.95"
      },
      {
        "interface_ip": "10.2.10.96"
      },
      {
        "interface_ip": "10.2.10.97"
      },
      {
        "interface_ip": "10.2.10.98"
      },
      {
        "interface_ip": "10.2.10.99"
      },
      {
        "interface_ip": "10.2.10.103"
      },
      {
        "interface_ip": "10.2.10.116"
      },
      {
        "interface_ip": "10.2.10.120"
      },
      {
        "interface_ip": "10.2.10.126"
      },
      {
        "interface_ip": "10.2.10.131"
      },
      {
        "interface_ip": "10.2.10.132"
      },
      {
        "interface_ip": "10.2.10.134"
      },
      {
        "interface_ip": "10.2.10.137"
      },
      {
        "interface_ip": "10.2.10.142"
      },
      {
        "interface_ip": "10.2.10.146"
      },
      {
        "interface_ip": "10.2.10.153"
      },
      {
        "interface_ip": "10.2.10.155"
      },
      {
        "interface_ip": "10.2.10.160"
      },
      {
        "interface_ip": "10.2.10.164"
      },
      {
        "interface_ip": "10.2.10.168"
      },
      {
        "interface_ip": "10.2.10.170"
      },
      {
        "interface_ip": "10.2.10.175"
      },
      {
        "interface_ip": "10.2.10.177"
      },
      {
        "interface_ip": "10.2.10.192"
      },
      {
        "interface_ip": "10.2.10.194"
      },
      {
        "interface_ip": "10.2.10.195"
      },
      {
        "interface_ip": "10.2.10.196"
      },
      {
        "interface_ip": "10.2.10.199"
      },
      {
        "interface_ip": "10.3.1.4"
      },
      {
        "interface_ip": "10.3.1.5"
      },
      {
        "interface_ip": "10.3.1.13"
      },
      {
        "interface_ip": "10.3.1.16"
      },
      {
        "interface_ip": "10.3.1.17"
      },
      {
        "interface_ip": "10.3.1.19"
      },
      {
        "interface_ip": "10.3.1.27"
      },
      {
        "interface_ip": "10.3.1.28"
      },
      {
        "interface_ip": "10.3.1.29"
      },
      {
        "interface_ip": "10.3.1.34"
      },
      {
        "interface_ip": "10.3.1.37"
      },
      {
        "interface_ip": "10.3.1.46"
      },
      {
        "interface_ip": "10.3.1.49"
      },
      {
        "interface_ip": "10.3.1.55"
      },
      {
        "interface_ip": "10.3.1.61"
      },
      {
        "interface_ip": "10.3.1.66"
      },
      {
        "interface_ip": "10.3.1.72"
      },
      {
        "interface_ip": "10.3.1.78"
      },
      {
        "interface_ip": "10.3.1.84"
      },
      {
        "interface_ip": "10.3.1.99"
      },
      {
        "interface_ip": "10.3.1.102"
      },
      {
        "interface_ip": "10.3.1.105"
      },
      {
        "interface_ip": "10.3.1.110"
      },
      {
        "interface_ip": "10.3.1.120"
      },
      {
        "interface_ip": "10.3.1.128"
      },
      {
        "interface_ip": "10.3.1.135"
      },
      {
        "interface_ip": "10.3.1.137"
      },
      {
        "interface_ip": "10.3.1.145"
      },
      {
        "interface_ip": "10.3.1.150"
      },
      {
        "interface_ip": "10.3.1.159"
      },
      {
        "interface_ip": "10.3.1.163"
      },
      {
        "interface_ip": "10.3.1.165"
      },
      {
        "interface_ip": "10.3.1.166"
      },
      {
        "interface_ip": "10.3.1.178"
      },
      {
        "interface_ip": "10.3.1.185"
      },
      {
        "interface_ip": "10.3.1.188"
      },
      {
        "interface_ip": "10.3.1.190"
      },
      {
        "interface_ip": "10.3.1.194"
      },
      {
        "interface_ip": "10.3.1.198"
      },
      {
        "interface_ip": "10.3.2.2"
      },
      {
        "interface_ip": "10.3.2.5"
      },
      {
        "interface_ip": "10.3.2.7"
      },
      {
        "interface_ip": "10.3.2.14"
      },
      {
        "interface_ip": "10.3.2.25"
      },
      {
        "interface_ip": "10.3.2.26"
      },
      {
        "interface_ip": "10.3.2.27"
      },
      {
        "interface_ip": "10.3.2.30"
      },
      {
        "interface_ip": "10.3.2.31"
      },
      {
        "interface_ip": "10.3.2.34"
      },
      {
        "interface_ip": "10.3.2.40"
      },
      {
        "interface_ip": "10.3.2.43"
      },
      {
        "interface_ip": "10.3.2.45"
      },
      {
        "interface_ip": "10.3.2.51"
      },
      {
        "interface_ip": "10.3.2.53"
      },
      {
        "interface_ip": "10.3.2.54"
      },
      {
        "interface_ip": "10.3.2.59"
      },
      {
        "interface_ip": "10.3.2.64"
      },
      {
        "interface_ip": "10.3.2.68"
      },
      {
        "interface_ip": "10.3.2.71"
      },
      {
        "interface_ip": "10.3.2.79"
      },
      {
        "interface_ip": "10.3.2.81"
      },
      {
        "interface_ip": "10.3.2.84"
      },
      {
        "interface_ip": "10.3.2.90"
      },
      {
        "interface_ip": "10.3.2.92"
      },
      {
        "interface_ip": "10.3.2.96"
      },
      {
        "interface_ip": "10.3.2.100"
      },
      {
        "interface_ip": "10.3.2.113"
      },
      {
        "interface_ip": "10.3.2.118"
      },
      {
        "interface_ip": "10.3.2.123"
      },
      {
        "interface_ip": "10.3.2.128"
      },
      {
        "interface_ip": "10.3.2.130"
      },
      {
        "interface_ip": "10.3.2.139"
      },
      {
        "interface_ip": "10.3.2.142"
      },
      {
        "interface_ip": "10.3.2.145"
      },
      {
        "interface_ip": "10.3.2.148"
      },
      {
        "interface_ip": "10.3.2.150"
      },
      {
        "interface_ip": "10.3.2.157"
      },
      {
        "interface_ip": "10.3.2.165"
      },
      {
        "interface_ip": "10.3.2.166"
      },
      {
        "interface_ip": "10.3.2.170"
      },
      {
        "interface_ip": "10.3.2.171"
      },
      {
        "interface_ip": "10.3.2.172"
      },
      {
        "interface_ip": "10.3.2.178"
      },
      {
        "interface_ip": "10.3.2.179"
      },
      {
        "interface_ip": "10.3.2.184"
      },
      {
        "interface_ip": "10.3.2.185"
      },
      {
        "interface_ip": "10.3.2.187"
      },
      {
        "interface_ip": "10.3.2.199"
      },
      {
        "interface_ip": "10.3.3.4"
      },
      {
        "interface_ip": "10.3.3.11"
      },
      {
        "interface_ip": "10.3.3.14"
      },
      {
        "interface_ip": "10.3.3.24"
      },
      {
        "interface_ip": "10.3.3.49"
      },
      {
        "interface_ip": "10.3.3.52"
      },
      {
        "interface_ip": "10.3.3.53"
      },
      {
        "interface_ip": "10.3.3.54"
      },
      {
        "interface_ip": "10.3.3.56"
      },
      {
        "interface_ip": "10.3.3.65"
      },
      {
        "interface_ip": "10.3.3.72"
      },
      {
        "interface_ip": "10.3.3.74"
      },
      {
        "interface_ip": "10.3.3.86"
      },
      {
        "interface_ip": "10.3.3.87"
      },
      {
        "interface_ip": "10.3.3.90"
      },
      {
        "interface_ip": "10.3.3.91"
      },
      {
        "interface_ip": "10.3.3.93"
      },
      {
        "interface_ip": "10.3.3.98"
      },
      {
        "interface_ip": "10.3.3.100"
      },
      {
        "interface_ip": "10.3.3.111"
      },
      {
        "interface_ip": "10.3.3.112"
      },
      {
        "interface_ip": "10.3.3.116"
      },
      {
        "interface_ip": "10.3.3.118"
      },
      {
        "interface_ip": "10.3.3.120"
      },
      {
        "interface_ip": "10.3.3.125"
      },
      {
        "interface_ip": "10.3.3.126"
      },
      {
        "interface_ip": "10.3.3.128"
      },
      {
        "interface_ip": "10.3.3.132"
      },
      {
        "interface_ip": "10.3.3.136"
      },
      {
        "interface_ip": "10.3.3.144"
      },
      {
        "interface_ip": "10.3.3.150"
      },
      {
        "interface_ip": "10.3.3.162"
      },
      {
        "interface_ip": "10.3.3.169"
      },
      {
        "interface_ip": "10.3.3.177"
      },
      {
        "interface_ip": "10.3.3.179"
      },
      {
        "interface_ip": "10.3.3.180"
      },
      {
        "interface_ip": "10.3.3.182"
      },
      {
        "interface_ip": "10.3.3.194"
      },
      {
        "interface_ip": "10.3.3.195"
      },
      {
        "interface_ip": "10.3.3.199"
      },
      {
        "interface_ip": "10.3.3.200"
      },
      {
        "interface_ip": "10.3.4.5"
      },
      {
        "interface_ip": "10.3.4.15"
      },
      {
        "interface_ip": "10.3.4.25"
      },
      {
        "interface_ip": "10.3.4.28"
      },
      {
        "interface_ip": "10.3.4.31"
      },
      {
        "interface_ip": "10.3.4.42"
      },
      {
        "interface_ip": "10.3.4.44"
      },
      {
        "interface_ip": "10.3.4.57"
      },
      {
        "interface_ip": "10.3.4.58"
      },
      {
        "interface_ip": "10.3.4.62"
      },
      {
        "interface_ip": "10.3.4.72"
      },
      {
        "interface_ip": "10.3.4.78"
      },
      {
        "interface_ip": "10.3.4.85"
      },
      {
        "interface_ip": "10.3.4.91"
      },
      {
        "interface_ip": "10.3.4.94"
      },
      {
        "interface_ip": "10.3.4.107"
      },
      {
        "interface_ip": "10.3.4.111"
      },
      {
        "interface_ip": "10.3.4.113"
      },
      {
        "interface_ip": "10.3.4.117"
      },
      {
        "interface_ip": "10.3.4.119"
      },
      {
        "interface_ip": "10.3.4.123"
      },
      {
        "interface_ip": "10.3.4.126"
      },
      {
        "interface_ip": "10.3.4.138"
      },
      {
        "interface_ip": "10.3.4.141"
      },
      {
        "interface_ip": "10.3.4.146"
      },
      {
        "interface_ip": "10.3.4.155"
      },
      {
        "interface_ip": "10.3.4.158"
      },
      {
        "interface_ip": "10.3.4.160"
      },
      {
        "interface_ip": "10.3.4.161"
      },
      {
        "interface_ip": "10.3.4.163"
      },
      {
        "interface_ip": "10.3.4.166"
      },
      {
        "interface_ip": "10.3.4.168"
      },
      {
        "interface_ip": "10.3.4.170"
      },
      {
        "interface_ip": "10.3.4.171"
      },
      {
        "interface_ip": "10.3.4.172"
      },
      {
        "interface_ip": "10.3.4.175"
      },
      {
        "interface_ip": "10.3.4.176"
      },
      {
        "interface_ip": "10.3.4.178"
      },
      {
        "interface_ip": "10.3.4.190"
      },
      {
        "interface_ip": "10.3.4.193"
      },
      {
        "interface_ip": "10.3.4.197"
      },
      {
        "interface_ip": "10.3.4.200"
      },
      {
        "interface_ip": "10.3.5.1"
      },
      {
        "interface_ip": "10.3.5.4"
      },
      {
        "interface_ip": "10.3.5.7"
      },
      {
        "interface_ip": "10.3.5.9"
      },
      {
        "interface_ip": "10.3.5.15"
      },
      {
        "interface_ip": "10.3.5.16"
      },
      {
        "interface_ip": "10.3.5.24"
      },
      {
        "interface_ip": "10.3.5.26"
      },
      {
        "interface_ip": "10.3.5.35"
      },
      {
        "interface_ip": "10.3.5.40"
      },
      {
        "interface_ip": "10.3.5.44"
      },
      {
        "interface_ip": "10.3.5.52"
      },
      {
        "interface_ip": "10.3.5.55"
      },
      {
        "interface_ip": "10.3.5.58"
      },
      {
        "interface_ip": "10.3.5.63"
      },
      {
        "interface_ip": "10.3.5.72"
      },
      {
        "interface_ip": "10.3.5.88"
      },
      {
        "interface_ip": "10.3.5.89"
      },
      {
        "interface_ip": "10.3.5.104"
      },
      {
        "interface_ip": "10.3.5.105"
      },
      {
        "interface_ip": "10.3.5.112"
      },
      {
        "interface_ip": "10.3.5.119"
      },
      {
        "interface_ip": "10.3.5.126"
      },
      {
        "interface_ip": "10.3.5.127"
      },
      {
        "interface_ip": "10.3.5.140"
      },
      {
        "interface_ip": "10.3.5.146"
      },
      {
        "interface_ip": "10.3.5.148"
      },
      {
        "interface_ip": "10.3.5.151"
      },
      {
        "interface_ip": "10.3.5.153"
      },
      {
        "interface_ip": "10.3.5.154"
      },
      {
        "interface_ip": "10.3.5.155"
      },
      {
        "interface_ip": "10.3.5.158"
      },
      {
        "interface_ip": "10.3.5.161"
      },
      {
        "interface_ip": "10.3.5.162"
      },
      {
        "interface_ip": "10.3.5.166"
      },
      {
        "interface_ip": "10.3.5.173"
      },
      {
        "interface_ip": "10.3.5.177"
      },
      {
        "interface_ip": "10.3.5.187"
      },
      {
        "interface_ip": "10.3.5.195"
      },
      {
        "interface_ip": "10.3.5.196"
      },
      {
        "interface_ip": "10.3.5.199"
      },
      {
        "interface_ip": "10.3.6.5"
      },
      {
        "interface_ip": "10.3.6.7"
      },
      {
        "interface_ip": "10.3.6.8"
      },
      {
        "interface_ip": "10.3.6.11"
      },
      {
        "interface_ip": "10.3.6.15"
      },
      {
        "interface_ip": "10.3.6.22"
      },
      {
        "interface_ip": "10.3.6.31"
      },
      {
        "interface_ip": "10.3.6.34"
      },
      {
        "interface_ip": "10.3.6.38"
      },
      {
        "interface_ip": "10.3.6.40"
      },
      {
        "interface_ip": "10.3.6.41"
      },
      {
        "interface_ip": "10.3.6.42"
      },
      {
        "interface_ip": "10.3.6.43"
      },
      {
        "interface_ip": "10.3.6.44"
      },
      {
        "interface_ip": "10.3.6.50"
      },
      {
        "interface_ip": "10.3.6.56"
      },
      {
        "interface_ip": "10.3.6.57"
      },
      {
        "interface_ip": "10.3.6.58"
      },
      {
        "interface_ip": "10.3.6.66"
      },
      {
        "interface_ip": "10.3.6.74"
      },
      {
        "interface_ip": "10.3.6.87"
      },
      {
        "interface_ip": "10.3.6.90"
      },
      {
        "interface_ip": "10.3.6.93"
      },
      {
        "interface_ip": "10.3.6.96"
      },
      {
        "interface_ip": "10.3.6.97"
      },
      {
        "interface_ip": "10.3.6.105"
      },
      {
        "interface_ip": "10.3.6.108"
      },
      {
        "interface_ip": "10.3.6.114"
      },
      {
        "interface_ip": "10.3.6.115"
      },
      {
        "interface_ip": "10.3.6.121"
      },
      {
        "interface_ip": "10.3.6.126"
      },
      {
        "interface_ip": "10.3.6.131"
      },
      {
        "interface_ip": "10.3.6.132"
      },
      {
        "interface_ip": "10.3.6.136"
      },
      {
        "interface_ip": "10.3.6.148"
      },
      {
        "interface_ip": "10.3.6.152"
      },
      {
        "interface_ip": "10.3.6.154"
      },
      {
        "interface_ip": "10.3.6.165"
      },
      {
        "interface_ip": "10.3.6.172"
      },
      {
        "interface_ip": "10.3.6.191"
      },
      {
        "interface_ip": "10.3.6.195"
      },
      {
        "interface_ip": "10.3.6.199"
      },
      {
        "interface_ip": "10.3.7.6"
      },
      {
        "interface_ip": "10.3.7.7"
      },
      {
        "interface_ip": "10.3.7.13"
      },
      {
        "interface_ip": "10.3.7.16"
      },
      {
        "interface_ip": "10.3.7.17"
      },
      {
        "interface_ip": "10.3.7.18"
      },
      {
        "interface_ip": "10.3.7.19"
      },
      {
        "interface_ip": "10.3.7.20"
      },
      {
        "interface_ip": "10.3.7.26"
      },
      {
        "interface_ip": "10.3.7.34"
      },
      {
        "interface_ip": "10.3.7.37"
      },
      {
        "interface_ip": "10.3.7.43"
      },
      {
        "interface_ip": "10.3.7.50"
      },
      {
        "interface_ip": "10.3.7.55"
      },
      {
        "interface_ip": "10.3.7.59"
      },
      {
        "interface_ip": "10.3.7.63"
      },
      {
        "interface_ip": "10.3.7.74"
      },
      {
        "interface_ip": "10.3.7.83"
      },
      {
        "interface_ip": "10.3.7.90"
      },
      {
        "interface_ip": "10.3.7.94"
      },
      {
        "interface_ip": "10.3.7.96"
      },
      {
        "interface_ip": "10.3.7.103"
      },
      {
        "interface_ip": "10.3.7.112"
      },
      {
        "interface_ip": "10.3.7.117"
      },
      {
        "interface_ip": "10.3.7.121"
      },
      {
        "interface_ip": "10.3.7.122"
      },
      {
        "interface_ip": "10.3.7.124"
      },
      {
        "interface_ip": "10.3.7.127"
      },
      {
        "interface_ip": "10.3.7.137"
      },
      {
        "interface_ip": "10.3.7.151"
      },
      {
        "interface_ip": "10.3.7.158"
      },
      {
        "interface_ip": "10.3.7.159"
      },
      {
        "interface_ip": "10.3.7.160"
      },
      {
        "interface_ip": "10.3.7.173"
      },
      {
        "interface_ip": "10.3.7.175"
      },
      {
        "interface_ip": "10.3.7.178"
      },
      {
        "interface_ip": "10.3.7.179"
      },
      {
        "interface_ip": "10.3.8.4"
      },
      {
        "interface_ip": "10.3.8.8"
      },
      {
        "interface_ip": "10.3.8.12"
      },
      {
        "interface_ip": "10.3.8.18"
      },
      {
        "interface_ip": "10.3.8.25"
      },
      {
        "interface_ip": "10.3.8.27"
      },
      {
        "interface_ip": "10.3.8.31"
      },
      {
        "interface_ip": "10.3.8.32"
      },
      {
        "interface_ip": "10.3.8.35"
      },
      {
        "interface_ip": "10.3.8.38"
      },
      {
        "interface_ip": "10.3.8.54"
      },
      {
        "interface_ip": "10.3.8.61"
      },
      {
        "interface_ip": "10.3.8.63"
      },
      {
        "interface_ip": "10.3.8.71"
      },
      {
        "interface_ip": "10.3.8.80"
      },
      {
        "interface_ip": "10.3.8.89"
      },
      {
        "interface_ip": "10.3.8.101"
      },
      {
        "interface_ip": "10.3.8.102"
      },
      {
        "interface_ip": "10.3.8.105"
      },
      {
        "interface_ip": "10.3.8.112"
      },
      {
        "interface_ip": "10.3.8.123"
      },
      {
        "interface_ip": "10.3.8.136"
      },
      {
        "interface_ip": "10.3.8.148"
      },
      {
        "interface_ip": "10.3.8.154"
      },
      {
        "interface_ip": "10.3.8.155"
      },
      {
        "interface_ip": "10.3.8.168"
      },
      {
        "interface_ip": "10.3.8.182"
      },
      {
        "interface_ip": "10.3.8.183"
      },
      {
        "interface_ip": "10.3.8.192"
      },
      {
        "interface_ip": "10.3.9.1"
      },
      {
        "interface_ip": "10.3.9.11"
      },
      {
        "interface_ip": "10.3.9.13"
      },
      {
        "interface_ip": "10.3.9.18"
      },
      {
        "interface_ip": "10.3.9.31"
      },
      {
        "interface_ip": "10.3.9.36"
      },
      {
        "interface_ip": "10.3.9.59"
      },
      {
        "interface_ip": "10.3.9.61"
      },
      {
        "interface_ip": "10.3.9.64"
      },
      {
        "interface_ip": "10.3.9.69"
      },
      {
        "interface_ip": "10.3.9.74"
      },
      {
        "interface_ip": "10.3.9.82"
      },
      {
        "interface_ip": "10.3.9.84"
      },
      {
        "interface_ip": "10.3.9.94"
      },
      {
        "interface_ip": "10.3.9.104"
      },
      {
        "interface_ip": "10.3.9.123"
      },
      {
        "interface_ip": "10.3.9.124"
      },
      {
        "interface_ip": "10.3.9.134"
      },
      {
        "interface_ip": "10.3.9.140"
      },
      {
        "interface_ip": "10.3.9.143"
      },
      {
        "interface_ip": "10.3.9.151"
      },
      {
        "interface_ip": "10.3.9.158"
      },
      {
        "interface_ip": "10.3.9.167"
      },
      {
        "interface_ip": "10.3.9.175"
      },
      {
        "interface_ip": "10.3.9.181"
      },
      {
        "interface_ip": "10.3.9.184"
      },
      {
        "interface_ip": "10.3.9.187"
      },
      {
        "interface_ip": "10.3.9.188"
      },
      {
        "interface_ip": "10.3.9.193"
      },
      {
        "interface_ip": "10.3.9.194"
      },
      {
        "interface_ip": "10.3.9.200"
      },
      {
        "interface_ip": "10.3.10.2"
      },
      {
        "interface_ip": "10.3.10.3"
      },
      {
        "interface_ip": "10.3.10.7"
      },
      {
        "interface_ip": "10.3.10.14"
      },
      {
        "interface_ip": "10.3.10.15"
      },
      {
        "interface_ip": "10.3.10.17"
      },
      {
        "interface_ip": "10.3.10.24"
      },
      {
        "interface_ip": "10.3.10.25"
      },
      {
        "interface_ip": "10.3.10.37"
      },
      {
        "interface_ip": "10.3.10.39"
      },
      {
        "interface_ip": "10.3.10.42"
      },
      {
        "interface_ip": "10.3.10.46"
      },
      {
        "interface_ip": "10.3.10.51"
      },
      {
        "interface_ip": "10.3.10.53"
      },
      {
        "interface_ip": "10.3.10.55"
      },
      {
        "interface_ip": "10.3.10.59"
      },
      {
        "interface_ip": "10.3.10.65"
      },
      {
        "interface_ip": "10.3.10.67"
      },
      {
        "interface_ip": "10.3.10.72"
      },
      {
        "interface_ip": "10.3.10.78"
      },
      {
        "interface_ip": "10.3.10.85"
      },
      {
        "interface_ip": "10.3.10.108"
      },
      {
        "interface_ip": "10.3.10.109"
      },
      {
        "interface_ip": "10.3.10.125"
      },
      {
        "interface_ip": "10.3.10.126"
      },
      {
        "interface_ip": "10.3.10.139"
      },
      {
        "interface_ip": "10.3.10.140"
      },
      {
        "interface_ip": "10.3.10.144"
      },
      {
        "interface_ip": "10.3.10.152"
      },
      {
        "interface_ip": "10.3.10.154"
      },
      {
        "interface_ip": "10.3.10.155"
      },
      {
        "interface_ip": "10.3.10.163"
      },
      {
        "interface_ip": "10.3.10.168"
      },
      {
        "interface_ip": "10.3.10.172"
      },
      {
        "interface_ip": "10.3.10.190"
      },
      {
        "interface_ip": "10.3.10.195"
      },
      {
        "interface_ip": "10.3.10.200"
      },
      {
        "interface_ip": "10.4.1.7"
      },
      {
        "interface_ip": "10.4.1.13"
      },
      {
        "interface_ip": "10.4.1.15"
      },
      {
        "interface_ip": "10.4.1.24"
      },
      {
        "interface_ip": "10.4.1.27"
      },
      {
        "interface_ip": "10.4.1.34"
      },
      {
        "interface_ip": "10.4.1.35"
      },
      {
        "interface_ip": "10.4.1.39"
      },
      {
        "interface_ip": "10.4.1.42"
      },
      {
        "interface_ip": "10.4.1.48"
      },
      {
        "interface_ip": "10.4.1.55"
      },
      {
        "interface_ip": "10.4.1.56"
      },
      {
        "interface_ip": "10.4.1.64"
      },
      {
        "interface_ip": "10.4.1.65"
      },
      {
        "interface_ip": "10.4.1.68"
      },
      {
        "interface_ip": "10.4.1.71"
      },
      {
        "interface_ip": "10.4.1.73"
      },
      {
        "interface_ip": "10.4.1.77"
      },
      {
        "interface_ip": "10.4.1.80"
      },
      {
        "interface_ip": "10.4.1.81"
      },
      {
        "interface_ip": "10.4.1.101"
      },
      {
        "interface_ip": "10.4.1.107"
      },
      {
        "interface_ip": "10.4.1.118"
      },
      {
        "interface_ip": "10.4.1.119"
      },
      {
        "interface_ip": "10.4.1.122"
      },
      {
        "interface_ip": "10.4.1.123"
      },
      {
        "interface_ip": "10.4.1.126"
      },
      {
        "interface_ip": "10.4.1.134"
      },
      {
        "interface_ip": "10.4.1.140"
      },
      {
        "interface_ip": "10.4.1.152"
      },
      {
        "interface_ip": "10.4.1.156"
      },
      {
        "interface_ip": "10.4.1.157"
      },
      {
        "interface_ip": "10.4.1.159"
      },
      {
        "interface_ip": "10.4.1.167"
      },
      {
        "interface_ip": "10.4.1.168"
      },
      {
        "interface_ip": "10.4.1.183"
      },
      {
        "interface_ip": "10.4.1.188"
      },
      {
        "interface_ip": "10.4.1.189"
      },
      {
        "interface_ip": "10.4.1.194"
      },
      {
        "interface_ip": "10.4.2.4"
      },
      {
        "interface_ip": "10.4.2.8"
      },
      {
        "interface_ip": "10.4.2.22"
      },
      {
        "interface_ip": "10.4.2.24"
      },
      {
        "interface_ip": "10.4.2.27"
      },
      {
        "interface_ip": "10.4.2.31"
      },
      {
        "interface_ip": "10.4.2.36"
      },
      {
        "interface_ip": "10.4.2.45"
      },
      {
        "interface_ip": "10.4.2.46"
      },
      {
        "interface_ip": "10.4.2.54"
      },
      {
        "interface_ip": "10.4.2.60"
      },
      {
        "interface_ip": "10.4.2.68"
      },
      {
        "interface_ip": "10.4.2.72"
      },
      {
        "interface_ip": "10.4.2.73"
      },
      {
        "interface_ip": "10.4.2.82"
      },
      {
        "interface_ip": "10.4.2.86"
      },
      {
        "interface_ip": "10.4.2.92"
      },
      {
        "interface_ip": "10.4.2.95"
      },
      {
        "interface_ip": "10.4.2.103"
      },
      {
        "interface_ip": "10.4.2.107"
      },
      {
        "interface_ip": "10.4.2.112"
      },
      {
        "interface_ip": "10.4.2.116"
      },
      {
        "interface_ip": "10.4.2.129"
      },
      {
        "interface_ip": "10.4.2.139"
      },
      {
        "interface_ip": "10.4.2.142"
      },
      {
        "interface_ip": "10.4.2.146"
      },
      {
        "interface_ip": "10.4.2.153"
      },
      {
        "interface_ip": "10.4.2.154"
      },
      {
        "interface_ip": "10.4.2.157"
      },
      {
        "interface_ip": "10.4.2.159"
      },
      {
        "interface_ip": "10.4.2.163"
      },
      {
        "interface_ip": "10.4.2.164"
      },
      {
        "interface_ip": "10.4.2.166"
      },
      {
        "interface_ip": "10.4.2.173"
      },
      {
        "interface_ip": "10.4.2.177"
      },
      {
        "interface_ip": "10.4.2.183"
      },
      {
        "interface_ip": "10.4.2.191"
      },
      {
        "interface_ip": "10.4.2.198"
      },
      {
        "interface_ip": "10.4.3.4"
      },
      {
        "interface_ip": "10.4.3.10"
      },
      {
        "interface_ip": "10.4.3.22"
      },
      {
        "interface_ip": "10.4.3.25"
      },
      {
        "interface_ip": "10.4.3.30"
      },
      {
        "interface_ip": "10.4.3.34"
      },
      {
        "interface_ip": "10.4.3.35"
      },
      {
        "interface_ip": "10.4.3.37"
      },
      {
        "interface_ip": "10.4.3.44"
      },
      {
        "interface_ip": "10.4.3.54"
      },
      {
        "interface_ip": "10.4.3.57"
      },
      {
        "interface_ip": "10.4.3.69"
      },
      {
        "interface_ip": "10.4.3.81"
      },
      {
        "interface_ip": "10.4.3.87"
      },
      {
        "interface_ip": "10.4.3.89"
      },
      {
        "interface_ip": "10.4.3.90"
      },
      {
        "interface_ip": "10.4.3.91"
      },
      {
        "interface_ip": "10.4.3.97"
      },
      {
        "interface_ip": "10.4.3.98"
      },
      {
        "interface_ip": "10.4.3.99"
      },
      {
        "interface_ip": "10.4.3.108"
      },
      {
        "interface_ip": "10.4.3.124"
      },
      {
        "interface_ip": "10.4.3.130"
      },
      {
        "interface_ip": "10.4.3.134"
      },
      {
        "interface_ip": "10.4.3.136"
      },
      {
        "interface_ip": "10.4.3.153"
      },
      {
        "interface_ip": "10.4.3.162"
      },
      {
        "interface_ip": "10.4.3.168"
      },
      {
        "interface_ip": "10.4.3.170"
      },
      {
        "interface_ip": "10.4.3.174"
      },
      {
        "interface_ip": "10.4.3.176"
      },
      {
        "interface_ip": "10.4.3.179"
      },
      {
        "interface_ip": "10.4.3.186"
      },
      {
        "interface_ip": "10.4.3.192"
      },
      {
        "interface_ip": "10.4.3.194"
      },
      {
        "interface_ip": "10.4.3.196"
      },
      {
        "interface_ip": "10.4.3.198"
      },
      {
        "interface_ip": "10.4.4.1"
      },
      {
        "interface_ip": "10.4.4.6"
      },
      {
        "interface_ip": "10.4.4.7"
      },
      {
        "interface_ip": "10.4.4.9"
      },
      {
        "interface_ip": "10.4.4.25"
      },
      {
        "interface_ip": "10.4.4.26"
      },
      {
        "interface_ip": "10.4.4.31"
      },
      {
        "interface_ip": "10.4.4.35"
      },
      {
        "interface_ip": "10.4.4.38"
      },
      {
        "interface_ip": "10.4.4.41"
      },
      {
        "interface_ip": "10.4.4.42"
      },
      {
        "interface_ip": "10.4.4.44"
      },
      {
        "interface_ip": "10.4.4.64"
      },
      {
        "interface_ip": "10.4.4.69"
      },
      {
        "interface_ip": "10.4.4.73"
      },
      {
        "interface_ip": "10.4.4.74"
      },
      {
        "interface_ip": "10.4.4.77"
      },
      {
        "interface_ip": "10.4.4.89"
      },
      {
        "interface_ip": "10.4.4.92"
      },
      {
        "interface_ip": "10.4.4.99"
      },
      {
        "interface_ip": "10.4.4.107"
      },
      {
        "interface_ip": "10.4.4.112"
      },
      {
        "interface_ip": "10.4.4.122"
      },
      {
        "interface_ip": "10.4.4.134"
      },
      {
        "interface_ip": "10.4.4.144"
      },
      {
        "interface_ip": "10.4.4.148"
      },
      {
        "interface_ip": "10.4.4.169"
      },
      {
        "interface_ip": "10.4.4.180"
      },
      {
        "interface_ip": "10.4.4.182"
      },
      {
        "interface_ip": "10.4.5.1"
      },
      {
        "interface_ip": "10.4.5.3"
      },
      {
        "interface_ip": "10.4.5.8"
      },
      {
        "interface_ip": "10.4.5.26"
      },
      {
        "interface_ip": "10.4.5.33"
      },
      {
        "interface_ip": "10.4.5.34"
      },
      {
        "interface_ip": "10.4.5.49"
      },
      {
        "interface_ip": "10.4.5.57"
      },
      {
        "interface_ip": "10.4.5.61"
      },
      {
        "interface_ip": "10.4.5.63"
      },
      {
        "interface_ip": "10.4.5.65"
      },
      {
        "interface_ip": "10.4.5.71"
      },
      {
        "interface_ip": "10.4.5.72"
      },
      {
        "interface_ip": "10.4.5.79"
      },
      {
        "interface_ip": "10.4.5.81"
      },
      {
        "interface_ip": "10.4.5.83"
      },
      {
        "interface_ip": "10.4.5.85"
      },
      {
        "interface_ip": "10.4.5.94"
      },
      {
        "interface_ip": "10.4.5.95"
      },
      {
        "interface_ip": "10.4.5.113"
      },
      {
        "interface_ip": "10.4.5.117"
      },
      {
        "interface_ip": "10.4.5.118"
      },
      {
        "interface_ip": "10.4.5.119"
      },
      {
        "interface_ip": "10.4.5.120"
      },
      {
        "interface_ip": "10.4.5.127"
      },
      {
        "interface_ip": "10.4.5.128"
      },
      {
        "interface_ip": "10.4.5.130"
      },
      {
        "interface_ip": "10.4.5.137"
      },
      {
        "interface_ip": "10.4.5.145"
      },
      {
        "interface_ip": "10.4.5.147"
      },
      {
        "interface_ip": "10.4.5.151"
      },
      {
        "interface_ip": "10.4.5.152"
      },
      {
        "interface_ip": "10.4.5.155"
      },
      {
        "interface_ip": "10.4.5.159"
      },
      {
        "interface_ip": "10.4.5.165"
      },
      {
        "interface_ip": "10.4.5.166"
      },
      {
        "interface_ip": "10.4.5.172"
      },
      {
        "interface_ip": "10.4.5.182"
      },
      {
        "interface_ip": "10.4.5.185"
      },
      {
        "interface_ip": "10.4.5.189"
      },
      {
        "interface_ip": "10.4.5.193"
      },
      {
        "interface_ip": "10.4.5.195"
      },
      {
        "interface_ip": "10.4.6.8"
      },
      {
        "interface_ip": "10.4.6.10"
      },
      {
        "interface_ip": "10.4.6.16"
      },
      {
        "interface_ip": "10.4.6.19"
      },
      {
        "interface_ip": "10.4.6.20"
      },
      {
        "interface_ip": "10.4.6.27"
      },
      {
        "interface_ip": "10.4.6.28"
      },
      {
        "interface_ip": "10.4.6.36"
      },
      {
        "interface_ip": "10.4.6.40"
      },
      {
        "interface_ip": "10.4.6.44"
      },
      {
        "interface_ip": "10.4.6.52"
      },
      {
        "interface_ip": "10.4.6.53"
      },
      {
        "interface_ip": "10.4.6.55"
      },
      {
        "interface_ip": "10.4.6.60"
      },
      {
        "interface_ip": "10.4.6.74"
      },
      {
        "interface_ip": "10.4.6.81"
      },
      {
        "interface_ip": "10.4.6.87"
      },
      {
        "interface_ip": "10.4.6.91"
      },
      {
        "interface_ip": "10.4.6.94"
      },
      {
        "interface_ip": "10.4.6.102"
      },
      {
        "interface_ip": "10.4.6.107"
      },
      {
        "interface_ip": "10.4.6.109"
      },
      {
        "interface_ip": "10.4.6.112"
      },
      {
        "interface_ip": "10.4.6.114"
      },
      {
        "interface_ip": "10.4.6.115"
      },
      {
        "interface_ip": "10.4.6.116"
      },
      {
        "interface_ip": "10.4.6.122"
      },
      {
        "interface_ip": "10.4.6.123"
      },
      {
        "interface_ip": "10.4.6.126"
      },
      {
        "interface_ip": "10.4.6.129"
      },
      {
        "interface_ip": "10.4.6.131"
      },
      {
        "interface_ip": "10.4.6.141"
      },
      {
        "interface_ip": "10.4.6.147"
      },
      {
        "interface_ip": "10.4.6.149"
      },
      {
        "interface_ip": "10.4.6.152"
      },
      {
        "interface_ip": "10.4.6.159"
      },
      {
        "interface_ip": "10.4.6.161"
      },
      {
        "interface_ip": "10.4.6.162"
      },
      {
        "interface_ip": "10.4.6.166"
      },
      {
        "interface_ip": "10.4.6.184"
      },
      {
        "interface_ip": "10.4.6.186"
      },
      {
        "interface_ip": "10.4.6.188"
      },
      {
        "interface_ip": "10.4.6.191"
      },
      {
        "interface_ip": "10.4.6.192"
      },
      {
        "interface_ip": "10.4.7.8"
      },
      {
        "interface_ip": "10.4.7.15"
      },
      {
        "interface_ip": "10.4.7.23"
      },
      {
        "interface_ip": "10.4.7.28"
      },
      {
        "interface_ip": "10.4.7.38"
      },
      {
        "interface_ip": "10.4.7.40"
      },
      {
        "interface_ip": "10.4.7.41"
      },
      {
        "interface_ip": "10.4.7.45"
      },
      {
        "interface_ip": "10.4.7.46"
      },
      {
        "interface_ip": "10.4.7.51"
      },
      {
        "interface_ip": "10.4.7.63"
      },
      {
        "interface_ip": "10.4.7.67"
      },
      {
        "interface_ip": "10.4.7.76"
      },
      {
        "interface_ip": "10.4.7.77"
      },
      {
        "interface_ip": "10.4.7.82"
      },
      {
        "interface_ip": "10.4.7.83"
      },
      {
        "interface_ip": "10.4.7.84"
      },
      {
        "interface_ip": "10.4.7.91"
      },
      {
        "interface_ip": "10.4.7.94"
      },
      {
        "interface_ip": "10.4.7.103"
      },
      {
        "interface_ip": "10.4.7.105"
      },
      {
        "interface_ip": "10.4.7.118"
      },
      {
        "interface_ip": "10.4.7.132"
      },
      {
        "interface_ip": "10.4.7.147"
      },
      {
        "interface_ip": "10.4.7.149"
      },
      {
        "interface_ip": "10.4.7.150"
      },
      {
        "interface_ip": "10.4.7.151"
      },
      {
        "interface_ip": "10.4.7.154"
      },
      {
        "interface_ip": "10.4.7.160"
      },
      {
        "interface_ip": "10.4.7.161"
      },
      {
        "interface_ip": "10.4.7.162"
      },
      {
        "interface_ip": "10.4.7.165"
      },
      {
        "interface_ip": "10.4.7.170"
      },
      {
        "interface_ip": "10.4.7.174"
      },
      {
        "interface_ip": "10.4.7.175"
      },
      {
        "interface_ip": "10.4.7.184"
      },
      {
        "interface_ip": "10.4.7.185"
      },
      {
        "interface_ip": "10.4.7.186"
      },
      {
        "interface_ip": "10.4.7.188"
      },
      {
        "interface_ip": "10.4.7.200"
      },
      {
        "interface_ip": "10.4.8.4"
      },
      {
        "interface_ip": "10.4.8.9"
      },
      {
        "interface_ip": "10.4.8.17"
      },
      {
        "interface_ip": "10.4.8.21"
      },
      {
        "interface_ip": "10.4.8.25"
      },
      {
        "interface_ip": "10.4.8.30"
      },
      {
        "interface_ip": "10.4.8.34"
      },
      {
        "interface_ip": "10.4.8.39"
      },
      {
        "interface_ip": "10.4.8.46"
      },
      {
        "interface_ip": "10.4.8.52"
      },
      {
        "interface_ip": "10.4.8.55"
      },
      {
        "interface_ip": "10.4.8.70"
      },
      {
        "interface_ip": "10.4.8.72"
      },
      {
        "interface_ip": "10.4.8.74"
      },
      {
        "interface_ip": "10.4.8.88"
      },
      {
        "interface_ip": "10.4.8.91"
      },
      {
        "interface_ip": "10.4.8.103"
      },
      {
        "interface_ip": "10.4.8.110"
      },
      {
        "interface_ip": "10.4.8.114"
      },
      {
        "interface_ip": "10.4.8.118"
      },
      {
        "interface_ip": "10.4.8.119"
      },
      {
        "interface_ip": "10.4.8.125"
      },
      {
        "interface_ip": "10.4.8.127"
      },
      {
        "interface_ip": "10.4.8.128"
      },
      {
        "interface_ip": "10.4.8.132"
      },
      {
        "interface_ip": "10.4.8.133"
      },
      {
        "interface_ip": "10.4.8.138"
      },
      {
        "interface_ip": "10.4.8.143"
      },
      {
        "interface_ip": "10.4.8.145"
      },
      {
        "interface_ip": "10.4.8.155"
      },
      {
        "interface_ip": "10.4.8.166"
      },
      {
        "interface_ip": "10.4.8.167"
      },
      {
        "interface_ip": "10.4.8.168"
      },
      {
        "interface_ip": "10.4.8.182"
      },
      {
        "interface_ip": "10.4.8.193"
      },
      {
        "interface_ip": "10.4.8.195"
      },
      {
        "interface_ip": "10.4.9.6"
      },
      {
        "interface_ip": "10.4.9.12"
      },
      {
        "interface_ip": "10.4.9.13"
      },
      {
        "interface_ip": "10.4.9.14"
      },
      {
        "interface_ip": "10.4.9.15"
      },
      {
        "interface_ip": "10.4.9.23"
      },
      {
        "interface_ip": "10.4.9.24"
      },
      {
        "interface_ip": "10.4.9.28"
      },
      {
        "interface_ip": "10.4.9.29"
      },
      {
        "interface_ip": "10.4.9.33"
      },
      {
        "interface_ip": "10.4.9.38"
      },
      {
        "interface_ip": "10.4.9.48"
      },
      {
        "interface_ip": "10.4.9.51"
      },
      {
        "interface_ip": "10.4.9.59"
      },
      {
        "interface_ip": "10.4.9.68"
      },
      {
        "interface_ip": "10.4.9.69"
      },
      {
        "interface_ip": "10.4.9.77"
      },
      {
        "interface_ip": "10.4.9.83"
      },
      {
        "interface_ip": "10.4.9.84"
      },
      {
        "interface_ip": "10.4.9.85"
      },
      {
        "interface_ip": "10.4.9.91"
      },
      {
        "interface_ip": "10.4.9.96"
      },
      {
        "interface_ip": "10.4.9.106"
      },
      {
        "interface_ip": "10.4.9.111"
      },
      {
        "interface_ip": "10.4.9.113"
      },
      {
        "interface_ip": "10.4.9.125"
      },
      {
        "interface_ip": "10.4.9.129"
      },
      {
        "interface_ip": "10.4.9.130"
      },
      {
        "interface_ip": "10.4.9.134"
      },
      {
        "interface_ip": "10.4.9.144"
      },
      {
        "interface_ip": "10.4.9.150"
      },
      {
        "interface_ip": "10.4.9.153"
      },
      {
        "interface_ip": "10.4.9.156"
      },
      {
        "interface_ip": "10.4.9.157"
      },
      {
        "interface_ip": "10.4.9.163"
      },
      {
        "interface_ip": "10.4.9.168"
      },
      {
        "interface_ip": "10.4.9.174"
      },
      {
        "interface_ip": "10.4.9.179"
      },
      {
        "interface_ip": "10.4.9.184"
      },
      {
        "interface_ip": "10.4.9.187"
      },
      {
        "interface_ip": "10.4.9.191"
      },
      {
        "interface_ip": "10.4.9.192"
      },
      {
        "interface_ip": "10.4.9.195"
      },
      {
        "interface_ip": "10.4.10.5"
      },
      {
        "interface_ip": "10.4.10.6"
      },
      {
        "interface_ip": "10.4.10.12"
      },
      {
        "interface_ip": "10.4.10.13"
      },
      {
        "interface_ip": "10.4.10.16"
      },
      {
        "interface_ip": "10.4.10.19"
      },
      {
        "interface_ip": "10.4.10.24"
      },
      {
        "interface_ip": "10.4.10.27"
      },
      {
        "interface_ip": "10.4.10.30"
      },
      {
        "interface_ip": "10.4.10.31"
      },
      {
        "interface_ip": "10.4.10.36"
      },
      {
        "interface_ip": "10.4.10.38"
      },
      {
        "interface_ip": "10.4.10.39"
      },
      {
        "interface_ip": "10.4.10.42"
      },
      {
        "interface_ip": "10.4.10.51"
      },
      {
        "interface_ip": "10.4.10.55"
      },
      {
        "interface_ip": "10.4.10.60"
      },
      {
        "interface_ip": "10.4.10.61"
      },
      {
        "interface_ip": "10.4.10.69"
      },
      {
        "interface_ip": "10.4.10.72"
      },
      {
        "interface_ip": "10.4.10.76"
      },
      {
        "interface_ip": "10.4.10.77"
      },
      {
        "interface_ip": "10.4.10.81"
      },
      {
        "interface_ip": "10.4.10.87"
      },
      {
        "interface_ip": "10.4.10.90"
      },
      {
        "interface_ip": "10.4.10.92"
      },
      {
        "interface_ip": "10.4.10.93"
      },
      {
        "interface_ip": "10.4.10.96"
      },
      {
        "interface_ip": "10.4.10.106"
      },
      {
        "interface_ip": "10.4.10.107"
      },
      {
        "interface_ip": "10.4.10.109"
      },
      {
        "interface_ip": "10.4.10.112"
      },
      {
        "interface_ip": "10.4.10.114"
      },
      {
        "interface_ip": "10.4.10.115"
      },
      {
        "interface_ip": "10.4.10.119"
      },
      {
        "interface_ip": "10.4.10.120"
      },
      {
        "interface_ip": "10.4.10.121"
      },
      {
        "interface_ip": "10.4.10.125"
      },
      {
        "interface_ip": "10.4.10.131"
      },
      {
        "interface_ip": "10.4.10.136"
      },
      {
        "interface_ip": "10.4.10.154"
      },
      {
        "interface_ip": "10.4.10.157"
      },
      {
        "interface_ip": "10.4.10.174"
      },
      {
        "interface_ip": "10.4.10.182"
      },
      {
        "interface_ip": "10.4.10.187"
      },
      {
        "interface_ip": "10.4.10.197"
      },
      {
        "interface_ip": "10.4.10.200"
      }
    ]
  },
  {
    "question": "What is the name of the machine running the application instance with the most recent start time in the entire DC1 datacenter?",
    "cypher": "MATCH (m:Machine)<-[:HOLDS]-(:Rack)<-[:CONTAINS]-(:DataCenter {name: 'DC1'}) WITH m MATCH (m)-[:RUNS]->(a:Application) WHERE a.startTime IS NOT NULL RETURN m.name AS newest_app_machine ORDER BY a.startTime DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "newest_app_machine": "DC1-RCK-3-9-M-2"
      }
    ],
    "answer": "The name of the machine running the application instance with the most recent start time in DC1 datacenter is DC1-RCK-3-9-M-2."
  },
  {
    "question": "How many network hops separate machine 'DC1-RCK-1-1-M-1' from machine 'DC1-RCK-2-9-M-90'?",
    "cypher": "MATCH path = shortestPath((m1:Machine {name: 'DC1-RCK-1-1-M-1'})-[*]-(m2:Machine {name: 'DC1-RCK-2-9-M-90'})) RETURN length(path) AS machine_to_machine_hops",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_to_machine_hops": 4
      }
    ],
    "answer": "Based on the query result, there are 4 network hops separating machine 'DC1-RCK-1-1-M-1' from machine 'DC1-RCK-2-9-M-90'."
  },
  {
    "question": "What's the total count of applications that depend on the java thingy, running on machines in racks in zone 2?",
    "cypher": "MATCH (:Rack {zone: 2})-[:HOLDS]->(:Machine)-[:RUNS]->(a:Application)-[:DEPENDS_ON]->(:Software {name: 'java'}) RETURN COUNT(a) AS total_java_apps",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_java_apps": 0
      }
    ],
    "answer": "Based on the query result, there are 0 applications that depend on Java and are running on machines in racks located in zone 2."
  },
  {
    "question": "What version of the 'neo4j' software is the 'webapp' application dependent on?",
    "cypher": "MATCH (:Software {name: 'webapp'})-[:DEPENDS_ON]->(s:Software {name: 'neo4j'})-[:VERSION]->(v:Version) RETURN v.name AS neo4j_version LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "neo4j_version": "3.1"
      }
    ],
    "answer": "The 'webapp' application depends on Neo4j version 3.1."
  },
  {
    "question": "Which software has the highest number of versions defined in the system?",
    "cypher": "MATCH (s:Software)-[:VERSION]->(v:Version) RETURN s.name AS most_versioned_software ORDER BY count(v) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Are there any applications that listen on port 443 and run on machines in rack 'DC1-RCK-1-1'? Give me the count.",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-1-1'})-[:HOLDS]->(:Machine)-[:RUNS]->(a:Application)-[:LISTENS]->(:Port {port: 443}) RETURN COUNT(a) AS app_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "app_count": 77
      }
    ],
    "answer": "Yes, there are 77 applications that listen on port 443 and run on machines in rack 'DC1-RCK-1-1'."
  },
  {
    "question": "Count the number of machines in the 'DC1-RCK-4-2' rack.",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-4-2'})-[:HOLDS]->(m:Machine) RETURN COUNT(m) AS machine_count_in_rack",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_count_in_rack": 200
      }
    ],
    "answer": "There are 200 machines in the 'DC1-RCK-4-2' rack."
  },
  {
    "question": "What is the name of the datacenter that contains the router named 'DC1-R-1'?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(:Router {name: 'DC1-R-1'}) RETURN dc.name AS router_datacenter_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "router_datacenter_name": "DC1"
      }
    ],
    "answer": "The datacenter that contains the router 'DC1-R-1' is DC1."
  },
  {
    "question": "Find the name of the software component that is the oldest previous version of version '7.3' of the 'RHEL' software.",
    "cypher": "MATCH (:Software {name: 'RHEL'})-[:VERSION]->(:Version {name: '7.3'})-[:PREVIOUS*]->(v:Version) RETURN v.name AS oldest_previous_version ORDER BY length(p) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many different services does the 'web-server' application depend on?",
    "cypher": "MATCH (:Application)-[:INSTANCE]->(:Software {name: 'webserver'})-[:DEPENDS_ON]->(s:Service) RETURN COUNT(DISTINCT s) AS service_dependency_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "service_dependency_count": 0
      }
    ],
    "answer": "Based on the query result, the 'web-server' application does not depend on any services (0 service dependencies)."
  },
  {
    "question": "How many distinct applications run on machines in racks located in zone 1?",
    "cypher": "MATCH (a:Application)<-[:RUNS]-(:Machine)<-[:HOLDS]-(:Rack {zone: 1}) RETURN COUNT(DISTINCT a) AS zone1_app_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "zone1_app_count": 2000
      }
    ],
    "answer": "There are 2,000 distinct applications running on machines in racks located in zone 1."
  },
  {
    "question": "What's the name of the machine that is held in rack 'DC1-RCK-4-2' and runs the 'cms' app?",
    "cypher": "MATCH (m:Machine)<-[:HOLDS]-(:Rack {name: 'DC1-RCK-4-2'}) WHERE (m)-[:RUNS]->(:Application {name: 'cms'}) RETURN m.name AS machine_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "machine_name": "DC1-RCK-4-2-M-152"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-111"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-145"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-180"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-138"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-176"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-108"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-91"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-1"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-131"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-174"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-75"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-126"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-151"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-115"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-21"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-99"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-3"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-87"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-23"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-169"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-78"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-120"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-35"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-44"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-110"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-57"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-123"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-43"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-81"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-28"
      },
      {
        "machine_name": "DC1-RCK-4-2-M-101"
      }
    ]
  },
  {
    "question": "What is the name of the software that has the dependency with the most subsequent dependencies?",
    "cypher": "MATCH (s1:Software)-[:DEPENDS_ON]->(s2:Software) WITH s1, count(s2) as deps ORDER BY deps DESC RETURN s1.name AS most_dependent_software LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "most_dependent_software": "cms"
      }
    ],
    "answer": "Based on the query result, the software with the most dependencies is 'cms'."
  },
  {
    "question": "How many machines in data center 'DC1' run an OS that depends on version '7.1'?",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(:Rack)-[:HOLDS]->(m:Machine)-[:RUNS]->(os:OS)-[:INSTANCE]->(v:Version {name: '7.1'}) RETURN COUNT(m) AS machine_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_count": 820
      }
    ],
    "answer": "820 machines in data center 'DC1' run an OS that depends on version '7.1'."
  },
  {
    "question": "Count the number of software dependencies for the 'cms' application that are also applications.",
    "cypher": "MATCH (:Software {name: 'cms'})-[:DEPENDS_ON]->(dep:Application) RETURN COUNT(dep) AS app_dependency_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "app_dependency_count": 1
      }
    ],
    "answer": "The 'cms' application has 1 software dependency that is also an application."
  },
  {
    "question": "What is the name of the rack that holds the machine 'DC1-RCK-1-1-M-1'?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(:Machine {name: 'DC1-RCK-1-1-M-1'}) RETURN r.name AS rack_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "rack_name": "DC1-RCK-1-1"
      }
    ],
    "answer": "The rack that holds the machine 'DC1-RCK-1-1-M-1' is named 'DC1-RCK-1-1'."
  },
  {
    "question": "Show me the highest rack number for any switch connected to an interface in network '10.1'.",
    "cypher": "MATCH (s:Switch)-[:ROUTES]->(:Interface)<-[:ROUTES]-(:Network {ip: '10.1'}) WHERE s.rack IS NOT NULL RETURN MAX(s.rack) AS highest_rack_number",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "highest_rack_number": 10
      }
    ],
    "answer": "The highest rack number for a switch connected to a network in '10.1' is 10."
  },
  {
    "question": "How many zones are connected via the 'DC1-RE' egress router?",
    "cypher": "MATCH (:Egress {name: 'DC1-RE'})-[:ROUTES]->(:Interface)<-[:ROUTES]-(z:Zone) RETURN COUNT(DISTINCT z.zone) AS connected_zone_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connected_zone_count": 0
      }
    ],
    "answer": "Based on the query result, 0 zones are connected via the 'DC1-RE' egress router."
  },
  {
    "question": "What is the total number of CPUs across all machine types that are hosted in racks in zone 4?",
    "cypher": "MATCH (t:Type)<-[:TYPE]-(:Machine)<-[:HOLDS]-(:Rack {zone: 4}) RETURN SUM(t.cpu) AS total_cpu_in_zone",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_cpu_in_zone": 6240
      }
    ],
    "answer": "The total number of CPUs across all machine types hosted in racks in zone 4 is 6,240 CPUs."
  },
  {
    "question": "What is the name of the service that the 'webserver' application, running on machine 'DC1-RCK-1-1-M-1', depends on?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(a:Application {name: 'webserver'})-[:DEPENDS_ON]->(s:Service) RETURN s.name AS service_dependency_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "service_dependency_name": "9.4"
      }
    ],
    "answer": "The 'webserver' application depends on the service '9.4'."
  },
  {
    "question": "Find the IP address of the machine with the application that has the oldest start time.",
    "cypher": "MATCH (i:Interface)<-[:ROUTES]-(m:Machine)-[:RUNS]->(a:Application) WHERE a.startTime IS NOT NULL RETURN i.ip AS machine_ip ORDER BY a.startTime ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_ip": "10.4.3.24"
      }
    ],
    "answer": "The IP address of the machine with the application that has the oldest start time is 10.4.3.24."
  },
  {
    "question": "How many process or service dependencies does the 'webapp' app have?",
    "cypher": "MATCH (:Application {name: 'webapp'})-[:DEPENDS_ON]->(dep:Process|Service) RETURN count(dep) AS dependency_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "dependency_count": 3178
      }
    ],
    "answer": "The 'webapp' application has 3,178 process or service dependencies."
  },
  {
    "question": "Count every machine in the DC1-RCK-4-2 rack that runs a service which depends on the 'java' software.",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-4-2'})-[:HOLDS]->(m:Machine)-[:RUNS]->(s:Service)-[:INSTANCE]->(:Software)-[:DEPENDS_ON]->(:Software {name: 'java'}) RETURN COUNT(DISTINCT m) AS machine_count",
    "query_type": "Aggregation",
    "complexity": "5-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_count": 0
      }
    ],
    "answer": "0 machines in the DC1-RCK-4-2 rack run a service that depends on Java."
  },
  {
    "question": "Which rack's name is 'DC1-RCK-4-9' and is inside the same datacenter as the machine 'DC1-RCK-1-1-M-1'?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-1-1-M-1'})-[:HOLDS]->(:Rack)<-[:CONTAINS]-(:DataCenter)-[:CONTAINS]->(r:Rack {name: 'DC1-RCK-4-9'}) RETURN r.name AS rack_name",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Find the name of the application with the highest PID running on a machine of type with 32gb ram.",
    "cypher": "MATCH (app:Application)<-[:RUNS]-(:Machine)-[:TYPE]->(:Type {ram: 32}) WHERE app.pid IS NOT NULL RETURN app.name AS highest_pid_app_name ORDER BY app.pid DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many paths of any type connect rack 'DC1-RCK-1-1' to the 'RHEL' software?",
    "cypher": "MATCH path = (:Rack {name: 'DC1-RCK-1-1'})-[*]->(:Software {name: 'RHEL'}) RETURN count(path) AS connection_paths",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_paths": 0
      }
    ],
    "answer": "There are 0 paths connecting rack 'DC1-RCK-1-1' to the 'RHEL' software."
  },
  {
    "question": "What's the average number of dependencies for applications that are instances of 'cms' or 'webapp' softwares?",
    "cypher": "MATCH (a:Application)-[:INSTANCE]->(s:Software) WHERE s.name IN ['cms', 'webapp'] WITH a MATCH (a)-[r:DEPENDS_ON]->() RETURN avg(count(r)) AS average_dependencies",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Find the name of the machine running the service named '9.4' which is an instance of the 'postgress' software.",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(:Service {name: '9.4'})-[:INSTANCE]->(:Software {name: 'postgres'}) RETURN m.name AS machine_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many machines are located in the rack named DC1-RCK-2-9?",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-2-9'})-[:HOLDS]->(m:Machine) RETURN COUNT(m) AS machine_count",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_count": 200
      }
    ],
    "answer": "There are 200 machines located in the rack named DC1-RCK-2-9."
  },
  {
    "question": "What is the location of the datacenter that contains the rack DC1-RCK-4-2?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(:Rack {name: 'DC1-RCK-4-2'}) RETURN dc.location AS datacenter_location",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_location": "Iceland, Rekjavik"
      }
    ],
    "answer": "The datacenter containing rack DC1-RCK-4-2 is located in Rekjavik, Iceland."
  },
  {
    "question": "Count the number of applications running on machine DC1-RCK-1-1-M-1 that depend on a service.",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(a:Application)-[:DEPENDS_ON]->(:Service) RETURN COUNT(DISTINCT a) AS dependent_app_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "dependent_app_count": 1
      }
    ],
    "answer": "1 application running on machine DC1-RCK-1-1-M-1 depends on a service."
  },
  {
    "question": "What is the maximum amount of RAM available for any machine type that hosts the 'webapp' application?",
    "cypher": "MATCH (:Application {name: 'webapp'})<-[:RUNS]-(:Machine)-[:TYPE]->(t:Type) WHERE t.ram IS NOT NULL RETURN MAX(t.ram) AS max_ram",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_ram": 1024
      }
    ],
    "answer": "The maximum amount of RAM available for a machine type hosting the 'webapp' application is 1024 units."
  },
  {
    "question": "How many software dependencies does the 'cms' aplication have?",
    "cypher": "MATCH (:Application {name: 'cms'})-[:INSTANCE]->(s:Software)-[:DEPENDS_ON]->(dep:Software) RETURN COUNT(DISTINCT dep) AS dependency_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "dependency_count": 3
      }
    ],
    "answer": "The 'cms' application has 3 software dependencies."
  },
  {
    "question": "Find the name of the rack that holds the machine running the process with PID 9257.",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(:Machine)-[:RUNS]->(:Process {pid: 9257}) RETURN r.name AS rack_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "rack_name": "DC1-RCK-2-9"
      },
      {
        "rack_name": "DC1-RCK-3-8"
      },
      {
        "rack_name": "DC1-RCK-1-7"
      },
      {
        "rack_name": "DC1-RCK-1-10"
      },
      {
        "rack_name": "DC1-RCK-2-6"
      }
    ]
  },
  {
    "question": "What is the zone of the router that connects to the interface with IP 10.0.0.254?",
    "cypher": "MATCH (r:Router)-[:ROUTES]->(:Interface {ip: '10.0.0.254'}) RETURN r.zone AS router_zone",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "router_zone": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "What's the total number of machines in datacenter DC1 that run an application that is an instance of the 'webapp' software?",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(:Rack)-[:HOLDS]->(m:Machine)-[:RUNS]->(:Application)-[:INSTANCE]->(:Software {name: 'webapp'}) RETURN COUNT(DISTINCT m) AS total_machines",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_machines": 1588
      }
    ],
    "answer": "Based on the query result, there are 1,588 machines in datacenter DC1 that run an application that is an instance of the 'webapp' software."
  },
  {
    "question": "What is the earliest start time among all processes running on machines within rack DC1-RCK-1-1?",
    "cypher": "MATCH (:Rack {name: 'DC1-RCK-1-1'})-[:HOLDS]->(:Machine)-[:RUNS]->(p:Process) WHERE p.startTime IS NOT NULL RETURN MIN(p.startTime) AS earliest_start_time",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "earliest_start_time": 1605737255008
      }
    ],
    "answer": "The earliest start time for processes running on machines within rack DC1-RCK-1-1 is 1605737255008 (which appears to be a Unix timestamp in milliseconds)."
  },
  {
    "question": "How many distinct ports are exposed by interfaces connected to the switch with IP '10.1.10'?",
    "cypher": "MATCH (:Switch {ip: '10.1.10'})-[:ROUTES]->(i:Interface)-[:EXPOSES]->(p:Port) RETURN COUNT(DISTINCT p.port) AS distinct_port_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "distinct_port_count": 0
      }
    ],
    "answer": "Based on the query result, the switch with IP '10.1.10' does not expose any distinct ports. The count of distinct ports is 0."
  },
  {
    "question": "Find the IP address of the interface that the 'webserver' app listens to via port 443.",
    "cypher": "MATCH (:Application {name: 'webserver'})-[:LISTENS]->(:Port {port: 443})<-[:EXPOSES]-(i:Interface) RETURN i.ip AS interface_ip",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "interface_ip": "10.1.1.1"
      },
      {
        "interface_ip": "10.1.1.15"
      },
      {
        "interface_ip": "10.1.1.23"
      },
      {
        "interface_ip": "10.1.1.25"
      },
      {
        "interface_ip": "10.1.1.33"
      },
      {
        "interface_ip": "10.1.1.45"
      },
      {
        "interface_ip": "10.1.1.53"
      },
      {
        "interface_ip": "10.1.1.60"
      },
      {
        "interface_ip": "10.1.1.71"
      },
      {
        "interface_ip": "10.1.1.73"
      },
      {
        "interface_ip": "10.1.1.76"
      },
      {
        "interface_ip": "10.1.1.77"
      },
      {
        "interface_ip": "10.1.1.85"
      },
      {
        "interface_ip": "10.1.1.97"
      },
      {
        "interface_ip": "10.1.1.100"
      },
      {
        "interface_ip": "10.1.1.103"
      },
      {
        "interface_ip": "10.1.1.105"
      },
      {
        "interface_ip": "10.1.1.109"
      },
      {
        "interface_ip": "10.1.1.111"
      },
      {
        "interface_ip": "10.1.1.115"
      },
      {
        "interface_ip": "10.1.1.126"
      },
      {
        "interface_ip": "10.1.1.127"
      },
      {
        "interface_ip": "10.1.1.134"
      },
      {
        "interface_ip": "10.1.1.136"
      },
      {
        "interface_ip": "10.1.1.137"
      },
      {
        "interface_ip": "10.1.1.138"
      },
      {
        "interface_ip": "10.1.1.142"
      },
      {
        "interface_ip": "10.1.1.144"
      },
      {
        "interface_ip": "10.1.1.151"
      },
      {
        "interface_ip": "10.1.1.153"
      },
      {
        "interface_ip": "10.1.1.164"
      },
      {
        "interface_ip": "10.1.1.169"
      },
      {
        "interface_ip": "10.1.1.172"
      },
      {
        "interface_ip": "10.1.1.174"
      },
      {
        "interface_ip": "10.1.1.175"
      },
      {
        "interface_ip": "10.1.1.178"
      },
      {
        "interface_ip": "10.1.1.181"
      },
      {
        "interface_ip": "10.1.1.186"
      },
      {
        "interface_ip": "10.1.1.187"
      },
      {
        "interface_ip": "10.1.1.192"
      },
      {
        "interface_ip": "10.1.1.198"
      },
      {
        "interface_ip": "10.1.2.1"
      },
      {
        "interface_ip": "10.1.2.2"
      },
      {
        "interface_ip": "10.1.2.4"
      },
      {
        "interface_ip": "10.1.2.14"
      },
      {
        "interface_ip": "10.1.2.23"
      },
      {
        "interface_ip": "10.1.2.25"
      },
      {
        "interface_ip": "10.1.2.28"
      },
      {
        "interface_ip": "10.1.2.31"
      },
      {
        "interface_ip": "10.1.2.32"
      },
      {
        "interface_ip": "10.1.2.33"
      },
      {
        "interface_ip": "10.1.2.49"
      },
      {
        "interface_ip": "10.1.2.52"
      },
      {
        "interface_ip": "10.1.2.60"
      },
      {
        "interface_ip": "10.1.2.62"
      },
      {
        "interface_ip": "10.1.2.63"
      },
      {
        "interface_ip": "10.1.2.71"
      },
      {
        "interface_ip": "10.1.2.74"
      },
      {
        "interface_ip": "10.1.2.78"
      },
      {
        "interface_ip": "10.1.2.84"
      },
      {
        "interface_ip": "10.1.2.86"
      },
      {
        "interface_ip": "10.1.2.88"
      },
      {
        "interface_ip": "10.1.2.95"
      },
      {
        "interface_ip": "10.1.2.97"
      },
      {
        "interface_ip": "10.1.2.102"
      },
      {
        "interface_ip": "10.1.2.113"
      },
      {
        "interface_ip": "10.1.2.122"
      },
      {
        "interface_ip": "10.1.2.124"
      },
      {
        "interface_ip": "10.1.2.128"
      },
      {
        "interface_ip": "10.1.2.130"
      },
      {
        "interface_ip": "10.1.2.131"
      },
      {
        "interface_ip": "10.1.2.141"
      },
      {
        "interface_ip": "10.1.2.147"
      },
      {
        "interface_ip": "10.1.2.148"
      },
      {
        "interface_ip": "10.1.2.150"
      },
      {
        "interface_ip": "10.1.2.161"
      },
      {
        "interface_ip": "10.1.2.163"
      },
      {
        "interface_ip": "10.1.2.167"
      },
      {
        "interface_ip": "10.1.2.181"
      },
      {
        "interface_ip": "10.1.2.184"
      },
      {
        "interface_ip": "10.1.2.191"
      },
      {
        "interface_ip": "10.1.2.195"
      },
      {
        "interface_ip": "10.1.2.199"
      },
      {
        "interface_ip": "10.1.3.1"
      },
      {
        "interface_ip": "10.1.3.3"
      },
      {
        "interface_ip": "10.1.3.4"
      },
      {
        "interface_ip": "10.1.3.7"
      },
      {
        "interface_ip": "10.1.3.9"
      },
      {
        "interface_ip": "10.1.3.19"
      },
      {
        "interface_ip": "10.1.3.20"
      },
      {
        "interface_ip": "10.1.3.27"
      },
      {
        "interface_ip": "10.1.3.30"
      },
      {
        "interface_ip": "10.1.3.47"
      },
      {
        "interface_ip": "10.1.3.57"
      },
      {
        "interface_ip": "10.1.3.60"
      },
      {
        "interface_ip": "10.1.3.69"
      },
      {
        "interface_ip": "10.1.3.70"
      },
      {
        "interface_ip": "10.1.3.75"
      },
      {
        "interface_ip": "10.1.3.77"
      },
      {
        "interface_ip": "10.1.3.78"
      },
      {
        "interface_ip": "10.1.3.80"
      },
      {
        "interface_ip": "10.1.3.81"
      },
      {
        "interface_ip": "10.1.3.84"
      },
      {
        "interface_ip": "10.1.3.86"
      },
      {
        "interface_ip": "10.1.3.87"
      },
      {
        "interface_ip": "10.1.3.90"
      },
      {
        "interface_ip": "10.1.3.94"
      },
      {
        "interface_ip": "10.1.3.104"
      },
      {
        "interface_ip": "10.1.3.123"
      },
      {
        "interface_ip": "10.1.3.131"
      },
      {
        "interface_ip": "10.1.3.142"
      },
      {
        "interface_ip": "10.1.3.143"
      },
      {
        "interface_ip": "10.1.3.157"
      },
      {
        "interface_ip": "10.1.3.161"
      },
      {
        "interface_ip": "10.1.3.169"
      },
      {
        "interface_ip": "10.1.3.171"
      },
      {
        "interface_ip": "10.1.3.172"
      },
      {
        "interface_ip": "10.1.3.173"
      },
      {
        "interface_ip": "10.1.3.174"
      },
      {
        "interface_ip": "10.1.3.176"
      },
      {
        "interface_ip": "10.1.3.177"
      },
      {
        "interface_ip": "10.1.3.181"
      },
      {
        "interface_ip": "10.1.3.185"
      },
      {
        "interface_ip": "10.1.3.194"
      },
      {
        "interface_ip": "10.1.3.195"
      },
      {
        "interface_ip": "10.1.4.2"
      },
      {
        "interface_ip": "10.1.4.5"
      },
      {
        "interface_ip": "10.1.4.8"
      },
      {
        "interface_ip": "10.1.4.10"
      },
      {
        "interface_ip": "10.1.4.20"
      },
      {
        "interface_ip": "10.1.4.26"
      },
      {
        "interface_ip": "10.1.4.28"
      },
      {
        "interface_ip": "10.1.4.34"
      },
      {
        "interface_ip": "10.1.4.38"
      },
      {
        "interface_ip": "10.1.4.42"
      },
      {
        "interface_ip": "10.1.4.44"
      },
      {
        "interface_ip": "10.1.4.47"
      },
      {
        "interface_ip": "10.1.4.51"
      },
      {
        "interface_ip": "10.1.4.57"
      },
      {
        "interface_ip": "10.1.4.64"
      },
      {
        "interface_ip": "10.1.4.65"
      },
      {
        "interface_ip": "10.1.4.66"
      },
      {
        "interface_ip": "10.1.4.67"
      },
      {
        "interface_ip": "10.1.4.81"
      },
      {
        "interface_ip": "10.1.4.96"
      },
      {
        "interface_ip": "10.1.4.103"
      },
      {
        "interface_ip": "10.1.4.109"
      },
      {
        "interface_ip": "10.1.4.119"
      },
      {
        "interface_ip": "10.1.4.128"
      },
      {
        "interface_ip": "10.1.4.136"
      },
      {
        "interface_ip": "10.1.4.137"
      },
      {
        "interface_ip": "10.1.4.141"
      },
      {
        "interface_ip": "10.1.4.150"
      },
      {
        "interface_ip": "10.1.4.153"
      },
      {
        "interface_ip": "10.1.4.158"
      },
      {
        "interface_ip": "10.1.4.164"
      },
      {
        "interface_ip": "10.1.4.171"
      },
      {
        "interface_ip": "10.1.4.177"
      },
      {
        "interface_ip": "10.1.4.179"
      },
      {
        "interface_ip": "10.1.4.181"
      },
      {
        "interface_ip": "10.1.4.194"
      },
      {
        "interface_ip": "10.1.5.11"
      },
      {
        "interface_ip": "10.1.5.14"
      },
      {
        "interface_ip": "10.1.5.19"
      },
      {
        "interface_ip": "10.1.5.20"
      },
      {
        "interface_ip": "10.1.5.23"
      },
      {
        "interface_ip": "10.1.5.24"
      },
      {
        "interface_ip": "10.1.5.25"
      },
      {
        "interface_ip": "10.1.5.26"
      },
      {
        "interface_ip": "10.1.5.39"
      },
      {
        "interface_ip": "10.1.5.51"
      },
      {
        "interface_ip": "10.1.5.57"
      },
      {
        "interface_ip": "10.1.5.64"
      },
      {
        "interface_ip": "10.1.5.69"
      },
      {
        "interface_ip": "10.1.5.72"
      },
      {
        "interface_ip": "10.1.5.92"
      },
      {
        "interface_ip": "10.1.5.100"
      },
      {
        "interface_ip": "10.1.5.101"
      },
      {
        "interface_ip": "10.1.5.104"
      },
      {
        "interface_ip": "10.1.5.110"
      },
      {
        "interface_ip": "10.1.5.113"
      },
      {
        "interface_ip": "10.1.5.116"
      },
      {
        "interface_ip": "10.1.5.124"
      },
      {
        "interface_ip": "10.1.5.126"
      },
      {
        "interface_ip": "10.1.5.127"
      },
      {
        "interface_ip": "10.1.5.128"
      },
      {
        "interface_ip": "10.1.5.141"
      },
      {
        "interface_ip": "10.1.5.147"
      },
      {
        "interface_ip": "10.1.5.156"
      },
      {
        "interface_ip": "10.1.5.167"
      },
      {
        "interface_ip": "10.1.5.169"
      },
      {
        "interface_ip": "10.1.5.171"
      },
      {
        "interface_ip": "10.1.5.174"
      },
      {
        "interface_ip": "10.1.5.176"
      },
      {
        "interface_ip": "10.1.5.178"
      },
      {
        "interface_ip": "10.1.5.179"
      },
      {
        "interface_ip": "10.1.5.182"
      },
      {
        "interface_ip": "10.1.5.183"
      },
      {
        "interface_ip": "10.1.5.184"
      },
      {
        "interface_ip": "10.1.5.186"
      },
      {
        "interface_ip": "10.1.5.188"
      },
      {
        "interface_ip": "10.1.5.196"
      },
      {
        "interface_ip": "10.1.6.7"
      },
      {
        "interface_ip": "10.1.6.8"
      },
      {
        "interface_ip": "10.1.6.9"
      },
      {
        "interface_ip": "10.1.6.11"
      },
      {
        "interface_ip": "10.1.6.18"
      },
      {
        "interface_ip": "10.1.6.27"
      },
      {
        "interface_ip": "10.1.6.31"
      },
      {
        "interface_ip": "10.1.6.38"
      },
      {
        "interface_ip": "10.1.6.43"
      },
      {
        "interface_ip": "10.1.6.46"
      },
      {
        "interface_ip": "10.1.6.47"
      },
      {
        "interface_ip": "10.1.6.48"
      },
      {
        "interface_ip": "10.1.6.51"
      },
      {
        "interface_ip": "10.1.6.54"
      },
      {
        "interface_ip": "10.1.6.56"
      },
      {
        "interface_ip": "10.1.6.57"
      },
      {
        "interface_ip": "10.1.6.58"
      },
      {
        "interface_ip": "10.1.6.61"
      },
      {
        "interface_ip": "10.1.6.64"
      },
      {
        "interface_ip": "10.1.6.66"
      },
      {
        "interface_ip": "10.1.6.71"
      },
      {
        "interface_ip": "10.1.6.72"
      },
      {
        "interface_ip": "10.1.6.80"
      },
      {
        "interface_ip": "10.1.6.82"
      },
      {
        "interface_ip": "10.1.6.85"
      },
      {
        "interface_ip": "10.1.6.88"
      },
      {
        "interface_ip": "10.1.6.92"
      },
      {
        "interface_ip": "10.1.6.96"
      },
      {
        "interface_ip": "10.1.6.99"
      },
      {
        "interface_ip": "10.1.6.108"
      },
      {
        "interface_ip": "10.1.6.110"
      },
      {
        "interface_ip": "10.1.6.117"
      },
      {
        "interface_ip": "10.1.6.119"
      },
      {
        "interface_ip": "10.1.6.124"
      },
      {
        "interface_ip": "10.1.6.127"
      },
      {
        "interface_ip": "10.1.6.133"
      },
      {
        "interface_ip": "10.1.6.134"
      },
      {
        "interface_ip": "10.1.6.151"
      },
      {
        "interface_ip": "10.1.6.152"
      },
      {
        "interface_ip": "10.1.6.161"
      },
      {
        "interface_ip": "10.1.6.168"
      },
      {
        "interface_ip": "10.1.6.169"
      },
      {
        "interface_ip": "10.1.6.170"
      },
      {
        "interface_ip": "10.1.6.175"
      },
      {
        "interface_ip": "10.1.6.176"
      },
      {
        "interface_ip": "10.1.6.180"
      },
      {
        "interface_ip": "10.1.6.182"
      },
      {
        "interface_ip": "10.1.6.189"
      },
      {
        "interface_ip": "10.1.6.191"
      },
      {
        "interface_ip": "10.1.6.200"
      },
      {
        "interface_ip": "10.1.7.1"
      },
      {
        "interface_ip": "10.1.7.4"
      },
      {
        "interface_ip": "10.1.7.9"
      },
      {
        "interface_ip": "10.1.7.10"
      },
      {
        "interface_ip": "10.1.7.15"
      },
      {
        "interface_ip": "10.1.7.19"
      },
      {
        "interface_ip": "10.1.7.24"
      },
      {
        "interface_ip": "10.1.7.28"
      },
      {
        "interface_ip": "10.1.7.31"
      },
      {
        "interface_ip": "10.1.7.32"
      },
      {
        "interface_ip": "10.1.7.33"
      },
      {
        "interface_ip": "10.1.7.34"
      },
      {
        "interface_ip": "10.1.7.36"
      },
      {
        "interface_ip": "10.1.7.37"
      },
      {
        "interface_ip": "10.1.7.42"
      },
      {
        "interface_ip": "10.1.7.44"
      },
      {
        "interface_ip": "10.1.7.45"
      },
      {
        "interface_ip": "10.1.7.48"
      },
      {
        "interface_ip": "10.1.7.50"
      },
      {
        "interface_ip": "10.1.7.59"
      },
      {
        "interface_ip": "10.1.7.61"
      },
      {
        "interface_ip": "10.1.7.62"
      },
      {
        "interface_ip": "10.1.7.66"
      },
      {
        "interface_ip": "10.1.7.69"
      },
      {
        "interface_ip": "10.1.7.71"
      },
      {
        "interface_ip": "10.1.7.80"
      },
      {
        "interface_ip": "10.1.7.86"
      },
      {
        "interface_ip": "10.1.7.101"
      },
      {
        "interface_ip": "10.1.7.102"
      },
      {
        "interface_ip": "10.1.7.105"
      },
      {
        "interface_ip": "10.1.7.112"
      },
      {
        "interface_ip": "10.1.7.114"
      },
      {
        "interface_ip": "10.1.7.120"
      },
      {
        "interface_ip": "10.1.7.123"
      },
      {
        "interface_ip": "10.1.7.132"
      },
      {
        "interface_ip": "10.1.7.135"
      },
      {
        "interface_ip": "10.1.7.140"
      },
      {
        "interface_ip": "10.1.7.145"
      },
      {
        "interface_ip": "10.1.7.146"
      },
      {
        "interface_ip": "10.1.7.147"
      },
      {
        "interface_ip": "10.1.7.152"
      },
      {
        "interface_ip": "10.1.7.162"
      },
      {
        "interface_ip": "10.1.7.164"
      },
      {
        "interface_ip": "10.1.7.165"
      },
      {
        "interface_ip": "10.1.7.168"
      },
      {
        "interface_ip": "10.1.7.186"
      },
      {
        "interface_ip": "10.1.7.188"
      },
      {
        "interface_ip": "10.1.7.191"
      },
      {
        "interface_ip": "10.1.8.12"
      },
      {
        "interface_ip": "10.1.8.14"
      },
      {
        "interface_ip": "10.1.8.24"
      },
      {
        "interface_ip": "10.1.8.25"
      },
      {
        "interface_ip": "10.1.8.32"
      },
      {
        "interface_ip": "10.1.8.33"
      },
      {
        "interface_ip": "10.1.8.35"
      },
      {
        "interface_ip": "10.1.8.36"
      },
      {
        "interface_ip": "10.1.8.40"
      },
      {
        "interface_ip": "10.1.8.41"
      },
      {
        "interface_ip": "10.1.8.44"
      },
      {
        "interface_ip": "10.1.8.54"
      },
      {
        "interface_ip": "10.1.8.76"
      },
      {
        "interface_ip": "10.1.8.79"
      },
      {
        "interface_ip": "10.1.8.80"
      },
      {
        "interface_ip": "10.1.8.81"
      },
      {
        "interface_ip": "10.1.8.84"
      },
      {
        "interface_ip": "10.1.8.86"
      },
      {
        "interface_ip": "10.1.8.89"
      },
      {
        "interface_ip": "10.1.8.92"
      },
      {
        "interface_ip": "10.1.8.93"
      },
      {
        "interface_ip": "10.1.8.98"
      },
      {
        "interface_ip": "10.1.8.103"
      },
      {
        "interface_ip": "10.1.8.106"
      },
      {
        "interface_ip": "10.1.8.110"
      },
      {
        "interface_ip": "10.1.8.114"
      },
      {
        "interface_ip": "10.1.8.119"
      },
      {
        "interface_ip": "10.1.8.124"
      },
      {
        "interface_ip": "10.1.8.134"
      },
      {
        "interface_ip": "10.1.8.138"
      },
      {
        "interface_ip": "10.1.8.146"
      },
      {
        "interface_ip": "10.1.8.153"
      },
      {
        "interface_ip": "10.1.8.158"
      },
      {
        "interface_ip": "10.1.8.159"
      },
      {
        "interface_ip": "10.1.8.161"
      },
      {
        "interface_ip": "10.1.8.169"
      },
      {
        "interface_ip": "10.1.8.170"
      },
      {
        "interface_ip": "10.1.8.172"
      },
      {
        "interface_ip": "10.1.8.178"
      },
      {
        "interface_ip": "10.1.8.186"
      },
      {
        "interface_ip": "10.1.8.187"
      },
      {
        "interface_ip": "10.1.8.190"
      },
      {
        "interface_ip": "10.1.8.195"
      },
      {
        "interface_ip": "10.1.8.197"
      },
      {
        "interface_ip": "10.1.8.198"
      },
      {
        "interface_ip": "10.1.9.8"
      },
      {
        "interface_ip": "10.1.9.10"
      },
      {
        "interface_ip": "10.1.9.18"
      },
      {
        "interface_ip": "10.1.9.22"
      },
      {
        "interface_ip": "10.1.9.23"
      },
      {
        "interface_ip": "10.1.9.26"
      },
      {
        "interface_ip": "10.1.9.31"
      },
      {
        "interface_ip": "10.1.9.33"
      },
      {
        "interface_ip": "10.1.9.34"
      },
      {
        "interface_ip": "10.1.9.40"
      },
      {
        "interface_ip": "10.1.9.62"
      },
      {
        "interface_ip": "10.1.9.69"
      },
      {
        "interface_ip": "10.1.9.74"
      },
      {
        "interface_ip": "10.1.9.78"
      },
      {
        "interface_ip": "10.1.9.83"
      },
      {
        "interface_ip": "10.1.9.85"
      },
      {
        "interface_ip": "10.1.9.88"
      },
      {
        "interface_ip": "10.1.9.93"
      },
      {
        "interface_ip": "10.1.9.100"
      },
      {
        "interface_ip": "10.1.9.103"
      },
      {
        "interface_ip": "10.1.9.105"
      },
      {
        "interface_ip": "10.1.9.107"
      },
      {
        "interface_ip": "10.1.9.113"
      },
      {
        "interface_ip": "10.1.9.117"
      },
      {
        "interface_ip": "10.1.9.120"
      },
      {
        "interface_ip": "10.1.9.133"
      },
      {
        "interface_ip": "10.1.9.136"
      },
      {
        "interface_ip": "10.1.9.140"
      },
      {
        "interface_ip": "10.1.9.150"
      },
      {
        "interface_ip": "10.1.9.151"
      },
      {
        "interface_ip": "10.1.9.164"
      },
      {
        "interface_ip": "10.1.9.165"
      },
      {
        "interface_ip": "10.1.9.166"
      },
      {
        "interface_ip": "10.1.9.167"
      },
      {
        "interface_ip": "10.1.9.168"
      },
      {
        "interface_ip": "10.1.9.171"
      },
      {
        "interface_ip": "10.1.9.177"
      },
      {
        "interface_ip": "10.1.9.180"
      },
      {
        "interface_ip": "10.1.9.183"
      },
      {
        "interface_ip": "10.1.9.186"
      },
      {
        "interface_ip": "10.1.9.199"
      },
      {
        "interface_ip": "10.1.10.7"
      },
      {
        "interface_ip": "10.1.10.9"
      },
      {
        "interface_ip": "10.1.10.16"
      },
      {
        "interface_ip": "10.1.10.17"
      },
      {
        "interface_ip": "10.1.10.27"
      },
      {
        "interface_ip": "10.1.10.34"
      },
      {
        "interface_ip": "10.1.10.42"
      },
      {
        "interface_ip": "10.1.10.47"
      },
      {
        "interface_ip": "10.1.10.52"
      },
      {
        "interface_ip": "10.1.10.54"
      },
      {
        "interface_ip": "10.1.10.65"
      },
      {
        "interface_ip": "10.1.10.67"
      },
      {
        "interface_ip": "10.1.10.68"
      },
      {
        "interface_ip": "10.1.10.71"
      },
      {
        "interface_ip": "10.1.10.74"
      },
      {
        "interface_ip": "10.1.10.78"
      },
      {
        "interface_ip": "10.1.10.88"
      },
      {
        "interface_ip": "10.1.10.90"
      },
      {
        "interface_ip": "10.1.10.98"
      },
      {
        "interface_ip": "10.1.10.100"
      },
      {
        "interface_ip": "10.1.10.102"
      },
      {
        "interface_ip": "10.1.10.107"
      },
      {
        "interface_ip": "10.1.10.108"
      },
      {
        "interface_ip": "10.1.10.111"
      },
      {
        "interface_ip": "10.1.10.112"
      },
      {
        "interface_ip": "10.1.10.115"
      },
      {
        "interface_ip": "10.1.10.119"
      },
      {
        "interface_ip": "10.1.10.121"
      },
      {
        "interface_ip": "10.1.10.126"
      },
      {
        "interface_ip": "10.1.10.127"
      },
      {
        "interface_ip": "10.1.10.128"
      },
      {
        "interface_ip": "10.1.10.129"
      },
      {
        "interface_ip": "10.1.10.134"
      },
      {
        "interface_ip": "10.1.10.136"
      },
      {
        "interface_ip": "10.1.10.142"
      },
      {
        "interface_ip": "10.1.10.143"
      },
      {
        "interface_ip": "10.1.10.146"
      },
      {
        "interface_ip": "10.1.10.147"
      },
      {
        "interface_ip": "10.1.10.151"
      },
      {
        "interface_ip": "10.1.10.157"
      },
      {
        "interface_ip": "10.1.10.166"
      },
      {
        "interface_ip": "10.1.10.172"
      },
      {
        "interface_ip": "10.1.10.178"
      },
      {
        "interface_ip": "10.1.10.179"
      },
      {
        "interface_ip": "10.1.10.184"
      },
      {
        "interface_ip": "10.1.10.186"
      },
      {
        "interface_ip": "10.1.10.190"
      },
      {
        "interface_ip": "10.1.10.191"
      },
      {
        "interface_ip": "10.1.10.193"
      },
      {
        "interface_ip": "10.2.1.7"
      },
      {
        "interface_ip": "10.2.1.10"
      },
      {
        "interface_ip": "10.2.1.18"
      },
      {
        "interface_ip": "10.2.1.21"
      },
      {
        "interface_ip": "10.2.1.26"
      },
      {
        "interface_ip": "10.2.1.29"
      },
      {
        "interface_ip": "10.2.1.38"
      },
      {
        "interface_ip": "10.2.1.43"
      },
      {
        "interface_ip": "10.2.1.46"
      },
      {
        "interface_ip": "10.2.1.47"
      },
      {
        "interface_ip": "10.2.1.63"
      },
      {
        "interface_ip": "10.2.1.65"
      },
      {
        "interface_ip": "10.2.1.76"
      },
      {
        "interface_ip": "10.2.1.80"
      },
      {
        "interface_ip": "10.2.1.89"
      },
      {
        "interface_ip": "10.2.1.91"
      },
      {
        "interface_ip": "10.2.1.95"
      },
      {
        "interface_ip": "10.2.1.100"
      },
      {
        "interface_ip": "10.2.1.102"
      },
      {
        "interface_ip": "10.2.1.105"
      },
      {
        "interface_ip": "10.2.1.108"
      },
      {
        "interface_ip": "10.2.1.112"
      },
      {
        "interface_ip": "10.2.1.118"
      },
      {
        "interface_ip": "10.2.1.127"
      },
      {
        "interface_ip": "10.2.1.137"
      },
      {
        "interface_ip": "10.2.1.141"
      },
      {
        "interface_ip": "10.2.1.150"
      },
      {
        "interface_ip": "10.2.1.160"
      },
      {
        "interface_ip": "10.2.1.169"
      },
      {
        "interface_ip": "10.2.1.176"
      },
      {
        "interface_ip": "10.2.1.177"
      },
      {
        "interface_ip": "10.2.1.178"
      },
      {
        "interface_ip": "10.2.1.180"
      },
      {
        "interface_ip": "10.2.1.189"
      },
      {
        "interface_ip": "10.2.1.197"
      },
      {
        "interface_ip": "10.2.2.6"
      },
      {
        "interface_ip": "10.2.2.7"
      },
      {
        "interface_ip": "10.2.2.8"
      },
      {
        "interface_ip": "10.2.2.11"
      },
      {
        "interface_ip": "10.2.2.13"
      },
      {
        "interface_ip": "10.2.2.18"
      },
      {
        "interface_ip": "10.2.2.23"
      },
      {
        "interface_ip": "10.2.2.48"
      },
      {
        "interface_ip": "10.2.2.55"
      },
      {
        "interface_ip": "10.2.2.57"
      },
      {
        "interface_ip": "10.2.2.59"
      },
      {
        "interface_ip": "10.2.2.65"
      },
      {
        "interface_ip": "10.2.2.66"
      },
      {
        "interface_ip": "10.2.2.67"
      },
      {
        "interface_ip": "10.2.2.75"
      },
      {
        "interface_ip": "10.2.2.78"
      },
      {
        "interface_ip": "10.2.2.86"
      },
      {
        "interface_ip": "10.2.2.92"
      },
      {
        "interface_ip": "10.2.2.103"
      },
      {
        "interface_ip": "10.2.2.106"
      },
      {
        "interface_ip": "10.2.2.107"
      },
      {
        "interface_ip": "10.2.2.111"
      },
      {
        "interface_ip": "10.2.2.112"
      },
      {
        "interface_ip": "10.2.2.115"
      },
      {
        "interface_ip": "10.2.2.118"
      },
      {
        "interface_ip": "10.2.2.122"
      },
      {
        "interface_ip": "10.2.2.125"
      },
      {
        "interface_ip": "10.2.2.137"
      },
      {
        "interface_ip": "10.2.2.142"
      },
      {
        "interface_ip": "10.2.2.153"
      },
      {
        "interface_ip": "10.2.2.156"
      },
      {
        "interface_ip": "10.2.2.160"
      },
      {
        "interface_ip": "10.2.2.164"
      },
      {
        "interface_ip": "10.2.2.173"
      },
      {
        "interface_ip": "10.2.2.175"
      },
      {
        "interface_ip": "10.2.2.177"
      },
      {
        "interface_ip": "10.2.2.181"
      },
      {
        "interface_ip": "10.2.2.194"
      },
      {
        "interface_ip": "10.2.2.198"
      },
      {
        "interface_ip": "10.2.3.3"
      },
      {
        "interface_ip": "10.2.3.5"
      },
      {
        "interface_ip": "10.2.3.6"
      },
      {
        "interface_ip": "10.2.3.11"
      },
      {
        "interface_ip": "10.2.3.13"
      },
      {
        "interface_ip": "10.2.3.18"
      },
      {
        "interface_ip": "10.2.3.19"
      },
      {
        "interface_ip": "10.2.3.22"
      },
      {
        "interface_ip": "10.2.3.26"
      },
      {
        "interface_ip": "10.2.3.31"
      },
      {
        "interface_ip": "10.2.3.33"
      },
      {
        "interface_ip": "10.2.3.44"
      },
      {
        "interface_ip": "10.2.3.46"
      },
      {
        "interface_ip": "10.2.3.48"
      },
      {
        "interface_ip": "10.2.3.52"
      },
      {
        "interface_ip": "10.2.3.55"
      },
      {
        "interface_ip": "10.2.3.58"
      },
      {
        "interface_ip": "10.2.3.61"
      },
      {
        "interface_ip": "10.2.3.72"
      },
      {
        "interface_ip": "10.2.3.76"
      },
      {
        "interface_ip": "10.2.3.77"
      },
      {
        "interface_ip": "10.2.3.88"
      },
      {
        "interface_ip": "10.2.3.89"
      },
      {
        "interface_ip": "10.2.3.95"
      },
      {
        "interface_ip": "10.2.3.99"
      },
      {
        "interface_ip": "10.2.3.104"
      },
      {
        "interface_ip": "10.2.3.105"
      },
      {
        "interface_ip": "10.2.3.111"
      },
      {
        "interface_ip": "10.2.3.117"
      },
      {
        "interface_ip": "10.2.3.121"
      },
      {
        "interface_ip": "10.2.3.136"
      },
      {
        "interface_ip": "10.2.3.140"
      },
      {
        "interface_ip": "10.2.3.143"
      },
      {
        "interface_ip": "10.2.3.155"
      },
      {
        "interface_ip": "10.2.3.157"
      },
      {
        "interface_ip": "10.2.3.160"
      },
      {
        "interface_ip": "10.2.3.164"
      },
      {
        "interface_ip": "10.2.3.174"
      },
      {
        "interface_ip": "10.2.3.175"
      },
      {
        "interface_ip": "10.2.3.180"
      },
      {
        "interface_ip": "10.2.3.184"
      },
      {
        "interface_ip": "10.2.3.189"
      },
      {
        "interface_ip": "10.2.3.191"
      },
      {
        "interface_ip": "10.2.4.2"
      },
      {
        "interface_ip": "10.2.4.3"
      },
      {
        "interface_ip": "10.2.4.18"
      },
      {
        "interface_ip": "10.2.4.23"
      },
      {
        "interface_ip": "10.2.4.33"
      },
      {
        "interface_ip": "10.2.4.36"
      },
      {
        "interface_ip": "10.2.4.37"
      },
      {
        "interface_ip": "10.2.4.43"
      },
      {
        "interface_ip": "10.2.4.58"
      },
      {
        "interface_ip": "10.2.4.59"
      },
      {
        "interface_ip": "10.2.4.66"
      },
      {
        "interface_ip": "10.2.4.70"
      },
      {
        "interface_ip": "10.2.4.73"
      },
      {
        "interface_ip": "10.2.4.74"
      },
      {
        "interface_ip": "10.2.4.81"
      },
      {
        "interface_ip": "10.2.4.84"
      },
      {
        "interface_ip": "10.2.4.106"
      },
      {
        "interface_ip": "10.2.4.107"
      },
      {
        "interface_ip": "10.2.4.110"
      },
      {
        "interface_ip": "10.2.4.111"
      },
      {
        "interface_ip": "10.2.4.120"
      },
      {
        "interface_ip": "10.2.4.127"
      },
      {
        "interface_ip": "10.2.4.128"
      },
      {
        "interface_ip": "10.2.4.133"
      },
      {
        "interface_ip": "10.2.4.138"
      },
      {
        "interface_ip": "10.2.4.154"
      },
      {
        "interface_ip": "10.2.4.156"
      },
      {
        "interface_ip": "10.2.4.162"
      },
      {
        "interface_ip": "10.2.4.163"
      },
      {
        "interface_ip": "10.2.4.166"
      },
      {
        "interface_ip": "10.2.4.170"
      },
      {
        "interface_ip": "10.2.4.171"
      },
      {
        "interface_ip": "10.2.4.172"
      },
      {
        "interface_ip": "10.2.4.187"
      },
      {
        "interface_ip": "10.2.4.189"
      },
      {
        "interface_ip": "10.2.4.191"
      },
      {
        "interface_ip": "10.2.4.195"
      },
      {
        "interface_ip": "10.2.4.196"
      },
      {
        "interface_ip": "10.2.5.1"
      },
      {
        "interface_ip": "10.2.5.2"
      },
      {
        "interface_ip": "10.2.5.8"
      },
      {
        "interface_ip": "10.2.5.9"
      },
      {
        "interface_ip": "10.2.5.11"
      },
      {
        "interface_ip": "10.2.5.17"
      },
      {
        "interface_ip": "10.2.5.19"
      },
      {
        "interface_ip": "10.2.5.25"
      },
      {
        "interface_ip": "10.2.5.26"
      },
      {
        "interface_ip": "10.2.5.28"
      },
      {
        "interface_ip": "10.2.5.38"
      },
      {
        "interface_ip": "10.2.5.40"
      },
      {
        "interface_ip": "10.2.5.41"
      },
      {
        "interface_ip": "10.2.5.43"
      },
      {
        "interface_ip": "10.2.5.49"
      },
      {
        "interface_ip": "10.2.5.54"
      },
      {
        "interface_ip": "10.2.5.59"
      },
      {
        "interface_ip": "10.2.5.73"
      },
      {
        "interface_ip": "10.2.5.76"
      },
      {
        "interface_ip": "10.2.5.78"
      },
      {
        "interface_ip": "10.2.5.87"
      },
      {
        "interface_ip": "10.2.5.98"
      },
      {
        "interface_ip": "10.2.5.102"
      },
      {
        "interface_ip": "10.2.5.106"
      },
      {
        "interface_ip": "10.2.5.107"
      },
      {
        "interface_ip": "10.2.5.110"
      },
      {
        "interface_ip": "10.2.5.111"
      },
      {
        "interface_ip": "10.2.5.112"
      },
      {
        "interface_ip": "10.2.5.118"
      },
      {
        "interface_ip": "10.2.5.120"
      },
      {
        "interface_ip": "10.2.5.123"
      },
      {
        "interface_ip": "10.2.5.124"
      },
      {
        "interface_ip": "10.2.5.127"
      },
      {
        "interface_ip": "10.2.5.139"
      },
      {
        "interface_ip": "10.2.5.155"
      },
      {
        "interface_ip": "10.2.5.170"
      },
      {
        "interface_ip": "10.2.5.172"
      },
      {
        "interface_ip": "10.2.5.173"
      },
      {
        "interface_ip": "10.2.5.189"
      },
      {
        "interface_ip": "10.2.5.195"
      },
      {
        "interface_ip": "10.2.6.13"
      },
      {
        "interface_ip": "10.2.6.15"
      },
      {
        "interface_ip": "10.2.6.21"
      },
      {
        "interface_ip": "10.2.6.24"
      },
      {
        "interface_ip": "10.2.6.27"
      },
      {
        "interface_ip": "10.2.6.30"
      },
      {
        "interface_ip": "10.2.6.38"
      },
      {
        "interface_ip": "10.2.6.40"
      },
      {
        "interface_ip": "10.2.6.41"
      },
      {
        "interface_ip": "10.2.6.55"
      },
      {
        "interface_ip": "10.2.6.57"
      },
      {
        "interface_ip": "10.2.6.62"
      },
      {
        "interface_ip": "10.2.6.63"
      },
      {
        "interface_ip": "10.2.6.65"
      },
      {
        "interface_ip": "10.2.6.69"
      },
      {
        "interface_ip": "10.2.6.76"
      },
      {
        "interface_ip": "10.2.6.81"
      },
      {
        "interface_ip": "10.2.6.101"
      },
      {
        "interface_ip": "10.2.6.105"
      },
      {
        "interface_ip": "10.2.6.108"
      },
      {
        "interface_ip": "10.2.6.109"
      },
      {
        "interface_ip": "10.2.6.123"
      },
      {
        "interface_ip": "10.2.6.124"
      },
      {
        "interface_ip": "10.2.6.127"
      },
      {
        "interface_ip": "10.2.6.132"
      },
      {
        "interface_ip": "10.2.6.138"
      },
      {
        "interface_ip": "10.2.6.140"
      },
      {
        "interface_ip": "10.2.6.144"
      },
      {
        "interface_ip": "10.2.6.153"
      },
      {
        "interface_ip": "10.2.6.156"
      },
      {
        "interface_ip": "10.2.6.157"
      },
      {
        "interface_ip": "10.2.6.168"
      },
      {
        "interface_ip": "10.2.6.173"
      },
      {
        "interface_ip": "10.2.6.176"
      },
      {
        "interface_ip": "10.2.6.179"
      },
      {
        "interface_ip": "10.2.6.180"
      },
      {
        "interface_ip": "10.2.6.191"
      },
      {
        "interface_ip": "10.2.6.195"
      },
      {
        "interface_ip": "10.2.6.197"
      },
      {
        "interface_ip": "10.2.6.198"
      },
      {
        "interface_ip": "10.2.7.1"
      },
      {
        "interface_ip": "10.2.7.16"
      },
      {
        "interface_ip": "10.2.7.20"
      },
      {
        "interface_ip": "10.2.7.25"
      },
      {
        "interface_ip": "10.2.7.29"
      },
      {
        "interface_ip": "10.2.7.34"
      },
      {
        "interface_ip": "10.2.7.49"
      },
      {
        "interface_ip": "10.2.7.59"
      },
      {
        "interface_ip": "10.2.7.64"
      },
      {
        "interface_ip": "10.2.7.65"
      },
      {
        "interface_ip": "10.2.7.71"
      },
      {
        "interface_ip": "10.2.7.72"
      },
      {
        "interface_ip": "10.2.7.76"
      },
      {
        "interface_ip": "10.2.7.79"
      },
      {
        "interface_ip": "10.2.7.87"
      },
      {
        "interface_ip": "10.2.7.88"
      },
      {
        "interface_ip": "10.2.7.91"
      },
      {
        "interface_ip": "10.2.7.97"
      },
      {
        "interface_ip": "10.2.7.104"
      },
      {
        "interface_ip": "10.2.7.106"
      },
      {
        "interface_ip": "10.2.7.117"
      },
      {
        "interface_ip": "10.2.7.129"
      },
      {
        "interface_ip": "10.2.7.131"
      },
      {
        "interface_ip": "10.2.7.138"
      },
      {
        "interface_ip": "10.2.7.140"
      },
      {
        "interface_ip": "10.2.7.143"
      },
      {
        "interface_ip": "10.2.7.151"
      },
      {
        "interface_ip": "10.2.7.156"
      },
      {
        "interface_ip": "10.2.7.160"
      },
      {
        "interface_ip": "10.2.7.161"
      },
      {
        "interface_ip": "10.2.7.164"
      },
      {
        "interface_ip": "10.2.7.169"
      },
      {
        "interface_ip": "10.2.7.179"
      },
      {
        "interface_ip": "10.2.7.180"
      },
      {
        "interface_ip": "10.2.7.182"
      },
      {
        "interface_ip": "10.2.7.183"
      },
      {
        "interface_ip": "10.2.7.188"
      },
      {
        "interface_ip": "10.2.7.198"
      },
      {
        "interface_ip": "10.2.8.5"
      },
      {
        "interface_ip": "10.2.8.6"
      },
      {
        "interface_ip": "10.2.8.17"
      },
      {
        "interface_ip": "10.2.8.18"
      },
      {
        "interface_ip": "10.2.8.25"
      },
      {
        "interface_ip": "10.2.8.31"
      },
      {
        "interface_ip": "10.2.8.32"
      },
      {
        "interface_ip": "10.2.8.35"
      },
      {
        "interface_ip": "10.2.8.39"
      },
      {
        "interface_ip": "10.2.8.42"
      },
      {
        "interface_ip": "10.2.8.43"
      },
      {
        "interface_ip": "10.2.8.44"
      },
      {
        "interface_ip": "10.2.8.47"
      },
      {
        "interface_ip": "10.2.8.51"
      },
      {
        "interface_ip": "10.2.8.54"
      },
      {
        "interface_ip": "10.2.8.59"
      },
      {
        "interface_ip": "10.2.8.60"
      },
      {
        "interface_ip": "10.2.8.71"
      },
      {
        "interface_ip": "10.2.8.78"
      },
      {
        "interface_ip": "10.2.8.81"
      },
      {
        "interface_ip": "10.2.8.83"
      },
      {
        "interface_ip": "10.2.8.84"
      },
      {
        "interface_ip": "10.2.8.92"
      },
      {
        "interface_ip": "10.2.8.95"
      },
      {
        "interface_ip": "10.2.8.97"
      },
      {
        "interface_ip": "10.2.8.110"
      },
      {
        "interface_ip": "10.2.8.119"
      },
      {
        "interface_ip": "10.2.8.123"
      },
      {
        "interface_ip": "10.2.8.127"
      },
      {
        "interface_ip": "10.2.8.129"
      },
      {
        "interface_ip": "10.2.8.135"
      },
      {
        "interface_ip": "10.2.8.140"
      },
      {
        "interface_ip": "10.2.8.149"
      },
      {
        "interface_ip": "10.2.8.163"
      },
      {
        "interface_ip": "10.2.8.172"
      },
      {
        "interface_ip": "10.2.8.173"
      },
      {
        "interface_ip": "10.2.8.184"
      },
      {
        "interface_ip": "10.2.8.186"
      },
      {
        "interface_ip": "10.2.8.191"
      },
      {
        "interface_ip": "10.2.8.193"
      },
      {
        "interface_ip": "10.2.8.196"
      },
      {
        "interface_ip": "10.2.8.199"
      },
      {
        "interface_ip": "10.2.8.200"
      },
      {
        "interface_ip": "10.2.9.7"
      },
      {
        "interface_ip": "10.2.9.16"
      },
      {
        "interface_ip": "10.2.9.20"
      },
      {
        "interface_ip": "10.2.9.22"
      },
      {
        "interface_ip": "10.2.9.24"
      },
      {
        "interface_ip": "10.2.9.25"
      },
      {
        "interface_ip": "10.2.9.27"
      },
      {
        "interface_ip": "10.2.9.30"
      },
      {
        "interface_ip": "10.2.9.32"
      },
      {
        "interface_ip": "10.2.9.36"
      },
      {
        "interface_ip": "10.2.9.44"
      },
      {
        "interface_ip": "10.2.9.54"
      },
      {
        "interface_ip": "10.2.9.62"
      },
      {
        "interface_ip": "10.2.9.65"
      },
      {
        "interface_ip": "10.2.9.68"
      },
      {
        "interface_ip": "10.2.9.76"
      },
      {
        "interface_ip": "10.2.9.78"
      },
      {
        "interface_ip": "10.2.9.79"
      },
      {
        "interface_ip": "10.2.9.84"
      },
      {
        "interface_ip": "10.2.9.85"
      },
      {
        "interface_ip": "10.2.9.95"
      },
      {
        "interface_ip": "10.2.9.119"
      },
      {
        "interface_ip": "10.2.9.123"
      },
      {
        "interface_ip": "10.2.9.124"
      },
      {
        "interface_ip": "10.2.9.125"
      },
      {
        "interface_ip": "10.2.9.127"
      },
      {
        "interface_ip": "10.2.9.140"
      },
      {
        "interface_ip": "10.2.9.143"
      },
      {
        "interface_ip": "10.2.9.146"
      },
      {
        "interface_ip": "10.2.9.149"
      },
      {
        "interface_ip": "10.2.9.151"
      },
      {
        "interface_ip": "10.2.9.153"
      },
      {
        "interface_ip": "10.2.9.157"
      },
      {
        "interface_ip": "10.2.9.188"
      },
      {
        "interface_ip": "10.2.9.189"
      },
      {
        "interface_ip": "10.2.9.191"
      },
      {
        "interface_ip": "10.2.9.192"
      },
      {
        "interface_ip": "10.2.9.193"
      },
      {
        "interface_ip": "10.2.9.199"
      },
      {
        "interface_ip": "10.2.10.2"
      },
      {
        "interface_ip": "10.2.10.7"
      },
      {
        "interface_ip": "10.2.10.10"
      },
      {
        "interface_ip": "10.2.10.16"
      },
      {
        "interface_ip": "10.2.10.18"
      },
      {
        "interface_ip": "10.2.10.22"
      },
      {
        "interface_ip": "10.2.10.24"
      },
      {
        "interface_ip": "10.2.10.29"
      },
      {
        "interface_ip": "10.2.10.34"
      },
      {
        "interface_ip": "10.2.10.38"
      },
      {
        "interface_ip": "10.2.10.45"
      },
      {
        "interface_ip": "10.2.10.49"
      },
      {
        "interface_ip": "10.2.10.54"
      },
      {
        "interface_ip": "10.2.10.58"
      },
      {
        "interface_ip": "10.2.10.66"
      },
      {
        "interface_ip": "10.2.10.70"
      },
      {
        "interface_ip": "10.2.10.73"
      },
      {
        "interface_ip": "10.2.10.77"
      },
      {
        "interface_ip": "10.2.10.110"
      },
      {
        "interface_ip": "10.2.10.111"
      },
      {
        "interface_ip": "10.2.10.114"
      },
      {
        "interface_ip": "10.2.10.119"
      },
      {
        "interface_ip": "10.2.10.122"
      },
      {
        "interface_ip": "10.2.10.123"
      },
      {
        "interface_ip": "10.2.10.125"
      },
      {
        "interface_ip": "10.2.10.135"
      },
      {
        "interface_ip": "10.2.10.138"
      },
      {
        "interface_ip": "10.2.10.141"
      },
      {
        "interface_ip": "10.2.10.156"
      },
      {
        "interface_ip": "10.2.10.162"
      },
      {
        "interface_ip": "10.2.10.163"
      },
      {
        "interface_ip": "10.2.10.178"
      },
      {
        "interface_ip": "10.2.10.184"
      },
      {
        "interface_ip": "10.2.10.185"
      },
      {
        "interface_ip": "10.2.10.189"
      },
      {
        "interface_ip": "10.2.10.197"
      },
      {
        "interface_ip": "10.2.10.198"
      },
      {
        "interface_ip": "10.3.1.8"
      },
      {
        "interface_ip": "10.3.1.9"
      },
      {
        "interface_ip": "10.3.1.10"
      },
      {
        "interface_ip": "10.3.1.12"
      },
      {
        "interface_ip": "10.3.1.24"
      },
      {
        "interface_ip": "10.3.1.25"
      },
      {
        "interface_ip": "10.3.1.32"
      },
      {
        "interface_ip": "10.3.1.41"
      },
      {
        "interface_ip": "10.3.1.42"
      },
      {
        "interface_ip": "10.3.1.44"
      },
      {
        "interface_ip": "10.3.1.56"
      },
      {
        "interface_ip": "10.3.1.57"
      },
      {
        "interface_ip": "10.3.1.63"
      },
      {
        "interface_ip": "10.3.1.65"
      },
      {
        "interface_ip": "10.3.1.68"
      },
      {
        "interface_ip": "10.3.1.89"
      },
      {
        "interface_ip": "10.3.1.90"
      },
      {
        "interface_ip": "10.3.1.91"
      },
      {
        "interface_ip": "10.3.1.94"
      },
      {
        "interface_ip": "10.3.1.95"
      },
      {
        "interface_ip": "10.3.1.96"
      },
      {
        "interface_ip": "10.3.1.97"
      },
      {
        "interface_ip": "10.3.1.98"
      },
      {
        "interface_ip": "10.3.1.107"
      },
      {
        "interface_ip": "10.3.1.111"
      },
      {
        "interface_ip": "10.3.1.112"
      },
      {
        "interface_ip": "10.3.1.114"
      },
      {
        "interface_ip": "10.3.1.123"
      },
      {
        "interface_ip": "10.3.1.124"
      },
      {
        "interface_ip": "10.3.1.138"
      },
      {
        "interface_ip": "10.3.1.148"
      },
      {
        "interface_ip": "10.3.1.180"
      },
      {
        "interface_ip": "10.3.1.182"
      },
      {
        "interface_ip": "10.3.1.186"
      },
      {
        "interface_ip": "10.3.1.192"
      },
      {
        "interface_ip": "10.3.1.199"
      },
      {
        "interface_ip": "10.3.1.200"
      },
      {
        "interface_ip": "10.3.2.4"
      },
      {
        "interface_ip": "10.3.2.6"
      },
      {
        "interface_ip": "10.3.2.10"
      },
      {
        "interface_ip": "10.3.2.11"
      },
      {
        "interface_ip": "10.3.2.20"
      },
      {
        "interface_ip": "10.3.2.23"
      },
      {
        "interface_ip": "10.3.2.28"
      },
      {
        "interface_ip": "10.3.2.32"
      },
      {
        "interface_ip": "10.3.2.33"
      },
      {
        "interface_ip": "10.3.2.46"
      },
      {
        "interface_ip": "10.3.2.49"
      },
      {
        "interface_ip": "10.3.2.52"
      },
      {
        "interface_ip": "10.3.2.57"
      },
      {
        "interface_ip": "10.3.2.60"
      },
      {
        "interface_ip": "10.3.2.61"
      },
      {
        "interface_ip": "10.3.2.66"
      },
      {
        "interface_ip": "10.3.2.70"
      },
      {
        "interface_ip": "10.3.2.77"
      },
      {
        "interface_ip": "10.3.2.94"
      },
      {
        "interface_ip": "10.3.2.99"
      },
      {
        "interface_ip": "10.3.2.105"
      },
      {
        "interface_ip": "10.3.2.112"
      },
      {
        "interface_ip": "10.3.2.121"
      },
      {
        "interface_ip": "10.3.2.126"
      },
      {
        "interface_ip": "10.3.2.134"
      },
      {
        "interface_ip": "10.3.2.135"
      },
      {
        "interface_ip": "10.3.2.136"
      },
      {
        "interface_ip": "10.3.2.138"
      },
      {
        "interface_ip": "10.3.2.141"
      },
      {
        "interface_ip": "10.3.2.151"
      },
      {
        "interface_ip": "10.3.2.152"
      },
      {
        "interface_ip": "10.3.2.156"
      },
      {
        "interface_ip": "10.3.2.163"
      },
      {
        "interface_ip": "10.3.2.164"
      },
      {
        "interface_ip": "10.3.2.169"
      },
      {
        "interface_ip": "10.3.2.174"
      },
      {
        "interface_ip": "10.3.2.175"
      },
      {
        "interface_ip": "10.3.2.177"
      },
      {
        "interface_ip": "10.3.2.188"
      },
      {
        "interface_ip": "10.3.2.197"
      },
      {
        "interface_ip": "10.3.2.200"
      },
      {
        "interface_ip": "10.3.3.2"
      },
      {
        "interface_ip": "10.3.3.3"
      },
      {
        "interface_ip": "10.3.3.30"
      },
      {
        "interface_ip": "10.3.3.43"
      },
      {
        "interface_ip": "10.3.3.44"
      },
      {
        "interface_ip": "10.3.3.55"
      },
      {
        "interface_ip": "10.3.3.57"
      },
      {
        "interface_ip": "10.3.3.59"
      },
      {
        "interface_ip": "10.3.3.60"
      },
      {
        "interface_ip": "10.3.3.62"
      },
      {
        "interface_ip": "10.3.3.70"
      },
      {
        "interface_ip": "10.3.3.78"
      },
      {
        "interface_ip": "10.3.3.79"
      },
      {
        "interface_ip": "10.3.3.81"
      },
      {
        "interface_ip": "10.3.3.89"
      },
      {
        "interface_ip": "10.3.3.104"
      },
      {
        "interface_ip": "10.3.3.106"
      },
      {
        "interface_ip": "10.3.3.107"
      },
      {
        "interface_ip": "10.3.3.109"
      },
      {
        "interface_ip": "10.3.3.119"
      },
      {
        "interface_ip": "10.3.3.124"
      },
      {
        "interface_ip": "10.3.3.127"
      },
      {
        "interface_ip": "10.3.3.129"
      },
      {
        "interface_ip": "10.3.3.135"
      },
      {
        "interface_ip": "10.3.3.141"
      },
      {
        "interface_ip": "10.3.3.155"
      },
      {
        "interface_ip": "10.3.3.156"
      },
      {
        "interface_ip": "10.3.3.157"
      },
      {
        "interface_ip": "10.3.3.161"
      },
      {
        "interface_ip": "10.3.3.163"
      },
      {
        "interface_ip": "10.3.3.166"
      },
      {
        "interface_ip": "10.3.3.167"
      },
      {
        "interface_ip": "10.3.3.168"
      },
      {
        "interface_ip": "10.3.3.170"
      },
      {
        "interface_ip": "10.3.3.183"
      },
      {
        "interface_ip": "10.3.3.189"
      },
      {
        "interface_ip": "10.3.3.191"
      },
      {
        "interface_ip": "10.3.3.196"
      },
      {
        "interface_ip": "10.3.4.8"
      },
      {
        "interface_ip": "10.3.4.10"
      },
      {
        "interface_ip": "10.3.4.11"
      },
      {
        "interface_ip": "10.3.4.29"
      },
      {
        "interface_ip": "10.3.4.30"
      },
      {
        "interface_ip": "10.3.4.36"
      },
      {
        "interface_ip": "10.3.4.43"
      },
      {
        "interface_ip": "10.3.4.46"
      },
      {
        "interface_ip": "10.3.4.50"
      },
      {
        "interface_ip": "10.3.4.53"
      },
      {
        "interface_ip": "10.3.4.59"
      },
      {
        "interface_ip": "10.3.4.60"
      },
      {
        "interface_ip": "10.3.4.61"
      },
      {
        "interface_ip": "10.3.4.65"
      },
      {
        "interface_ip": "10.3.4.67"
      },
      {
        "interface_ip": "10.3.4.73"
      },
      {
        "interface_ip": "10.3.4.75"
      },
      {
        "interface_ip": "10.3.4.86"
      },
      {
        "interface_ip": "10.3.4.89"
      },
      {
        "interface_ip": "10.3.4.97"
      },
      {
        "interface_ip": "10.3.4.98"
      },
      {
        "interface_ip": "10.3.4.99"
      },
      {
        "interface_ip": "10.3.4.101"
      },
      {
        "interface_ip": "10.3.4.103"
      },
      {
        "interface_ip": "10.3.4.106"
      },
      {
        "interface_ip": "10.3.4.114"
      },
      {
        "interface_ip": "10.3.4.125"
      },
      {
        "interface_ip": "10.3.4.128"
      },
      {
        "interface_ip": "10.3.4.131"
      },
      {
        "interface_ip": "10.3.4.132"
      },
      {
        "interface_ip": "10.3.4.140"
      },
      {
        "interface_ip": "10.3.4.143"
      },
      {
        "interface_ip": "10.3.4.144"
      },
      {
        "interface_ip": "10.3.4.169"
      },
      {
        "interface_ip": "10.3.4.177"
      },
      {
        "interface_ip": "10.3.4.183"
      },
      {
        "interface_ip": "10.3.4.191"
      },
      {
        "interface_ip": "10.3.5.2"
      },
      {
        "interface_ip": "10.3.5.6"
      },
      {
        "interface_ip": "10.3.5.8"
      },
      {
        "interface_ip": "10.3.5.11"
      },
      {
        "interface_ip": "10.3.5.13"
      },
      {
        "interface_ip": "10.3.5.19"
      },
      {
        "interface_ip": "10.3.5.20"
      },
      {
        "interface_ip": "10.3.5.27"
      },
      {
        "interface_ip": "10.3.5.28"
      },
      {
        "interface_ip": "10.3.5.29"
      },
      {
        "interface_ip": "10.3.5.33"
      },
      {
        "interface_ip": "10.3.5.34"
      },
      {
        "interface_ip": "10.3.5.37"
      },
      {
        "interface_ip": "10.3.5.38"
      },
      {
        "interface_ip": "10.3.5.47"
      },
      {
        "interface_ip": "10.3.5.48"
      },
      {
        "interface_ip": "10.3.5.49"
      },
      {
        "interface_ip": "10.3.5.53"
      },
      {
        "interface_ip": "10.3.5.59"
      },
      {
        "interface_ip": "10.3.5.66"
      },
      {
        "interface_ip": "10.3.5.70"
      },
      {
        "interface_ip": "10.3.5.77"
      },
      {
        "interface_ip": "10.3.5.86"
      },
      {
        "interface_ip": "10.3.5.93"
      },
      {
        "interface_ip": "10.3.5.95"
      },
      {
        "interface_ip": "10.3.5.100"
      },
      {
        "interface_ip": "10.3.5.103"
      },
      {
        "interface_ip": "10.3.5.107"
      },
      {
        "interface_ip": "10.3.5.113"
      },
      {
        "interface_ip": "10.3.5.115"
      },
      {
        "interface_ip": "10.3.5.118"
      },
      {
        "interface_ip": "10.3.5.129"
      },
      {
        "interface_ip": "10.3.5.130"
      },
      {
        "interface_ip": "10.3.5.132"
      },
      {
        "interface_ip": "10.3.5.135"
      },
      {
        "interface_ip": "10.3.5.144"
      },
      {
        "interface_ip": "10.3.5.150"
      },
      {
        "interface_ip": "10.3.5.152"
      },
      {
        "interface_ip": "10.3.5.157"
      },
      {
        "interface_ip": "10.3.5.159"
      },
      {
        "interface_ip": "10.3.5.163"
      },
      {
        "interface_ip": "10.3.5.167"
      },
      {
        "interface_ip": "10.3.5.168"
      },
      {
        "interface_ip": "10.3.5.175"
      },
      {
        "interface_ip": "10.3.5.176"
      },
      {
        "interface_ip": "10.3.5.178"
      },
      {
        "interface_ip": "10.3.5.179"
      },
      {
        "interface_ip": "10.3.5.185"
      },
      {
        "interface_ip": "10.3.5.189"
      },
      {
        "interface_ip": "10.3.5.191"
      },
      {
        "interface_ip": "10.3.5.194"
      },
      {
        "interface_ip": "10.3.6.6"
      },
      {
        "interface_ip": "10.3.6.19"
      },
      {
        "interface_ip": "10.3.6.21"
      },
      {
        "interface_ip": "10.3.6.24"
      },
      {
        "interface_ip": "10.3.6.25"
      },
      {
        "interface_ip": "10.3.6.47"
      },
      {
        "interface_ip": "10.3.6.48"
      },
      {
        "interface_ip": "10.3.6.52"
      },
      {
        "interface_ip": "10.3.6.55"
      },
      {
        "interface_ip": "10.3.6.71"
      },
      {
        "interface_ip": "10.3.6.72"
      },
      {
        "interface_ip": "10.3.6.79"
      },
      {
        "interface_ip": "10.3.6.80"
      },
      {
        "interface_ip": "10.3.6.85"
      },
      {
        "interface_ip": "10.3.6.88"
      },
      {
        "interface_ip": "10.3.6.91"
      },
      {
        "interface_ip": "10.3.6.94"
      },
      {
        "interface_ip": "10.3.6.95"
      },
      {
        "interface_ip": "10.3.6.98"
      },
      {
        "interface_ip": "10.3.6.100"
      },
      {
        "interface_ip": "10.3.6.102"
      },
      {
        "interface_ip": "10.3.6.106"
      },
      {
        "interface_ip": "10.3.6.118"
      },
      {
        "interface_ip": "10.3.6.129"
      },
      {
        "interface_ip": "10.3.6.145"
      },
      {
        "interface_ip": "10.3.6.146"
      },
      {
        "interface_ip": "10.3.6.147"
      },
      {
        "interface_ip": "10.3.6.149"
      },
      {
        "interface_ip": "10.3.6.150"
      },
      {
        "interface_ip": "10.3.6.151"
      },
      {
        "interface_ip": "10.3.6.159"
      },
      {
        "interface_ip": "10.3.6.162"
      },
      {
        "interface_ip": "10.3.6.174"
      },
      {
        "interface_ip": "10.3.6.175"
      },
      {
        "interface_ip": "10.3.6.180"
      },
      {
        "interface_ip": "10.3.6.184"
      },
      {
        "interface_ip": "10.3.6.190"
      },
      {
        "interface_ip": "10.3.6.200"
      },
      {
        "interface_ip": "10.3.7.1"
      },
      {
        "interface_ip": "10.3.7.2"
      },
      {
        "interface_ip": "10.3.7.3"
      },
      {
        "interface_ip": "10.3.7.8"
      },
      {
        "interface_ip": "10.3.7.11"
      },
      {
        "interface_ip": "10.3.7.12"
      },
      {
        "interface_ip": "10.3.7.25"
      },
      {
        "interface_ip": "10.3.7.27"
      },
      {
        "interface_ip": "10.3.7.28"
      },
      {
        "interface_ip": "10.3.7.29"
      },
      {
        "interface_ip": "10.3.7.31"
      },
      {
        "interface_ip": "10.3.7.33"
      },
      {
        "interface_ip": "10.3.7.38"
      },
      {
        "interface_ip": "10.3.7.39"
      },
      {
        "interface_ip": "10.3.7.40"
      },
      {
        "interface_ip": "10.3.7.42"
      },
      {
        "interface_ip": "10.3.7.47"
      },
      {
        "interface_ip": "10.3.7.49"
      },
      {
        "interface_ip": "10.3.7.52"
      },
      {
        "interface_ip": "10.3.7.60"
      },
      {
        "interface_ip": "10.3.7.61"
      },
      {
        "interface_ip": "10.3.7.68"
      },
      {
        "interface_ip": "10.3.7.69"
      },
      {
        "interface_ip": "10.3.7.71"
      },
      {
        "interface_ip": "10.3.7.77"
      },
      {
        "interface_ip": "10.3.7.78"
      },
      {
        "interface_ip": "10.3.7.82"
      },
      {
        "interface_ip": "10.3.7.84"
      },
      {
        "interface_ip": "10.3.7.92"
      },
      {
        "interface_ip": "10.3.7.98"
      },
      {
        "interface_ip": "10.3.7.111"
      },
      {
        "interface_ip": "10.3.7.116"
      },
      {
        "interface_ip": "10.3.7.118"
      },
      {
        "interface_ip": "10.3.7.123"
      },
      {
        "interface_ip": "10.3.7.129"
      },
      {
        "interface_ip": "10.3.7.130"
      },
      {
        "interface_ip": "10.3.7.131"
      },
      {
        "interface_ip": "10.3.7.134"
      },
      {
        "interface_ip": "10.3.7.136"
      },
      {
        "interface_ip": "10.3.7.139"
      },
      {
        "interface_ip": "10.3.7.143"
      },
      {
        "interface_ip": "10.3.7.147"
      },
      {
        "interface_ip": "10.3.7.150"
      },
      {
        "interface_ip": "10.3.7.152"
      },
      {
        "interface_ip": "10.3.7.155"
      },
      {
        "interface_ip": "10.3.7.162"
      },
      {
        "interface_ip": "10.3.7.167"
      },
      {
        "interface_ip": "10.3.7.170"
      },
      {
        "interface_ip": "10.3.7.172"
      },
      {
        "interface_ip": "10.3.7.174"
      },
      {
        "interface_ip": "10.3.7.180"
      },
      {
        "interface_ip": "10.3.7.182"
      },
      {
        "interface_ip": "10.3.7.191"
      },
      {
        "interface_ip": "10.3.7.192"
      },
      {
        "interface_ip": "10.3.8.2"
      },
      {
        "interface_ip": "10.3.8.3"
      },
      {
        "interface_ip": "10.3.8.5"
      },
      {
        "interface_ip": "10.3.8.13"
      },
      {
        "interface_ip": "10.3.8.14"
      },
      {
        "interface_ip": "10.3.8.22"
      },
      {
        "interface_ip": "10.3.8.29"
      },
      {
        "interface_ip": "10.3.8.37"
      },
      {
        "interface_ip": "10.3.8.44"
      },
      {
        "interface_ip": "10.3.8.46"
      },
      {
        "interface_ip": "10.3.8.49"
      },
      {
        "interface_ip": "10.3.8.56"
      },
      {
        "interface_ip": "10.3.8.59"
      },
      {
        "interface_ip": "10.3.8.64"
      },
      {
        "interface_ip": "10.3.8.77"
      },
      {
        "interface_ip": "10.3.8.83"
      },
      {
        "interface_ip": "10.3.8.85"
      },
      {
        "interface_ip": "10.3.8.88"
      },
      {
        "interface_ip": "10.3.8.90"
      },
      {
        "interface_ip": "10.3.8.92"
      },
      {
        "interface_ip": "10.3.8.97"
      },
      {
        "interface_ip": "10.3.8.99"
      },
      {
        "interface_ip": "10.3.8.113"
      },
      {
        "interface_ip": "10.3.8.114"
      },
      {
        "interface_ip": "10.3.8.117"
      },
      {
        "interface_ip": "10.3.8.118"
      },
      {
        "interface_ip": "10.3.8.121"
      },
      {
        "interface_ip": "10.3.8.128"
      },
      {
        "interface_ip": "10.3.8.129"
      },
      {
        "interface_ip": "10.3.8.130"
      },
      {
        "interface_ip": "10.3.8.131"
      },
      {
        "interface_ip": "10.3.8.139"
      },
      {
        "interface_ip": "10.3.8.140"
      },
      {
        "interface_ip": "10.3.8.142"
      },
      {
        "interface_ip": "10.3.8.144"
      },
      {
        "interface_ip": "10.3.8.145"
      },
      {
        "interface_ip": "10.3.8.156"
      },
      {
        "interface_ip": "10.3.8.157"
      },
      {
        "interface_ip": "10.3.8.160"
      },
      {
        "interface_ip": "10.3.8.162"
      },
      {
        "interface_ip": "10.3.8.170"
      },
      {
        "interface_ip": "10.3.8.171"
      },
      {
        "interface_ip": "10.3.8.174"
      },
      {
        "interface_ip": "10.3.8.179"
      },
      {
        "interface_ip": "10.3.8.188"
      },
      {
        "interface_ip": "10.3.8.193"
      },
      {
        "interface_ip": "10.3.8.194"
      },
      {
        "interface_ip": "10.3.8.197"
      },
      {
        "interface_ip": "10.3.9.10"
      },
      {
        "interface_ip": "10.3.9.23"
      },
      {
        "interface_ip": "10.3.9.27"
      },
      {
        "interface_ip": "10.3.9.30"
      },
      {
        "interface_ip": "10.3.9.33"
      },
      {
        "interface_ip": "10.3.9.38"
      },
      {
        "interface_ip": "10.3.9.39"
      },
      {
        "interface_ip": "10.3.9.50"
      },
      {
        "interface_ip": "10.3.9.60"
      },
      {
        "interface_ip": "10.3.9.66"
      },
      {
        "interface_ip": "10.3.9.81"
      },
      {
        "interface_ip": "10.3.9.90"
      },
      {
        "interface_ip": "10.3.9.92"
      },
      {
        "interface_ip": "10.3.9.97"
      },
      {
        "interface_ip": "10.3.9.98"
      },
      {
        "interface_ip": "10.3.9.105"
      },
      {
        "interface_ip": "10.3.9.108"
      },
      {
        "interface_ip": "10.3.9.112"
      },
      {
        "interface_ip": "10.3.9.119"
      },
      {
        "interface_ip": "10.3.9.120"
      },
      {
        "interface_ip": "10.3.9.126"
      },
      {
        "interface_ip": "10.3.9.136"
      },
      {
        "interface_ip": "10.3.9.138"
      },
      {
        "interface_ip": "10.3.9.141"
      },
      {
        "interface_ip": "10.3.9.147"
      },
      {
        "interface_ip": "10.3.9.152"
      },
      {
        "interface_ip": "10.3.9.155"
      },
      {
        "interface_ip": "10.3.9.156"
      },
      {
        "interface_ip": "10.3.9.159"
      },
      {
        "interface_ip": "10.3.9.168"
      },
      {
        "interface_ip": "10.3.9.177"
      },
      {
        "interface_ip": "10.3.9.178"
      },
      {
        "interface_ip": "10.3.9.182"
      },
      {
        "interface_ip": "10.3.9.185"
      },
      {
        "interface_ip": "10.3.9.186"
      },
      {
        "interface_ip": "10.3.9.196"
      },
      {
        "interface_ip": "10.3.10.5"
      },
      {
        "interface_ip": "10.3.10.13"
      },
      {
        "interface_ip": "10.3.10.16"
      },
      {
        "interface_ip": "10.3.10.19"
      },
      {
        "interface_ip": "10.3.10.29"
      },
      {
        "interface_ip": "10.3.10.32"
      },
      {
        "interface_ip": "10.3.10.41"
      },
      {
        "interface_ip": "10.3.10.49"
      },
      {
        "interface_ip": "10.3.10.50"
      },
      {
        "interface_ip": "10.3.10.54"
      },
      {
        "interface_ip": "10.3.10.60"
      },
      {
        "interface_ip": "10.3.10.63"
      },
      {
        "interface_ip": "10.3.10.68"
      },
      {
        "interface_ip": "10.3.10.69"
      },
      {
        "interface_ip": "10.3.10.70"
      },
      {
        "interface_ip": "10.3.10.74"
      },
      {
        "interface_ip": "10.3.10.80"
      },
      {
        "interface_ip": "10.3.10.81"
      },
      {
        "interface_ip": "10.3.10.84"
      },
      {
        "interface_ip": "10.3.10.87"
      },
      {
        "interface_ip": "10.3.10.91"
      },
      {
        "interface_ip": "10.3.10.92"
      },
      {
        "interface_ip": "10.3.10.97"
      },
      {
        "interface_ip": "10.3.10.102"
      },
      {
        "interface_ip": "10.3.10.104"
      },
      {
        "interface_ip": "10.3.10.107"
      },
      {
        "interface_ip": "10.3.10.110"
      },
      {
        "interface_ip": "10.3.10.112"
      },
      {
        "interface_ip": "10.3.10.114"
      },
      {
        "interface_ip": "10.3.10.117"
      },
      {
        "interface_ip": "10.3.10.119"
      },
      {
        "interface_ip": "10.3.10.120"
      },
      {
        "interface_ip": "10.3.10.132"
      },
      {
        "interface_ip": "10.3.10.135"
      },
      {
        "interface_ip": "10.3.10.137"
      },
      {
        "interface_ip": "10.3.10.141"
      },
      {
        "interface_ip": "10.3.10.142"
      },
      {
        "interface_ip": "10.3.10.148"
      },
      {
        "interface_ip": "10.3.10.149"
      },
      {
        "interface_ip": "10.3.10.150"
      },
      {
        "interface_ip": "10.3.10.153"
      },
      {
        "interface_ip": "10.3.10.166"
      },
      {
        "interface_ip": "10.3.10.174"
      },
      {
        "interface_ip": "10.3.10.175"
      },
      {
        "interface_ip": "10.3.10.176"
      },
      {
        "interface_ip": "10.3.10.177"
      },
      {
        "interface_ip": "10.3.10.179"
      },
      {
        "interface_ip": "10.3.10.184"
      },
      {
        "interface_ip": "10.3.10.185"
      },
      {
        "interface_ip": "10.4.1.1"
      },
      {
        "interface_ip": "10.4.1.4"
      },
      {
        "interface_ip": "10.4.1.5"
      },
      {
        "interface_ip": "10.4.1.6"
      },
      {
        "interface_ip": "10.4.1.16"
      },
      {
        "interface_ip": "10.4.1.20"
      },
      {
        "interface_ip": "10.4.1.23"
      },
      {
        "interface_ip": "10.4.1.25"
      },
      {
        "interface_ip": "10.4.1.26"
      },
      {
        "interface_ip": "10.4.1.38"
      },
      {
        "interface_ip": "10.4.1.41"
      },
      {
        "interface_ip": "10.4.1.46"
      },
      {
        "interface_ip": "10.4.1.50"
      },
      {
        "interface_ip": "10.4.1.58"
      },
      {
        "interface_ip": "10.4.1.66"
      },
      {
        "interface_ip": "10.4.1.89"
      },
      {
        "interface_ip": "10.4.1.94"
      },
      {
        "interface_ip": "10.4.1.97"
      },
      {
        "interface_ip": "10.4.1.111"
      },
      {
        "interface_ip": "10.4.1.124"
      },
      {
        "interface_ip": "10.4.1.128"
      },
      {
        "interface_ip": "10.4.1.130"
      },
      {
        "interface_ip": "10.4.1.132"
      },
      {
        "interface_ip": "10.4.1.138"
      },
      {
        "interface_ip": "10.4.1.139"
      },
      {
        "interface_ip": "10.4.1.141"
      },
      {
        "interface_ip": "10.4.1.145"
      },
      {
        "interface_ip": "10.4.1.149"
      },
      {
        "interface_ip": "10.4.1.153"
      },
      {
        "interface_ip": "10.4.1.155"
      },
      {
        "interface_ip": "10.4.1.163"
      },
      {
        "interface_ip": "10.4.1.166"
      },
      {
        "interface_ip": "10.4.1.170"
      },
      {
        "interface_ip": "10.4.1.171"
      },
      {
        "interface_ip": "10.4.1.174"
      },
      {
        "interface_ip": "10.4.1.175"
      },
      {
        "interface_ip": "10.4.1.176"
      },
      {
        "interface_ip": "10.4.1.180"
      },
      {
        "interface_ip": "10.4.1.184"
      },
      {
        "interface_ip": "10.4.1.185"
      },
      {
        "interface_ip": "10.4.1.191"
      },
      {
        "interface_ip": "10.4.1.192"
      },
      {
        "interface_ip": "10.4.1.196"
      },
      {
        "interface_ip": "10.4.2.5"
      },
      {
        "interface_ip": "10.4.2.6"
      },
      {
        "interface_ip": "10.4.2.7"
      },
      {
        "interface_ip": "10.4.2.10"
      },
      {
        "interface_ip": "10.4.2.11"
      },
      {
        "interface_ip": "10.4.2.16"
      },
      {
        "interface_ip": "10.4.2.29"
      },
      {
        "interface_ip": "10.4.2.34"
      },
      {
        "interface_ip": "10.4.2.38"
      },
      {
        "interface_ip": "10.4.2.40"
      },
      {
        "interface_ip": "10.4.2.41"
      },
      {
        "interface_ip": "10.4.2.42"
      },
      {
        "interface_ip": "10.4.2.49"
      },
      {
        "interface_ip": "10.4.2.55"
      },
      {
        "interface_ip": "10.4.2.62"
      },
      {
        "interface_ip": "10.4.2.66"
      },
      {
        "interface_ip": "10.4.2.69"
      },
      {
        "interface_ip": "10.4.2.74"
      },
      {
        "interface_ip": "10.4.2.77"
      },
      {
        "interface_ip": "10.4.2.80"
      },
      {
        "interface_ip": "10.4.2.83"
      },
      {
        "interface_ip": "10.4.2.89"
      },
      {
        "interface_ip": "10.4.2.93"
      },
      {
        "interface_ip": "10.4.2.94"
      },
      {
        "interface_ip": "10.4.2.97"
      },
      {
        "interface_ip": "10.4.2.98"
      },
      {
        "interface_ip": "10.4.2.100"
      },
      {
        "interface_ip": "10.4.2.102"
      },
      {
        "interface_ip": "10.4.2.106"
      },
      {
        "interface_ip": "10.4.2.113"
      },
      {
        "interface_ip": "10.4.2.122"
      },
      {
        "interface_ip": "10.4.2.128"
      },
      {
        "interface_ip": "10.4.2.132"
      },
      {
        "interface_ip": "10.4.2.134"
      },
      {
        "interface_ip": "10.4.2.135"
      },
      {
        "interface_ip": "10.4.2.136"
      },
      {
        "interface_ip": "10.4.2.140"
      },
      {
        "interface_ip": "10.4.2.148"
      },
      {
        "interface_ip": "10.4.2.155"
      },
      {
        "interface_ip": "10.4.2.161"
      },
      {
        "interface_ip": "10.4.2.162"
      },
      {
        "interface_ip": "10.4.2.165"
      },
      {
        "interface_ip": "10.4.2.182"
      },
      {
        "interface_ip": "10.4.2.188"
      },
      {
        "interface_ip": "10.4.3.2"
      },
      {
        "interface_ip": "10.4.3.3"
      },
      {
        "interface_ip": "10.4.3.5"
      },
      {
        "interface_ip": "10.4.3.6"
      },
      {
        "interface_ip": "10.4.3.21"
      },
      {
        "interface_ip": "10.4.3.24"
      },
      {
        "interface_ip": "10.4.3.27"
      },
      {
        "interface_ip": "10.4.3.32"
      },
      {
        "interface_ip": "10.4.3.38"
      },
      {
        "interface_ip": "10.4.3.42"
      },
      {
        "interface_ip": "10.4.3.55"
      },
      {
        "interface_ip": "10.4.3.64"
      },
      {
        "interface_ip": "10.4.3.76"
      },
      {
        "interface_ip": "10.4.3.84"
      },
      {
        "interface_ip": "10.4.3.94"
      },
      {
        "interface_ip": "10.4.3.102"
      },
      {
        "interface_ip": "10.4.3.114"
      },
      {
        "interface_ip": "10.4.3.117"
      },
      {
        "interface_ip": "10.4.3.119"
      },
      {
        "interface_ip": "10.4.3.127"
      },
      {
        "interface_ip": "10.4.3.133"
      },
      {
        "interface_ip": "10.4.3.139"
      },
      {
        "interface_ip": "10.4.3.149"
      },
      {
        "interface_ip": "10.4.3.155"
      },
      {
        "interface_ip": "10.4.3.160"
      },
      {
        "interface_ip": "10.4.3.161"
      },
      {
        "interface_ip": "10.4.3.165"
      },
      {
        "interface_ip": "10.4.3.167"
      },
      {
        "interface_ip": "10.4.3.169"
      },
      {
        "interface_ip": "10.4.3.171"
      },
      {
        "interface_ip": "10.4.3.172"
      },
      {
        "interface_ip": "10.4.3.183"
      },
      {
        "interface_ip": "10.4.3.188"
      },
      {
        "interface_ip": "10.4.3.191"
      },
      {
        "interface_ip": "10.4.3.200"
      },
      {
        "interface_ip": "10.4.4.5"
      },
      {
        "interface_ip": "10.4.4.13"
      },
      {
        "interface_ip": "10.4.4.15"
      },
      {
        "interface_ip": "10.4.4.28"
      },
      {
        "interface_ip": "10.4.4.29"
      },
      {
        "interface_ip": "10.4.4.39"
      },
      {
        "interface_ip": "10.4.4.43"
      },
      {
        "interface_ip": "10.4.4.49"
      },
      {
        "interface_ip": "10.4.4.53"
      },
      {
        "interface_ip": "10.4.4.54"
      },
      {
        "interface_ip": "10.4.4.56"
      },
      {
        "interface_ip": "10.4.4.60"
      },
      {
        "interface_ip": "10.4.4.80"
      },
      {
        "interface_ip": "10.4.4.82"
      },
      {
        "interface_ip": "10.4.4.85"
      },
      {
        "interface_ip": "10.4.4.86"
      },
      {
        "interface_ip": "10.4.4.93"
      },
      {
        "interface_ip": "10.4.4.94"
      },
      {
        "interface_ip": "10.4.4.98"
      },
      {
        "interface_ip": "10.4.4.102"
      },
      {
        "interface_ip": "10.4.4.108"
      },
      {
        "interface_ip": "10.4.4.109"
      },
      {
        "interface_ip": "10.4.4.111"
      },
      {
        "interface_ip": "10.4.4.117"
      },
      {
        "interface_ip": "10.4.4.123"
      },
      {
        "interface_ip": "10.4.4.127"
      },
      {
        "interface_ip": "10.4.4.135"
      },
      {
        "interface_ip": "10.4.4.145"
      },
      {
        "interface_ip": "10.4.4.154"
      },
      {
        "interface_ip": "10.4.4.159"
      },
      {
        "interface_ip": "10.4.4.161"
      },
      {
        "interface_ip": "10.4.4.162"
      },
      {
        "interface_ip": "10.4.4.164"
      },
      {
        "interface_ip": "10.4.4.172"
      },
      {
        "interface_ip": "10.4.4.174"
      },
      {
        "interface_ip": "10.4.4.175"
      },
      {
        "interface_ip": "10.4.4.178"
      },
      {
        "interface_ip": "10.4.4.187"
      },
      {
        "interface_ip": "10.4.4.195"
      },
      {
        "interface_ip": "10.4.4.196"
      },
      {
        "interface_ip": "10.4.4.200"
      },
      {
        "interface_ip": "10.4.5.5"
      },
      {
        "interface_ip": "10.4.5.20"
      },
      {
        "interface_ip": "10.4.5.23"
      },
      {
        "interface_ip": "10.4.5.25"
      },
      {
        "interface_ip": "10.4.5.31"
      },
      {
        "interface_ip": "10.4.5.38"
      },
      {
        "interface_ip": "10.4.5.41"
      },
      {
        "interface_ip": "10.4.5.42"
      },
      {
        "interface_ip": "10.4.5.43"
      },
      {
        "interface_ip": "10.4.5.45"
      },
      {
        "interface_ip": "10.4.5.52"
      },
      {
        "interface_ip": "10.4.5.53"
      },
      {
        "interface_ip": "10.4.5.59"
      },
      {
        "interface_ip": "10.4.5.60"
      },
      {
        "interface_ip": "10.4.5.62"
      },
      {
        "interface_ip": "10.4.5.64"
      },
      {
        "interface_ip": "10.4.5.68"
      },
      {
        "interface_ip": "10.4.5.69"
      },
      {
        "interface_ip": "10.4.5.82"
      },
      {
        "interface_ip": "10.4.5.87"
      },
      {
        "interface_ip": "10.4.5.91"
      },
      {
        "interface_ip": "10.4.5.92"
      },
      {
        "interface_ip": "10.4.5.96"
      },
      {
        "interface_ip": "10.4.5.100"
      },
      {
        "interface_ip": "10.4.5.101"
      },
      {
        "interface_ip": "10.4.5.105"
      },
      {
        "interface_ip": "10.4.5.106"
      },
      {
        "interface_ip": "10.4.5.114"
      },
      {
        "interface_ip": "10.4.5.122"
      },
      {
        "interface_ip": "10.4.5.123"
      },
      {
        "interface_ip": "10.4.5.141"
      },
      {
        "interface_ip": "10.4.5.144"
      },
      {
        "interface_ip": "10.4.5.148"
      },
      {
        "interface_ip": "10.4.5.158"
      },
      {
        "interface_ip": "10.4.5.160"
      },
      {
        "interface_ip": "10.4.5.170"
      },
      {
        "interface_ip": "10.4.5.171"
      },
      {
        "interface_ip": "10.4.5.183"
      },
      {
        "interface_ip": "10.4.5.186"
      },
      {
        "interface_ip": "10.4.5.191"
      },
      {
        "interface_ip": "10.4.5.199"
      },
      {
        "interface_ip": "10.4.6.2"
      },
      {
        "interface_ip": "10.4.6.3"
      },
      {
        "interface_ip": "10.4.6.7"
      },
      {
        "interface_ip": "10.4.6.9"
      },
      {
        "interface_ip": "10.4.6.11"
      },
      {
        "interface_ip": "10.4.6.13"
      },
      {
        "interface_ip": "10.4.6.14"
      },
      {
        "interface_ip": "10.4.6.15"
      },
      {
        "interface_ip": "10.4.6.17"
      },
      {
        "interface_ip": "10.4.6.21"
      },
      {
        "interface_ip": "10.4.6.22"
      },
      {
        "interface_ip": "10.4.6.26"
      },
      {
        "interface_ip": "10.4.6.31"
      },
      {
        "interface_ip": "10.4.6.38"
      },
      {
        "interface_ip": "10.4.6.39"
      },
      {
        "interface_ip": "10.4.6.46"
      },
      {
        "interface_ip": "10.4.6.47"
      },
      {
        "interface_ip": "10.4.6.48"
      },
      {
        "interface_ip": "10.4.6.66"
      },
      {
        "interface_ip": "10.4.6.69"
      },
      {
        "interface_ip": "10.4.6.76"
      },
      {
        "interface_ip": "10.4.6.80"
      },
      {
        "interface_ip": "10.4.6.82"
      },
      {
        "interface_ip": "10.4.6.90"
      },
      {
        "interface_ip": "10.4.6.95"
      },
      {
        "interface_ip": "10.4.6.101"
      },
      {
        "interface_ip": "10.4.6.108"
      },
      {
        "interface_ip": "10.4.6.113"
      },
      {
        "interface_ip": "10.4.6.117"
      },
      {
        "interface_ip": "10.4.6.120"
      },
      {
        "interface_ip": "10.4.6.134"
      },
      {
        "interface_ip": "10.4.6.137"
      },
      {
        "interface_ip": "10.4.6.146"
      },
      {
        "interface_ip": "10.4.6.151"
      },
      {
        "interface_ip": "10.4.6.155"
      },
      {
        "interface_ip": "10.4.6.158"
      },
      {
        "interface_ip": "10.4.6.160"
      },
      {
        "interface_ip": "10.4.6.167"
      },
      {
        "interface_ip": "10.4.6.171"
      },
      {
        "interface_ip": "10.4.6.172"
      },
      {
        "interface_ip": "10.4.6.173"
      },
      {
        "interface_ip": "10.4.6.178"
      },
      {
        "interface_ip": "10.4.6.180"
      },
      {
        "interface_ip": "10.4.6.182"
      },
      {
        "interface_ip": "10.4.6.193"
      },
      {
        "interface_ip": "10.4.6.195"
      },
      {
        "interface_ip": "10.4.6.200"
      },
      {
        "interface_ip": "10.4.7.2"
      },
      {
        "interface_ip": "10.4.7.3"
      },
      {
        "interface_ip": "10.4.7.12"
      },
      {
        "interface_ip": "10.4.7.19"
      },
      {
        "interface_ip": "10.4.7.26"
      },
      {
        "interface_ip": "10.4.7.27"
      },
      {
        "interface_ip": "10.4.7.30"
      },
      {
        "interface_ip": "10.4.7.31"
      },
      {
        "interface_ip": "10.4.7.36"
      },
      {
        "interface_ip": "10.4.7.47"
      },
      {
        "interface_ip": "10.4.7.60"
      },
      {
        "interface_ip": "10.4.7.64"
      },
      {
        "interface_ip": "10.4.7.65"
      },
      {
        "interface_ip": "10.4.7.78"
      },
      {
        "interface_ip": "10.4.7.85"
      },
      {
        "interface_ip": "10.4.7.86"
      },
      {
        "interface_ip": "10.4.7.116"
      },
      {
        "interface_ip": "10.4.7.119"
      },
      {
        "interface_ip": "10.4.7.125"
      },
      {
        "interface_ip": "10.4.7.137"
      },
      {
        "interface_ip": "10.4.7.138"
      },
      {
        "interface_ip": "10.4.7.140"
      },
      {
        "interface_ip": "10.4.7.146"
      },
      {
        "interface_ip": "10.4.7.153"
      },
      {
        "interface_ip": "10.4.7.158"
      },
      {
        "interface_ip": "10.4.7.169"
      },
      {
        "interface_ip": "10.4.7.182"
      },
      {
        "interface_ip": "10.4.7.183"
      },
      {
        "interface_ip": "10.4.7.189"
      },
      {
        "interface_ip": "10.4.7.190"
      },
      {
        "interface_ip": "10.4.7.198"
      },
      {
        "interface_ip": "10.4.8.2"
      },
      {
        "interface_ip": "10.4.8.5"
      },
      {
        "interface_ip": "10.4.8.10"
      },
      {
        "interface_ip": "10.4.8.13"
      },
      {
        "interface_ip": "10.4.8.18"
      },
      {
        "interface_ip": "10.4.8.24"
      },
      {
        "interface_ip": "10.4.8.38"
      },
      {
        "interface_ip": "10.4.8.40"
      },
      {
        "interface_ip": "10.4.8.41"
      },
      {
        "interface_ip": "10.4.8.42"
      },
      {
        "interface_ip": "10.4.8.45"
      },
      {
        "interface_ip": "10.4.8.51"
      },
      {
        "interface_ip": "10.4.8.53"
      },
      {
        "interface_ip": "10.4.8.59"
      },
      {
        "interface_ip": "10.4.8.60"
      },
      {
        "interface_ip": "10.4.8.62"
      },
      {
        "interface_ip": "10.4.8.63"
      },
      {
        "interface_ip": "10.4.8.65"
      },
      {
        "interface_ip": "10.4.8.67"
      },
      {
        "interface_ip": "10.4.8.76"
      },
      {
        "interface_ip": "10.4.8.77"
      },
      {
        "interface_ip": "10.4.8.78"
      },
      {
        "interface_ip": "10.4.8.92"
      },
      {
        "interface_ip": "10.4.8.101"
      },
      {
        "interface_ip": "10.4.8.104"
      },
      {
        "interface_ip": "10.4.8.107"
      },
      {
        "interface_ip": "10.4.8.108"
      },
      {
        "interface_ip": "10.4.8.109"
      },
      {
        "interface_ip": "10.4.8.117"
      },
      {
        "interface_ip": "10.4.8.129"
      },
      {
        "interface_ip": "10.4.8.135"
      },
      {
        "interface_ip": "10.4.8.137"
      },
      {
        "interface_ip": "10.4.8.147"
      },
      {
        "interface_ip": "10.4.8.149"
      },
      {
        "interface_ip": "10.4.8.150"
      },
      {
        "interface_ip": "10.4.8.152"
      },
      {
        "interface_ip": "10.4.8.156"
      },
      {
        "interface_ip": "10.4.8.164"
      },
      {
        "interface_ip": "10.4.8.169"
      },
      {
        "interface_ip": "10.4.8.171"
      },
      {
        "interface_ip": "10.4.8.172"
      },
      {
        "interface_ip": "10.4.8.173"
      },
      {
        "interface_ip": "10.4.8.174"
      },
      {
        "interface_ip": "10.4.8.177"
      },
      {
        "interface_ip": "10.4.8.186"
      },
      {
        "interface_ip": "10.4.8.188"
      },
      {
        "interface_ip": "10.4.8.190"
      },
      {
        "interface_ip": "10.4.8.197"
      },
      {
        "interface_ip": "10.4.8.198"
      },
      {
        "interface_ip": "10.4.8.199"
      },
      {
        "interface_ip": "10.4.9.2"
      },
      {
        "interface_ip": "10.4.9.11"
      },
      {
        "interface_ip": "10.4.9.20"
      },
      {
        "interface_ip": "10.4.9.46"
      },
      {
        "interface_ip": "10.4.9.57"
      },
      {
        "interface_ip": "10.4.9.58"
      },
      {
        "interface_ip": "10.4.9.64"
      },
      {
        "interface_ip": "10.4.9.67"
      },
      {
        "interface_ip": "10.4.9.70"
      },
      {
        "interface_ip": "10.4.9.73"
      },
      {
        "interface_ip": "10.4.9.75"
      },
      {
        "interface_ip": "10.4.9.78"
      },
      {
        "interface_ip": "10.4.9.79"
      },
      {
        "interface_ip": "10.4.9.80"
      },
      {
        "interface_ip": "10.4.9.88"
      },
      {
        "interface_ip": "10.4.9.95"
      },
      {
        "interface_ip": "10.4.9.99"
      },
      {
        "interface_ip": "10.4.9.103"
      },
      {
        "interface_ip": "10.4.9.108"
      },
      {
        "interface_ip": "10.4.9.115"
      },
      {
        "interface_ip": "10.4.9.133"
      },
      {
        "interface_ip": "10.4.9.135"
      },
      {
        "interface_ip": "10.4.9.139"
      },
      {
        "interface_ip": "10.4.9.148"
      },
      {
        "interface_ip": "10.4.9.149"
      },
      {
        "interface_ip": "10.4.9.159"
      },
      {
        "interface_ip": "10.4.9.161"
      },
      {
        "interface_ip": "10.4.9.170"
      },
      {
        "interface_ip": "10.4.9.171"
      },
      {
        "interface_ip": "10.4.9.173"
      },
      {
        "interface_ip": "10.4.9.176"
      },
      {
        "interface_ip": "10.4.9.180"
      },
      {
        "interface_ip": "10.4.9.190"
      },
      {
        "interface_ip": "10.4.9.200"
      },
      {
        "interface_ip": "10.4.10.2"
      },
      {
        "interface_ip": "10.4.10.7"
      },
      {
        "interface_ip": "10.4.10.18"
      },
      {
        "interface_ip": "10.4.10.26"
      },
      {
        "interface_ip": "10.4.10.29"
      },
      {
        "interface_ip": "10.4.10.32"
      },
      {
        "interface_ip": "10.4.10.34"
      },
      {
        "interface_ip": "10.4.10.43"
      },
      {
        "interface_ip": "10.4.10.44"
      },
      {
        "interface_ip": "10.4.10.52"
      },
      {
        "interface_ip": "10.4.10.53"
      },
      {
        "interface_ip": "10.4.10.57"
      },
      {
        "interface_ip": "10.4.10.66"
      },
      {
        "interface_ip": "10.4.10.73"
      },
      {
        "interface_ip": "10.4.10.78"
      },
      {
        "interface_ip": "10.4.10.79"
      },
      {
        "interface_ip": "10.4.10.82"
      },
      {
        "interface_ip": "10.4.10.85"
      },
      {
        "interface_ip": "10.4.10.94"
      },
      {
        "interface_ip": "10.4.10.97"
      },
      {
        "interface_ip": "10.4.10.98"
      },
      {
        "interface_ip": "10.4.10.105"
      },
      {
        "interface_ip": "10.4.10.110"
      },
      {
        "interface_ip": "10.4.10.116"
      },
      {
        "interface_ip": "10.4.10.127"
      },
      {
        "interface_ip": "10.4.10.128"
      },
      {
        "interface_ip": "10.4.10.135"
      },
      {
        "interface_ip": "10.4.10.138"
      },
      {
        "interface_ip": "10.4.10.143"
      },
      {
        "interface_ip": "10.4.10.152"
      },
      {
        "interface_ip": "10.4.10.153"
      },
      {
        "interface_ip": "10.4.10.160"
      },
      {
        "interface_ip": "10.4.10.166"
      },
      {
        "interface_ip": "10.4.10.181"
      },
      {
        "interface_ip": "10.4.10.189"
      },
      {
        "interface_ip": "10.4.10.193"
      }
    ]
  },
  {
    "question": "What is the average number of CPUs for machine types used by servers in zone 4 of the DC1 datacenter?",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(:Rack {zone: 4})-[:HOLDS]->(:Machine)-[:TYPE]->(t:Type) RETURN AVG(t.cpu) AS average_cpu_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_cpu_count": 3.120000000000003
      }
    ],
    "answer": "The average number of CPUs for machine types used by servers in zone 4 of the DC1 datacenter is 3.12 CPUs."
  },
  {
    "question": "What is the name of the software that the 'webapp' application, running on machine DC1-RCK-2-9-M-90, is an instance of?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-2-9-M-90'})-[:RUNS]->(:Application {name: 'webapp'})-[:INSTANCE]->(s:Software) RETURN s.name AS software_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "software_name": "webapp"
      }
    ],
    "answer": "According to the query result, the software for the 'webapp' application running on machine DC1-RCK-2-9-M-90 is 'webapp'."
  },
  {
    "question": "What is the highest PID for any process that is an instance of the 'java' software?",
    "cypher": "MATCH (p:Process)-[:INSTANCE]->(:Software {name: 'java'}) WHERE p.pid IS NOT NULL RETURN MAX(p.pid) AS highest_pid",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "highest_pid": 9998
      }
    ],
    "answer": "The highest PID for a Java process is 9998."
  },
  {
    "question": "How many steps is the shortest path between machine 'DC1-RCK-1-1-M-1' and any machine running the 'couchbse' service?",
    "cypher": "MATCH path = shortestPath((m1:Machine {name: 'DC1-RCK-1-1-M-1'})-[*]-(:Machine)-[:RUNS]->(:Service {name: 'couchbase'})) RETURN length(path) AS connection_distance",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What is the total disk space of all machine types located in racks in zone 2?",
    "cypher": "MATCH (:Rack {zone: 2})-[:HOLDS]->(:Machine)-[:TYPE]->(t:Type) RETURN SUM(t.disk) AS total_disk_space",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_disk_space": 123720
      }
    ],
    "answer": "The total disk space of all machine types located in racks in zone 2 is 123,720 units."
  },
  {
    "question": "Which port number is listened to by the 'couchbase' service running on machine 'DC1-RCK-4-4-M-24'?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-4-4-M-24'})-[:RUNS]->(:Service {name: 'couchbase'})-[:LISTENS]->(p:Port) RETURN p.port AS service_port",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "service_port": 11210
      },
      {
        "service_port": 4369
      },
      {
        "service_port": 18092
      },
      {
        "service_port": 11215
      },
      {
        "service_port": 11214
      },
      {
        "service_port": 11207
      },
      {
        "service_port": 11209
      },
      {
        "service_port": 8091
      },
      {
        "service_port": 8092
      },
      {
        "service_port": 18091
      },
      {
        "service_port": 11211
      }
    ]
  },
  {
    "question": "Find the lowest rack number for racks in zone 4 that hold a machine running RHEL version 7.3.",
    "cypher": "MATCH (r:Rack {zone: 4})-[:HOLDS]->(:Machine)-[:RUNS]->(:OS)-[:INSTANCE]->(:Version {name: '7.3'})<-[:VERSION]-(:Software {name: 'RHEL'}) WHERE r.rack IS NOT NULL RETURN MIN(r.rack) AS lowest_rack_number",
    "query_type": "Sorting",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_rack_number": 1
      }
    ],
    "answer": "The lowest rack number for racks in zone 4 that hold a machine running RHEL version 7.3 is 1."
  },
  {
    "question": "How many network interfaces does the machine 'DC1-RCK-1-1-M-1' route to?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-1-1-M-1'})-[:ROUTES]->(i:Interface) RETURN COUNT(i) AS interface_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "interface_count": 1
      }
    ],
    "answer": "The machine 'DC1-RCK-1-1-M-1' routes to 1 network interface."
  },
  {
    "question": "What's the total number of services that depend on the 'java' software?",
    "cypher": "MATCH (s:Service)-[:INSTANCE]->(:Software {name: 'java'}) RETURN COUNT(s) AS total_java_services",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_java_services": 1588
      }
    ],
    "answer": "1,588 services depend on the 'java' software."
  },
  {
    "question": "What is the name of the software for which version '7.2' is the previous version of '7.3'?",
    "cypher": "MATCH (s:Software)-[:VERSION]->(v1:Version {name: '7.3'})-[:PREVIOUS]->(:Version {name: '7.2'}) RETURN s.name AS software_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "software_name": "RHEL"
      }
    ],
    "answer": "RHEL (Red Hat Enterprise Linux)"
  },
  {
    "question": "Which machine type has the most disk space among those in racks contained in the DC located in 'Iceland, Reykjavik'?",
    "cypher": "MATCH (:DataCenter {location: 'Iceland, Rekjavik'})-[:CONTAINS]->(:Rack)-[:HOLDS]->(:Machine)-[:TYPE]->(t:Type) WHERE t.disk IS NOT NULL RETURN MAX(t.disk) AS max_disk_space",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_disk_space": 3125
      }
    ],
    "answer": "The machine type in the data center located in 'Iceland, Reykjavik' has a maximum disk space of 3,125 units."
  },
  {
    "question": "Count the number of machines in zone 1 that are connected to an interface in the '10.1' network.",
    "cypher": "MATCH (:Zone {zone: 1})-[:HOLDS]->(:Rack)-[:HOLDS]->(m:Machine)-[:ROUTES]->(i:Interface)<-[:ROUTES]-(:Network {ip: '10.1'}) RETURN COUNT(DISTINCT m) AS machine_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What's the average rack number for racks holding machines that run the 'webserver' aplication?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(:Machine)-[:RUNS]->(:Application {name: 'webserver'}) RETURN avg(r.rack) AS average_rack_number",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_rack_number": 5.566948130277452
      }
    ],
    "answer": "The average rack number for racks holding machines that run the 'webserver' application is approximately 5.57."
  },
  {
    "question": "Find the IP of the switch held in the same rack as machine DC1-RCK-4-2-M-174.",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-4-2-M-174'})<-[:HOLDS]-(r:Rack)-[:HOLDS]->(s:Switch) RETURN s.ip AS switch_ip",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "switch_ip": "10.4.2"
      }
    ],
    "answer": "The IP of the switch in the same rack as machine DC1-RCK-4-2-M-174 is 10.4.2."
  },
  {
    "question": "What is the most recent start time for any application running on a box of type 'xs-1/1/1'?",
    "cypher": "MATCH (:Type {name: 'xs-1/1/1'})<-[:TYPE]-(:Machine)-[:RUNS]->(a:Application) WHERE a.startTime IS NOT NULL RETURN MAX(a.startTime) AS latest_app_start_time",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "latest_app_start_time": 1607029401909
      }
    ],
    "answer": "The most recent start time for an application running on a box of type 'xs-1/1/1' is 1607029401909 (which represents a timestamp in milliseconds)."
  },
  {
    "question": "How many downstream software dependencies does the 'neo4j' software have?",
    "cypher": "MATCH (:Software {name: 'neo4j'})-[:DEPENDS_ON*1..]->(dep:Software) RETURN COUNT(DISTINCT dep) AS total_dependencies",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_dependencies": 0
      }
    ],
    "answer": "Based on the query result, Neo4j software has 0 downstream software dependencies according to the database."
  },
  {
    "question": "Sum the CPU cores of all machine types that run services which depend on 'java/8'.",
    "cypher": "MATCH (t:Type)<-[:TYPE]-(:Machine)-[:RUNS]->(:Service)-[:INSTANCE]->(:Software)-[:DEPENDS_ON]->(:Version {name: '8'})<-[:VERSION]-(:Software {name: 'java'}) RETURN SUM(t.cpu) AS total_cpu_cores",
    "query_type": "Aggregation",
    "complexity": "5-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_cpu_cores": 5048
      }
    ],
    "answer": "The total number of CPU cores for machine types running services that depend on Java 8 is 5,048 cores."
  },
  {
    "question": "What is the name of the DataCenter where machine 'DC1-RCK-3-8-M-49' is located?",
    "cypher": "MATCH (dc:DataCenter)-[:CONTAINS]->(:Rack)-[:HOLDS]->(:Machine {name: 'DC1-RCK-3-8-M-49'}) RETURN dc.name AS datacenter_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "datacenter_name": "DC1"
      }
    ],
    "answer": "The machine 'DC1-RCK-3-8-M-49' is located in the DataCenter named 'DC1'."
  },
  {
    "question": "What is the smallest port number listened to by any application that depends on the 'webserver' software?",
    "cypher": "MATCH (a:Application)-[:DEPENDS_ON]->(:Software {name: 'webserver'}) WITH a MATCH (a)-[:LISTENS]->(p:Port) WHERE p.port IS NOT NULL RETURN MIN(p.port) AS smallest_port_number",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "smallest_port_number": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many distinct applications run on machines held in racks that are connected to the DC1-RE egress router?",
    "cypher": "MATCH (:Egress {name: 'DC1-RE'})-[:ROUTES]->(:Interface)<-[:ROUTES]-(:Switch)<-[:HOLDS]-(:Rack)-[:HOLDS]->(:Machine)-[:RUNS]->(app:Application) RETURN COUNT(DISTINCT app) AS application_count",
    "query_type": "Existence Verification",
    "complexity": "5-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "application_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 distinct applications running on machines held in racks connected to the DC1-RE egress router."
  },
  {
    "question": "Count all the servers in the DC1 datacenter.",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(:Rack)-[:HOLDS]->(m:Machine) RETURN COUNT(m) AS total_servers",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_servers": 8000
      }
    ],
    "answer": "There are 8,000 servers in the DC1 datacenter."
  },
  {
    "question": "What version of java does the neo4j software depend on?",
    "cypher": "MATCH (:Software {name: 'neo4j'})-[:DEPENDS_ON]->(v:Version)<-[:VERSION]-(:Software {name: 'java'}) RETURN v.name AS java_version",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "java_version": "8"
      }
    ],
    "answer": "Neo4j software depends on Java version 8."
  },
  {
    "question": "What's the maximum zone number for any rack that holds a machine running the 'cms' application?",
    "cypher": "MATCH (r:Rack)-[:HOLDS]->(:Machine)-[:RUNS]->(:Application {name: 'cms'}) WHERE r.zone IS NOT NULL RETURN MAX(r.zone) AS max_zone_number",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_zone_number": 4
      }
    ],
    "answer": "The maximum zone number for a rack holding a machine running the 'cms' application is 4."
  },
  {
    "question": "How many services are running on machines that use an OS which is an instance of RHEL version 7.1?",
    "cypher": "MATCH (s:Service)<-[:RUNS]-(:Machine)-[:RUNS]->(:OS)-[:INSTANCE]->(:Version {name: '7.1'})<-[:VERSION]-(:Software {name: 'RHEL'}) RETURN COUNT(DISTINCT s) AS service_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "service_count": 1505
      }
    ],
    "answer": "Based on the query result, there are 1,505 distinct services running on machines that use RHEL version 7.1."
  },
  {
    "question": "What is the total number of machines running any service that listens on port 11210?",
    "cypher": "MATCH (m:Machine)-[:RUNS]->(:Service)-[:LISTENS]->(:Port {port: 11210}) RETURN COUNT(DISTINCT m) AS machine_total",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_total": 1634
      }
    ],
    "answer": "1,634 machines are running a service that listens on port 11210."
  },
  {
    "question": "What is the name of the OS running on machine DC1-RCK-1-1-M-1?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-1-1-M-1'})-[:RUNS]->(os:OS)-[:INSTANCE]->(v:Version)<-[:VERSION]-(s:Software) RETURN s.name AS os_name",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "os_name": "RHEL"
      }
    ],
    "answer": "The OS running on machine DC1-RCK-1-1-M-1 is RHEL (Red Hat Enterprise Linux)."
  },
  {
    "question": "Find the lowest CPU count for any machine type that runs an app dependent on postgres version 9.4.",
    "cypher": "MATCH (t:Type)<-[:TYPE]-(:Machine)-[:RUNS]->(:Application)-[:DEPENDS_ON]->(:Software {name: 'postgres/9.4'}) WHERE t.cpu IS NOT NULL RETURN MIN(t.cpu) AS min_cpu_count",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "min_cpu_count": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Count the number of racks in zone 1 of datacenter DC1.",
    "cypher": "MATCH (:DataCenter {name: 'DC1'})-[:CONTAINS]->(r:Rack {zone: 1}) RETURN COUNT(r) AS rack_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "rack_count": 10
      }
    ],
    "answer": "There are 10 racks in zone 1 of datacenter DC1."
  },
  {
    "question": "What is the sum of PIDs for all processes that are instances of the 'webserver' software?",
    "cypher": "MATCH (p:Process)-[:INSTANCE]->(:Software {name: 'webserver'}) RETURN SUM(p.pid) AS pid_sum",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "pid_sum": 16473996
      }
    ],
    "answer": "The sum of PIDs for all processes that are instances of the 'webserver' software is 16,473,996."
  },
  {
    "question": "What is the IP of the network that routes to the interface exposed by port 8080?",
    "cypher": "MATCH (n:Network)-[:ROUTES]->(:Interface)-[:EXPOSES]->(:Port {port: 8080}) RETURN n.ip AS network_ip LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the most disk space on any machine running a process that depends on the 'couchbase' service?",
    "cypher": "MATCH (t:Type)<-[:TYPE]-(:Machine)-[:RUNS]->(:Process)-[:DEPENDS_ON]->(:Service {name: 'couchbase'}) WHERE t.disk IS NOT NULL RETURN MAX(t.disk) AS top_disk_space",
    "query_type": "Sorting",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_disk_space": 3125
      }
    ],
    "answer": "The machine running a process that depends on the 'couchbase' service has a maximum disk space of 3125."
  },
  {
    "question": "How many unique software dependencies are there for applications running in racks in zone 4?",
    "cypher": "MATCH (:Rack {zone: 4})-[:HOLDS]->(:Machine)-[:RUNS]->(:Application)-[:INSTANCE]->(:Software)-[:DEPENDS_ON]->(dep:Software) RETURN COUNT(DISTINCT dep) AS unique_dependency_count",
    "query_type": "Existence Verification",
    "complexity": "5-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "unique_dependency_count": 5
      }
    ],
    "answer": "There are 5 unique software dependencies for applications running in racks in zone 4."
  },
  {
    "question": "Calculate the average RAM for machines in the rack that contains the switch with IP '10.4.8'.",
    "cypher": "MATCH (:Switch {ip: '10.4.8'})<-[:HOLDS]-(:Rack)-[:HOLDS]->(:Machine)-[:TYPE]->(t:Type) RETURN AVG(t.ram) AS average_ram",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_ram": 25.65999999999999
      }
    ],
    "answer": "The average RAM for machines in the rack containing the switch with IP '10.4.8' is approximately 25.66 GB."
  },
  {
    "question": "What is the type name of the machine 'DC1-RCK-4-4-M-24'?",
    "cypher": "MATCH (:Machine {name: 'DC1-RCK-4-4-M-24'})-[:TYPE]->(t:Type) RETURN t.name AS machine_type_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "machine_type_name": "xs-1/1/1"
      }
    ],
    "answer": "The type name of the machine 'DC1-RCK-4-4-M-24' is 'xs-1/1/1'."
  },
  {
    "question": "Find the latest start time for any service that is an instance of a software which depends on java version 8.",
    "cypher": "MATCH (s:Service)-[:INSTANCE]->(:Software)-[:DEPENDS_ON]->(:Version {name: '8'})<-[:VERSION]-(:Software {name: 'java'}) WHERE s.startTime IS NOT NULL RETURN MAX(s.startTime) AS latest_service_start",
    "query_type": "Sorting",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "latest_service_start": 1607029396369
      }
    ],
    "answer": "The latest start time for a service dependent on Java version 8 is 1607029396369 (which represents a timestamp in milliseconds)."
  },
  {
    "question": "How many hops are between the 'cms' application and the 'postgres/9.4' software it depends on?",
    "cypher": "MATCH path = shortestPath((:Application {name: 'cms'})-[*]->(:Software {name: 'postgres/9.4'})) RETURN length(path) AS dependency_path_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the total number of softwares running on machines in the Reykjavik data center?",
    "cypher": "MATCH (:DataCenter {location: 'Iceland, Rekjavik'})-[:CONTAINS]->(:Rack)-[:HOLDS]->(:Machine)-[:RUNS]->(p:Process|Application|Service)-[:INSTANCE]->(s:Software) RETURN COUNT(DISTINCT s) AS total_softwares",
    "query_type": "Aggregation",
    "complexity": "5-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_softwares": 9
      }
    ],
    "answer": "Based on the query result, there are 9 distinct software instances running on machines in the Reykjavik data center."
  },
  {
    "question": "What's the name of the software that is an instance of the service with pid 7211?",
    "cypher": "MATCH (:Service {pid: 7211})-[:INSTANCE]->(s:Software) RETURN s.name AS software_instance_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "software_instance_name": "php"
      }
    ],
    "answer": "The software that is an instance of the service with pid 7211 is \"php\"."
  },
  {
    "question": "What is the minimum disk size for any host machine that runs an application listening on port 8080?",
    "cypher": "MATCH (t:Type)<-[:TYPE]-(:Machine)-[:RUNS]->(:Application)-[:LISTENS]->(:Port {port: 8080}) WHERE t.disk IS NOT NULL RETURN MIN(t.disk) AS min_disk_size",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "min_disk_size": 1
      }
    ],
    "answer": "The minimum disk size for a host machine running an application on port 8080 is 1 (presumably in GB or TB, though the unit is not specified in the result)."
  },
  {
    "question": "What is the unit price of the product 'Chai'?",
    "cypher": "MATCH (p:Product {productName: 'Chai'}) RETURN p.unitPrice AS product_unitPrice",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_unitPrice": 18.0
      }
    ],
    "answer": "The unit price of Chai is $18.00."
  },
  {
    "question": "What's the contact name for the customer 'Alfreds Futterkiste'?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'}) RETURN c.contactName AS customer_contactName",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_contactName": "Maria Anders"
      }
    ],
    "answer": "The contact name for the customer 'Alfreds Futterkiste' is Maria Anders."
  },
  {
    "question": "Tell me the phone number for the supplier 'Exotic Liqids'.",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'}) RETURN s.phone AS supplier_phone",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_phone": "(171) 555-2222"
      }
    ],
    "answer": "The phone number for Exotic Liquids is (171) 555-2222."
  },
  {
    "question": "What is the quantity per unit for 'Sasquatch Ale'?",
    "cypher": "MATCH (p:Product {productName: 'Sasquatch Ale'}) RETURN p.quantityPerUnit AS product_quantityPerUnit",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_quantityPerUnit": "24 - 12 oz bottles"
      }
    ],
    "answer": "The quantity per unit for Sasquatch Ale is 24 - 12 oz bottles."
  },
  {
    "question": "How many units of 'R\u00f6ssle Sauerkraut' are in stock?",
    "cypher": "MATCH (p:Product {productName: 'R\u00f6ssle Sauerkraut'}) RETURN p.unitsInStock AS product_unitsInStock",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_unitsInStock": 26
      }
    ],
    "answer": "There are 26 units of 'R\u00f6ssle Sauerkraut' in stock."
  },
  {
    "question": "What is the city of the customer 'White Clover Markets'?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'}) RETURN c.city AS customer_city",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_city": "Seattle"
      }
    ],
    "answer": "The city of White Clover Markets is Seattle."
  },
  {
    "question": "Find the description for the 'Beverages' category.",
    "cypher": "MATCH (cat:Category {categoryName: 'Beverages'}) RETURN cat.description AS category_description",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "category_description": "Soft drinks, coffees, teas, beers, and ales"
      }
    ],
    "answer": "The description for the 'Beverages' category is: \"Soft drinks, coffees, teas, beers, and ales\""
  },
  {
    "question": "What is the address for the customer 'Lonesome Pine Restarant'?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'}) RETURN c.address AS customer_address",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_address": "89 Chiaroscuro Rd."
      }
    ],
    "answer": "The address for Lonesome Pine Restaurant is 89 Chiaroscuro Rd."
  },
  {
    "question": "Is the product 'R\u00f6ssle Sauerkraut' discontinued?",
    "cypher": "MATCH (p:Product {productName: 'R\u00f6ssle Sauerkraut'}) RETURN p.discontinued AS product_discontinued",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_discontinued": true
      }
    ],
    "answer": "Yes, the product 'R\u00f6ssle Sauerkraut' is discontinued."
  },
  {
    "question": "What is the contact title of Charlotte Cooper from 'Exotic Liquids'?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids', contactName: 'Charlotte Cooper'}) RETURN s.contactTitle AS supplier_contactTitle",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_contactTitle": "Purchasing Manager"
      }
    ],
    "answer": "Charlotte Cooper's contact title at Exotic Liquids is Purchasing Manager."
  },
  {
    "question": "What's the reorder level for the item 'Teatime Chocolate Biscuits'?",
    "cypher": "MATCH (p:Product {productName: 'Teatime Chocolate Biscuits'}) RETURN p.reorderLevel AS product_reorderLevel",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_reorderLevel": 5
      }
    ],
    "answer": "The reorder level for 'Teatime Chocolate Biscuits' is 5."
  },
  {
    "question": "What is the postal code for the supplier 'Exotic Liquids'?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'}) RETURN s.postalCode AS supplier_postalCode",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_postalCode": "EC1 4SD"
      }
    ],
    "answer": "The postal code for the supplier 'Exotic Liquids' is EC1 4SD."
  },
  {
    "question": "Show me the country for the customer 'Simons bistroo'.",
    "cypher": "MATCH (c:Customer {companyName: 'Simons bistro'}) RETURN c.country AS customer_country",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_country": "Denmark"
      }
    ],
    "answer": "The country for the customer 'Simons bistro' is Denmark."
  },
  {
    "question": "What is the freight cost for order '10248'?",
    "cypher": "MATCH (o:Order {orderID: '10248'}) RETURN o.freight AS order_freight",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "order_freight": "32.38"
      }
    ],
    "answer": "The freight cost for order '10248' is $32.38."
  },
  {
    "question": "What was the shipping date for order '11066'?",
    "cypher": "MATCH (o:Order {orderID: '11066'}) RETURN o.shippedDate AS order_shippedDate",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "order_shippedDate": "1998-05-04 00:00:00.000"
      }
    ],
    "answer": "The shipping date for order '11066' was May 4, 1998."
  },
  {
    "question": "Which country does the biz 'Ernst Handel' operate from?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'}) RETURN c.country AS customer_country",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_country": "Austria"
      }
    ],
    "answer": "Ernst Handel operates from Austria."
  },
  {
    "question": "What is the company name for the customer with ID 'ALFKI'?",
    "cypher": "MATCH (c:Customer {customerID: 'ALFKI'}) RETURN c.companyName AS customer_companyName",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_companyName": "Alfreds Futterkiste"
      }
    ],
    "answer": "The company name for the customer with ID 'ALFKI' is Alfreds Futterkiste."
  },
  {
    "question": "How many orders has the customer 'Alfreds Futterkiste' placed?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o:Order) RETURN count(o) AS total_orders",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_orders": 6
      }
    ],
    "answer": "The customer 'Alfreds Futterkiste' has placed 6 orders."
  },
  {
    "question": "What is the name of the category for the product 'Chai'?",
    "cypher": "MATCH (p:Product {productName: 'Chai'})-[:PART_OF]->(c:Category) RETURN c.categoryName AS product_categoryName",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_categoryName": "Beverages"
      }
    ],
    "answer": "The category for the product 'Chai' is Beverages."
  },
  {
    "question": "Who supplies the item 'Sasquatch Ale'?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Sasquatch Ale'}) RETURN s.companyName AS supplier_companyName",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_companyName": "Bigfoot Breweries"
      }
    ],
    "answer": "Bigfoot Breweries supplies Sasquatch Ale."
  },
  {
    "question": "How many different things are supplied by the firm 'Exotic Liquids'?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product) RETURN count(p) AS total_products",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_products": 3
      }
    ],
    "answer": "Exotic Liquids supplies 3 different products."
  },
  {
    "question": "What is the total number of products in the 'Beverages' category?",
    "cypher": "MATCH (p:Product)-[:PART_OF]->(c:Category {categoryName: 'Beverages'}) RETURN count(p) AS total_products_in_category",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_products_in_category": 12
      }
    ],
    "answer": "There are 12 products in the 'Beverages' category."
  },
  {
    "question": "How many items are in order '1024B'?",
    "cypher": "MATCH (o:Order {orderID: '10248'})-[:ORDERS]->(p:Product) RETURN count(p) AS total_items_in_order",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_items_in_order": 3
      }
    ],
    "answer": "The order '10248' contains 3 items."
  },
  {
    "question": "What is the company name of the customer who placed order '11066'?",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(o:Order {orderID: '11066'}) RETURN c.companyName AS customer_companyName",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_companyName": "White Clover Markets"
      }
    ],
    "answer": "The company name of the customer who placed order '11066' is White Clover Markets."
  },
  {
    "question": "What's the most expensive product supplied by 'Exotic Liquids'?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product) WHERE p.unitPrice IS NOT NULL RETURN max(p.unitPrice) AS max_unitPrice",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_unitPrice": 19.0
      }
    ],
    "answer": "The most expensive product supplied by 'Exotic Liquids' costs $19.00."
  },
  {
    "question": "What is the average quantity of items ordered in order '10248'?",
    "cypher": "MATCH (:Order {orderID: '10248'})-[r:ORDERS]->(:Product) RETURN avg(r.quantity) AS average_quantity",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_quantity": 9.0
      }
    ],
    "answer": "The average quantity of items ordered in order '10248' is 9.0."
  },
  {
    "question": "Count the number of purchases from 'White Clover Market'.",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order) RETURN count(o) AS total_purchases",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_purchases": 14
      }
    ],
    "answer": "White Clover Markets has made a total of 14 purchases."
  },
  {
    "question": "What is the cheapest product in the 'Beverages' category?",
    "cypher": "MATCH (p:Product)-[:PART_OF]->(c:Category {categoryName: 'Beverages'}) WHERE p.unitPrice IS NOT NULL RETURN min(p.unitPrice) AS min_unitPrice",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "min_unitPrice": 4.5
      }
    ],
    "answer": "The cheapest product in the 'Beverages' category costs $4.50."
  },
  {
    "question": "How many units of 'Chai' were sold in order '10317'?",
    "cypher": "MATCH (:Order {orderID: '10317'})-[r:ORDERS]->(:Product {productName: 'Chai'}) RETURN r.quantity AS quantity_sold",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "quantity_sold": 20
      }
    ],
    "answer": "20 units of Chai were sold in order 10317."
  },
  {
    "question": "What is the category name for the product 'Mozzarella di Giovani'?",
    "cypher": "MATCH (:Product {productName: 'Mozzarella di Giovanni'})-[:PART_OF]->(c:Category) RETURN c.categoryName AS category_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "category_name": "Dairy Products"
      }
    ],
    "answer": "The category name for the product 'Mozzarella di Giovani' is Dairy Products."
  },
  {
    "question": "Find the name of the customer for order '10317'.",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(o:Order {orderID: '10317'}) RETURN c.companyName AS customer_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_name": "Lonesome Pine Restaurant"
      }
    ],
    "answer": "The customer for order '10317' is Lonesome Pine Restaurant."
  },
  {
    "question": "What's the total quantity of products ordered in order '11066'?",
    "cypher": "MATCH (:Order {orderID: '11066'})-[r:ORDERS]->(:Product) RETURN sum(r.quantity) AS total_quantity",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_quantity": 80
      }
    ],
    "answer": "The total quantity of products ordered in order '11066' is 80."
  },
  {
    "question": "What category do the items from order '11066' belong to? The product is 'Sasquatch Ale'.",
    "cypher": "MATCH (:Order {orderID: '11066'})-[:ORDERS]->(p:Product {productName: 'Sasquatch Ale'})-[:PART_OF]->(c:Category) RETURN c.categoryName AS product_category",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_category": "Beverages"
      }
    ],
    "answer": "The product 'Sasquatch Ale' belongs to the 'Beverages' category."
  },
  {
    "question": "How many units of 'Chai' did the customer 'Lonesome Pine Restaurant' order?",
    "cypher": "MATCH (:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order)-[r:ORDERS]->(:Product {productName: 'Chai'}) RETURN sum(r.quantity) AS total_quantity_ordered",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_quantity_ordered": 20
      }
    ],
    "answer": "The customer 'Lonesome Pine Restaurant' ordered a total of 20 units of 'Chai'."
  },
  {
    "question": "What city is the customer 'Alfreds Futterkist' from? The one who bought 'R\u00f6ssle Sauerkraut'.",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'R\u00f6ssle Sauerkraut'}) RETURN c.city AS customer_city",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "customer_city": "Berlin"
      },
      {
        "customer_city": "Berlin"
      }
    ]
  },
  {
    "question": "What's the name of the supplier for the product 'Chai' that was included in order '10317'?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Chai'})<-[:ORDERS]-(:Order {orderID: '10317'}) RETURN s.companyName AS supplier_companyName",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_companyName": "Exotic Liquids"
      }
    ],
    "answer": "The supplier for the product 'Chai' in order '10317' is Exotic Liquids."
  },
  {
    "question": "What is the category name for the product 'Teatime Chocolate Biscuits' which was part of order '11066'?",
    "cypher": "MATCH (:Order {orderID: '11066'})-[:ORDERS]->(p:Product {productName: 'Teatime Chocolate Biscuits'})-[:PART_OF]->(c:Category) RETURN c.categoryName AS product_categoryName",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_categoryName": "Confections"
      }
    ],
    "answer": "The category name for the product 'Teatime Chocolate Biscuits' is Confections."
  },
  {
    "question": "What's the total number of different products ordered by the client 'White Clover Markets'?",
    "cypher": "MATCH (:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product) RETURN count(DISTINCT p) AS unique_products_ordered",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "unique_products_ordered": 32
      }
    ],
    "answer": "White Clover Markets has ordered 32 unique products."
  },
  {
    "question": "What is the maximum freight cost for an order containing 'Sasquatch Ale'?",
    "cypher": "MATCH (o:Order)-[:ORDERS]->(:Product {productName: 'Sasquatch Ale'}) WHERE o.freight IS NOT NULL RETURN max(o.freight) AS max_freight_cost",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_freight_cost": "84.84"
      }
    ],
    "answer": "The maximum freight cost for an order containing 'Sasquatch Ale' is $84.84."
  },
  {
    "question": "Which country was the order for 'Mozzarella di Giovanni' shipped to for the customer Simons bistro?",
    "cypher": "MATCH (:Customer {companyName: 'Simons bistro'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(:Product {productName: 'Mozzarella di Giovanni'}) RETURN o.shipCountry AS order_shipCountry",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "order_shipCountry": "Denmark"
      }
    ],
    "answer": "The order for 'Mozzarella di Giovanni' from Simons bistro was shipped to Denmark."
  },
  {
    "question": "Total number of purchases containing drinks?",
    "cypher": "MATCH (o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) RETURN count(DISTINCT o) AS total_beverage_orders",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_beverage_orders": 354
      }
    ],
    "answer": "There are 354 total purchases that contain beverages."
  },
  {
    "question": "What is the name of the most expensive product ordered by 'Alfreds Futterkiste'?",
    "cypher": "MATCH (:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS most_expensive_product ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "most_expensive_product": "Raclette Courdavault"
      }
    ],
    "answer": "The most expensive product ordered by 'Alfreds Futterkiste' is Raclette Courdavault."
  },
  {
    "question": "For the customer 'Ernst Handl', what's the total stock for all the stuff they ordered?",
    "cypher": "MATCH (:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product) RETURN sum(p.unitsInStock) AS total_stock_of_ordered_items",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism, typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_stock_of_ordered_items": 3685
      }
    ],
    "answer": "The total stock for all products ordered by Ernst Handel is 3,685 units."
  },
  {
    "question": "What is the name of the contact person at the company that supplied products for order '10317'? The product is 'Chai'.",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(:Product {productName: 'Chai'})<-[:ORDERS]-(:Order {orderID: '10317'}) RETURN s.contactName AS supplier_contactName",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_contactName": "Charlotte Cooper"
      }
    ],
    "answer": "The contact person at the company that supplied Chai for order 10317 is Charlotte Cooper."
  },
  {
    "question": "Find the city of the vendor that supplies items for order '11066', specifically 'Sasquatch Ale'.",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(:Product {productName: 'Sasquatch Ale'})<-[:ORDERS]-(:Order {orderID: '11066'}) RETURN s.city AS supplier_city",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_city": "Bend"
      }
    ],
    "answer": "The city of the vendor supplying Sasquatch Ale for order 11066 is Bend."
  },
  {
    "question": "What is the total quantity of products from the 'Beverages' category that have been ordered?",
    "cypher": "MATCH (:Order)-[r:ORDERS]->(p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) RETURN sum(r.quantity) AS total_beverages_ordered",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_beverages_ordered": 9532
      }
    ],
    "answer": "A total of 9,532 Beverages products have been ordered."
  },
  {
    "question": "Find the most recently shipped order containing the product 'R\u00f6ssle Sauerkrat'.",
    "cypher": "MATCH (o:Order)-[:ORDERS]->(:Product {productName: 'R\u00f6ssle Sauerkraut'}) WHERE o.shippedDate IS NOT NULL RETURN o.orderID AS latest_order_id ORDER BY o.shippedDate DESC LIMIT 1",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "latest_order_id": "11039"
      }
    ],
    "answer": "The most recently shipped order containing the product 'R\u00f6ssle Sauerkraut' has the order ID 11039."
  },
  {
    "question": "What is the average freight cost for orders containing products supplied by 'Exotic Liquids'?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(o:Order) RETURN avg(o.freight) AS average_freight_cost",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many distinct products from the 'Beverages' category has the customer 'Alfreds Futterkiste' purchased?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN count(DISTINCT p) AS num_products",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_products": 2
      }
    ],
    "answer": "Based on the query result, the customer 'Alfreds Futterkiste' has purchased 2 distinct products from the 'Beverages' category."
  },
  {
    "question": "What's the total stock for items from the 'Beverages' category supplied by the firm 'Exotic Liquds'?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN sum(p.unitsInStock) AS total_stock",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo, colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_stock": 56
      }
    ],
    "answer": "The total stock for Beverages items supplied by Exotic Liquids is 56 units."
  },
  {
    "question": "What is the average freight cost for orders placed by 'Ernst Handel' for products supplied by suppliers in the USA?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier {country: 'USA'}) RETURN avg(toFloat(o.freight)) AS average_freight",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_freight": 218.45800000000003
      }
    ],
    "answer": "The average freight cost for orders placed by 'Ernst Handel' for products supplied by suppliers in the USA is $218.46."
  },
  {
    "question": "Count the total quantity of 'Chai' ordered by clients in the USA.",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(o:Order)-[r:ORDERS]->(p:Product {productName: 'Chai'}) RETURN sum(r.quantity) AS total_quantity_ordered",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_quantity_ordered": 180
      }
    ],
    "answer": "Clients in the USA have ordered a total of 180 units of Chai."
  },
  {
    "question": "Find the minimum reorder level among products from the 'Beverages' category that have been purchased by 'Lonesome Pine Restaurant'.",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) WHERE p.reorderLevel IS NOT NULL RETURN min(p.reorderLevel) AS min_reorder_level",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "min_reorder_level": 0
      }
    ],
    "answer": "The minimum reorder level among Beverages products purchased by Lonesome Pine Restaurant is 0."
  },
  {
    "question": "What is the contact title of the supplier for the product 'Sasquatch Ale' which was ordered by 'Ernst Handel'?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product {productName: 'Sasquatch Ale'})<-[:SUPPLIES]-(s:Supplier) RETURN s.contactTitle AS supplier_contact_title",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "supplier_contact_title": "Regional Account Rep."
      },
      {
        "supplier_contact_title": "Regional Account Rep."
      }
    ]
  },
  {
    "question": "Which country is the biz 'Exotic Liquids' from, which supplies stuff ordered by the buyer 'Lonsome Pine Restaurant'?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier {companyName: 'Exotic Liquids'}) RETURN s.country AS supplier_country",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo, colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_country": "UK"
      }
    ],
    "answer": "Exotic Liquids is from the UK."
  },
  {
    "question": "Find the description of the category that the product 'R\u00f6ssle Sauerkraut' belongs to, which was purchased by 'Alfreds Futterkiste'.",
    "cypher": "MATCH (:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product {productName: 'R\u00f6ssle Sauerkraut'})-[:PART_OF]->(cat:Category) RETURN cat.description AS category_description",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "category_description": "Dried fruit and bean curd"
      },
      {
        "category_description": "Dried fruit and bean curd"
      }
    ]
  },
  {
    "question": "What's the ship city for the order containing 'Chai' placed by the customer 'Lonesome Pine Restaurant'?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product {productName: 'Chai'}) RETURN o.shipCity AS shipping_city",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "shipping_city": "Portland"
      }
    ],
    "answer": "The order containing 'Chai' placed by the Lonesome Pine Restaurant was shipped to Portland."
  },
  {
    "question": "What is the phone number for the supplier of 'Chai', which is in the 'Beverages' category?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Chai'})-[:PART_OF]->(c:Category {categoryName: 'Beverages'}) RETURN s.phone AS supplier_phone",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_phone": "(171) 555-2222"
      }
    ],
    "answer": "The phone number for the supplier of Chai in the Beverages category is (171) 555-2222."
  },
  {
    "question": "What is the name of the most expensive product supplied by 'Exotic Liquids' that has been purchased by any customer in the USA?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(c:Customer {country: 'USA'}) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS most_expensive_product ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "most_expensive_product": "Chang"
      }
    ],
    "answer": "The most expensive product supplied by 'Exotic Liquids' that has been purchased by a customer in the USA is Chang."
  },
  {
    "question": "Show me the name of the product with the least stock from the Beverags category ordered by 'Ernst Handl'.",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) WHERE p.unitsInStock IS NOT NULL RETURN p.productName AS lowest_stock_product ORDER BY p.unitsInStock ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_stock_product": "Outback Lager"
      }
    ],
    "answer": "The product with the least stock from the Beverages category ordered by Ernst Handel is Outback Lager."
  },
  {
    "question": "Which supplier company provides the product with the highest reorder level that was purchased by 'White Clover Markets'?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(c:Customer {companyName: 'White Clover Markets'}) WHERE p.reorderLevel IS NOT NULL RETURN s.companyName AS top_supplier_by_reorder ORDER BY p.reorderLevel DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_supplier_by_reorder": "Pasta Buttini s.r.l."
      }
    ],
    "answer": "According to the data, Pasta Buttini s.r.l. is the supplier company that provides the product with the highest reorder level purchased by White Clover Markets."
  },
  {
    "question": "What's the highest freight cost for an order from Alfreds Futterkist for a product from a UK supplier?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(s:Supplier {country: 'UK'}) WHERE o.freight IS NOT NULL RETURN max(toFloat(o.freight)) AS highest_freight",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo, colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "highest_freight": 23.94
      }
    ],
    "answer": "The highest freight cost for an order from Alfreds Futterkiste for a product from a UK supplier is $23.94."
  },
  {
    "question": "What is the name of the product with the most units on order, supplied by a company in London and belonging to the 'Beverages' category?",
    "cypher": "MATCH (s:Supplier {city: 'London'})-[:SUPPLIES]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) WHERE p.unitsOnOrder IS NOT NULL RETURN p.productName AS product_most_on_order ORDER BY p.unitsOnOrder DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_most_on_order": "Chang"
      }
    ],
    "answer": "The product with the most units on order, supplied by a company in London and belonging to the 'Beverages' category, is Chang."
  },
  {
    "question": "How many distinct suppliers from the UK provide products that 'Lonesome Pine Restaurant' has also purchased?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(s:Supplier {country: 'UK'}) RETURN count(DISTINCT s) AS num_uk_suppliers",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_uk_suppliers": 1
      }
    ],
    "answer": "1 distinct supplier from the UK provides products that 'Lonesome Pine Restaurant' has purchased."
  },
  {
    "question": "Gimme the count of customers in Germany who have bought items supplied by 'Exotic Liquds'.",
    "cypher": "MATCH (c:Customer {country: 'Germany'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(s:Supplier {companyName: 'Exotic Liquids'}) RETURN count(DISTINCT c) AS german_customer_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo, colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "german_customer_count": 7
      }
    ],
    "answer": "7 customers from Germany have purchased items supplied by Exotic Liquids."
  },
  {
    "question": "What is the total number of orders from 'Alfreds Futterkiste' that include products from the 'Beverages' category?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN count(DISTINCT o) AS total_orders",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_orders": 2
      }
    ],
    "answer": "Based on the query result, Alfreds Futterkiste has placed a total of 2 orders that include products from the Beverages category."
  },
  {
    "question": "How many different products connect the biz 'Exotic Liquids' to the buyer 'Lonesome Pine Restaurant'?",
    "cypher": "MATCH (:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {companyName: 'Lonesome Pine Restaurant'}) RETURN count(DISTINCT p) AS connecting_product_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connecting_product_count": 1
      }
    ],
    "answer": "Based on the query result, 1 different product connects Exotic Liquids to the Lonesome Pine Restaurant."
  },
  {
    "question": "Count the number of paths between any product in the 'Beverages' category and any customer in 'Austria'.",
    "cypher": "MATCH path = (:Category {categoryName: 'Beverages'})<-[:PART_OF]-(:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {country: 'Austria'}) RETURN count(path) AS connection_paths",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_paths": 22
      }
    ],
    "answer": "There are 22 paths connecting products in the 'Beverages' category to customers in Austria."
  },
  {
    "question": "What is the maximum quantity of a single product ever ordered by 'White Clover Markets' from a supplier in the USA?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order)-[r:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier {country: 'USA'}) RETURN max(r.quantity) AS max_quantity_ordered",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_quantity_ordered": 70
      }
    ],
    "answer": "The maximum quantity of a single product ordered by White Clover Markets from a US supplier is 70 units."
  },
  {
    "question": "Sum up the units in stock for all discontinued stuff in the 'Beverages' category that have been supplied by firms in the UK.",
    "cypher": "MATCH (s:Supplier {country: 'UK'})-[:SUPPLIES]->(p:Product {discontinued: true})-[:PART_OF]->(c:Category {categoryName: 'Beverages'}) RETURN sum(p.unitsInStock) AS total_discontinued_stock",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_discontinued_stock": 0
      }
    ],
    "answer": "The total units in stock for discontinued Beverages supplied by UK firms is 0."
  },
  {
    "question": "Calculate the total number of distinct customers who have ordered products supplied by 'Exotic Liquids'.",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(s:Supplier {companyName: 'Exotic Liquids'}) RETURN count(DISTINCT c) AS total_customers",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_customers": 49
      }
    ],
    "answer": "49 distinct customers have ordered products supplied by Exotic Liquids."
  },
  {
    "question": "Whats the average unit price of items purchased by 'Alfreds Futterkist' from suppliers in Germany?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier {country: 'Germany'}) RETURN avg(p.unitPrice) AS average_unit_price",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo, grammar",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_unit_price": 34.733333333333334
      }
    ],
    "answer": "The average unit price of items purchased by Alfreds Futterkiste from suppliers in Germany is $34.73."
  },
  {
    "question": "Find the company name of the supplier for the product 'Chai', which was ordered and shipped to Portland.",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Chai'})<-[:ORDERS]-(o:Order {shipCity: 'Portland'}) RETURN s.companyName AS supplier_company_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_company_name": "Exotic Liquids"
      }
    ],
    "answer": "The supplier company for Chai that was ordered and shipped to Portland is Exotic Liquids."
  },
  {
    "question": "What's the address of the customer 'Ernst Handl' who bought the product 'Sasquatch Ale'?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Sasquatch Ale'}) RETURN c.address AS customer_address",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo, colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "customer_address": "Kirchgasse 6"
      },
      {
        "customer_address": "Kirchgasse 6"
      }
    ]
  },
  {
    "question": "What is the lowest unit price for a product in the 'Beverages' category supplied by a company from the UK?",
    "cypher": "MATCH (s:Supplier {country: 'UK'})-[:SUPPLIES]->(p:Product)-[:PART_OF]->(c:Category {categoryName: 'Beverages'}) WHERE p.unitPrice IS NOT NULL RETURN min(p.unitPrice) AS lowest_price",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_price": 18.0
      }
    ],
    "answer": "The lowest unit price for a Beverages product supplied by a UK company is \u00a318.00."
  },
  {
    "question": "Which product has the most units in stock among those supplied by 'Exotic Liquds' and bought by 'Lonsome Pine Restaurant'?",
    "cypher": "MATCH (:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {companyName: 'Lonesome Pine Restaurant'}) WHERE p.unitsInStock IS NOT NULL RETURN p.productName AS top_stock_product ORDER BY p.unitsInStock DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_stock_product": "Chai"
      }
    ],
    "answer": "Based on the query result, the product with the most units in stock among those supplied by 'Exotic Liquids' and bought by 'Lonesome Pine Restaurant' is Chai."
  },
  {
    "question": "How many customers from the USA have purchased products from the 'Beverages' category?",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) RETURN count(DISTINCT c) AS us_customer_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "us_customer_count": 11
      }
    ],
    "answer": "11 customers from the USA have purchased products from the Beverages category."
  },
  {
    "question": "Count how many supplierss from the USA provide stuff for the customer 'White Clover Markets'.",
    "cypher": "MATCH (s:Supplier {country: 'USA'})-[:SUPPLIES]->(:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {companyName: 'White Clover Markets'}) RETURN count(DISTINCT s) AS us_supplier_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "grammar, colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "us_supplier_count": 3
      }
    ],
    "answer": "3 suppliers from the USA provide products to White Clover Markets."
  },
  {
    "question": "Find the total number of units on order for all products in the 'Beverages' category purchased by customers in the USA.",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN sum(p.unitsOnOrder) AS total_units_on_order",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_units_on_order": 400
      }
    ],
    "answer": "The total number of units on order for Beverages products purchased by customers in the USA is 400 units."
  },
  {
    "question": "Tell me the contact name for the customer who bought 'Chai' from the supplier 'Exotic Liquds'.",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Chai'})<-[:SUPPLIES]-(:Supplier {companyName: 'Exotic Liquids'}) RETURN c.contactName AS customer_contact_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo, colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_contact_name": "Fran Wilson"
      }
    ],
    "answer": "The contact name for the customer who bought 'Chai' from the supplier 'Exotic Liquids' is Fran Wilson."
  },
  {
    "question": "Find the name of the customer who placed the order with the highest freight cost for a product from the 'Beverages' category.",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(o:Order)-[:ORDERS]->(:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) WHERE o.freight IS NOT NULL RETURN c.companyName AS top_freight_customer ORDER BY toFloat(o.freight) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_freight_customer": "QUICK-Stop"
      }
    ],
    "answer": "The customer who placed the order with the highest freight cost for a Beverages product is QUICK-Stop."
  },
  {
    "question": "How many distinct products has 'Ernst Handel' bought that are also supplied by companies in London?",
    "cypher": "MATCH (:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {city: 'London'}) RETURN count(DISTINCT p) AS num_products_from_london",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_products_from_london": 2
      }
    ],
    "answer": "Ernst Handel has bought 2 distinct products that are supplied by companies in London."
  },
  {
    "question": "What is the total freight cost for all orders of 'Sasquatch Ale' shipped to Austria?",
    "cypher": "MATCH (c:Customer {country: 'Austria'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product {productName: 'Sasquatch Ale'}) RETURN sum(toFloat(o.freight)) AS total_freight_cost",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_freight_cost": 197.07
      }
    ],
    "answer": "The total freight cost for all orders of Sasquatch Ale shipped to Austria is $197.07."
  },
  {
    "question": "What's the name of the supplier for the cheapest item ordered by the biz 'Alfreds Futterkiste'?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {companyName: 'Alfreds Futterkiste'}) WHERE p.unitPrice IS NOT NULL RETURN s.companyName AS cheapest_item_supplier ORDER BY p.unitPrice ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "cheapest_item_supplier": "Exotic Liquids"
      }
    ],
    "answer": "The supplier for the cheapest item ordered by Alfreds Futterkiste is Exotic Liquids."
  },
  {
    "question": "How many different orders for 'Sasquach Ale', supplied by a US company, were shipped to the USA?",
    "cypher": "MATCH (s:Supplier {country: 'USA'})-[:SUPPLIES]->(p:Product {productName: 'Sasquatch Ale'})<-[:ORDERS]-(o:Order {shipCountry: 'USA'}) RETURN count(DISTINCT o) AS num_orders_to_usa",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_orders_to_usa": 5
      }
    ],
    "answer": "5 orders for Sasquatch Ale supplied by a US company were shipped to the USA."
  },
  {
    "question": "Find the home page of the supplier who provides 'R\u00f6ssle Sauerkraut' to 'Alfreds Futterkiste'.",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(:Product {productName: 'R\u00f6ssle Sauerkraut'})<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {companyName: 'Alfreds Futterkiste'}) RETURN s.homePage AS supplier_homepage",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "supplier_homepage": "Plutzer (on the World Wide Web)#http://www.microsoft.com/accessdev/sampleapps/plutzer.htm#"
      },
      {
        "supplier_homepage": "Plutzer (on the World Wide Web)#http://www.microsoft.com/accessdev/sampleapps/plutzer.htm#"
      }
    ]
  },
  {
    "question": "How many distinct categories of products are supplied by 'Exotic Liquids' and have been ordered by 'Lonesome Pine Restaurant'?",
    "cypher": "MATCH (:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category) WHERE (p)<-[:SUPPLIES]-(:Supplier {companyName: 'Exotic Liquids'}) RETURN count(DISTINCT cat) AS num_categories",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_categories": 1
      }
    ],
    "answer": "Based on the query result, 'Exotic Liquids' supplies 1 distinct category of products that have been ordered by 'Lonesome Pine Restaurant'."
  },
  {
    "question": "What is the maximum discount given on any product in the 'Beverages' category supplied by a UK company?",
    "cypher": "MATCH (:Supplier {country: 'UK'})-[:SUPPLIES]->(:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'})<-[r:ORDERS]-(:Order) WHERE r.discount IS NOT NULL RETURN max(toFloat(r.discount)) AS max_discount",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Count the number of suppliers located in the same country as 'Alfreds Futterkiste' who supply products this customer has bought.",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(s:Supplier) WHERE s.country = c.country RETURN count(DISTINCT s) AS same_country_supplier_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "same_country_supplier_count": 1
      }
    ],
    "answer": "Based on the query result, there is 1 supplier located in the same country as 'Alfreds Futterkiste' that supplies products this customer has bought."
  },
  {
    "question": "What is the total quantity of products from the 'Beverages' category ordered by 'Alfreds Futterkiste' from suppliers in Germany?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o:Order)-[r:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}), (p)<-[:SUPPLIES]-(s:Supplier {country: 'Germany'}) RETURN sum(r.quantity) AS total_quantity",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_quantity": 0
      }
    ],
    "answer": "Based on the query result, the total quantity of Beverages products ordered by Alfreds Futterkiste from German suppliers is 0."
  },
  {
    "question": "Find the city of the customer who ordered the greatest quantity of any single product from a supplier in London.",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(:Order)-[r:ORDERS]->(:Product)<-[:SUPPLIES]-(:Supplier {city: 'London'}) WHERE r.quantity IS NOT NULL RETURN c.city AS top_quantity_customer_city ORDER BY r.quantity DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_quantity_customer_city": "Boise"
      }
    ],
    "answer": "The customer who ordered the greatest quantity of a product from a London supplier is located in Boise."
  },
  {
    "question": "How many other customers have bought 'Chai', which is a product also purchased by 'Lonesome Pine Restaurant'?",
    "cypher": "MATCH (c1:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Chai'})<-[:ORDERS]-(:Order)<-[:PURCHASED]-(c2:Customer) WHERE c1 <> c2 RETURN count(DISTINCT c2) AS other_customers_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "other_customers_count": 30
      }
    ],
    "answer": "30 other customers have also purchased Chai, in addition to Lonesome Pine Restaurant."
  },
  {
    "question": "What is the city of the supplier that provides 'Sasquach Ale' to the customer 'Ernst Handl'?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Sasquatch Ale'})<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {companyName: 'Ernst Handel'}) RETURN s.city AS supplier_city",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "supplier_city": "Bend"
      },
      {
        "supplier_city": "Bend"
      }
    ]
  },
  {
    "question": "How many other customers are in the same country as 'Lonsome Pine Restaurant' and have bought products from the Beverags category?",
    "cypher": "MATCH (c1:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}), (c2:Customer)-[:PURCHASED]->(:Order)-[:ORDERS]->(p) WHERE c1 <> c2 AND c1.country = c2.country RETURN count(DISTINCT c2) AS same_country_co_purchasers",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "same_country_co_purchasers": 5
      }
    ],
    "answer": "There are 5 other customers in the same country as Lonesome Pine Restaurant who have also purchased products from the Beverages category."
  },
  {
    "question": "What's the name of the product with the most units on order that was bought by a customer in the USA from a supplier in the UK?",
    "cypher": "MATCH (:Customer {country: 'USA'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {country: 'UK'}) WHERE p.unitsOnOrder IS NOT NULL RETURN p.productName AS top_ordered_product ORDER BY p.unitsOnOrder DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_ordered_product": "Aniseed Syrup"
      }
    ],
    "answer": "The product with the most units on order that was bought by a customer in the USA from a supplier in the UK is Aniseed Syrup."
  },
  {
    "question": "What is the category name for the product 'Chai' that was supplied by a company in London?",
    "cypher": "MATCH (:Supplier {city: 'London'})-[:SUPPLIES]->(p:Product {productName: 'Chai'})-[:PART_OF]->(c:Category) RETURN c.categoryName AS product_category_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_category_name": "Beverages"
      }
    ],
    "answer": "The category name for the product 'Chai' supplied by a company in London is Beverages."
  },
  {
    "question": "How many suppliers provide products that are in the same category as 'Chai' and have been ordered by 'Ernst Handel'?",
    "cypher": "MATCH (:Product {productName: 'Chai'})-[:PART_OF]->(cat:Category)<-[:PART_OF]-(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {companyName: 'Ernst Handel'}), (p)<-[:SUPPLIES]-(s:Supplier) RETURN count(DISTINCT s) AS num_related_suppliers",
    "query_type": "Existence Verification",
    "complexity": "5-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_related_suppliers": 6
      }
    ],
    "answer": "6 suppliers provide products in the same category as 'Chai' that have been ordered by 'Ernst Handel'."
  },
  {
    "question": "What is the total quantity of products ordered by 'White Clover Markets' that are supplied by companies in London?",
    "cypher": "MATCH (:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(:Order)-[r:ORDERS]->(:Product)<-[:SUPPLIES]-(:Supplier {city: 'London'}) RETURN sum(r.quantity) AS total_quantity_from_london",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_quantity_from_london": 52
      }
    ],
    "answer": "The total quantity of products ordered by 'White Clover Markets' that are supplied by companies in London is 52."
  },
  {
    "question": "How many distinct products from the 'Beverages' category has the customer 'Ernst Handel' purchased?",
    "cypher": "MATCH (:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) RETURN count(DISTINCT p) AS num_products",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_products": 8
      }
    ],
    "answer": "The customer 'Ernst Handel' has purchased 8 distinct products from the 'Beverages' category."
  },
  {
    "question": "What is the contact name of the supplier for 'Sasquatch Ale'?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(:Product {productName: 'Sasquatch Ale'}) RETURN s.contactName AS supplier_contact_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_contact_name": "Cheryl Saylor"
      }
    ],
    "answer": "The contact name of the supplier for 'Sasquatch Ale' is Cheryl Saylor."
  },
  {
    "question": "What is the maximum unit price for a product supplied by 'Exotic Liquids' that was purchased by a customer in the USA?",
    "cypher": "MATCH (:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {country: 'USA'}) WHERE p.unitPrice IS NOT NULL RETURN max(p.unitPrice) AS highest_price",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "highest_price": 19.0
      }
    ],
    "answer": "The maximum unit price for a product supplied by 'Exotic Liquids' that was purchased by a customer in the USA is $19.00."
  },
  {
    "question": "How many suppliers from the UK provide products that 'Alfreds Futterkiste' has bought?",
    "cypher": "MATCH (:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(s:Supplier {country: 'UK'}) RETURN count(DISTINCT s) AS supplier_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_count": 1
      }
    ],
    "answer": "1 supplier from the UK provides products that 'Alfreds Futterkiste' has bought."
  },
  {
    "question": "What's the total number of items from the 'Beverages' category that the client 'Ernst Handl' bought?",
    "cypher": "MATCH (:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[r:ORDERS]->(p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) RETURN sum(r.quantity) AS total_items_bought",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_items_bought": 822
      }
    ],
    "answer": "Ernst Handel bought a total of 822 items from the Beverages category."
  },
  {
    "question": "Find the city of the supplier that provides 'R\u00f6ssle Sauerkraut'.",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'R\u00f6ssle Sauerkraut'}) RETURN s.city AS supplier_city",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_city": "Frankfurt"
      }
    ],
    "answer": "The supplier of 'R\u00f6ssle Sauerkraut' is located in Frankfurt."
  },
  {
    "question": "Which product purchased by 'White Clover Markets' has the lowest number of units in stock?",
    "cypher": "MATCH (:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product) WHERE p.unitsInStock IS NOT NULL RETURN p.productName AS lowest_stock_product ORDER BY p.unitsInStock ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_stock_product": "Alice Mutton"
      }
    ],
    "answer": "The product with the lowest number of units in stock purchased by White Clover Markets is Alice Mutton."
  },
  {
    "question": "How many other customers have purchased the product 'Chai'?",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Chai'}) RETURN count(DISTINCT c) AS num_other_customers",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_other_customers": 31
      }
    ],
    "answer": "31 other customers have purchased the product 'Chai'."
  },
  {
    "question": "Calculate the average reorder level for products in the 'Beverages' category that were ordered by 'Alfreds Futterkiste'.",
    "cypher": "MATCH (:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) RETURN avg(p.reorderLevel) AS average_reorder_level",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_reorder_level": 12.5
      }
    ],
    "answer": "The average reorder level for Beverages products ordered by Alfreds Futterkiste is 12.5."
  },
  {
    "question": "What is the country of the biz that supplies the item named 'Teatime Chocolate Biscuits'?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(:Product {productName: 'Teatime Chocolate Biscuits'}) RETURN s.country AS supplier_country",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_country": "M14 GSD"
      }
    ],
    "answer": "UNKNOWN\n\nNote: While a result was returned, \"M14 GSD\" appears to be a postal code or area designation, not a country name. Therefore, I cannot confidently state the country of the supplier based on this result."
  },
  {
    "question": "What is the name of the most expensive product from the 'Beverages' category purchased by any customer in Germany?",
    "cypher": "MATCH (:Customer {country: 'Germany'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS most_expensive_product ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "most_expensive_product": "C\u00f4te de Blaye"
      }
    ],
    "answer": "The most expensive product from the 'Beverages' category purchased by a customer in Germany is C\u00f4te de Blaye."
  },
  {
    "question": "How many orders from 'White Clover Markets' contained products from vendors in the UK?",
    "cypher": "MATCH (:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {country: 'UK'}) RETURN count(DISTINCT o) AS order_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "order_count": 2
      }
    ],
    "answer": "Based on the query result, 2 orders from White Clover Markets contained products from vendors in the UK."
  },
  {
    "question": "What's the total quantity of 'Sasquach Ale' ever ordered by 'White Clover Markets'?",
    "cypher": "MATCH (:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(:Order)-[r:ORDERS]->(:Product {productName: 'Sasquatch Ale'}) RETURN sum(r.quantity) AS total_quantity_ordered",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_quantity_ordered": 70
      }
    ],
    "answer": "White Clover Markets has ordered a total of 70 units of Sasquatch Ale."
  },
  {
    "question": "What is the shipping country for the order that included 'Mozzarella di Giovanni' and was bought by 'Simons bistro'?",
    "cypher": "MATCH (:Customer {companyName: 'Simons bistro'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(:Product {productName: 'Mozzarella di Giovanni'}) RETURN o.shipCountry AS shipping_country",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "shipping_country": "Denmark"
      }
    ],
    "answer": "The shipping country for the order containing 'Mozzarella di Giovanni' purchased by 'Simons bistro' is Denmark."
  },
  {
    "question": "Find the cheapest product supplied by 'Exotic Liquds'.",
    "cypher": "MATCH (:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS cheapest_product ORDER BY p.unitPrice ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "cheapest_product": "Aniseed Syrup"
      }
    ],
    "answer": "The cheapest product supplied by 'Exotic Liquids' is Aniseed Syrup."
  },
  {
    "question": "Count how many distinct customers in the USA have bought products supplied by 'Exotic Liquids'.",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(:Supplier {companyName: 'Exotic Liquids'}) RETURN count(DISTINCT c) AS us_customer_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "us_customer_count": 6
      }
    ],
    "answer": "6 distinct customers from the USA have bought products supplied by Exotic Liquids."
  },
  {
    "question": "How many units of products supplied by 'Exotic Liquids' are currently in stock across all orders from 'Lonesome Pine Restaurant'?",
    "cypher": "MATCH (:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {companyName: 'Exotic Liquids'}) RETURN sum(p.unitsInStock) AS total_stock",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_stock": 39
      }
    ],
    "answer": "The products supplied by 'Exotic Liquids' that are currently in the possession of 'Lonesome Pine Restaurant' have a total of 39 units in stock."
  },
  {
    "question": "What's the category description for the product 'Chai' which was purchased by the Lonesome Pine Restaurant?",
    "cypher": "MATCH (:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Chai'})-[:PART_OF]->(cat:Category) RETURN cat.description AS category_description",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "category_description": "Soft drinks, coffees, teas, beers, and ales"
      }
    ],
    "answer": "The category description for Chai is \"Soft drinks, coffees, teas, beers, and ales\"."
  },
  {
    "question": "What is the highest freight cost for an order placed by Alfeds Futterkiste for a product from the Beverages category?",
    "cypher": "MATCH (:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(c:Category {categoryName: 'Beverages'}) WHERE o.freight IS NOT NULL RETURN max(o.freight) AS max_freight_cost",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_freight_cost": "29.46"
      }
    ],
    "answer": "The highest freight cost for an order placed by Alfreds Futterkiste for a product from the Beverages category is $29.46."
  },
  {
    "question": "How many other customers in Germany bought the same products as 'Alfreds Futterkiste'?",
    "cypher": "MATCH (:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(c2:Customer {country: 'Germany'}) WHERE c2.companyName <> 'Alfreds Futterkiste' RETURN count(DISTINCT c2) AS similar_customer_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "similar_customer_count": 9
      }
    ],
    "answer": "9 other customers in Germany bought the same products as 'Alfreds Futterkiste'."
  },
  {
    "question": "Count the number of discontinued products that 'Ernst Handel' has ordered.",
    "cypher": "MATCH (:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product {discontinued: true}) RETURN count(DISTINCT p) AS num_discontinued_products",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_discontinued_products": 6
      }
    ],
    "answer": "Ernst Handel has ordered 6 discontinued products."
  },
  {
    "question": "What is the company name of the supplier for the product 'Chai', which was ordered by 'Lonesome Pine Restaurant'?",
    "cypher": "MATCH (:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product {productName: 'Chai'})<-[:SUPPLIES]-(s:Supplier) RETURN s.companyName AS supplier_company_name",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_company_name": "Exotic Liquids"
      }
    ],
    "answer": "The supplier for 'Chai' purchased by Lonesome Pine Restaurant is Exotic Liquids."
  },
  {
    "question": "What is the product with the highest reorder level that was purchased by 'White Clover Markets'?",
    "cypher": "MATCH (:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) WHERE p.reorderLevel IS NOT NULL RETURN p.productName AS top_reorder_product ORDER BY p.reorderLevel DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_reorder_product": "Gnocchi di nonna Alice"
      }
    ],
    "answer": "The product with the highest reorder level purchased by 'White Clover Markets' is 'Gnocchi di nonna Alice'."
  },
  {
    "question": "How many unique product categories has the customer 'Ernst Handl' purchased from?",
    "cypher": "MATCH (:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)-[:PART_OF]->(c:Category) RETURN count(DISTINCT c) AS category_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "category_count": 8
      }
    ],
    "answer": "Ernst Handel has purchased products from 8 unique product categories."
  },
  {
    "question": "What is the total number of units on order for all products from UK suppliers that have been purchased by German customers?",
    "cypher": "MATCH (:Customer {country: 'Germany'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {country: 'UK'}) RETURN sum(p.unitsOnOrder) AS total_units_on_order",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_units_on_order": 490
      }
    ],
    "answer": "The total number of units on order for products from UK suppliers that have been purchased by German customers is 490 units."
  },
  {
    "question": "Tell me the phone number of the customer who bought 'Sasquatch Ale' in an order shipped to Seattle.",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(o:Order {shipCity: 'Seattle'})-[:ORDERS]->(p:Product {productName: 'Sasquatch Ale'}) RETURN c.phone AS customer_phone",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "customer_phone": "(206) 555-4112"
      },
      {
        "customer_phone": "(206) 555-4112"
      }
    ]
  },
  {
    "question": "Which supplier has the cheapest product ordered by the customer 'Simons bistro'?",
    "cypher": "MATCH (:Customer {companyName: 'Simons bistro'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier) WHERE p.unitPrice IS NOT NULL RETURN s.companyName AS cheapest_product_supplier ORDER BY p.unitPrice ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "cheapest_product_supplier": "Norske Meierier"
      }
    ],
    "answer": "Based on the query result, the supplier with the cheapest product ordered by Simons bistro is Norske Meierier."
  },
  {
    "question": "How many orders from German customers contain goods from the 'Beverages' category?",
    "cypher": "MATCH (:Customer {country: 'Germany'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) RETURN count(DISTINCT o) AS order_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "order_count": 51
      }
    ],
    "answer": "There are 51 orders from German customers that contain goods from the 'Beverages' category."
  },
  {
    "question": "Find the average quantity per order for the product 'R\u00f6ssle Sauerkraut'.",
    "cypher": "MATCH (:Product {productName: 'R\u00f6ssle Sauerkraut'})<-[r:ORDERS]-(:Order) RETURN avg(r.quantity) AS average_order_quantity",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_order_quantity": 19.393939393939394
      }
    ],
    "answer": "The average quantity per order for 'R\u00f6ssle Sauerkraut' is approximately 19.4 units."
  },
  {
    "question": "What city is the customer 'Alfreds Futterkist' in, who bought the product 'R\u00f6ssle Sauerkraut'?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'R\u00f6ssle Sauerkraut'}) RETURN c.city AS customer_city",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "customer_city": "Berlin"
      },
      {
        "customer_city": "Berlin"
      }
    ]
  },
  {
    "question": "What is the name of the product with the most units in stock that was supplied by a vendor from the UK?",
    "cypher": "MATCH (:Supplier {country: 'UK'})-[:SUPPLIES]->(p:Product) WHERE p.unitsInStock IS NOT NULL RETURN p.productName AS top_stock_product ORDER BY p.unitsInStock DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_stock_product": "Chai"
      }
    ],
    "answer": "The product with the most units in stock that was supplied by a vendor from the UK is Chai."
  },
  {
    "question": "How many customers in Austria purchased products from the 'Beverages' category?",
    "cypher": "MATCH (c:Customer {country: 'Austria'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) RETURN count(DISTINCT c) AS customer_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_count": 2
      }
    ],
    "answer": "2 customers from Austria purchased products from the Beverages category."
  },
  {
    "question": "Count the total number of companys that have supplied items to 'White Clover Markets'.",
    "cypher": "MATCH (:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(s:Supplier) RETURN count(DISTINCT s) AS supplier_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_count": 21
      }
    ],
    "answer": "21 suppliers have supplied items to White Clover Markets."
  },
  {
    "question": "Show me the contact title for the customer 'Ernst Handel' who bought 'Sasquatch Ale'.",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Sasquatch Ale'}) RETURN c.contactTitle AS customer_contact_title",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "customer_contact_title": "Sales Manager"
      },
      {
        "customer_contact_title": "Sales Manager"
      }
    ]
  },
  {
    "question": "What's the lowest freight cost for an order containing 'Sasquach Ale' shipped to the USA?",
    "cypher": "MATCH (:Customer {country: 'USA'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product {productName: 'Sasquatch Ale'}) WHERE o.freight IS NOT NULL RETURN min(o.freight) AS min_freight",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "min_freight": "15.28"
      }
    ],
    "answer": "The lowest freight cost for an order containing 'Sasquatch Ale' shipped to the USA is $15.28."
  },
  {
    "question": "How many paths exist between the customer 'Lonesome Pine Restaurant' and the supplier 'Exotic Liquids'?",
    "cypher": "MATCH (:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {companyName: 'Exotic Liquids'}) RETURN count(o) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_count": 1
      }
    ],
    "answer": "There is 1 path between the customer 'Lonesome Pine Restaurant' and the supplier 'Exotic Liquids', connecting through an order and a product."
  },
  {
    "question": "How much is the total stock of all goods from the 'Beverages' category?",
    "cypher": "MATCH (p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) RETURN sum(p.unitsInStock) AS total_beverage_stock",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_beverage_stock": 559
      }
    ],
    "answer": "The total stock of all goods from the 'Beverages' category is 559 units."
  },
  {
    "question": "Which country is the customer 'Simons bistro' from, who bought 'Mozzarella di Giovanni'?",
    "cypher": "MATCH (c:Customer {companyName: 'Simons bistro'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Mozzarella di Giovanni'}) RETURN c.country AS customer_country",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_country": "Denmark"
      }
    ],
    "answer": "Denmark"
  },
  {
    "question": "What is the product with the smallest reorderLevel from the supplier Exotic Liquids?",
    "cypher": "MATCH (:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product) WHERE p.reorderLevel IS NOT NULL RETURN p.productName AS lowest_reorder_product ORDER BY p.reorderLevel ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_reorder_product": "Chai"
      }
    ],
    "answer": "The product with the smallest reorder level from Exotic Liquids is Chai."
  },
  {
    "question": "How many cities in the USA have customers that bought stuff from the 'Beverages' category?",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) RETURN count(DISTINCT c.city) AS city_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "city_count": 10
      }
    ],
    "answer": "10 cities in the USA have customers that bought products from the 'Beverages' category."
  },
  {
    "question": "Sum up the units in stock for all products that were ever ordered by the customer 'Alfreds Futterkist'.",
    "cypher": "MATCH (:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product) RETURN sum(p.unitsInStock) AS total_stock_for_customer",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_stock_for_customer": 629
      }
    ],
    "answer": "The total units in stock for all products ever ordered by Alfreds Futterkiste is 629 units."
  },
  {
    "question": "What is the postal code of the supplier for the products in the 'Beverages' category that 'Ernst Handel' purchased?",
    "cypher": "MATCH (:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'})<-[:PART_OF]-(:Product)<-[:SUPPLIES]-(s:Supplier) RETURN s.postalCode AS supplier_postal_code LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_postal_code": "Victoria"
      }
    ],
    "answer": "The postal code of the supplier for the Beverages products purchased by Ernst Handel is Victoria."
  },
  {
    "question": "What's the name of the product with the highest unit price from any order shipped to 'Graz'?",
    "cypher": "MATCH (o:Order {shipCity: 'Graz'})-[:ORDERS]->(p:Product) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS most_expensive_product ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "most_expensive_product": "C\u00f4te de Blaye"
      }
    ],
    "answer": "The product with the highest unit price shipped to Graz is C\u00f4te de Blaye."
  },
  {
    "question": "How many suppliers are there for products purchased by 'White Clover Markets'?",
    "cypher": "MATCH (:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(s:Supplier) RETURN count(DISTINCT s) AS num_suppliers",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_suppliers": 21
      }
    ],
    "answer": "There are 21 distinct suppliers for products purchased by White Clover Markets."
  },
  {
    "question": "What's the total count of distinct items bought by customers in 'Berlin'?",
    "cypher": "MATCH (:Customer {city: 'Berlin'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product) RETURN count(DISTINCT p) AS total_distinct_items",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_distinct_items": 11
      }
    ],
    "answer": "Customers in Berlin have purchased 11 distinct items."
  },
  {
    "question": "What is the phone number of the supplier of the most expensive product purchased by 'Lonesome Pine Restaurant'?",
    "cypher": "MATCH (:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier) WHERE p.unitPrice IS NOT NULL RETURN s.phone AS supplier_phone ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_phone": "Australia"
      }
    ],
    "answer": "Australia"
  },
  {
    "question": "Find the cheapest product that was purchased by a customer in the USA from a supplier in the UK.",
    "cypher": "MATCH (:Customer {country: 'USA'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {country: 'UK'}) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS cheapest_product_name ORDER BY p.unitPrice ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "cheapest_product_name": "Aniseed Syrup"
      }
    ],
    "answer": "The cheapest product purchased by a customer in the USA from a UK supplier is Aniseed Syrup."
  },
  {
    "question": "How many unique customers bought products from the same category as 'Sasquatch Ale'?",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)-[:PART_OF]->(:Category)<-[:PART_OF]-(:Product {productName: 'Sasquatch Ale'}) RETURN count(DISTINCT c) AS num_customers_in_category",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_customers_in_category": 83
      }
    ],
    "answer": "83 unique customers bought products from the same category as 'Sasquatch Ale'."
  },
  {
    "question": "What is the average freight cost for orders from 'Lonesome Pine Restarant' that contain products from 'Exotic Liquids'?",
    "cypher": "MATCH (:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(:Supplier {companyName: 'Exotic Liquids'}) RETURN avg(o.freight) AS average_freight_cost",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What is the minimum stock level for a product in the 'Beverages' category that was bought by 'Ernst Handl'?",
    "cypher": "MATCH (:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(c:Category {categoryName: 'Beverages'}) WHERE p.unitsInStock IS NOT NULL RETURN min(p.unitsInStock) AS minimum_stock",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "minimum_stock": 15
      }
    ],
    "answer": "The minimum stock level for a product in the 'Beverages' category bought by 'Ernst Handel' is 15 units."
  },
  {
    "question": "What is the total quantity of products from the 'Beverages' category ordered by the customer 'Alfreds Futterkiste'?",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o:Order)-[ord:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN SUM(ord.quantity) AS total_beverage_quantity",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_beverage_quantity": 36
      }
    ],
    "answer": "The customer 'Alfreds Futterkiste' ordered a total of 36 units of products from the 'Beverages' category."
  },
  {
    "question": "Find the contact name of the supplier for the product 'Chai', which was purchased by 'Lonesome Pine Restaurant'.",
    "cypher": "MATCH (:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Chai'})<-[:SUPPLIES]-(s:Supplier) RETURN s.contactName AS supplier_contact_name",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_contact_name": "Charlotte Cooper"
      }
    ],
    "answer": "The contact name of the supplier for 'Chai' purchased by Lonesome Pine Restaurant is Charlotte Cooper."
  },
  {
    "question": "What is the name of the product with the highest unit price supplied by 'Exotic Liquids' and belonging to the 'Beverages' category?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)-[:PART_OF]->(c:Category {categoryName: 'Beverages'}) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS most_expensive_product ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "most_expensive_product": "Chang"
      }
    ],
    "answer": "The product with the highest unit price supplied by 'Exotic Liquids' in the 'Beverages' category is Chang."
  },
  {
    "question": "How many unique products has 'White Clover Markets' bought that are supplied by a company in the USA?",
    "cypher": "MATCH (:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {country: 'USA'}) RETURN COUNT(DISTINCT p) AS num_us_supplied_products",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_us_supplied_products": 4
      }
    ],
    "answer": "White Clover Markets has bought 4 unique products that are supplied by companies in the USA."
  },
  {
    "question": "How many distinct customers from Germany have ordered 'Rossle Sauerkraut'?",
    "cypher": "MATCH (c:Customer {country: 'Germany'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'R\u00f6ssle Sauerkraut'}) RETURN COUNT(DISTINCT c) AS german_customer_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "german_customer_count": 4
      }
    ],
    "answer": "4 distinct customers from Germany have ordered R\u00f6ssle Sauerkraut."
  },
  {
    "question": "What's the city for the biz that supplied 'Sasquatch Ale' to the customer 'Ernst Handel'?",
    "cypher": "MATCH (:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Sasquatch Ale'})<-[:SUPPLIES]-(s:Supplier) RETURN s.city AS supplier_city",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "supplier_city": "Bend"
      },
      {
        "supplier_city": "Bend"
      }
    ]
  },
  {
    "question": "Which product has the lowest units in stock that was supplied by Exotic Liquds and ordered by a customer in the USA?",
    "cypher": "MATCH (s:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {country: 'USA'}) WHERE p.unitsInStock IS NOT NULL RETURN p.productName AS lowest_stock_product ORDER BY p.unitsInStock ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_stock_product": "Aniseed Syrup"
      }
    ],
    "answer": "The product with the lowest units in stock that was supplied by Exotic Liquids and ordered by a customer in the USA is Aniseed Syrup."
  },
  {
    "question": "Count the number of suppliers from London who provide products that have been purchased by customers in Germany.",
    "cypher": "MATCH (s:Supplier {city: 'London'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {country: 'Germany'}) RETURN COUNT(DISTINCT s) AS london_supplier_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "london_supplier_count": 1
      }
    ],
    "answer": "Based on the query result, there is 1 supplier from London who provides products that have been purchased by customers in Germany."
  },
  {
    "question": "What is the average quantity of 'Chai' ordered by customers who also ordered 'Sasquatch Ale'?",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Sasquatch Ale'}) MATCH (c)-[:PURCHASED]->(o:Order)-[ord:ORDERS]->(:Product {productName: 'Chai'}) RETURN avg(ord.quantity) AS average_chai_quantity",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_chai_quantity": 33.55555555555556
      }
    ],
    "answer": "Customers who ordered Sasquatch Ale also ordered Chai at an average quantity of approximately 34 units."
  },
  {
    "question": "What is the ship country for an order containing 'Mozzarella di Giovanni', which was purchased by a customer in Denmark?",
    "cypher": "MATCH (c:Customer {country: 'Denmark'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product {productName: 'Mozzarella di Giovanni'}) RETURN o.shipCountry AS order_ship_country LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "order_ship_country": "Denmark"
      }
    ],
    "answer": "The ship country for the order containing 'Mozzarella di Giovanni' purchased by a customer in Denmark is Denmark."
  },
  {
    "question": "Find the name of the customer who ordered the least quantity of 'Teatime Chocolate Biscuits'.",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(o:Order)-[ord:ORDERS]->(p:Product {productName: 'Teatime Chocolate Biscuits'}) WHERE ord.quantity IS NOT NULL RETURN c.companyName AS customer_name ORDER BY ord.quantity ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_name": "Romero y tomillo"
      }
    ],
    "answer": "The customer who ordered the least quantity of 'Teatime Chocolate Biscuits' is Romero y tomillo."
  },
  {
    "question": "How many orders placed by 'Alfreds Futterkist' contain products from the 'Beverages' category?",
    "cypher": "MATCH (:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) RETURN COUNT(DISTINCT o) AS num_beverage_orders",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_beverage_orders": 2
      }
    ],
    "answer": "According to the query result, 'Alfreds Futterkiste' has placed 2 orders containing products from the 'Beverages' category."
  },
  {
    "question": "Sum up the units on order for all the stuff supplied by Exotic Liquids and bought by folks in the USA.",
    "cypher": "MATCH (:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {country: 'USA'}) RETURN SUM(p.unitsOnOrder) AS total_units_on_order",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_units_on_order": 430
      }
    ],
    "answer": "The total units on order for products supplied by Exotic Liquids and purchased by customers in the USA is 430 units."
  },
  {
    "question": "What is the country of the supplier for the product 'Chai', which was ordered by 'Lonesome Pine Restaurant'?",
    "cypher": "MATCH (:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Chai'})<-[:SUPPLIES]-(s:Supplier) RETURN s.country AS supplier_country",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_country": "UK"
      }
    ],
    "answer": "The country of the supplier for the 'Chai' product ordered by Lonesome Pine Restaurant is the UK."
  },
  {
    "question": "What is the highest reorder level among products purchased by 'Ernst Handel' from suppliers in Austria?",
    "cypher": "MATCH (:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {country: 'Austria'}) WHERE p.reorderLevel IS NOT NULL RETURN MAX(p.reorderLevel) AS highest_reorder_level",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "highest_reorder_level": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "How many purchase paths exist between the customer 'White Clover Markets' and the supplier 'Exotic Liquids'?",
    "cypher": "MATCH path = (:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(:Supplier {companyName: 'Exotic Liquids'}) RETURN COUNT(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_count": 2
      }
    ],
    "answer": "There are 2 purchase paths between White Clover Markets and Exotic Liquids."
  },
  {
    "question": "Count the number of distinct products from the 'Beverages' category that have been ordered by customers from a different country than the product's supplier.",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) MATCH (p)<-[:SUPPLIES]-(s:Supplier) WHERE c.country <> s.country RETURN COUNT(DISTINCT p) AS cross_country_products",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "cross_country_products": 12
      }
    ],
    "answer": "12 distinct Beverages products have been ordered by customers from a different country than the product's supplier."
  },
  {
    "question": "What is the contact title of the customer who ordered 'R\u00f6ssle Sauerkraut' which is supplied by a company from Germany?",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'R\u00f6ssle Sauerkraut'})<-[:SUPPLIES]-(:Supplier {country: 'Germany'}) RETURN c.contactTitle AS customer_contact_title LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_contact_title": "Marketing Assistant"
      }
    ],
    "answer": "The contact title of the customer who ordered 'R\u00f6ssle Sauerkraut' from a German supplier is Marketing Assistant."
  },
  {
    "question": "Find the cheapest product (lowest unit price) in the Beverages category purchased by 'Simons bistroo'.",
    "cypher": "MATCH (:Customer {companyName: 'Simons bistro'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS cheapest_product ORDER BY p.unitPrice ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "cheapest_product": "C\u00f4te de Blaye"
      }
    ],
    "answer": "The cheapest product in the Beverages category purchased by Simons bistro is C\u00f4te de Blaye."
  },
  {
    "question": "How many different customers from the USA have ever bought stuff from the same category as 'Chai'?",
    "cypher": "MATCH (:Product {productName: 'Chai'})-[:PART_OF]->(cat:Category)<-[:PART_OF]-(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(c:Customer {country: 'USA'}) RETURN COUNT(DISTINCT c) AS us_customer_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "us_customer_count": 11
      }
    ],
    "answer": "11 different customers from the USA have bought products from the same category as 'Chai'."
  },
  {
    "question": "Whats the average unit price of products supplied by a company in London and purchased by the customer 'Alfreds Futterkiste'?",
    "cypher": "MATCH (:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {city: 'London'}) RETURN AVG(p.unitPrice) AS average_price",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_price": 10.0
      }
    ],
    "answer": "The average unit price of products supplied by a company in London and purchased by Alfreds Futterkiste is $10.00."
  },
  {
    "question": "What is the phone number for the supplier of 'Sasquatch Ale', a product purchased by the customer 'White Clover Market'?",
    "cypher": "MATCH (:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Sasquatch Ale'})<-[:SUPPLIES]-(s:Supplier) RETURN s.phone AS supplier_phone",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "supplier_phone": "(503) 555-9931"
      },
      {
        "supplier_phone": "(503) 555-9931"
      }
    ]
  },
  {
    "question": "Which product has the most units in stock among those supplied from the UK and ordered by customers in Germany?",
    "cypher": "MATCH (:Supplier {country: 'UK'})-[:SUPPLIES]->(p:Product)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {country: 'Germany'}) WHERE p.unitsInStock IS NOT NULL RETURN p.productName AS product_with_most_stock ORDER BY p.unitsInStock DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_with_most_stock": "Chai"
      }
    ],
    "answer": "The product with the most units in stock among those supplied from the UK and ordered by customers in Germany is Chai."
  },
  {
    "question": "How many orders from customers in the USA contain products supplied by 'Exotic Liquids'?",
    "cypher": "MATCH (:Customer {country: 'USA'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(:Supplier {companyName: 'Exotic Liquids'}) RETURN COUNT(DISTINCT o) AS order_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "order_count": 16
      }
    ],
    "answer": "Based on the query result, there are 16 distinct orders from customers in the USA that contain products supplied by Exotic Liquids."
  },
  {
    "question": "What is the total number of units in stock for products in the 'Beverages' category that were purchased by 'Ernst Handel'?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN SUM(p.unitsInStock) AS total_stock",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_stock": 831
      }
    ],
    "answer": "The total number of units in stock for Beverages products purchased by Ernst Handel is 831."
  },
  {
    "question": "What is the category description for the product 'R\u00f6ssle Sauerkraut' purchased by 'Alfreds Futterkiste'?",
    "cypher": "MATCH (:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'R\u00f6ssle Sauerkraut'})-[:PART_OF]->(cat:Category) RETURN cat.description AS category_description",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "category_description": "Dried fruit and bean curd"
      },
      {
        "category_description": "Dried fruit and bean curd"
      }
    ]
  },
  {
    "question": "Which supplier's city is home to the company that provides the priciest item in the 'Beverages' category?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) WHERE p.unitPrice IS NOT NULL RETURN s.city AS supplier_city ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_city": " Rue des Francs-Bourgeois"
      }
    ],
    "answer": "The supplier's city is Rue des Francs-Bourgeois, which is home to the company providing the most expensive item in the 'Beverages' category."
  },
  {
    "question": "Count the suppliers located in the same country as the customers company 'Alfreds Futterkiste' from which they have purchased.",
    "cypher": "MATCH (c:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(s:Supplier) WHERE s.country = c.country RETURN COUNT(DISTINCT s) AS same_country_supplier_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "same_country_supplier_count": 1
      }
    ],
    "answer": "There is 1 supplier located in the same country as Alfreds Futterkiste."
  },
  {
    "question": "Find the total quantity of products ordered by customers in 'Berlin' that are supplied by companies in 'London'.",
    "cypher": "MATCH (:Customer {city: 'Berlin'})-[:PURCHASED]->(:Order)-[ord:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {city: 'London'}) RETURN SUM(ord.quantity) AS total_quantity",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_quantity": 6
      }
    ],
    "answer": "Customers in Berlin have ordered a total quantity of 6 products that are supplied by companies in London."
  },
  {
    "question": "What is the company name of the customer from Austria who bought 'Sasquatch Alea'?",
    "cypher": "MATCH (c:Customer {country: 'Austria'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Sasquatch Ale'}) RETURN c.companyName AS customer_company_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_company_name": "Ernst Handel"
      }
    ],
    "answer": "The company name of the Austrian customer who bought 'Sasquatch Ale' is Ernst Handel."
  },
  {
    "question": "Find the name of the discontinued product with the highest unit price that was purchased by a customer in the USA.",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product {discontinued: true}) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS top_discontinued_product ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_discontinued_product": "Th\u00fcringer Rostbratwurst"
      }
    ],
    "answer": "The discontinued product with the highest unit price purchased by a customer in the USA is Th\u00fcringer Rostbratwurst."
  },
  {
    "question": "What is the shortest path length between customer 'Alfreds Futterkiste' and any supplier in the UK?",
    "cypher": "MATCH path = shortestPath((c:Customer {companyName: 'Alfreds Futterkiste'})-[*]-(s:Supplier {country: 'UK'})) RETURN length(path) AS connection_distance",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_distance": 3
      }
    ],
    "answer": "The shortest path length between customer 'Alfreds Futterkiste' and a supplier in the UK is 3 connections."
  },
  {
    "question": "How many different kinds of products has the biz 'Ernst Handel' bought from suppliers located in Austria?",
    "cypher": "MATCH (:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {country: 'Austria'}) RETURN COUNT(DISTINCT p) AS product_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_count": 0
      }
    ],
    "answer": "Ernst Handel has bought 0 different kinds of products from suppliers located in Austria."
  },
  {
    "question": "What is the city of the supplier of the product 'Chai', which was part of an order shipped to 'Portland'?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Chai'})<-[:ORDERS]-(o:Order {shipCity: 'Portland'}) RETURN s.city AS supplier_city LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_city": "London"
      }
    ],
    "answer": "The city of the supplier of the 'Chai' product shipped to Portland is London."
  },
  {
    "question": "Among products bought by 'White Clover Markets', which one has the suppliers contact name that comes last alphabetically?",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier) WHERE s.contactName IS NOT NULL RETURN p.productName AS product_name ORDER BY s.contactName DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "product_name": "Mishi Kobe Niku"
      }
    ],
    "answer": "Among the products bought by White Clover Markets, Mishi Kobe Niku is the product with the supplier contact name that comes last alphabetically."
  },
  {
    "question": "How many customers in the USA bought products from the same category as 'Mozarella di Giovanni'?",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category)<-[:PART_OF]-(:Product {productName: 'Mozzarella di Giovanni'}) RETURN COUNT(DISTINCT c) AS us_customer_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "us_customer_count": 10
      }
    ],
    "answer": "10 customers from the USA bought products from the same category as 'Mozzarella di Giovanni'."
  },
  {
    "question": "What is the average number of units in stock for products supplied by 'Exotic Liquids' and purchased by 'Lonesome Pine Restaurant'?",
    "cypher": "MATCH (:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)<-[:SUPPLIES]-(:Supplier {companyName: 'Exotic Liquids'}) RETURN AVG(p.unitsInStock) AS average_stock",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_stock": 39.0
      }
    ],
    "answer": "The average number of units in stock for products supplied by 'Exotic Liquids' and purchased by 'Lonesome Pine Restaurant' is 39 units."
  },
  {
    "question": "Give me the company name of the supplier for whatever 'Alfreds Futterkiste' bought that was in the 'Beverages' category.",
    "cypher": "MATCH (:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) MATCH (p)<-[:SUPPLIES]-(s:Supplier) RETURN s.companyName AS supplier_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_name": "Karkki Oy"
      }
    ],
    "answer": "The supplier for the Beverages product bought by Alfreds Futterkiste is Karkki Oy."
  },
  {
    "question": "Find the product with the minimum reorder level among all products purchased by 'White Clover Markets'.",
    "cypher": "MATCH (c:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(o:Order)-[:ORDERS]->(p:Product) WHERE p.reorderLevel IS NOT NULL RETURN p.productName AS min_reorder_product ORDER BY p.reorderLevel ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "min_reorder_product": "Chef Anton's Cajun Seasoning"
      }
    ],
    "answer": "The product with the minimum reorder level purchased by White Clover Markets is \"Chef Anton's Cajun Seasoning\"."
  },
  {
    "question": "Count how many distinct categories of products are supplied by 'Exotic Liquids' and have been purchased by customers in the USA.",
    "cypher": "MATCH (:Supplier {companyName: 'Exotic Liquids'})-[:SUPPLIES]->(p:Product)-[:PART_OF]->(cat:Category) MATCH (p)<-[:ORDERS]-(:Order)<-[:PURCHASED]-(:Customer {country: 'USA'}) RETURN COUNT(DISTINCT cat) AS category_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "category_count": 2
      }
    ],
    "answer": "Exotic Liquids supplies 2 distinct product categories that have been purchased by customers in the USA."
  },
  {
    "question": "What is the total quantity of products from the 'Beverages' category ordered by the customer 'Ernst Handle'?",
    "cypher": "MATCH (c:Customer {companyName: 'Ernst Handel'})-[:PURCHASED]->(o:Order)-[ord:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN SUM(ord.quantity) AS total_beverage_quantity",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_beverage_quantity": 822
      }
    ],
    "answer": "Ernst Handel ordered a total of 822 units of Beverages products."
  },
  {
    "question": "What is the name of the supplier who provides 'Chai', which was ordered by a customer from Portland?",
    "cypher": "MATCH (s:Supplier)-[:SUPPLIES]->(p:Product {productName: 'Chai'})<-[:ORDERS]-(o:Order)<-[:PURCHASED]-(c:Customer {city: 'Portland'}) RETURN s.companyName AS supplier_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "supplier_name": "Exotic Liquids"
      }
    ],
    "answer": "The supplier who provides Chai and was ordered by a customer from Portland is Exotic Liquids."
  },
  {
    "question": "Who is the contact for the customer who bought the least amount of stuff from the supplier 'Exotic Liquids'?",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(o:Order)-[ord:ORDERS]->(p:Product)<-[:SUPPLIES]-(s:Supplier {companyName: 'Exotic Liquids'}) WHERE ord.quantity IS NOT NULL RETURN c.contactName AS customer_contact ORDER BY ord.quantity ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_contact": "Matti Karttunen"
      }
    ],
    "answer": "The contact for the customer who bought the least amount of stuff from Exotic Liquids is Matti Karttunen."
  },
  {
    "question": "How many customer from USA have bought products supplied by a company in London?",
    "cypher": "MATCH (c:Customer {country: 'USA'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(:Supplier {city: 'London'}) RETURN COUNT(DISTINCT c) AS us_customer_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "us_customer_count": 6
      }
    ],
    "answer": "6 customers from the USA have bought products supplied by a company in London."
  },
  {
    "question": "What is the total number of units on order for all products from the 'Beverages' category that have been purchased by German customers?",
    "cypher": "MATCH (c:Customer {country: 'Germany'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(cat:Category {categoryName: 'Beverages'}) RETURN SUM(p.unitsOnOrder) AS total_units_on_order",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_units_on_order": 370
      }
    ],
    "answer": "The total number of units on order for Beverages products purchased by German customers is 370."
  },
  {
    "question": "What is the city of the customer 'Lonesome Pine Restarant' who bought products from the 'Beverages' category?",
    "cypher": "MATCH (c:Customer {companyName: 'Lonesome Pine Restaurant'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) RETURN c.city AS customer_city LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "customer_city": "Portland"
      }
    ],
    "answer": "The city of the customer 'Lonesome Pine Restaurant' who bought products from the 'Beverages' category is Portland."
  },
  {
    "question": "What is the name of the product with the highest unit price ordered by 'Alfreds Futterkiste'?",
    "cypher": "MATCH (:Customer {companyName: 'Alfreds Futterkiste'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product) WHERE p.unitPrice IS NOT NULL RETURN p.productName AS most_expensive_product ORDER BY p.unitPrice DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "most_expensive_product": "Raclette Courdavault"
      }
    ],
    "answer": "The product with the highest unit price ordered by 'Alfreds Futterkiste' is Raclette Courdavault."
  },
  {
    "question": "How many suppliers in the UK provide products that were ordered by the customer with ID 'VINET'?",
    "cypher": "MATCH (:Customer {customerID: 'VINET'})-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product)<-[:SUPPLIES]-(s:Supplier {country: 'UK'}) RETURN COUNT(DISTINCT s) AS uk_supplier_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "uk_supplier_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 suppliers in the UK that provided products ordered by the customer with ID 'VINET'."
  },
  {
    "question": "What is the country of the customer who bought 'Mozzarella di Giovanni' from a supplier whose contact is 'Charlotte Cooper'?",
    "cypher": "MATCH (c:Customer)-[:PURCHASED]->(:Order)-[:ORDERS]->(:Product {productName: 'Mozzarella di Giovanni'})<-[:SUPPLIES]-(:Supplier {contactName: 'Charlotte Cooper'}) RETURN c.country AS customer_country LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many different suppliers does 'White Clover Markets' deal with for their beverage orders?",
    "cypher": "MATCH (:Customer {companyName: 'White Clover Markets'})-[:PURCHASED]->(:Order)-[:ORDERS]->(p:Product)-[:PART_OF]->(:Category {categoryName: 'Beverages'}) MATCH (p)<-[:SUPPLIES]-(s:Supplier) RETURN COUNT(DISTINCT s) AS beverage_supplier_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "beverage_supplier_count": 4
      }
    ],
    "answer": "White Clover Markets deals with 4 different suppliers for their beverage orders."
  },
  {
    "question": "What is the taxonomy ID for the CHGA gene?",
    "cypher": "MATCH (g:Gene {id: 'CHGA'}) RETURN g.taxid AS gene_taxid",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "gene_taxid": "9606"
      }
    ],
    "answer": "The taxonomy ID for the CHGA gene is 9606, which corresponds to the human species."
  },
  {
    "question": "Provide the UniProt accession for protein P10645.",
    "cypher": "MATCH (p:Protein {id: 'P10645'}) RETURN p.accession AS protein_accession",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "protein_accession": "CMGA_HUMAN"
      }
    ],
    "answer": "The UniProt accession for protein P10645 is CMGA_HUMAN."
  },
  {
    "question": "What is the chemical formula for Hydrogen Ion?",
    "cypher": "MATCH (m:Metabolite {name: 'Hydrogen Ion'}) RETURN m.chemical_formula AS metabolite_chemical_formula",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "metabolite_chemical_formula": "H"
      }
    ],
    "answer": "The chemical formula for Hydrogen Ion is H."
  },
  {
    "question": "Show me the email address for the user named Alberto Santos.",
    "cypher": "MATCH (u:User {name: 'Alberto Santos'}) RETURN u.email AS user_email",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "user_email": "alberto.santos@cpr.ku.dk"
      }
    ],
    "answer": "The email address for Alberto Santos is alberto.santos@cpr.ku.dk."
  },
  {
    "question": "What is the project type for project P0000006?",
    "cypher": "MATCH (p:Project {id: 'P0000006'}) RETURN p.type AS project_type",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "project_type": "clinical|phosphoproteomics"
      }
    ],
    "answer": "The project type for project P0000006 is clinical|phosphoproteomics."
  },
  {
    "question": "Which journal published the article with ID 28232668?",
    "cypher": "MATCH (p:Publication {id: '28232668'}) RETURN p.journal AS publication_journal",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "publication_journal": "Nat Commun"
      }
    ],
    "answer": "The article with ID 28232668 was published in the journal \"Nat Commun\" (Nature Communications)."
  },
  {
    "question": "Give me the description for the tissue named 'heterotroph'.",
    "cypher": "MATCH (t:Tissue {name: 'heterotroph'}) RETURN t.description AS tissue_description",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "tissue_description": "A heterotrophic organism. [Dorlands_Medical_Dictionary:MerckSource]"
      }
    ],
    "answer": "A heterotroph is an organism that requires organic compounds from other organisms for nutrition. According to the description, it is defined as \"A heterotrophic organism\" and the source is Dorlands Medical Dictionary and MerckSource."
  },
  {
    "question": "What is the data source for pathway SMP0033411?",
    "cypher": "MATCH (p:Pathway {id: 'SMP0033411'}) RETURN p.source AS pathway_source",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "pathway_source": "SMPDB"
      }
    ],
    "answer": "The data source for pathway SMP0033411 is SMPDB."
  },
  {
    "question": "Find the link for the protein structure 6GLR.",
    "cypher": "MATCH (ps:Protein_structure {id: '6GLR'}) RETURN ps.link AS structure_link",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "structure_link": "http://www.rcsb.org/structure/6GLR"
      }
    ],
    "answer": "The link for the protein structure 6GLR is: http://www.rcsb.org/structure/6GLR"
  },
  {
    "question": "What's the taxid for protein P38117-Z?",
    "cypher": "MATCH (p:Protein {id: 'P38117-2'}) RETURN p.taxid AS protein_taxid",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "protein_taxid": "9606"
      }
    ],
    "answer": "The taxid for protein P38117-Z is 9606, which corresponds to the human species.\n\nNote: There's a slight discrepancy in the protein ID between the question (P38117-Z) and the query (P38117-2), but I've provided the answer based on the available result."
  },
  {
    "question": "What's the full name for the gene ETFB?",
    "cypher": "MATCH (g:Gene {id: 'ETFB'}) RETURN g.name AS gene_name",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "gene_name": "electron transfer flavoprotein subunit beta"
      }
    ],
    "answer": "The full name for the gene ETFB is \"electron transfer flavoprotein subunit beta\"."
  },
  {
    "question": "What is the affiliation of the user Ana Rita Colaco?",
    "cypher": "MATCH (u:User {name: 'Ana Rita Cola\u00e7o'}) RETURN u.affiliation AS user_affiliation",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "user_affiliation": "CPR"
      }
    ],
    "answer": "Ana Rita Colaco's affiliation is CPR."
  },
  {
    "question": "What's the current status of the 'COV318 Interactomics CT45' project?",
    "cypher": "MATCH (p:Project {name: 'COV318 Interactomics CT45'}) RETURN p.status AS project_status",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "project_status": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "What is the effect of the known variant with id 'chr19:g.51354221C>B'?",
    "cypher": "MATCH (kv:Known_variant {id: 'chr19:g.51354221C>A'}) RETURN kv.effect AS variant_effect",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "variant_effect": "missense variant"
      }
    ],
    "answer": "The known variant 'chr19:g.51354221C>B' has an effect of a missense variant."
  },
  {
    "question": "Which kingdom does the stuff with ID HMDB0094081 belong to?",
    "cypher": "MATCH (m:Metabolite {id: 'HMDB0094081'}) RETURN m.kingdom AS metabolite_kingdom",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "metabolite_kingdom": "Organic compounds"
      }
    ],
    "answer": "The metabolite with ID HMDB0094081 belongs to the kingdom of Organic compounds."
  },
  {
    "question": "What is the name of chromosome with ID 4?",
    "cypher": "MATCH (c:Chromosome {id: '4'}) RETURN c.name AS chromosome_name",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "chromosome_name": "4"
      }
    ],
    "answer": "The name of the chromosome with ID 4 is simply \"4\"."
  },
  {
    "question": "What is the description for ovarian serous carsinoma?",
    "cypher": "MATCH (d:Disease {name: 'ovarian serous carcinoma'}) RETURN d.description AS disease_description",
    "query_type": "Direct Property Access",
    "complexity": "0-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "disease_description": "An ovarian carcinoma that has_material_basis_in the lining of the ovary and produces a serum-like fluid. [url:http\\://en.wikipedia.org/wiki/Serous_carcinoma]"
      }
    ],
    "answer": "Ovarian serous carcinoma is an ovarian carcinoma that originates in the lining of the ovary and produces a serum-like fluid."
  },
  {
    "question": "How many diseases is protein P10645 associated with?",
    "cypher": "MATCH (p:Protein {id: 'P10645'})-[:ASSOCIATED_WITH]->(d:Disease) RETURN count(d) AS disease_association_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "disease_association_count": 743
      }
    ],
    "answer": "Protein P10645 is associated with 743 diseases."
  },
  {
    "question": "What is the name of the protein that is translated from the CHGA gene?",
    "cypher": "MATCH (g:Gene {id: 'CHGA'})-[:TRANSLATED_INTO]->(p:Protein) RETURN p.name AS protein_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "protein_name": "CHGA"
      },
      {
        "protein_name": "CHGA"
      },
      {
        "protein_name": "CHGA"
      }
    ]
  },
  {
    "question": "Count the number of curated interactions for protein P10645.",
    "cypher": "MATCH (p:Protein {id: 'P10645'})-[:CURATED_INTERACTS_WITH]->(p2:Protein) RETURN count(p2) AS curated_interaction_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "curated_interaction_count": 6
      }
    ],
    "answer": "The protein P10645 has 6 curated interactions with other proteins."
  },
  {
    "question": "What is the name of the disease studied in project P0000006?",
    "cypher": "MATCH (p:Project {id: 'P0000006'})-[:STUDIES_DISEASE]->(d:Disease) RETURN d.name AS studied_disease_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "studied_disease_name": "ovarian serous carcinoma"
      }
    ],
    "answer": "The disease studied in project P0000006 is ovarian serous carcinoma."
  },
  {
    "question": "How many projects is Alberto Santos responsible for?",
    "cypher": "MATCH (u:User {name: 'Alberto Santos'})-[:IS_RESPONSIBLE]->(p:Project) RETURN count(p) AS projects_responsible_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "projects_responsible_count": 4
      }
    ],
    "answer": "Alberto Santos is responsible for 4 projects."
  },
  {
    "question": "What is the highest association score between protein P10645 and any disease?",
    "cypher": "MATCH (p:Protein {id: 'P10645'})-[r:ASSOCIATED_WITH]->(:Disease) WHERE r.score IS NOT NULL RETURN max(r.score) AS max_association_score",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_association_score": 3.538
      }
    ],
    "answer": "The highest association score between protein P10645 and any disease is 3.538."
  },
  {
    "question": "How many transcripts does the ETFB gene have?",
    "cypher": "MATCH (g:Gene {id: 'ETFB'})-[:TRANSCRIBED_INTO]->(t:Transcript) RETURN count(t) AS transcript_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "transcript_count": 6
      }
    ],
    "answer": "The ETFB gene has 6 transcripts."
  },
  {
    "question": "Count the number of publications that mention the condition ovarian serous carcinoma.",
    "cypher": "MATCH (d:Disease {name: 'ovarian serous carcinoma'})-[:MENTIONED_IN_PUBLICATION]->(p:Publication) RETURN count(p) AS publication_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "publication_count": 593
      }
    ],
    "answer": "There are 593 publications that mention ovarian serous carcinoma."
  },
  {
    "question": "How many pathways is the protein P10645 a part of?",
    "cypher": "MATCH (p:Protein {id: 'P10645'})-[:ANNOTATED_IN_PATHWAY]->(path:Pathway) RETURN count(path) AS pathway_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "pathway_count": 1
      }
    ],
    "answer": "The protein P10645 is part of 1 pathway."
  },
  {
    "question": "What tissue is studied in project P000000S?",
    "cypher": "MATCH (p:Project {id: 'P0000006'})-[:STUDIES_TISSUE]->(t:Tissue) RETURN t.name AS studied_tissue_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "studied_tissue_name": "OVCA-5 cell"
      }
    ],
    "answer": "The tissue studied in project P000000S is the OVCA-5 cell."
  },
  {
    "question": "Give me the accession for the protein made from the AFAP1 gene.",
    "cypher": "MATCH (g:Gene {id: 'AFAP1'})-[:TRANSLATED_INTO]->(p:Protein) RETURN p.accession AS protein_accession",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "protein_accession": "AFAP1_HUMAN"
      },
      {
        "protein_accession": "AFAP1_HUMAN"
      },
      {
        "protein_accession": "AFAP1_HUMAN"
      },
      {
        "protein_accession": "A0A087X177_HUMAN"
      }
    ]
  },
  {
    "question": "What was the earliest year a publication mentioned the protein PLP3?",
    "cypher": "MATCH (p:Protein {name: 'PLPP3'})-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.year IS NOT NULL RETURN min(pub.year) AS earliest_publication_year",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "earliest_publication_year": 1999
      }
    ],
    "answer": "Based on the query result, the earliest year a publication mentioned the protein PLPP3 was 1999."
  },
  {
    "question": "How many other proteins does P38117-2 link up with?",
    "cypher": "MATCH (p:Protein {id: 'P38117-2'})-[:COMPILED_INTERACTS_WITH|:CURATED_INTERACTS_WITH]->(p2:Protein) RETURN count(p2) AS total_interactions",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_interactions": 6
      }
    ],
    "answer": "Based on the query result, the protein P38117-2 links up with 6 other proteins."
  },
  {
    "question": "What is the gene name for the variant chr1:g.56578932T>G?",
    "cypher": "MATCH (kv:Known_variant {id: 'chr1:g.56578932T>C'})-[:VARIANT_FOUND_IN_GENE]->(g:Gene) RETURN g.name AS gene_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "gene_name": "phospholipid phosphatase 3"
      }
    ],
    "answer": "The gene name for the variant chr1:g.56578932T>G is phospholipid phosphatase 3."
  },
  {
    "question": "How many complexes is protein P10645 a subunit of?",
    "cypher": "MATCH (p:Protein {id: 'P10645'})-[:IS_SUBUNIT_OF]->(c:Complex) RETURN count(c) AS complex_count",
    "query_type": "Single-hop Aggregation",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "complex_count": 0
      }
    ],
    "answer": "Based on the query result, protein P10645 is not a subunit of any complexes."
  },
  {
    "question": "What is the name of the protein that the peptide 'SVISVEDPPQRTAGVKVETTEDLVAKL' belongs to?",
    "cypher": "MATCH (:Peptide {id: 'SVISVEDPPQRTAGVKVETTEDLVAKL'})-[:BELONGS_TO_PROTEIN]->(p:Protein) RETURN p.name AS protein_name",
    "query_type": "Single-hop Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "protein_name": "ETFB"
      },
      {
        "protein_name": "ETFB"
      }
    ]
  },
  {
    "question": "What's the name of the chromosome where the transcript for gene CHGA is located?",
    "cypher": "MATCH (g:Gene {id: 'CHGA'})-[:TRANSCRIBED_INTO]->(t:Transcript)-[:LOCATED_IN]->(c:Chromosome) RETURN c.name AS chromosome_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "chromosome_name": "14"
      },
      {
        "chromosome_name": "14"
      },
      {
        "chromosome_name": "14"
      },
      {
        "chromosome_name": "14"
      },
      {
        "chromosome_name": "14"
      },
      {
        "chromosome_name": "14"
      },
      {
        "chromosome_name": "14"
      },
      {
        "chromosome_name": "14"
      },
      {
        "chromosome_name": "14"
      },
      {
        "chromosome_name": "14"
      }
    ]
  },
  {
    "question": "Find the name of the protein associated with the variant 'chr19:g.51354221C>A'.",
    "cypher": "MATCH (:Known_variant {id: 'chr19:g.51354221C>A'})-[:VARIANT_FOUND_IN_GENE]->(:Gene)-[:TRANSLATED_INTO]->(p:Protein) RETURN p.name AS protein_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "protein_name": "ETFB"
      },
      {
        "protein_name": "ETFB"
      },
      {
        "protein_name": "ETFB"
      },
      {
        "protein_name": "ETFB"
      }
    ]
  },
  {
    "question": "What is the modification name for a modified site on protein P38117-2?",
    "cypher": "MATCH (:Protein {id: 'P38117-2'})-[:HAS_MODIFIED_SITE]->(:Modified_protein)-[:HAS_MODIFICATION]->(m:Modification) RETURN m.name AS modification_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "modification_name": "L-methionine sulfone"
      },
      {
        "modification_name": "L-methionine sulfone"
      }
    ]
  },
  {
    "question": "How many publications are there for the disease studied in project P0000006?",
    "cypher": "MATCH (:Project {id: 'P0000006'})-[:STUDIES_DISEASE]->(d:Disease)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) RETURN count(pub) AS publication_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "publication_count": 593
      }
    ],
    "answer": "There are 593 publications for the disease studied in project P0000006."
  },
  {
    "question": "Find the tissue name studied in project P0000006, which is run by Alberto Santos.",
    "cypher": "MATCH (:User {name: 'Alberto Santos'})-[:IS_RESPONSIBLE]->(p:Project {id: 'P0000006'})-[:STUDIES_TISSUE]->(t:Tissue) RETURN t.name AS tissue_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "tissue_name": "OVCA-5 cell"
      }
    ],
    "answer": "The tissue name studied in project P0000006 run by Alberto Santos is OVCA-5 cell."
  },
  {
    "question": "Count the number of diseases associated with the protein product of the CHGA gene.",
    "cypher": "MATCH (:Gene {id:'CHGA'})-[:TRANSLATED_INTO]->(p:Protein)-[:ASSOCIATED_WITH]->(d:Disease) RETURN count(d) AS disease_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "disease_count": 743
      }
    ],
    "answer": "The protein product of the CHGA gene is associated with 743 diseases."
  },
  {
    "question": "How many publications mention the protein that the gene PLP3 translates into?",
    "cypher": "MATCH (:Gene {id:'PLPP3'})-[:TRANSLATED_INTO]->(p:Protein)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) RETURN count(pub) AS publication_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "publication_count": 52
      }
    ],
    "answer": "The protein translated by the gene PLP3 is mentioned in 52 publications."
  },
  {
    "question": "How many transcripts come from the gene linked to the variant chr4:g.7838577C>T?",
    "cypher": "MATCH (:Known_variant {id: 'chr4:g.7838577C>T'})-[:VARIANT_FOUND_IN_GENE]->(g:Gene)-[:TRANSCRIBED_INTO]->(t:Transcript) RETURN count(t) AS transcript_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "transcript_count": 16
      }
    ],
    "answer": "16 transcripts come from the gene linked to the variant chr4:g.7838577C>T."
  },
  {
    "question": "Who participates in project P0000005, which is managed by Alberto Santoz?",
    "cypher": "MATCH (:User {name: 'Alberto Santos'})-[:IS_RESPONSIBLE]->(p:Project {id: 'P0000005'})<-[:PARTICIPATES_IN]-(u2:User) RETURN u2.name AS participant_name",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "participant_name": "Ana Rita Cola\u00e7o"
      }
    ],
    "answer": "Based on the query result, Ana Rita Cola\u00e7o participates in project P0000005, which is managed by Alberto Santos."
  },
  {
    "question": "Count the unique biological processes for the interaction partners of protein P10645.",
    "cypher": "MATCH (:Protein {id: 'P10645'})-[:CURATED_INTERACTS_WITH]->(p2:Protein)-[:ASSOCIATED_WITH]->(bp:Biological_process) RETURN count(DISTINCT bp) AS unique_biological_process_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "unique_biological_process_count": 45
      }
    ],
    "answer": "The protein P10645 has interaction partners associated with 45 unique biological processes."
  },
  {
    "question": "What is the protein accession for the gene product of the variant chr16:g.85769C>B?",
    "cypher": "MATCH (:Known_variant {id: 'chr16:g.85769C>A'})-[:VARIANT_FOUND_IN_GENE]->(:Gene)-[:TRANSLATED_INTO]->(p:Protein) RETURN p.accession AS protein_accession",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "protein_accession": "3MG_HUMAN"
      },
      {
        "protein_accession": "3MG_HUMAN"
      },
      {
        "protein_accession": "3MG_HUMAN"
      },
      {
        "protein_accession": "3MG_HUMAN"
      },
      {
        "protein_accession": "3MG_HUMAN"
      },
      {
        "protein_accession": "A2IDA3_HUMAN"
      },
      {
        "protein_accession": "Q1W6H1_HUMAN"
      }
    ]
  },
  {
    "question": "What's the average association score for proteins linked to ovarian serous carcinoma?",
    "cypher": "MATCH (:Disease {name: 'ovarian serous carcinoma'})<-[r:ASSOCIATED_WITH]-(:Protein)-[:ASSOCIATED_WITH]->(:Biological_process) WHERE r.score IS NOT NULL RETURN avg(r.score) AS average_association_score",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_association_score": 0.9458584405753224
      }
    ],
    "answer": "The average association score for proteins linked to ovarian serous carcinoma is approximately 0.95, indicating a strong association between the proteins and the disease."
  },
  {
    "question": "How many complexes are associated with proteins that are QC markers in OVCA-S cell tissue?",
    "cypher": "MATCH (:Tissue {name: 'OVCA-5 cell'})<-[:IS_QCMARKER_IN_TISSUE]-(p:Protein)-[:IS_SUBUNIT_OF]->(c:Complex) RETURN count(c) AS complex_count",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "complex_count": 0
      }
    ],
    "answer": "There are 0 complexes associated with proteins that are QC markers in OVCA-S cell tissue.\n\nNote: I noticed a small discrepancy between the question (OVCA-S) and the query (OVCA-5), but I'll provide the answer based on the query result."
  },
  {
    "question": "What is the source of the protein structure for the protein translated from the NUDT1 gene?",
    "cypher": "MATCH (:Gene {id: 'NUDT1'})-[:TRANSLATED_INTO]->(p:Protein)-[:HAS_STRUCTURE]->(ps:Protein_structure) RETURN ps.source AS structure_source",
    "query_type": "Two-hop Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      },
      {
        "structure_source": "Uniprot"
      }
    ]
  },
  {
    "question": "Find the maximum interaction score for any protein that P10645 interacts with.",
    "cypher": "MATCH (:Protein {id: 'P10645'})-[r:COMPILED_INTERACTS_WITH]->(:Protein) WHERE r.score IS NOT NULL RETURN max(r.score) AS max_interaction_score",
    "query_type": "Two-hop Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_interaction_score": 0.979
      }
    ],
    "answer": "The maximum interaction score for proteins that P10645 interacts with is 0.979."
  },
  {
    "question": "How many distinct diseases are associated with proteins that are subunits of the 'Neurotrophin-3-p75 complex'?",
    "cypher": "MATCH (c:Complex {name: 'Neurotrophin-3-p75 complex'})<-[:IS_SUBUNIT_OF]-(p:Protein)-[:ASSOCIATED_WITH]->(d:Disease) RETURN count(DISTINCT d) AS num_diseases",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_diseases": 610
      }
    ],
    "answer": "Based on the query result, there are 610 distinct diseases associated with proteins that are subunits of the 'Neurotrophin-3-p75 complex'."
  },
  {
    "question": "What is the name of the gene where the known variant 'chr12:g.5494795G>A' is found, which translates into a protein that is part of the 'Neurotrophin-3-p75 complex'?",
    "cypher": "MATCH (v:Known_variant {id: 'chr12:g.5494795G>A'})-[:VARIANT_FOUND_IN_GENE]->(g:Gene)-[:TRANSLATED_INTO]->(:Protein)-[:IS_SUBUNIT_OF]->(:Complex {name: 'Neurotrophin-3-p75 complex'}) RETURN g.name AS gene_name",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "gene_name": "neurotrophin 3"
      }
    ],
    "answer": "The gene name is neurotrophin 3."
  },
  {
    "question": "Find the highest association score between the protein CD34 and any diseases it is linked with, where the disease is mentioned in a publication from the year 2013.",
    "cypher": "MATCH (:Protein {name: 'CD34'})-[r:ASSOCIATED_WITH]->(d:Disease)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication {year: 2013}) WHERE r.score IS NOT NULL RETURN max(r.score) AS highest_score",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "highest_score": 4.454
      }
    ],
    "answer": "The highest association score between the protein CD34 and a disease mentioned in a 2013 publication is 4.454."
  },
  {
    "question": "How many steps connect the gene NTF3 to the biological process 'generation of neurons'?",
    "cypher": "MATCH path = shortestPath((:Gene {name: 'NTF3'})-[:TRANSLATED_INTO]->(:Protein)-[*]-(:Biological_process {name: 'generation of neurons'})) RETURN length(path) AS connection_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Count the number of metabolites that are found in the same pathways as 'Hydrogen Ion' and are also associated with the protein MTHFS.",
    "cypher": "MATCH (:Metabolite {name: 'Hydrogen Ion'})-[:ANNOTATED_IN_PATHWAY]->(path:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(m:Metabolite)-[:ASSOCIATED_WITH]->(:Protein {name: 'MTHFS'}) RETURN count(DISTINCT m) AS total_metabolites",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_metabolites": 9
      }
    ],
    "answer": "Based on the query result, there are 9 distinct metabolites that are found in the same pathways as 'Hydrogen Ion' and are also associated with the protein MTHFS."
  },
  {
    "question": "What is the description of the parent disease of 'ovarian angiosarcoma', which is associated with the protein CD34?",
    "cypher": "MATCH (:Protein {name: 'CD34'})-[:ASSOCIATED_WITH]->(:Disease {name: 'ovarian angiosarcoma'})-[:HAS_PARENT]->(parent:Disease) RETURN parent.description AS parent_disease_description",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "parent_disease_description": "A cell type cancer that has material basis in abnormally proliferating cells derives from embryonic mesoderm. [url:http\\://cancergenome.nih.gov/cancersselected/Sarcoma, url:http\\://en.wikipedia.org/wiki/Sarcoma, url:http\\://www.cancer.gov/dictionary?CdrID=45562]"
      },
      {
        "parent_disease_description": "A female reproductive organ cancer that is located_in the ovary. [url:http\\://www.cancer.gov/dictionary?CdrID=445074]"
      },
      {
        "parent_disease_description": "A vascular cancer that derives_from the cells that line the walls of blood vessels or lymphatic vessels. [url:http\\://emedicine.medscape.com/article/276512-overview, url:http\\://en.wikipedia.org/wiki/Hemangiosarcoma, url:https\\://en.wikipedia.org/wiki/Angiosarcoma, url:https\\://ncit.nci.nih.gov/ncitbrowser/ConceptReport.jsp?dictionary=NCI_Thesaurus&ns=ncit&code=C3088, url:https\\://www.ncbi.nlm.nih.gov/pubmed/23327728]"
      }
    ]
  },
  {
    "question": "What is the most recent publication year for a GWAS study that studies the trait 'gout'?",
    "cypher": "MATCH (g:GWAS_study)-[:STUDIES_TRAIT]->(:Experimental_factor {name: 'gout'})-[:PUBLISHED_IN]->(p:Publication) WHERE p.year IS NOT NULL RETURN max(p.year) AS latest_publication_year",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many proteins are implicated in the disease 'gout' and are also found in pathways involving the metabolite 'Glycerol 3-phosphate'?",
    "cypher": "MATCH (:Disease {name: 'gout'})<-[:ASSOCIATED_WITH]-(p:Protein)<-[:ASSOCIATED_WITH]-(:Metabolite)-[:ANNOTATED_IN_PATHWAY]->(:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(:Metabolite {name: 'Glycerol 3-phosphate'}) RETURN count(DISTINCT p) AS protein_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What's the total number of unique tryptic peptides that belong to proteins encoded by the gene ETFB?",
    "cypher": "MATCH (:Gene {name: 'ETFB'})-[:TRANSLATED_INTO]->(:Protein)<-[:BELONGS_TO_PROTEIN]-(pep:Peptide {type: 'tryptic peptide'}) RETURN count(DISTINCT pep) AS total_peptides",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_peptides": 0
      }
    ],
    "answer": "Based on the query result, there are 0 unique tryptic peptides that belong to proteins encoded by the gene ETFB."
  },
  {
    "question": "What is the name of the chromosome where the transcript for the gene KANK3 is located?",
    "cypher": "MATCH (:Gene {name: 'KANK3'})-[:TRANSCRIBED_INTO]->(t:Transcript)-[:LOCATED_IN]->(c:Chromosome) RETURN c.name AS chromosome_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the minimum association score for any protein that interacts with SPIRE1 and is associated with a biological process?",
    "cypher": "MATCH (:Protein {name: 'SPIRE1'})-[:CURATED_INTERACTS_WITH|:COMPILED_INTERACTS_WITH]->(p2:Protein)-[r:ASSOCIATED_WITH]->(bp:Biological_process) WHERE r.score IS NOT NULL RETURN min(r.score) AS lowest_interaction_score",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_interaction_score": 5.0
      }
    ],
    "answer": "The minimum association score for a protein that interacts with SPIRE1 and is associated with a biological process is 5.0."
  },
  {
    "question": "How many pathways connect the gene CRLS1 to the metabolite 'Glycerol 3-phosphate'?",
    "cypher": "MATCH (:Gene {name: 'CRLS1'})-[:TRANSLATED_INTO]->(:Protein)-[:ANNOTATED_IN_PATHWAY]->(path:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(:Metabolite {name: 'Glycerol 3-phosphate'}) RETURN count(DISTINCT path) AS bridge_pathways",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "bridge_pathways": 0
      }
    ],
    "answer": "Based on the query result, there are 0 pathways that connect the gene CRLS1 to the metabolite 'Glycerol 3-phosphate'."
  },
  {
    "question": "Count how many genes are associated with the 'goutt' disease through a protein intermediary.",
    "cypher": "MATCH (g:Gene)-[:TRANSLATED_INTO]->(:Protein)-[:ASSOCIATED_WITH]->(:Disease {name: 'gout'}) RETURN count(DISTINCT g) AS gene_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "gene_count": 291
      }
    ],
    "answer": "Based on the query result, there are 291 distinct genes associated with the gout disease through a protein intermediary."
  },
  {
    "question": "Tell me the effect of the known variant 'chr19:g.51354221C>A', which is found in a gene that codes for the protein ETFB.",
    "cypher": "MATCH (v:Known_variant {id: 'chr19:g.51354221C>A'})-[:VARIANT_FOUND_IN_GENE]->(:Gene)-[:TRANSLATED_INTO]->(:Protein {name: 'ETFB'}) RETURN v.effect AS variant_effect",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      }
    ]
  },
  {
    "question": "Of all diseases associated with proteins translated from the NTF3 gene, which one is mentioned in the earliest publication?",
    "cypher": "MATCH (:Gene {name: 'NTF3'})-[:TRANSLATED_INTO]->(:Protein)-[:ASSOCIATED_WITH]->(d:Disease)-[:MENTIONED_IN_PUBLICATION]->(p:Publication) WHERE p.year IS NOT NULL RETURN d.name AS disease_name ORDER BY p.year ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many distinct proteins are mentioned in publications that also mention the functional region 'Kinase non-catalytic C-lobe domain'?",
    "cypher": "MATCH (:Functional_region {name: 'Kinase non-catalytic C-lobe domain'})-[:MENTIONED_IN_PUBLICATION]->(pub:Publication)<-[:MENTIONED_IN_PUBLICATION]-(p:Protein) RETURN count(DISTINCT p) AS connecting_proteins",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connecting_proteins": 2
      }
    ],
    "answer": "2 distinct proteins are mentioned in publications that also mention the functional region 'Kinase non-catalytic C-lobe domain'."
  },
  {
    "question": "What's the total count of biological processes linked to proteins that are part of complexes associated with 'generation of neurons'?",
    "cypher": "MATCH (:Biological_process {name: 'generation of neurons'})<-[:ASSOCIATED_WITH]-(:Complex)<-[:IS_SUBUNIT_OF]-(:Protein)-[:ASSOCIATED_WITH]->(bp:Biological_process) RETURN count(DISTINCT bp) AS total_processes",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_processes": 409
      }
    ],
    "answer": "Based on the query result, there are 409 distinct biological processes linked to proteins that are part of complexes associated with 'generation of neurons'."
  },
  {
    "question": "What's the organism for the complex that the NTF3_HUMAN protein is a subunit of?",
    "cypher": "MATCH (:Protein {accession: 'NTF3_HUMAN'})-[:IS_SUBUNIT_OF]->(c:Complex) RETURN c.organism AS complex_organism",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "complex_organism": "9606"
      }
    ],
    "answer": "The organism for the complex that the NTF3_HUMAN protein is a subunit of is 9606 (which corresponds to Homo sapiens, or human)."
  },
  {
    "question": "Find the name of the metabolite with the highest average molecular weight that is found in pathways associated with the protein GPD2.",
    "cypher": "MATCH (:Protein {name: 'GPD2'})-[:ANNOTATED_IN_PATHWAY]->(:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(m:Metabolite) WHERE m.average_molecular_weight IS NOT NULL RETURN m.name AS metabolite_name ORDER BY toFloat(m.average_molecular_weight) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "metabolite_name": "CL(16:0/16:0/16:0/16:0)"
      }
    ],
    "answer": "The metabolite with the highest average molecular weight found in pathways associated with the protein GPD2 is CL(16:0/16:0/16:0/16:0)."
  },
  {
    "question": "What is the shortest path length between the disease 'angiosarcoma' and the gene 'ETFB'?",
    "cypher": "MATCH path = shortestPath((:Disease {name: 'angiosarcoma'})-[*]-(:Gene {name: 'ETFB'})) RETURN length(path) AS connection_distance",
    "query_type": "Existence Verification",
    "complexity": "N-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many known variants are found in the gene ETFB1, which is implicated in diseases mentioned in publications from 2013?",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_GENE]->(:Gene {name: 'ETFB'})-[:TRANSLATED_INTO]->(:Protein)-[:ASSOCIATED_WITH]->(:Disease)-[:MENTIONED_IN_PUBLICATION]->(:Publication {year: 2013}) RETURN count(DISTINCT v) AS total_variants",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_variants": 0
      }
    ],
    "answer": "Based on the query result, there are 0 known variants found in the gene ETFB1 that are associated with diseases mentioned in publications from 2013."
  },
  {
    "question": "What is the name of the protein that peptide 'TEAVGGEGPR' belongs to, which is associated with the disease 'ovarian angiosarcoma'?",
    "cypher": "MATCH (:Peptide {id: 'TEAVGGEGPR'})-[:BELONGS_TO_PROTEIN]->(p:Protein)-[:ASSOCIATED_WITH]->(:Disease {name: 'ovarian angiosarcoma'}) RETURN p.name AS protein_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Which tissue has the lowest scoring association with the protein CD34, which is coded for by a gene on chromosome 19?",
    "cypher": "MATCH (:Chromosome {name: '19'})<-[:LOCATED_IN]-(:Transcript)<-[:TRANSCRIBED_INTO]-(:Gene)-[:TRANSLATED_INTO]->(:Protein {name: 'CD34'})-[r:ASSOCIATED_WITH]->(t:Tissue) WHERE r.score IS NOT NULL RETURN t.name AS tissue_name ORDER BY r.score ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many publications mention both the protein SPIRE1 and the disease 'angiosarcoma'?",
    "cypher": "MATCH (:Protein {name: 'SPIRE1'})-[:MENTIONED_IN_PUBLICATION]->(pub:Publication)<-[:MENTIONED_IN_PUBLICATION]-(:Disease {name: 'angiosarcoma'}) RETURN count(DISTINCT pub) AS shared_publications",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "shared_publications": 0
      }
    ],
    "answer": "Based on the query result, there are 0 publications that mention both SPIRE1 and angiosarcoma."
  },
  {
    "question": "Count the number of modifications for modified proteins that are substrates of proteins associated with the disease 'gout'.",
    "cypher": "MATCH (d:Disease {name: 'gout'})<-[:ASSOCIATED_WITH]-(p:Protein)<-[:IS_SUBSTRATE_OF]-(mp:Modified_protein)-[:HAS_MODIFICATION]->(m:Modification) RETURN count(DISTINCT m) AS total_modifications",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_modifications": 2
      }
    ],
    "answer": "There are 2 distinct modifications for modified proteins that are substrates of proteins associated with gout."
  },
  {
    "question": "What's the journal name for a publication about a GWAS study on 'gout'?",
    "cypher": "MATCH (:GWAS_study)-[:STUDIES_TRAIT]->(:Experimental_factor {name: 'gout'})-[:PUBLISHED_IN]->(p:Publication) RETURN p.journal AS journal_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What is the name of the protein with the highest number of associated publications, which is translated from a gene where the variant 'chr12:g.5494792C>T' is found?",
    "cypher": "MATCH (:Known_variant {id: 'chr12:g.5494792C>T'})-[:VARIANT_FOUND_IN_GENE]->(:Gene)-[:TRANSLATED_INTO]->(p:Protein)-[r:MENTIONED_IN_PUBLICATION]->(:Publication) RETURN p.name AS protein_name ORDER BY count(r) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Are there any known variants in the gene NTF3 that are also linked to chromosome 1? If so, how many?",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_GENE]->(:Gene {name: 'NTF3'}) MATCH (v)-[:VARIANT_FOUND_IN_CHROMOSOME]->(:Chromosome {id: '1'}) RETURN count(v) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_count": 0
      }
    ],
    "answer": "Based on the query result, there are no known variants in the NTF3 gene that are linked to chromosome 1."
  },
  {
    "question": "How many metabolites are in pathways that are also associated with proteins encoded by the gene CRLS1?",
    "cypher": "MATCH (:Gene {name: 'CRLS1'})-[:TRANSLATED_INTO]->(:Protein)-[:ANNOTATED_IN_PATHWAY]->(path:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(m:Metabolite) RETURN count(DISTINCT m) AS metabolite_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "metabolite_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 metabolites in pathways associated with proteins encoded by the gene CRLS1."
  },
  {
    "question": "Find the description of a biological process associated with proteins that interact with the protein ETFB.",
    "cypher": "MATCH (:Protein {name: 'ETFB'})-[:CURATED_INTERACTS_WITH|:COMPILED_INTERACTS_WITH]->(:Protein)-[:ASSOCIATED_WITH]->(bp:Biological_process) RETURN bp.description AS process_description LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "process_description": "Renal process involved in the maintenance of an internal steady state of water in the body. [GOC:mtg_cardio]"
      }
    ],
    "answer": "Based on the query result, a biological process associated with proteins that interact with ETFB is related to renal processes and maintaining the body's water homeostasis."
  },
  {
    "question": "What is the name of the food with the highest average content of a metabolite associated with the protein GPD2?",
    "cypher": "MATCH (:Protein {name: 'GPD2'})<-[:ASSOCIATED_WITH]-(m:Metabolite)<-[r:HAS_CONTENT]-(f:Food) WHERE r.average IS NOT NULL RETURN f.name AS food_name ORDER BY toFloat(r.average) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the number of hops in the shortest path between the protein ATCAY and the disease 'angiosaracoma'?",
    "cypher": "MATCH path = shortestPath((:Protein {name: 'ATCAY'})-[*]-(:Disease {name: 'angiosarcoma'})) RETURN length(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "N-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 4
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      }
    ]
  },
  {
    "question": "Sum the number of publications for all diseases that have a parent relationship with 'angiosarcoma' and are associated with protein CD34.",
    "cypher": "MATCH (:Protein {name: 'CD34'})-[:ASSOCIATED_WITH]->(d:Disease)-[:HAS_PARENT]->(:Disease {name: 'angiosarcoma'})-[r:MENTIONED_IN_PUBLICATION]->(:Publication) WHERE r.number_publications IS NOT NULL RETURN sum(toInteger(r.number_publications)) AS total_publications",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_publications": 0
      }
    ],
    "answer": "Based on the query result, the sum of publications for diseases that have a parent relationship with 'angiosarcoma' and are associated with protein CD34 is 0."
  },
  {
    "question": "What is the accession ID of the protein that is a substrate of ETFB and is involved in the biological process 'generation of neurons'?",
    "cypher": "MATCH (:Protein {name: 'ETFB'})-[:IS_SUBSTRATE_OF]->(p:Protein)-[:ASSOCIATED_WITH]->(:Biological_process {name: 'generation of neurons'}) RETURN p.accession AS protein_accession",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Among proteins associated with 'gout', which one has the most ancient publication mentioning it?",
    "cypher": "MATCH (:Disease {name: 'gout'})<-[:ASSOCIATED_WITH]-(p:Protein)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.year IS NOT NULL RETURN p.name AS oldest_protein_by_publication ORDER BY pub.year ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "oldest_protein_by_publication": "SPINK5"
      }
    ],
    "answer": "Based on the query result, the protein SPINK5 is associated with gout and has the most ancient publication mentioning it."
  },
  {
    "question": "Verify the connection between the gene 'KANK3' and chromosome '1' by counting the number of transcripts on chromosome 1 that are transcribed from it.",
    "cypher": "MATCH (:Gene {name: 'KANK3'})-[:TRANSCRIBED_INTO]->(t:Transcript)-[:LOCATED_IN]->(:Chromosome {id: '1'}) RETURN count(t) AS transcript_connection_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "transcript_connection_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 transcripts of the KANK3 gene located on chromosome 1. This means there is no verified connection between the gene KANK3 and chromosome 1 in the current database."
  },
  {
    "question": "How many different tissues are proteins from the ETFB gene associated with?",
    "cypher": "MATCH (:Gene {name: 'ETFB'})-[:TRANSLATED_INTO]->(:Protein)-[:ASSOCIATED_WITH]->(t:Tissue) RETURN count(DISTINCT t) AS tissue_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "tissue_count": 0
      }
    ],
    "answer": "Based on the query result, the ETFB gene is not associated with any tissues in the database, so the answer is 0 different tissues."
  },
  {
    "question": "What is the chemical formula of the metabolite with the name 'Hydrogen Ion' that is annotated in a pathway that protein MTHFS is also annotated in?",
    "cypher": "MATCH (m:Metabolite {name: 'Hydrogen Ion'})-[:ANNOTATED_IN_PATHWAY]->(p:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(:Protein {name: 'MTHFS'}) RETURN m.chemical_formula AS metabolite_formula",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "metabolite_formula": "H"
      },
      {
        "metabolite_formula": "H"
      },
      {
        "metabolite_formula": "H"
      },
      {
        "metabolite_formula": "H"
      },
      {
        "metabolite_formula": "H"
      },
      {
        "metabolite_formula": "H"
      }
    ]
  },
  {
    "question": "Find the name of the protein with the lowest association score to the disease 'goutt', which is also a subunit of a complex.",
    "cypher": "MATCH (p:Protein)-[r:ASSOCIATED_WITH]->(:Disease {name: 'gout'}) MATCH (p)-[:IS_SUBUNIT_OF]->(:Complex) WHERE r.score IS NOT NULL RETURN p.name AS protein_name ORDER BY r.score ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "protein_name": "TLR4"
      }
    ],
    "answer": "The protein with the lowest association score to gout that is also a subunit of a complex is TLR4."
  },
  {
    "question": "How many biological processes are shared between proteins encoded by the gene 'NTF3' and proteins encoded by the gene 'ETFB'?",
    "cypher": "MATCH (:Gene {name: 'NTF3'})-[:TRANSLATED_INTO]->(:Protein)-[:ASSOCIATED_WITH]->(bp:Biological_process)<-[:ASSOCIATED_WITH]-(:Protein)<-[:TRANSLATED_INTO]-(:Gene {name: 'ETFB'}) RETURN count(DISTINCT bp) AS shared_processes",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "shared_processes": 0
      }
    ],
    "answer": "Based on the query result, there are 0 shared biological processes between proteins encoded by the genes 'NTF3' and 'ETFB'."
  },
  {
    "question": "Average association score for proteins linked to 'angiosarcoma' that are also mentioned in publications from the journal 'Case Rep Oncol Med'.",
    "cypher": "MATCH (p:Protein)-[r:ASSOCIATED_WITH]->(:Disease {name: 'angiosarcoma'}) MATCH (p)-[:MENTIONED_IN_PUBLICATION]->(:Publication {journal: 'Case Rep Oncol Med'}) WHERE r.score IS NOT NULL RETURN avg(r.score) AS average_score",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_score": 0.8469328358208956
      }
    ],
    "answer": "The average association score for proteins linked to 'angiosarcoma' that are also mentioned in publications from the journal 'Case Rep Oncol Med' is approximately 0.85."
  },
  {
    "question": "Get the type for a modification found on a modified protein that is a substrate of a protein encoded by the gene 'ETFB'.",
    "cypher": "MATCH (:Gene {name: 'ETFB'})-[:TRANSLATED_INTO]->(p:Protein)<-[:IS_SUBSTRATE_OF]-(:Modified_protein)-[:HAS_MODIFICATION]->(m:Modification) RETURN m.type AS modification_type LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the name of the disease with the highest association score to any protein that interacts with the protein translated from gene NTF3?",
    "cypher": "MATCH (:Gene {name: 'NTF3'})-[:TRANSLATED_INTO]->(p1:Protein)-[:CURATED_INTERACTS_WITH|:COMPILED_INTERACTS_WITH]->(p2:Protein)-[r:ASSOCIATED_WITH]->(d:Disease) WHERE r.score IS NOT NULL RETURN d.name AS top_disease_by_score ORDER BY r.score DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many paths are there from the gene 'KANK3' to chromosome '19' via a transcript?",
    "cypher": "MATCH path = (:Gene {name: 'KANK3'})-[:TRANSCRIBED_INTO]->(:Transcript)-[:LOCATED_IN]->(:Chromosome {id: '19'}) RETURN count(path) AS path_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "path_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 paths from the gene 'KANK3' to chromosome '19' via a transcript."
  },
  {
    "question": "How many pathways are associated with proteins that are subunits of complexes linked to the biological process 'generation of neurons'?",
    "cypher": "MATCH (:Biological_process {name: 'generation of neurons'})<-[:ASSOCIATED_WITH]-(:Complex)<-[:IS_SUBUNIT_OF]-(p:Protein)-[:ANNOTATED_IN_PATHWAY]->(path:Pathway) RETURN count(DISTINCT path) AS total_pathways",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_pathways": 100
      }
    ],
    "answer": "There are 100 distinct pathways associated with proteins that are subunits of complexes linked to the biological process of neuron generation."
  },
  {
    "question": "What is the taxid of the gene where the variant 'chr20:g.6009862G>A' is found, which is translated into a protein annotated in the pathway 'PW050317'?",
    "cypher": "MATCH (v:Known_variant {id: 'chr20:g.6009862G>A'})-[:VARIANT_FOUND_IN_GENE]->(g:Gene)-[:TRANSLATED_INTO]->(:Protein)-[:ANNOTATED_IN_PATHWAY]->(:Pathway {name: 'PW050317'}) RETURN g.taxid AS gene_taxid",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "gene_taxid": "9606"
      }
    ],
    "answer": "The taxid of the gene where the variant 'chr20:g.6009862G>A' is found, which is translated into a protein annotated in the pathway 'PW050317', is 9606."
  },
  {
    "question": "What is the name of the cellular component with the highest association score to any protein encoded by the gene 'ETFB'?",
    "cypher": "MATCH (:Gene {name: 'ETFB'})-[:TRANSLATED_INTO]->(:Protein)-[r:ASSOCIATED_WITH]->(cc:Cellular_component) WHERE r.score IS NOT NULL RETURN cc.name AS top_component_name ORDER BY r.score DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many distinct genes encode for proteins that are associated with diseases that are parents of 'ovarian angiosarcoma'?",
    "cypher": "MATCH (g:Gene)-[:TRANSLATED_INTO]->(:Protein)-[:ASSOCIATED_WITH]->(d:Disease)-[:HAS_PARENT]->(:Disease {name: 'ovarian angiosarcoma'}) RETURN count(DISTINCT g) AS gene_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "gene_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 distinct genes that encode for proteins associated with diseases that are parents of 'ovarian angiosarcoma'."
  },
  {
    "question": "Count the number of somatic mutations found on chromosome 1 that are in genes which code for proteins associated with 'angiosarcoma'.",
    "cypher": "MATCH (sm:Somatic_mutation)-[:VARIANT_FOUND_IN_CHROMOSOME]->(:Chromosome {id: '1'}) MATCH (sm)-[:VARIANT_FOUND_IN_GENE]->(:Gene)-[:TRANSLATED_INTO]->(:Protein)-[:ASSOCIATED_WITH]->(:Disease {name: 'angiosarcoma'}) RETURN count(DISTINCT sm) AS total_mutations",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_mutations": 0
      }
    ],
    "answer": "Based on the query result, there are 0 somatic mutations found on chromosome 1 that are in genes which code for proteins associated with angiosarcoma."
  },
  {
    "question": "Find the organism of a complex that protein CD34 is a subunit of, which is also associated with the biological process 'generation of neurons'.",
    "cypher": "MATCH (:Protein {name: 'CD34'})-[:IS_SUBUNIT_OF]->(c:Complex)-[:ASSOCIATED_WITH]->(:Biological_process {name: 'generation of neurons'}) RETURN c.organism AS complex_organism",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many distinct proteins are associated with biological processes that are also linked to the protein ATCAY?",
    "cypher": "MATCH (p1:Protein {name: 'ATCAY'})-[:ASSOCIATED_WITH]->(bp:Biological_process)<-[:ASSOCIATED_WITH]-(p2:Protein) RETURN count(DISTINCT p2) AS total_proteins",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_proteins": 722
      }
    ],
    "answer": "There are 722 distinct proteins associated with biological processes that are also linked to the protein ATCAY."
  },
  {
    "question": "What is the name of the complex that the protein NTF3 is a subunit of?",
    "cypher": "MATCH (:Gene {name: 'NTF3'})-[:TRANSLATED_INTO]->(p:Protein)-[:IS_SUBUNIT_OF]->(c:Complex) RETURN c.name AS complex_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the most recent publication year for papers mentioning a protein translated from the PLPP3 gene.",
    "cypher": "MATCH (:Gene {name: 'PLPP3'})-[:TRANSLATED_INTO]->(p:Protein)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.year IS NOT NULL RETURN max(pub.year) AS latest_publication_year",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "latest_publication_year": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "What's the shortest connection path between the gene KANK3 and chromosome 19?",
    "cypher": "MATCH path = shortestPath((g:Gene {name: 'KANK3'})-[*]->(c:Chromosome {name: '19'})) RETURN length(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Count the number of genes associated with known variants that affect the protein PLPP3.",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_GENE]->(g:Gene)-[:TRANSLATED_INTO]->(p:Protein {name: 'PLPP3'}) RETURN count(DISTINCT g) AS num_genes",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_genes": 1
      }
    ],
    "answer": "Based on the query result, there is 1 gene associated with known variants that affect the PLPP3 protein."
  },
  {
    "question": "What is the description of the disease studied by the project named 'Phosphoproteomics CT45 and Carboplatin response'?",
    "cypher": "MATCH (proj:Project {name: 'Phosphoproteomics CT45 and Carboplatin response'})-[:STUDIES_DISEASE]->(d:Disease) RETURN d.description AS disease_description",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "disease_description": "An ovarian carcinoma that has_material_basis_in the lining of the ovary and produces a serum-like fluid. [url:http\\://en.wikipedia.org/wiki/Serous_carcinoma]"
      }
    ],
    "answer": "The project studies serous carcinoma, which is an ovarian carcinoma that originates in the lining of the ovary and produces a serum-like fluid."
  },
  {
    "question": "What is the name of the protein with the highest association score to the biological process 'generation of neurons'?",
    "cypher": "MATCH (p:Protein)-[r:ASSOCIATED_WITH]->(bp:Biological_process {name: 'generation of neurons'}) WHERE r.score IS NOT NULL RETURN p.name AS top_protein_name ORDER BY r.score DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_protein_name": "TGFB2"
      }
    ],
    "answer": "The protein with the highest association score to the biological process 'generation of neurons' is TGFB2."
  },
  {
    "question": "How many distinct users participate in projects for which Alberto Santoz is responsible?",
    "cypher": "MATCH (:User {name: 'Alberto Santos'})-[:IS_RESPONSIBLE]->(proj:Project)<-[:PARTICIPATES_IN]-(u:User) RETURN count(DISTINCT u) AS total_participants",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_participants": 1
      }
    ],
    "answer": "1 distinct user participates in projects for which Alberto Santos is responsible."
  },
  {
    "question": "What is the total count of publications mentioning proteins that are part of the 'Neurotrophin-3-p75 complex'?",
    "cypher": "MATCH (c:Complex {name: 'Neurotrophin-3-p75 complex'})<-[:IS_SUBUNIT_OF]-(p:Protein)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) RETURN count(DISTINCT pub) AS total_publications",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_publications": 1719
      }
    ],
    "answer": "The Neurotrophin-3-p75 complex is mentioned in 1,719 distinct publications."
  },
  {
    "question": "Give me the name of the tissue studied in the project with the acronym P-CT45.",
    "cypher": "MATCH (p:Project {acronym: 'P-CT45'})-[:STUDIES_TISSUE]->(t:Tissue) RETURN t.name AS tissue_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "tissue_name": "OVCA-5 cell"
      }
    ],
    "answer": "The tissue studied in the project with the acronym P-CT45 is OVCA-5 cell."
  },
  {
    "question": "Which metabolite has the highest average molecular weight in the pathway named 'PW034313'?",
    "cypher": "MATCH (m:Metabolite)-[:ANNOTATED_IN_PATHWAY]->(p:Pathway {name: 'PW034313'}) WHERE m.average_molecular_weight IS NOT NULL RETURN m.name AS metabolite_name ORDER BY toFloat(m.average_molecular_weight) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "metabolite_name": "Isodocosanoyl-CoA"
      }
    ],
    "answer": "Based on the query result, the metabolite with the highest average molecular weight in pathway 'PW034313' is Isodocosanoyl-CoA."
  },
  {
    "question": "How many different pathways connect the metabolite 'DG(19:0/20:0/0:0)' to any protein translated from the MTHFS gene?",
    "cypher": "MATCH (:Metabolite {name: 'DG(19:0/20:0/0:0)'})-[:ANNOTATED_IN_PATHWAY]->(path:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(:Protein {name: 'MTHFS'}) RETURN COUNT(DISTINCT path) AS bridge_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "bridge_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 different pathways connecting the metabolite 'DG(19:0/20:0/0:0)' to proteins translated from the MTHFS gene."
  },
  {
    "question": "What's the total count of known variants found in the gene AFAP1 that are transcribed into a transcript located on chromosome 4?",
    "cypher": "MATCH (v:Known_variant)-[:VARIANT_FOUND_IN_GENE]->(g:Gene {name: 'AFAP1'})-[:TRANSCRIBED_INTO]->(t:Transcript)-[:LOCATED_IN]->(c:Chromosome {name: '4'}) RETURN COUNT(DISTINCT v) AS variant_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "variant_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 known variants in the gene AFAP1 that are transcribed into a transcript located on chromosome 4."
  },
  {
    "question": "Find the name of the gene where the variant 'chr12:g.5494795G>A' is found, which translates to a protein that is a subunit of a complex.",
    "cypher": "MATCH (kv:Known_variant {id: 'chr12:g.5494795G>A'})-[:VARIANT_FOUND_IN_GENE]->(g:Gene)-[:TRANSLATED_INTO]->(p:Protein)-[:IS_SUBUNIT_OF]->(c:Complex) RETURN g.name AS gene_name",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "gene_name": "neurotrophin 3"
      }
    ],
    "answer": "The gene where the variant 'chr12:g.5494795G>A' is found is neurotrophin 3."
  },
  {
    "question": "What is the name of the disease with the highest number of associated clinically relevant variants?",
    "cypher": "MATCH (v:Clinically_relevant_variant)-[:ASSOCIATED_WITH]->(d:Disease) RETURN d.name AS top_disease_name ORDER BY count(v) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many proteins are mentioned in publications from the year 1999 that also mention the protein PLPP3?",
    "cypher": "MATCH (p1:Protein {name: 'PLPP3'})-[:MENTIONED_IN_PUBLICATION]->(pub:Publication {year: 1999})<-[:MENTIONED_IN_PUBLICATION]-(p2:Protein) RETURN COUNT(DISTINCT p2) AS total_proteins",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_proteins": 2
      }
    ],
    "answer": "Based on the query result, 2 proteins are mentioned in publications from the year 1999 that also mention the protein PLPP3."
  },
  {
    "question": "How many biological processes are associated with proteins that are subunits of the 'E-box sequence-binding complex'?",
    "cypher": "MATCH (c:Complex {name: 'E-box sequence-binding complex'})<-[:IS_SUBUNIT_OF]-(p:Protein)-[:ASSOCIATED_WITH]->(bp:Biological_process) RETURN COUNT(DISTINCT bp) AS process_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "process_count": 39
      }
    ],
    "answer": "There are 39 distinct biological processes associated with proteins that are subunits of the 'E-box sequence-binding complex'."
  },
  {
    "question": "What's the effect of the known variant 'chr1:g.56512122C>T', which is found in a gene that gets translated into the PLPP3 protein?",
    "cypher": "MATCH (kv:Known_variant {id: 'chr1:g.56512122C>T'})-[:VARIANT_FOUND_IN_GENE]->(g:Gene)-[:TRANSLATED_INTO]->(p:Protein {name: 'PLPP3'}) RETURN kv.effect AS variant_effect",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "variant_effect": "missense variant"
      }
    ],
    "answer": "The known variant 'chr1:g.56512122C>T' is a missense variant in a gene that gets translated into the PLPP3 protein."
  },
  {
    "question": "Find the name of the publication with the oldest year that mentions a protein associated with 'mitochondrion inheritance'.",
    "cypher": "MATCH (bp:Biological_process {name: 'mitochondrion inheritance'})<-[:ASSOCIATED_WITH]-(p:Protein)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.year IS NOT NULL RETURN pub.id AS oldest_publication_id ORDER BY pub.year ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many steps does it take to get from the 'Kinase non-catalytic C-lobe domain' functional region to the SPIRE1 protein?",
    "cypher": "MATCH path = shortestPath((fr:Functional_region {name: 'Kinase non-catalytic C-lobe domain'})-[*]-(p:Protein {name: 'SPIRE1'})) RETURN length(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 2
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 1
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 3
      }
    ]
  },
  {
    "question": "Count how many proteins are associated with the sickness 'ovarian serus carcinoma' and are also studied in projects that Ana Rita Cola\u00e7o participates in.",
    "cypher": "MATCH (d:Disease {name: 'ovarian serous carcinoma'})<-[:ASSOCIATED_WITH]-(p:Protein), (u:User {name: 'Ana Rita Cola\u00e7o'})-[:PARTICIPATES_IN]->(proj:Project)-[:STUDIES_DISEASE]->(d) RETURN COUNT(DISTINCT p) AS protein_count",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "protein_count": 149
      }
    ],
    "answer": "There are 149 distinct proteins associated with ovarian serous carcinoma that are studied in projects Ana Rita Cola\u00e7o participates in."
  },
  {
    "question": "What's the journal for the paper with DOI '10.1073/pnas.1105703108' which mentions a protein that has the peptide 'TEAVGGEGPR'?",
    "cypher": "MATCH (pub:Publication {DOI: '10.1073/pnas.1105703108'})-[:MENTIONED_IN_PUBLICATION]->(prot:Protein)<-[:BELONGS_TO_PROTEIN]-(pep:Peptide {id: 'TEAVGGEGPR'}) RETURN pub.journal AS publication_journal",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "What's the lowest association score between any protein and a disease studied in project P0000005?",
    "cypher": "MATCH (proj:Project {id: 'P0000005'})-[:STUDIES_DISEASE]->(d:Disease)<-[r:ASSOCIATED_WITH]-(p:Protein) WHERE r.score IS NOT NULL RETURN min(r.score) AS lowest_score",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_score": 0.501
      }
    ],
    "answer": "The lowest association score between a protein and a disease in project P0000005 is 0.501."
  },
  {
    "question": "How many distinct chromosomes are associated with genes that translate into proteins that are subunits of the 'Neurotrophin-3-p75 complex'?",
    "cypher": "MATCH (c:Complex {name: 'Neurotrophin-3-p75 complex'})<-[:IS_SUBUNIT_OF]-(p:Protein)<-[:TRANSLATED_INTO]-(g:Gene)-[:TRANSCRIBED_INTO]->(t:Transcript)-[:LOCATED_IN]->(chr:Chromosome) RETURN COUNT(DISTINCT chr) AS chromosome_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "chromosome_count": 2
      }
    ],
    "answer": "Based on the query result, there are 2 distinct chromosomes associated with genes that translate into proteins which are subunits of the Neurotrophin-3-p75 complex."
  },
  {
    "question": "What's the total number of peptides that belong to the protein GMIP, which itself contains the peptide 'DGGGEVSSQGPEDSLLGTQSRGHFSRQPVK'?",
    "cypher": "MATCH (:Peptide {id: 'DGGGEVSSQGPEDSLLGTQSRGHFSRQPVK'})-[:BELONGS_TO_PROTEIN]->(p:Protein {name: 'GMIP'})<-[:BELONGS_TO_PROTEIN]-(pep:Peptide) RETURN count(DISTINCT pep) AS total_peptides",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_peptides": 83
      }
    ],
    "answer": "The protein GMIP contains a total of 83 distinct peptides."
  },
  {
    "question": "Find the link for the protein structure associated with the NUDT_1 protein, which is translated from a gene where the variant 'chr7:g.2249926C>A' is found.",
    "cypher": "MATCH (:Known_variant {id: 'chr7:g.2249926C>A'})-[:VARIANT_FOUND_IN_GENE]->(:Gene {name: 'NUDT1'})-[:TRANSLATED_INTO]->(p:Protein)-[:HAS_STRUCTURE]->(ps:Protein_structure) RETURN ps.link AS structure_link LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the name of the protein with the earliest publication year that is associated with 'ovarian serous carcinoma'?",
    "cypher": "MATCH (d:Disease {name: 'ovarian serous carcinoma'})<-[:ASSOCIATED_WITH]-(p:Protein)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) WHERE pub.year IS NOT NULL RETURN p.name AS protein_name ORDER BY pub.year ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "protein_name": "NOTCH1"
      }
    ],
    "answer": "NOTCH1 is the protein with the earliest publication year associated with ovarian serous carcinoma."
  },
  {
    "question": "Count how many genes are located on chromosome 1 that are linked to somatic mutations with a 'LOW' impact.",
    "cypher": "MATCH (sm:Somatic_mutation {impact: 'LOW'})-[:VARIANT_FOUND_IN_CHROMOSOME]->(c:Chromosome {name: '1'})<-[:LOCATED_IN]-(:Transcript)<-[:TRANSCRIBED_INTO]-(g:Gene) RETURN count(DISTINCT g) AS low_impact_gene_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "low_impact_gene_count": 2778
      }
    ],
    "answer": "Based on the query result, there are 2,778 distinct genes located on chromosome 1 that are linked to somatic mutations with a 'LOW' impact."
  },
  {
    "question": "Calculate the total number of tissues where proteins translated from the gene PLP3 are marked as QC markers.",
    "cypher": "MATCH (:Gene {name: 'PLPP3'})-[:TRANSLATED_INTO]->(p:Protein)-[:IS_QCMARKER_IN_TISSUE]->(t:Tissue) RETURN COUNT(DISTINCT t) AS tissue_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "tissue_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 tissues where proteins translated from the gene PLP3 are marked as QC markers."
  },
  {
    "question": "What is the name of the user who is responsible for the project studying the tissue 'COV318 cell'?",
    "cypher": "MATCH (u:User)-[:IS_RESPONSIBLE]->(p:Project)-[:STUDIES_TISSUE]->(t:Tissue {name: 'COV318 cell'}) RETURN u.name AS responsible_user",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "responsible_user": "Alberto Santos"
      }
    ],
    "answer": "Alberto Santos is the user responsible for the project studying the COV318 cell tissue."
  },
  {
    "question": "Find the description of the modification with the most parent modifications in its hierarchy.",
    "cypher": "MATCH (m1:Modification)-[:HAS_PARENT*]->(m2:Modification) RETURN m1.description AS top_modification_description ORDER BY count(m2) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many proteins are associated with the same biological process as protein Q86WG3 and are also subunits of a known complex?",
    "cypher": "MATCH (p1:Protein {id: 'Q86WG3'})-[:ASSOCIATED_WITH]->(bp:Biological_process)<-[:ASSOCIATED_WITH]-(p2:Protein)-[:IS_SUBUNIT_OF]->(c:Complex) RETURN COUNT(DISTINCT p2) AS complex_protein_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "complex_protein_count": 245
      }
    ],
    "answer": "245 proteins are associated with the same biological process as protein Q86WG3 and are also subunits of a known complex."
  },
  {
    "question": "Sum the total number of subjects from all projects studying the sickness 'ovarian serous carcinoma'.",
    "cypher": "MATCH (p:Project)-[:STUDIES_DISEASE]->(d:Disease {name: 'ovarian serous carcinoma'}) WHERE p.subjects IS NOT NULL RETURN sum(toInteger(p.subjects)) AS total_subjects",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_subjects": 62
      }
    ],
    "answer": "The total number of subjects from all projects studying ovarian serous carcinoma is 62."
  },
  {
    "question": "What is the name of the pathway in which the metabolite 'Hydrogen Ion' is annotated, which is also connected to the protein MTHFS?",
    "cypher": "MATCH (m:Metabolite {name: 'Hydrogen Ion'})-[:ANNOTATED_IN_PATHWAY]->(p:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(:Protein {name: 'MTHFS'}) RETURN p.name AS pathway_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "pathway_name": "PW000519"
      },
      {
        "pathway_name": "PW000701"
      },
      {
        "pathway_name": "PW000024"
      },
      {
        "pathway_name": "PW000268"
      },
      {
        "pathway_name": "Metabolism of folate and pterines"
      },
      {
        "pathway_name": "Metabolism of folate and pterines"
      }
    ]
  },
  {
    "question": "Find the name of the protein with the minimum association score to any disease studied by a project that Alberto Santos is responsible for.",
    "cypher": "MATCH (u:User {name: 'Alberto Santos'})-[:IS_RESPONSIBLE]->(proj:Project)-[:STUDIES_DISEASE]->(d:Disease)<-[r:ASSOCIATED_WITH]-(p:Protein) WHERE r.score IS NOT NULL RETURN p.name AS protein_name ORDER BY r.score ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "protein_name": "BSCL2"
      }
    ],
    "answer": "The protein with the minimum association score to a disease studied by Alberto Santos is BSCL2."
  },
  {
    "question": "How many modified sites does the protein PLPP3 have that are substrates of other proteins mentioned in papers from 1999?",
    "cypher": "MATCH (:Protein {name: 'PLPP3'})-[:HAS_MODIFIED_SITE]->(mp:Modified_protein)-[:IS_SUBSTRATE_OF]->(p2:Protein)-[:MENTIONED_IN_PUBLICATION]->(:Publication {year: 1999}) RETURN count(DISTINCT mp) AS modified_site_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "modified_site_count": 0
      }
    ],
    "answer": "Based on the query result, PLPP3 has 0 modified sites that are substrates of other proteins mentioned in papers from 1999."
  },
  {
    "question": "Count the number of unique modifications found on modified proteins that are substrates of the protein PLP3.",
    "cypher": "MATCH (:Protein {name: 'PLPP3'})-[:IS_SUBSTRATE_OF]-(mp:Modified_protein)-[:HAS_MODIFICATION]->(m:Modification) RETURN count(DISTINCT m) AS modification_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "modification_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 unique modifications found on modified proteins that are substrates of the protein PLP3."
  },
  {
    "question": "Tell me the organism of the complex that protein NTF3 belongs to, which is translated from a gene found on chromosome 12.",
    "cypher": "MATCH (c:Complex)<-[:IS_SUBUNIT_OF]-(:Protein {name: 'NTF3'})<-[:TRANSLATED_INTO]-(:Gene)-[:TRANSCRIBED_INTO]->(:Transcript)-[:LOCATED_IN]->(:Chromosome {name: '12'}) RETURN c.organism AS complex_organism LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "complex_organism": "9606"
      }
    ],
    "answer": "The organism of the complex that protein NTF3 belongs to is 9606, which corresponds to Homo sapiens (human)."
  },
  {
    "question": "Which chromosome has the most transcripts originating from genes related to proteins that interact with protein SPIRE1?",
    "cypher": "MATCH (:Protein {name: 'SPIRE1'})-[:CURATED_INTERACTS_WITH|COMPILED_INTERACTS_WITH]-(p2:Protein)<-[:TRANSLATED_INTO]-(g:Gene)-[:TRANSCRIBED_INTO]->(t:Transcript)-[:LOCATED_IN]->(c:Chromosome) RETURN c.name AS top_chromosome ORDER BY count(t) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many paths exist between the peptide 'SEEKPEVAPVENR' and the biological process 'mitochondrion inheritance'?",
    "cypher": "MATCH path = (:Peptide {id: 'SEEKPEVAPVENR'})-[:BELONGS_TO_PROTEIN]->(:Protein)-[:ASSOCIATED_WITH]->(:Biological_process)-[:HAS_PARENT*..2]->(:Biological_process {name: 'mitochondrion inheritance'}) RETURN count(path) AS path_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "path_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 paths between the peptide 'SEEKPEVAPVENR' and the biological process 'mitochondrion inheritance'."
  },
  {
    "question": "What's the average number of publications per association for proteins linked to the disease studied in project 'COV318 Interactomics CT45'?",
    "cypher": "MATCH (:Project {name: 'COV318 Interactomics CT45'})-[:STUDIES_DISEASE]->(d:Disease)<-[r:ASSOCIATED_WITH]-(:Protein) WHERE r.number_publications IS NOT NULL RETURN avg(toFloat(r.number_publications)) AS avg_publications",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "avg_publications": null
      }
    ],
    "answer": "UNKNOWN\n\nThe query result shows an average of None, which suggests there is no valid data to calculate the average number of publications per association for proteins linked to the disease studied in the specified project."
  },
  {
    "question": "What is the name of the researcher who participates in the project 'Phosphoproteomics CT45 and Carboplatin response' and is not Alberto Santos?",
    "cypher": "MATCH (u:User)-[:PARTICIPATES_IN]->(p:Project {name: 'Phosphoproteomics CT45 and Carboplatin response'}) WHERE u.name <> 'Alberto Santos' RETURN u.name AS participant_name",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "participant_name": "Ana Rita Cola\u00e7o"
      }
    ],
    "answer": "Ana Rita Cola\u00e7o is the researcher who participates in the project 'Phosphoproteomics CT45 and Carboplatin response' and is not Alberto Santos."
  },
  {
    "question": "Which food group contains the most metabolites that are annotated in pathways associated with the protein MTHFS?",
    "cypher": "MATCH (f:Food)-[:HAS_CONTENT]->(m:Metabolite)-[:ANNOTATED_IN_PATHWAY]->(:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(:Protein {name: 'MTHFS'}) RETURN f.group AS top_food_group ORDER BY count(m) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many other projects does the researcher Ana Rita Colaco participate in, besides those where Alberto Santoz is responsible?",
    "cypher": "MATCH (u1:User {name: 'Ana Rita Cola\u00e7o'})-[:PARTICIPATES_IN]->(p:Project) WHERE NOT EXISTS { MATCH (u2:User {name: 'Alberto Santos'})-[:IS_RESPONSIBLE]->(p) } RETURN count(p) AS other_project_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "other_project_count": 0
      }
    ],
    "answer": "Based on the query result, Ana Rita Colaco does not participate in any projects outside of those where Alberto Santos is responsible. The count of other projects is 0."
  },
  {
    "question": "Count the number of molecular functions associated with proteins that are substrates for modified proteins which have the 'protein modification' (MOD:00000).",
    "cypher": "MATCH (mf:Molecular_function)<-[:ASSOCIATED_WITH]-(p:Protein)-[:IS_SUBSTRATE_OF]->(mp:Modified_protein)-[:HAS_MODIFICATION]->(:Modification {id: 'MOD:00000'}) RETURN count(DISTINCT mf) AS total_functions",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Find the name of the gene that has a known variant with 'missense variant' effect and whose protein product is mentioned in a 1999 paper.",
    "cypher": "MATCH (kv:Known_variant {effect: 'missense variant'})-[:VARIANT_FOUND_IN_GENE]->(g:Gene)-[:TRANSLATED_INTO]->(p:Protein)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication {year: 1999}) RETURN g.name AS gene_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "gene_name": "exostosin glycosyltransferase 1"
      }
    ],
    "answer": "The gene name is exostosin glycosyltransferase 1. This gene has a known missense variant and its protein was mentioned in a publication from 1999."
  },
  {
    "question": "What is the protein with the maximum number of associated cellular components that is also a subunit of the 'E-box sequence-binding complex'?",
    "cypher": "MATCH (c:Complex {name: 'E-box sequence-binding complex'})<-[:IS_SUBUNIT_OF]-(p:Protein)-[:ASSOCIATED_WITH]->(cc:Cellular_component) RETURN p.name AS top_protein ORDER BY count(cc) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many distinct tissues are associated with proteins translated from genes located on chromosome 4?",
    "cypher": "MATCH (c:Chromosome {name: '4'})<-[:LOCATED_IN]-(:Transcript)<-[:TRANSCRIBED_INTO]-(:Gene)-[:TRANSLATED_INTO]->(p:Protein)-[:ASSOCIATED_WITH]->(t:Tissue) RETURN count(DISTINCT t) AS tissue_connections",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "tissue_connections": 3562
      }
    ],
    "answer": "3,562 distinct tissues are associated with proteins translated from genes located on chromosome 4."
  },
  {
    "question": "How many proteins are associated with the disease studied in project P0000006?",
    "cypher": "MATCH (proj:Project {id:'P0000006'})-[:STUDIES_DISEASE]->(d:Disease)<-[:ASSOCIATED_WITH]-(p:Protein) RETURN count(DISTINCT p) AS associated_protein_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "associated_protein_count": 149
      }
    ],
    "answer": "149 proteins are associated with the disease studied in project P0000006."
  },
  {
    "question": "What is the name of the protein that peptide 'GFYCNDESIK' belongs to, which is mentioned in a paper from the journal 'Mol Biol Cell'?",
    "cypher": "MATCH (pep:Peptide {id: 'GFYCNDESIK'})-[:BELONGS_TO_PROTEIN]->(prot:Protein)<-[:MENTIONED_IN_PUBLICATION]-(pub:Publication {journal: 'Mol Biol Cell'}) RETURN prot.name AS protein_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many distinct proteins are associated with biological processes that are also linked to the protein 'CHGA'?",
    "cypher": "MATCH (p1:Protein {name: 'CHGA'})-[:ASSOCIATED_WITH]->(bp:Biological_process)<-[:ASSOCIATED_WITH]-(p2:Protein) RETURN count(DISTINCT p2) AS num_proteins",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_proteins": 863
      }
    ],
    "answer": "Based on the query result, there are 863 distinct proteins that are associated with the same biological processes as the protein 'CHGA'."
  },
  {
    "question": "What is the name of the chromosome where transcripts from the gene 'AFAP1' are located?",
    "cypher": "MATCH (:Gene {name: 'AFAP1'})-[:TRANSCRIBED_INTO]->(:Transcript)-[:LOCATED_IN]->(c:Chromosome) RETURN c.name AS chromosome_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the description of the cellular component with the highest association score to the protein P10645.",
    "cypher": "MATCH (p:Protein {id: 'P10645'})-[r:ASSOCIATED_WITH]->(cc:Cellular_component) WHERE r.score IS NOT NULL RETURN cc.description AS component_description ORDER BY r.score DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "component_description": "A dense core vesicle (granule) that is part of a neuron.  These vesicles typically contain neuropeptides.  They can be found in all parts of neurons, including the soma, dendrites, axonal swellings (varicosities) and synaptic terminals. [GOC:dos, ISBN:978-0-07-181001-2, Wikipedia:Neuropeptide&oldid=713905176]"
      }
    ],
    "answer": "The cellular component with the highest association score to protein P10645 is a dense core vesicle (granule) that is part of a neuron. These vesicles typically contain neuropeptides and can be found in various parts of neurons, including the soma, dendrites, axonal swellings, and synaptic terminals."
  },
  {
    "question": "What is the shortest path length between the gene 'CHGA' and any protein associated with the 'phosphopyruvate hydratase complex'?",
    "cypher": "MATCH path = shortestPath((g:Gene {name: 'CHGA'})-[*1..3]-(p:Protein)-[:ASSOCIATED_WITH]->(cc:Cellular_component {name: 'phosphopyruvate hydratase complex'})) RETURN length(path) AS connection_length",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Count the number of genes that are transcribed into transcripts found on chromosome 4.",
    "cypher": "MATCH (c:Chromosome {name: '4'})<-[:LOCATED_IN]-(:Transcript)<-[:TRANSCRIBED_INTO]-(g:Gene) RETURN count(DISTINCT g) AS total_genes",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_genes": 1050
      }
    ],
    "answer": "There are 1,050 genes that are transcribed into transcripts located on chromosome 4."
  },
  {
    "question": "What is the effect of the known variant 'chr4:g.7768929G>T', which is found in a gene that is also transcribed into a transcript located on chromosome 4?",
    "cypher": "MATCH (kv:Known_variant {id: 'chr4:g.7768929G>T'})-[:VARIANT_FOUND_IN_GENE]->(:Gene)-[:TRANSCRIBED_INTO]->(:Transcript)-[:LOCATED_IN]->(:Chromosome {name: '4'}) RETURN kv.effect AS variant_effect",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      },
      {
        "variant_effect": "missense variant"
      }
    ]
  },
  {
    "question": "What's the name of the metabolite with the highest average molecular weight that is annotated in the same pathway as 'Hydrogen Ion'?",
    "cypher": "MATCH (m1:Metabolite {name: 'Hydrogen Ion'})-[:ANNOTATED_IN_PATHWAY]->(p:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(m2:Metabolite) WHERE m2.average_molecular_weight IS NOT NULL RETURN m2.name AS metabolite_name ORDER BY toFloat(m2.average_molecular_weight) DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "metabolite_name": "CL(a-13:0/a-25:0/a-25:0/a-25:0)[rac]"
      }
    ],
    "answer": "The metabolite with the highest average molecular weight in the same pathway as 'Hydrogen Ion' is 'CL(a-13:0/a-25:0/a-25:0/a-25:0)[rac]'."
  },
  {
    "question": "How many pathways connect the metabolite 'DG(19:0/20:0/0:0)' to the protein 'MTHFS'?",
    "cypher": "MATCH (m:Metabolite {name: 'DG(19:0/20:0/0:0)'})-[:ANNOTATED_IN_PATHWAY]->(p:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(:Metabolite)-[:ASSOCIATED_WITH]->(:Protein {name: 'MTHFS'}) RETURN count(DISTINCT p) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_count": 10
      }
    ],
    "answer": "There are 10 distinct pathways that connect the metabolite 'DG(19:0/20:0/0:0)' to the protein 'MTHFS'."
  },
  {
    "question": "What is the total count of publications that mention proteins encoded by the gene chromogranin A?",
    "cypher": "MATCH (:Gene {name: 'chromogranin A'})-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(p:Protein)-[:MENTIONED_IN_PUBLICATION]->(pub:Publication) RETURN count(DISTINCT pub) AS total_publications",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_publications": 986
      }
    ],
    "answer": "There are 986 publications that mention proteins encoded by the gene chromogranin A."
  },
  {
    "question": "Tell me the journal for a publication about a functional region that is also mentioned in a paper from 2011.",
    "cypher": "MATCH (fr:Functional_region)-[:MENTIONED_IN_PUBLICATION]->(p1:Publication)<-[:MENTIONED_IN_PUBLICATION]-(p2:Publication {year: 2011}) WHERE fr.id = 'PF16474' RETURN p1.journal AS journal_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Which gene's transcript is located on chromosome 19 and translates into a protein that interacts with protein 'Q9P107-2'?",
    "cypher": "MATCH (g:Gene)-[:TRANSCRIBED_INTO]->(:Transcript)-[:LOCATED_IN]->(:Chromosome {name: '19'}) WITH g MATCH (g)-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(p1:Protein)-[:CURATED_INTERACTS_WITH|COMPILED_INTERACTS_WITH]-(:Protein {id: 'Q9P107-2'}) RETURN g.name AS gene_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the most recent publication year for a GWAS study about the trait 'gout'?",
    "cypher": "MATCH (gwas:GWAS_study)-[:STUDIES_TRAIT]->(:Experimental_factor {name: 'gout'})-[:PUBLISHED_IN]->(pub:Publication) WHERE pub.year IS NOT NULL RETURN max(pub.year) AS latest_year",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many genes are associated with the 'missense variant' effect through a Known Variant that also links to the gene AFAPl?",
    "cypher": "MATCH (g:Gene {name: 'AFAP1'})<-[:VARIANT_FOUND_IN_GENE]-(kv:Known_variant {effect: 'missense variant'})-[:VARIANT_FOUND_IN_GENE]->(g2:Gene) RETURN count(DISTINCT g2) AS num_genes",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_genes": 0
      }
    ],
    "answer": "Based on the query result, 0 genes are associated with the 'missense variant' effect through a Known Variant that also links to the gene AFAP1."
  },
  {
    "question": "Find the assembly of a transcript from gene KANK3, which is located on chromosome 19.",
    "cypher": "MATCH (:Gene {name: 'KANK3'})-[:TRANSCRIBED_INTO]->(t:Transcript)-[:LOCATED_IN]->(:Chromosome {name: '19'}) RETURN t.assembly AS transcript_assembly LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What's the name of the disease that is associated with a clinically relevant variant on chromosome 4?",
    "cypher": "MATCH (d:Disease)<-[:ASSOCIATED_WITH]-(crv:Clinically_relevant_variant {chromosome: '4'}) RETURN d.name AS disease_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many steps are there between the protein CLN3 and the peptide 'RFSDSEGEETVPEPR'?",
    "cypher": "MATCH path = shortestPath((:Protein {name: 'CLN3'})-[*]-(:Peptide {id: 'RFSDSEGEETVPEPR'})) RETURN length(path) AS path_length",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 3
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 3
      },
      {
        "path_length": 1
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 3
      },
      {
        "path_length": 1
      },
      {
        "path_length": 3
      },
      {
        "path_length": 1
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 1
      },
      {
        "path_length": 3
      },
      {
        "path_length": 1
      },
      {
        "path_length": 1
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 3
      },
      {
        "path_length": 1
      }
    ]
  },
  {
    "question": "What is the average association score between proteins translated from gene 'CHGA' and any associated diseases?",
    "cypher": "MATCH (:Gene {name: 'CHGA'})-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(p:Protein)-[r:ASSOCIATED_WITH]->(:Disease) WHERE r.score IS NOT NULL RETURN avg(r.score) AS average_association_score",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "average_association_score": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "What is the name of the molecular function that is a parent to 'high-affinity zinc transmembrane transporter activity' and is associated with protein SLC39A8?",
    "cypher": "MATCH (:Molecular_function {name: 'high-affinity zinc transmembrane transporter activity'})-[:HAS_PARENT]->(mf:Molecular_function)-[:ASSOCIATED_WITH]->(:Protein {name: 'SLC39A8'}) RETURN mf.name AS parent_function_name",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Find the name of the protein with the lowest-scoring association to a molecular function that is a parent of 'zinc ion transmembrane transporter activity'.",
    "cypher": "MATCH (mf:Molecular_function {name: 'zinc ion transmembrane transporter activity'})<-[:HAS_PARENT]-(:Molecular_function)<-[r:ASSOCIATED_WITH]-(p:Protein) WHERE r.score IS NOT NULL RETURN p.name AS protein_name ORDER BY r.score ASC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many distinct cellular components are associated with proteins encoded by genes located on chromosome 4?",
    "cypher": "MATCH (:Chromosome {name: '4'})<-[:LOCATED_IN]-(:Transcript)<-[:TRANSCRIBED_INTO]-(:Gene)-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(p:Protein)-[:ASSOCIATED_WITH]->(cc:Cellular_component) RETURN count(DISTINCT cc) AS total_components",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_components": 2019
      }
    ],
    "answer": "There are 2,019 distinct cellular components associated with proteins encoded by genes located on chromosome 4."
  },
  {
    "question": "Are there any GWAS studies for the trait 'gout' that were also published in the journal 'Ann Rheum Dis'? Count them.",
    "cypher": "MATCH (gwas:GWAS_study)-[:STUDIES_TRAIT]->(:Experimental_factor {name: 'gout'}) MATCH (gwas)-[:PUBLISHED_IN]->(:Publication {journal: 'Ann Rheum Dis'}) RETURN count(gwas) AS study_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "study_count": 4
      }
    ],
    "answer": "Yes, there are 4 GWAS studies for the trait 'gout' that were published in the journal 'Ann Rheum Dis'."
  },
  {
    "question": "What is the name of the disease with the highest association score to proteins encoded by the gene 'AFAP1'?",
    "cypher": "MATCH (:Gene {name: 'AFAP1'})-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(p:Protein)-[r:ASSOCIATED_WITH]->(d:Disease) WHERE r.score IS NOT NULL RETURN d.name AS top_disease_name ORDER BY r.score DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "How many different genes have variants with the effect 'stop gained' that are found in proteins also associated with the cellular component 'GO:0000015'?",
    "cypher": "MATCH (g:Gene)<-[:VARIANT_FOUND_IN_GENE]-(:Known_variant {effect: 'stop gained'})-[:VARIANT_FOUND_IN_PROTEIN]->(:Protein)-[:ASSOCIATED_WITH]->(:Cellular_component {id: 'GO:0000015'}) RETURN count(DISTINCT g) AS gene_count",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "gene_count": 164
      }
    ],
    "answer": "Based on the query result, there are 164 different genes with 'stop gained' variants that are found in proteins also associated with the cellular component 'GO:0000015'."
  },
  {
    "question": "What is the kingdom of the metabolite 'DG(19:0/20:0/0:0)', which is found in a pathway that also contains metabolites associated with the protein MTHFS?",
    "cypher": "MATCH (m:Metabolite {name: 'DG(19:0/20:0/0:0)'})-[:ANNOTATED_IN_PATHWAY]->(:Pathway)<-[:ANNOTATED_IN_PATHWAY]-(:Metabolite)-[:ASSOCIATED_WITH]->(:Protein {name: 'MTHFS'}) RETURN m.kingdom AS metabolite_kingdom LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "metabolite_kingdom": "Organic compounds"
      }
    ],
    "answer": "The kingdom of the metabolite 'DG(19:0/20:0/0:0)' is Organic compounds."
  },
  {
    "question": "How many links are there between a somatic mutation in the gene 'PRAMEF11' and the chromosome it's found on?",
    "cypher": "MATCH path = (:Somatic_mutation {gene: 'PRAMEF11'})-[:VARIANT_FOUND_IN_CHROMOSOME]->(:Chromosome) RETURN COUNT(path) AS connection_count",
    "query_type": "Existence Verification",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "connection_count": 1
      }
    ],
    "answer": "There is 1 link between a somatic mutation in the gene 'PRAMEF11' and its chromosome."
  },
  {
    "question": "What's the oldest publication year for a paper mentioning the functional region named 'Kinase non-catalytic C-lobe domain'?",
    "cypher": "MATCH (:Functional_region {name: 'Kinase non-catalytic C-lobe domain'})-[:MENTIONED_IN_PUBLICATION]->(p:Publication) WHERE p.year IS NOT NULL RETURN min(p.year) AS oldest_year",
    "query_type": "Sorting",
    "complexity": "1-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "oldest_year": 2011
      }
    ],
    "answer": "The oldest publication year for a paper mentioning the functional region 'Kinase non-catalytic C-lobe domain' is 2011."
  },
  {
    "question": "How many peptides belong to the protein 'GMIP' which also has other peptides belonging to it?",
    "cypher": "MATCH (pep1:Peptide)-[:BELONGS_TO_PROTEIN]->(p:Protein {name: 'GMIP'})<-[:BELONGS_TO_PROTEIN]-(pep2:Peptide) RETURN count(DISTINCT pep1) AS total_peptides",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_peptides": 85
      }
    ],
    "answer": "The protein 'GMIP' has 85 distinct peptides that belong to it."
  },
  {
    "question": "What is the description of a phenotype that is a parent of a parent of 'Elevated proportion of CD4+ central memory cells'?",
    "cypher": "MATCH (:Phenotype {name: 'Elevated proportion of CD4+ central memory cells'})-[:HAS_PARENT]->(:Phenotype)-[:HAS_PARENT]->(p:Phenotype) RETURN p.description AS grandparent_phenotype_description LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "grandparent_phenotype_description": "Any abnormality in the proportion T cells subsets relative to the total number of T cells. []"
      }
    ],
    "answer": "The description of the phenotype that is a parent of a parent of 'Elevated proportion of CD4+ central memory cells' is: \"Any abnormality in the proportion T cells subsets relative to the total number of T cells. []\""
  },
  {
    "question": "Count how many pathways involve metabolites that are also associated with proteins encoded by the gene PEX10.",
    "cypher": "MATCH (:Gene {name: 'PEX10'})-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(:Protein)-[:ASSOCIATED_WITH]->(m:Metabolite)-[:ANNOTATED_IN_PATHWAY]->(p:Pathway) RETURN count(DISTINCT p) AS num_pathways",
    "query_type": "Aggregation",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "Find the name of the gene that has a known variant with the pvariant_id 'P10645_p.Trp394Ter' and is transcribed into a transcript located on chromosome 14.",
    "cypher": "MATCH (g:Gene)<-[:VARIANT_FOUND_IN_GENE]-(:Known_variant {pvariant_id: 'P10645_p.Trp394Ter'})-[:TRANSCRIBED_INTO]->(:Transcript)-[:LOCATED_IN]->(:Chromosome {name:'14'}) RETURN g.name AS gene_name",
    "query_type": "Property Retrieval",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false
  },
  {
    "question": "How many genes's transcripts are located on the same chromosome as transcripts from the gene MVB12B?",
    "cypher": "MATCH (:Gene {name: 'MVB12B'})-[:TRANSCRIBED_INTO]->(:Transcript)-[:LOCATED_IN]->(c:Chromosome)<-[:LOCATED_IN]-(:Transcript)<-[:TRANSCRIBED_INTO]-(g:Gene) RETURN count(DISTINCT g) AS shared_chromosome_gene_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "shared_chromosome_gene_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 genes that have transcripts located on the same chromosome as transcripts from the gene MVB12B."
  },
  {
    "question": "What's the id of the protein with the most mentions in publications that also mention the functional region 'PF16474'?",
    "cypher": "MATCH (:Functional_region {id: 'PF16474'})-[:MENTIONED_IN_PUBLICATION]->(pub:Publication)<-[:MENTIONED_IN_PUBLICATION]-(p:Protein) RETURN p.id AS top_protein_id, count(pub) AS publication_count ORDER BY publication_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_protein_id": "Q08AE8",
        "publication_count": 2
      }
    ],
    "answer": "The protein with ID Q08AE8 has the most mentions in publications that also mention the functional region PF16474, appearing in 2 publications."
  },
  {
    "question": "Tell me the type for the peptide 'TEAVGGEGPR', which belongs to a protein mentioned in a publication from 2011.",
    "cypher": "MATCH (pep:Peptide {id: 'TEAVGGEGPR'})-[:BELONGS_TO_PROTEIN]->(:Protein)-[:MENTIONED_IN_PUBLICATION]->(:Publication {year: 2011}) RETURN pep.type AS peptide_type",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": [
      {
        "peptide_type": "tryptic peptide"
      },
      {
        "peptide_type": "tryptic peptide"
      },
      {
        "peptide_type": "tryptic peptide"
      },
      {
        "peptide_type": "tryptic peptide"
      }
    ]
  },
  {
    "question": "Find the total number of proteins associated with the disease 'goutt'.",
    "cypher": "MATCH (p:Protein)-[:ASSOCIATED_WITH]->(:Disease {name: 'gout'}) RETURN count(p) AS total_proteins",
    "query_type": "Aggregation",
    "complexity": "1-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_proteins": 349
      }
    ],
    "answer": "There are 349 proteins associated with the disease gout."
  },
  {
    "question": "How many tissues are associated with proteins that are also associated with the molecular function 'zinc ion transmembrane transporter activity'?",
    "cypher": "MATCH (t:Tissue)<-[:ASSOCIATED_WITH]-(:Protein)-[:ASSOCIATED_WITH]->(:Molecular_function {name: 'zinc ion transmembrane transporter activity'}) RETURN count(DISTINCT t) AS tissue_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "tissue_count": 542
      }
    ],
    "answer": "542 tissues are associated with proteins that have the molecular function 'zinc ion transmembrane transporter activity'."
  },
  {
    "question": "What's the deal with the gene 'CHGA'? Tell me its taxid.",
    "cypher": "MATCH (g:Gene {name: 'CHGA'})-[:TRANSCRIBED_INTO]->(:Transcript)-[:TRANSLATED_INTO]->(p:Protein) RETURN g.taxid AS taxon_id LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "Find the name of the cellular component that is a parent of 'catalytic complex' and is associated with proteins encoded by gene CHGA.",
    "cypher": "MATCH (g:Gene {name: 'CHGA'})-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(:Protein)-[:ASSOCIATED_WITH]->(cc_child:Cellular_component {name: 'catalytic complex'})-[:HAS_PARENT]->(cc_parent:Cellular_component) RETURN cc_parent.name AS parent_component_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": false,
    "result": []
  },
  {
    "question": "What is the highest number of publications for a protein that interacts with Q08AE8?",
    "cypher": "MATCH (:Protein {id:'Q08AE8'})-[:CURATED_INTERACTS_WITH|COMPILED_INTERACTS_WITH]-(p:Protein)-[r:ASSOCIATED_WITH]->(:Disease) WHERE r.number_publications IS NOT NULL RETURN max(toInteger(r.number_publications)) AS max_publications",
    "query_type": "Sorting",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "max_publications": null
      }
    ],
    "answer": "UNKNOWN"
  },
  {
    "question": "Is there a connection between the gene KANK3 and any peptides? Count the connections.",
    "cypher": "MATCH (:Gene {name: 'KANK3'})-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(p:Protein)<-[:BELONGS_TO_PROTEIN]-(pep:Peptide) RETURN count(pep) AS peptide_connection_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "peptide_connection_count": 0
      }
    ],
    "answer": "Based on the query result, there are no connections between the gene KANK3 and any peptides, with a connection count of 0."
  },
  {
    "question": "How many biological things are associated with proteins that have a known variant with 'missense variant' effect?",
    "cypher": "MATCH (bp:Biological_process)<-[:ASSOCIATED_WITH]-(:Protein)<-[:VARIANT_FOUND_IN_PROTEIN]-(:Known_variant {effect: 'missense variant'}) RETURN COUNT(DISTINCT bp) AS num_bio_processes",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "num_bio_processes": 12363
      }
    ],
    "answer": "12,363 biological processes are associated with proteins that have a known missense variant."
  },
  {
    "question": "What's the name of the protein with the most curated interactions that is also translated from a transcript on chromosome 4?",
    "cypher": "MATCH (p:Protein)<-[:TRANSLATED_INTO]-(:Transcript)-[:LOCATED_IN]->(:Chromosome {name: '4'}) WITH p MATCH (p)-[r:CURATED_INTERACTS_WITH]-(:Protein) RETURN p.name AS top_interacting_protein, count(r) as interaction_count ORDER BY interaction_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_interacting_protein": "LNX1",
        "interaction_count": 2636
      }
    ],
    "answer": "The protein LNX1, which is translated from a transcript on chromosome 4, has the most curated interactions with 2,636 interactions."
  },
  {
    "question": "What is the name of the gene whose transcripts are located on chromosome 1 and are translated into proteins associated with gout?",
    "cypher": "MATCH (g:Gene)-[:TRANSCRIBED_INTO]->(:Transcript)-[:LOCATED_IN]->(:Chromosome {name: '1'}) WITH g MATCH (g)-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(:Protein)-[:ASSOCIATED_WITH]->(:Disease {name: 'gout'}) RETURN g.name AS gene_name LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "gene_name": "cathepsin K"
      }
    ],
    "answer": "Cathepsin K is the name of the gene whose transcripts are located on chromosome 1 and are associated with gout."
  },
  {
    "question": "Count the number of known variants for the gene AFAP1 that have a 'missense variant' effect and are located on chromosome 4.",
    "cypher": "MATCH (kv:Known_variant {effect: 'missense variant'})-[:VARIANT_FOUND_IN_GENE]->(:Gene {name: 'AFAP1'})-[:TRANSCRIBED_INTO]->(:Transcript)-[:LOCATED_IN]->(:Chromosome {name: '4'}) RETURN count(kv) AS variant_count",
    "query_type": "Existence Verification",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "variant_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 known missense variants for the gene AFAP1 located on chromosome 4."
  },
  {
    "question": "How many proteins that is associated with the disease gout are mentioned in publications from 2016?",
    "cypher": "MATCH (p:Protein)-[:ASSOCIATED_WITH]->(:Disease {name: 'gout'}) MATCH (p)-[:MENTIONED_IN_PUBLICATION]->(:Publication {year: 2016}) RETURN count(DISTINCT p) AS protein_count",
    "query_type": "Aggregation",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "grammatical",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "protein_count": 259
      }
    ],
    "answer": "Based on the query result, 259 unique proteins associated with gout were mentioned in publications from 2016."
  },
  {
    "question": "What is the lowest score for an interaction between a protein encoded by gene CHGA and any other protein?",
    "cypher": "MATCH (:Gene {name: 'CHGA'})-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(p1:Protein)-[r:COMPILED_INTERACTS_WITH]->(p2:Protein) WHERE r.score IS NOT NULL RETURN min(r.score) AS lowest_interaction_score",
    "query_type": "Sorting",
    "complexity": "3-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "lowest_interaction_score": null
      }
    ],
    "answer": "UNKNOWN\n\nThe query result returned None, which suggests there is no interaction score available for proteins related to the CHGA gene, or no interactions were found."
  },
  {
    "question": "Find stuff related to the protein 'CLN3'. What's the ID of a peptide that belongs to it and has a known variant?",
    "cypher": "MATCH (pep:Peptide)-[:BELONGS_TO_PROTEIN]->(:Protein {name: 'CLN3'})<-[:VARIANT_FOUND_IN_PROTEIN]-(:Known_variant) RETURN pep.id AS peptide_id LIMIT 1",
    "query_type": "Property Retrieval",
    "complexity": "2-hop",
    "noise_applied": true,
    "noise_type": "colloquialism",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "peptide_id": "LLAPLGLHLLPYSPR"
      }
    ],
    "answer": "The peptide ID belonging to the protein CLN3 and associated with a known variant is 'LLAPLGLHLLPYSPR'."
  },
  {
    "question": "Find the number of genes on chromosome 19 that code for proteins associated with any biological process.",
    "cypher": "MATCH (g:Gene)-[:TRANSCRIBED_INTO]->(:Transcript)-[:LOCATED_IN]->(:Chromosome {name: '19'}) WITH g MATCH (g)-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(:Protein)-[:ASSOCIATED_WITH]->(:Biological_process) RETURN count(DISTINCT g) AS functional_gene_count",
    "query_type": "Existence Verification",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "functional_gene_count": 1268
      }
    ],
    "answer": "Based on the query result, there are 1,268 genes on chromosome 19 that code for proteins associated with biological processes."
  },
  {
    "question": "What is the name of the protein with the highest number of associated diseases that is encoded by a gene on chromosome 14?",
    "cypher": "MATCH (p:Protein)<-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(:Gene)-[:TRANSCRIBED_INTO]->(:Transcript)-[:LOCATED_IN]->(:Chromosome {name: '14'}) WITH p MATCH (p)-[:ASSOCIATED_WITH]->(d:Disease) RETURN p.name AS top_disease_protein, count(d) as disease_count ORDER BY disease_count DESC LIMIT 1",
    "query_type": "Sorting",
    "complexity": "4-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "top_disease_protein": "ESR2",
        "disease_count": 294261
      }
    ],
    "answer": "The protein ESR2, which is encoded by a gene on chromosome 14, is associated with the highest number of diseases, with 294,261 disease associations."
  },
  {
    "question": "Sum the number of publications for all diseases associated with proteins encoded by the gene 'AFAPl'.",
    "cypher": "MATCH (:Gene {name: 'AFAP1'})-[:TRANSLATED_INTO|TRANSCRIBED_INTO*1..2]-(:Protein)-[r:ASSOCIATED_WITH]->(:Disease) WHERE r.number_publications IS NOT NULL RETURN sum(toInteger(r.number_publications)) AS total_publications_sum",
    "query_type": "Aggregation",
    "complexity": "3-hop",
    "noise_applied": true,
    "noise_type": "typo",
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "total_publications_sum": 0
      }
    ],
    "answer": "Based on the query result, the sum of publications for diseases associated with proteins encoded by the gene 'AFAP1' is 0."
  },
  {
    "question": "How many paths connect the gene KANK3 to chromosome 19?",
    "cypher": "MATCH path = (:Gene {name: 'KANK3'})-[:TRANSCRIBED_INTO]->(:Transcript)-[:LOCATED_IN]->(:Chromosome {name: '19'}) RETURN count(path) AS path_count",
    "query_type": "Existence Verification",
    "complexity": "2-hop",
    "noise_applied": false,
    "model": "chat-google-generative-ai",
    "validated": true,
    "result": [
      {
        "path_count": 0
      }
    ],
    "answer": "Based on the query result, there are 0 paths connecting the gene KANK3 to chromosome 19."
  }
]